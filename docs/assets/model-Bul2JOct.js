var cx=Object.defineProperty;var dx=(s,e,t)=>e in s?cx(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var J=(s,e,t)=>dx(s,typeof e!="symbol"?e+"":e,t);const po=new Map,$n=[],hx=(s,e,t)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){const r=po.get(s);if(r===void 0)po.set(s,{backend:e,priority:t});else{if(r.priority>t)return;if(r.priority===t&&r.backend!==e)throw new Error(`cannot register backend "${s}" using priority ${t}`)}if(t>=0){const n=$n.indexOf(s);n!==-1&&$n.splice(n,1);for(let i=0;i<$n.length;i++)if(po.get($n[i]).priority<=t){$n.splice(i,0,s);return}$n.push(s)}return}throw new TypeError("not a valid backend")},px=async s=>{const e=po.get(s);if(!e)return"backend not found.";if(e.initialized)return e.backend;if(e.aborted)return e.error;{const t=!!e.initPromise;try{return t||(e.initPromise=e.backend.init(s)),await e.initPromise,e.initialized=!0,e.backend}catch(r){return t||(e.error=`${r}`,e.aborted=!0),e.error}finally{delete e.initPromise}}},mx=async s=>{const e=s.executionProviders||[],t=e.map(l=>typeof l=="string"?l:l.name),r=t.length===0?$n:t;let n;const i=[],a=new Set;for(const l of r){const u=await px(l);typeof u=="string"?i.push({name:l,err:u}):(n||(n=u),n===u&&a.add(l))}if(!n)throw new Error(`no available backend found. ERR: ${i.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(const{name:l,err:u}of i)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${u}`);const o=e.filter(l=>a.has(typeof l=="string"?l:l.name));return[n,new Proxy(s,{get:(l,u)=>u==="executionProviders"?o:Reflect.get(l,u)})]},fx="1.21.0";let a_="warning";const kr={wasm:{},webgl:{},webgpu:{},versions:{common:fx},set logLevel(s){if(s!==void 0){if(typeof s!="string"||["verbose","info","warning","error","fatal"].indexOf(s)===-1)throw new Error(`Unsupported logging level: ${s}`);a_=s}},get logLevel(){return a_}};Object.defineProperty(kr,"logLevel",{enumerable:!0});const _x=kr,gx=(s,e)=>{const t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=s.dims[3],t.height=s.dims[2];const r=t.getContext("2d");if(r!=null){let n,i;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(n=s.dims[2],i=s.dims[3]):(n=s.dims[3],i=s.dims[2]);const a=(e==null?void 0:e.format)!==void 0?e.format:"RGB",o=e==null?void 0:e.norm;let l,u;o===void 0||o.mean===void 0?l=[255,255,255,255]:typeof o.mean=="number"?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],o.mean[3]!==void 0&&(l[3]=o.mean[3])),o===void 0||o.bias===void 0?u=[0,0,0,0]:typeof o.bias=="number"?u=[o.bias,o.bias,o.bias,o.bias]:(u=[o.bias[0],o.bias[1],o.bias[2],0],o.bias[3]!==void 0&&(u[3]=o.bias[3]));const h=i*n;let d=0,c=h,_=h*2,f=-1;a==="RGBA"?(d=0,c=h,_=h*2,f=h*3):a==="RGB"?(d=0,c=h,_=h*2):a==="RBG"&&(d=0,_=h,c=h*2);for(let b=0;b<i;b++)for(let I=0;I<n;I++){const g=(s.data[d++]-u[0])*l[0],M=(s.data[c++]-u[1])*l[1],k=(s.data[_++]-u[2])*l[2],v=f===-1?255:(s.data[f++]-u[3])*l[3];r.fillStyle="rgba("+g+","+M+","+k+","+v+")",r.fillRect(I,b,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},wx=(s,e)=>{const t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let r;if(t!=null){let n,i,a;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(n=s.dims[2],i=s.dims[1],a=s.dims[3]):(n=s.dims[3],i=s.dims[2],a=s.dims[1]);const o=e!==void 0&&e.format!==void 0?e.format:"RGB",l=e==null?void 0:e.norm;let u,h;l===void 0||l.mean===void 0?u=[255,255,255,255]:typeof l.mean=="number"?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(u[3]=l.mean[3])),l===void 0||l.bias===void 0?h=[0,0,0,0]:typeof l.bias=="number"?h=[l.bias,l.bias,l.bias,l.bias]:(h=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(h[3]=l.bias[3]));const d=i*n;if(e!==void 0&&(e.format!==void 0&&a===4&&e.format!=="RGBA"||a===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const c=4;let _=0,f=1,b=2,I=3,g=0,M=d,k=d*2,v=-1;o==="RGBA"?(g=0,M=d,k=d*2,v=d*3):o==="RGB"?(g=0,M=d,k=d*2):o==="RBG"&&(g=0,k=d,M=d*2),r=t.createImageData(n,i);for(let y=0;y<i*n;_+=c,f+=c,b+=c,I+=c,y++)r.data[_]=(s.data[g++]-h[0])*u[0],r.data[f]=(s.data[M++]-h[1])*u[1],r.data[b]=(s.data[k++]-h[2])*u[2],r.data[I]=v===-1?255:(s.data[v++]-h[3])*u[3]}else throw new Error("Can not access image data");return r},Kl=(s,e)=>{if(s===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:t,width:r}=e,n=e.norm??{mean:255,bias:0};let i,a;typeof n.mean=="number"?i=[n.mean,n.mean,n.mean,n.mean]:i=[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],typeof n.bias=="number"?a=[n.bias,n.bias,n.bias,n.bias]:a=[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];const o=e.format!==void 0?e.format:"RGBA",l=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",u=t*r,h=l==="RGBA"?new Float32Array(u*4):new Float32Array(u*3);let d=4,c=0,_=1,f=2,b=3,I=0,g=u,M=u*2,k=-1;o==="RGB"&&(d=3,c=0,_=1,f=2,b=-1),l==="RGBA"?k=u*3:l==="RBG"?(I=0,M=u,g=u*2):l==="BGR"&&(M=0,g=u,I=u*2);for(let y=0;y<u;y++,c+=d,f+=d,_+=d,b+=d)h[I++]=(s[c]+a[0])/i[0],h[g++]=(s[_]+a[1])/i[1],h[M++]=(s[f]+a[2])/i[2],k!==-1&&b!==-1&&(h[k++]=(s[b]+a[3])/i[3]);return l==="RGBA"?new pr("float32",h,[1,4,t,r]):new pr("float32",h,[1,3,t,r])},Mx=async(s,e)=>{const t=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,r=typeof ImageData<"u"&&s instanceof ImageData,n=typeof ImageBitmap<"u"&&s instanceof ImageBitmap,i=typeof s=="string";let a,o=e??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=h=>typeof HTMLCanvasElement<"u"&&h instanceof HTMLCanvasElement||h instanceof OffscreenCanvas?h.getContext("2d"):null;if(t){const h=l();h.width=s.width,h.height=s.height;const d=u(h);if(d!=null){let c=s.height,_=s.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(c=e.resizedHeight,_=e.resizedWidth),e!==void 0){if(o=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=c,o.width=_}else o.tensorFormat="RGBA",o.height=c,o.width=_;d.drawImage(s,0,0),a=d.getImageData(0,0,_,c).data}else throw new Error("Can not access image data")}else if(r){let h,d;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(h=e.resizedHeight,d=e.resizedWidth):(h=s.height,d=s.width),e!==void 0&&(o=e),o.format="RGBA",o.height=h,o.width=d,e!==void 0){const c=l();c.width=d,c.height=h;const _=u(c);if(_!=null)_.putImageData(s,0,0),a=_.getImageData(0,0,d,h).data;else throw new Error("Can not access image data")}else a=s.data}else if(n){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");const h=l();h.width=s.width,h.height=s.height;const d=u(h);if(d!=null){const c=s.height,_=s.width;return d.drawImage(s,0,0,_,c),a=d.getImageData(0,0,_,c).data,o.height=c,o.width=_,Kl(a,o)}else throw new Error("Can not access image data")}else{if(i)return new Promise((h,d)=>{const c=l(),_=u(c);if(!s||!_)return d();const f=new Image;f.crossOrigin="Anonymous",f.src=s,f.onload=()=>{c.width=f.width,c.height=f.height,_.drawImage(f,0,0,c.width,c.height);const b=_.getImageData(0,0,c.width,c.height);o.height=c.height,o.width=c.width,h(Kl(b.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(a!==void 0)return Kl(a,o);throw new Error("Input data provided is not supported - aborted tensor creation")},bx=(s,e)=>{const{width:t,height:r,download:n,dispose:i}=e,a=[1,r,t,4];return new pr({location:"texture",type:"float32",texture:s,dims:a,download:n,dispose:i})},yx=(s,e)=>{const{dataType:t,dims:r,download:n,dispose:i}=e;return new pr({location:"gpu-buffer",type:t??"float32",gpuBuffer:s,dims:r,download:n,dispose:i})},vx=(s,e)=>{const{dataType:t,dims:r,download:n,dispose:i}=e;return new pr({location:"ml-tensor",type:t??"float32",mlTensor:s,dims:r,download:n,dispose:i})},xx=(s,e,t)=>new pr({location:"cpu-pinned",type:s,data:e,dims:t??[e.length]}),ii=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),mo=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let o_=!1;const Tx=()=>{if(!o_){o_=!0;const s=typeof BigInt64Array<"u"&&BigInt64Array.from,e=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,r=typeof t<"u"&&t.from;s&&(ii.set("int64",BigInt64Array),mo.set(BigInt64Array,"int64")),e&&(ii.set("uint64",BigUint64Array),mo.set(BigUint64Array,"uint64")),r?(ii.set("float16",t),mo.set(t,"float16")):ii.set("float16",Uint16Array)}},Ex=s=>{let e=1;for(let t=0;t<s.length;t++){const r=s[t];if(typeof r!="number"||!Number.isSafeInteger(r))throw new TypeError(`dims[${t}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${r}`);e*=r}return e},Px=(s,e)=>{switch(s.location){case"cpu":return new pr(s.type,s.data,e);case"cpu-pinned":return new pr({location:"cpu-pinned",data:s.data,type:s.type,dims:e});case"texture":return new pr({location:"texture",texture:s.texture,type:s.type,dims:e});case"gpu-buffer":return new pr({location:"gpu-buffer",gpuBuffer:s.gpuBuffer,type:s.type,dims:e});case"ml-tensor":return new pr({location:"ml-tensor",mlTensor:s.mlTensor,type:s.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${s.location} is not supported`)}};let pr=class{constructor(e,t,r){Tx();let n,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,n=e.type,i=e.dims,e.location){case"cpu-pinned":{const o=ii.get(n);if(!o)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint64"&&n!=="int8"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,l;if(typeof e=="string")if(n=e,l=r,e==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");o=t}else{const u=ii.get(e);if(u===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e==="float16"&&u===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${u.name} as data.`);e==="uint64"||e==="int64"?o=u.from(t,BigInt):o=u.from(t)}else if(t instanceof u)o=t;else if(t instanceof Uint8ClampedArray)if(e==="uint8")o=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(e==="float16"&&t instanceof Uint16Array&&u!==Uint16Array)o=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length);else throw new TypeError(`A ${n} tensor's data must be type of ${u}`)}else if(l=t,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const u=typeof e[0];if(u==="string")n="string",o=e;else if(u==="boolean")n="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${u}.`)}else if(e instanceof Uint8ClampedArray)n="uint8",o=Uint8Array.from(e);else{const u=mo.get(e.constructor);if(u===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);n=u,o=e}if(l===void 0)l=[o.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");i=l,this.cpuData=o,this.dataLocation="cpu"}const a=Ex(i);if(this.cpuData&&a!==this.cpuData.length&&!((n==="uint4"||n==="int4")&&Math.ceil(a/2)===this.cpuData.length))throw new Error(`Tensor's size(${a}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=i,this.size=a}static async fromImage(e,t){return Mx(e,t)}static fromTexture(e,t){return bx(e,t)}static fromGpuBuffer(e,t){return yx(e,t)}static fromMLTensor(e,t){return vx(e,t)}static fromPinnedBuffer(e,t,r){return xx(e,t,r)}toDataURL(e){return gx(this,e)}toImageData(e){return wx(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Px(this,e)}};const ri=pr,YM=(s,e)=>{(typeof kr.trace>"u"?!kr.wasm.trace:!kr.trace)||console.timeStamp(`${s}::ORT::${e}`)},ZM=(s,e)=>{var n;const t=((n=new Error().stack)==null?void 0:n.split(/\r\n|\r|\n/g))||[];let r=!1;for(let i=0;i<t.length;i++){if(r&&!t[i].includes("TRACE_FUNC")){let a=`FUNC_${s}::${t[i].trim().split(" ")[1]}`;e&&(a+=`::${e}`),YM("CPU",a);return}t[i].includes("TRACE_FUNC")&&(r=!0)}},Hu=s=>{(typeof kr.trace>"u"?!kr.wasm.trace:!kr.trace)||ZM("BEGIN",s)},qu=s=>{(typeof kr.trace>"u"?!kr.wasm.trace:!kr.trace)||ZM("END",s)};let Cx=class eb{constructor(e){this.handler=e}async run(e,t,r){Hu();const n={};let i={};if(typeof e!="object"||e===null||e instanceof ri||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof ri)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(const u of t){if(typeof u!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(u)===-1)throw new RangeError(`'fetches' contains invalid output name: ${u}.`);n[u]=null}if(typeof r=="object"&&r!==null)i=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else{let u=!1;const h=Object.getOwnPropertyNames(t);for(const d of this.outputNames)if(h.indexOf(d)!==-1){const c=t[d];(c===null||c instanceof ri)&&(u=!0,a=!1,n[d]=c)}if(u){if(typeof r=="object"&&r!==null)i=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else i=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const u of this.inputNames)if(typeof e[u]>"u")throw new Error(`input '${u}' is missing in 'feeds'.`);if(a)for(const u of this.outputNames)n[u]=null;const o=await this.handler.run(e,n,i),l={};for(const u in o)if(Object.hasOwnProperty.call(o,u)){const h=o[u];h instanceof ri?l[u]=h:l[u]=new ri(h.type,h.data,h.dims)}return qu(),l}async release(){return this.handler.dispose()}static async create(e,t,r,n){Hu();let i,a={};if(typeof e=="string"){if(i=e,typeof t=="object"&&t!==null)a=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof t=="object"&&t!==null)a=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){const h=e;let d=0,c=e.byteLength;if(typeof t=="object"&&t!==null)a=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=h.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${h.byteLength}).`);if(c=e.byteLength-d,typeof r=="number"){if(c=r,!Number.isSafeInteger(c))throw new RangeError("'byteLength' must be an integer.");if(c<=0||d+c>h.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${h.byteLength-d}].`);if(typeof n=="object"&&n!==null)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(typeof r<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(h,d,c)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[o,l]=await mx(a),u=await o.createInferenceSessionHandler(i,l);return qu(),new eb(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}};const Sx=Cx;var kx=Object.freeze({__proto__:null,InferenceSession:Sx,TRACE:YM,TRACE_FUNC_BEGIN:Hu,TRACE_FUNC_END:qu,Tensor:ri,env:_x,registerBackend:hx});/*!
 * ONNX Runtime Web v1.22.0-dev.20250409-89f8206ba4
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var hc=Object.defineProperty,Ix=Object.getOwnPropertyDescriptor,$x=Object.getOwnPropertyNames,Ax=Object.prototype.hasOwnProperty,Fx=(s=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(s,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):s)(function(s){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+s+'" is not supported')}),Ue=(s,e)=>()=>(s&&(e=s(s=0)),e),di=(s,e)=>{for(var t in e)hc(s,t,{get:e[t],enumerable:!0})},Ox=(s,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of $x(e))!Ax.call(s,n)&&n!==t&&hc(s,n,{get:()=>e[n],enumerable:!(r=Ix(e,n))||r.enumerable});return s},ta=s=>Ox(hc({},"__esModule",{value:!0}),s),Ri,nn,Dn,l_,tb,sb=Ue(()=>{Ri=new Map,nn=[],Dn=(s,e,t)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let r=Ri.get(s);if(r===void 0)Ri.set(s,{backend:e,priority:t});else{if(r.priority>t)return;if(r.priority===t&&r.backend!==e)throw new Error(`cannot register backend "${s}" using priority ${t}`)}if(t>=0){let n=nn.indexOf(s);n!==-1&&nn.splice(n,1);for(let i=0;i<nn.length;i++)if(Ri.get(nn[i]).priority<=t){nn.splice(i,0,s);return}nn.push(s)}return}throw new TypeError("not a valid backend")},l_=async s=>{let e=Ri.get(s);if(!e)return"backend not found.";if(e.initialized)return e.backend;if(e.aborted)return e.error;{let t=!!e.initPromise;try{return t||(e.initPromise=e.backend.init(s)),await e.initPromise,e.initialized=!0,e.backend}catch(r){return t||(e.error=`${r}`,e.aborted=!0),e.error}finally{delete e.initPromise}}},tb=async s=>{let e=s.executionProviders||[],t=e.map(l=>typeof l=="string"?l:l.name),r=t.length===0?nn:t,n,i=[],a=new Set;for(let l of r){let u=await l_(l);typeof u=="string"?i.push({name:l,err:u}):(n||(n=u),n===u&&a.add(l))}if(!n)throw new Error(`no available backend found. ERR: ${i.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:u}of i)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${u}`);let o=e.filter(l=>a.has(typeof l=="string"?l:l.name));return[n,new Proxy(s,{get:(l,u)=>u==="executionProviders"?o:Reflect.get(l,u)})]}}),Dx=Ue(()=>{sb()}),rb,Lx=Ue(()=>{rb="1.22.0-dev.20250409-89f8206ba4"}),Hl,hr,nb=Ue(()=>{Lx(),Hl="warning",hr={wasm:{},webgl:{},webgpu:{},versions:{common:rb},set logLevel(s){if(s!==void 0){if(typeof s!="string"||["verbose","info","warning","error","fatal"].indexOf(s)===-1)throw new Error(`Unsupported logging level: ${s}`);Hl=s}},get logLevel(){return Hl}},Object.defineProperty(hr,"logLevel",{enumerable:!0})}),es,zx=Ue(()=>{nb(),es=hr}),ib,ab,Bx=Ue(()=>{ib=(s,e)=>{let t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=s.dims[3],t.height=s.dims[2];let r=t.getContext("2d");if(r!=null){let n,i;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(n=s.dims[2],i=s.dims[3]):(n=s.dims[3],i=s.dims[2]);let a=(e==null?void 0:e.format)!==void 0?e.format:"RGB",o=e==null?void 0:e.norm,l,u;o===void 0||o.mean===void 0?l=[255,255,255,255]:typeof o.mean=="number"?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],o.mean[3]!==void 0&&(l[3]=o.mean[3])),o===void 0||o.bias===void 0?u=[0,0,0,0]:typeof o.bias=="number"?u=[o.bias,o.bias,o.bias,o.bias]:(u=[o.bias[0],o.bias[1],o.bias[2],0],o.bias[3]!==void 0&&(u[3]=o.bias[3]));let h=i*n,d=0,c=h,_=h*2,f=-1;a==="RGBA"?(d=0,c=h,_=h*2,f=h*3):a==="RGB"?(d=0,c=h,_=h*2):a==="RBG"&&(d=0,_=h,c=h*2);for(let b=0;b<i;b++)for(let I=0;I<n;I++){let g=(s.data[d++]-u[0])*l[0],M=(s.data[c++]-u[1])*l[1],k=(s.data[_++]-u[2])*l[2],v=f===-1?255:(s.data[f++]-u[3])*l[3];r.fillStyle="rgba("+g+","+M+","+k+","+v+")",r.fillRect(I,b,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},ab=(s,e)=>{let t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),r;if(t!=null){let n,i,a;(e==null?void 0:e.tensorLayout)!==void 0&&e.tensorLayout==="NHWC"?(n=s.dims[2],i=s.dims[1],a=s.dims[3]):(n=s.dims[3],i=s.dims[2],a=s.dims[1]);let o=e!==void 0&&e.format!==void 0?e.format:"RGB",l=e==null?void 0:e.norm,u,h;l===void 0||l.mean===void 0?u=[255,255,255,255]:typeof l.mean=="number"?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(u[3]=l.mean[3])),l===void 0||l.bias===void 0?h=[0,0,0,0]:typeof l.bias=="number"?h=[l.bias,l.bias,l.bias,l.bias]:(h=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(h[3]=l.bias[3]));let d=i*n;if(e!==void 0&&(e.format!==void 0&&a===4&&e.format!=="RGBA"||a===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let c=4,_=0,f=1,b=2,I=3,g=0,M=d,k=d*2,v=-1;o==="RGBA"?(g=0,M=d,k=d*2,v=d*3):o==="RGB"?(g=0,M=d,k=d*2):o==="RBG"&&(g=0,k=d,M=d*2),r=t.createImageData(n,i);for(let y=0;y<i*n;_+=c,f+=c,b+=c,I+=c,y++)r.data[_]=(s.data[g++]-h[0])*u[0],r.data[f]=(s.data[M++]-h[1])*u[1],r.data[b]=(s.data[k++]-h[2])*u[2],r.data[I]=v===-1?255:(s.data[v++]-h[3])*u[3]}else throw new Error("Can not access image data");return r}}),Ja,ob,lb,ub,cb,db,Rx=Ue(()=>{pc(),Ja=(s,e)=>{if(s===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:t,width:r}=e,n=e.norm??{mean:255,bias:0},i,a;typeof n.mean=="number"?i=[n.mean,n.mean,n.mean,n.mean]:i=[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],typeof n.bias=="number"?a=[n.bias,n.bias,n.bias,n.bias]:a=[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];let o=e.format!==void 0?e.format:"RGBA",l=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",u=t*r,h=l==="RGBA"?new Float32Array(u*4):new Float32Array(u*3),d=4,c=0,_=1,f=2,b=3,I=0,g=u,M=u*2,k=-1;o==="RGB"&&(d=3,c=0,_=1,f=2,b=-1),l==="RGBA"?k=u*3:l==="RBG"?(I=0,M=u,g=u*2):l==="BGR"&&(M=0,g=u,I=u*2);for(let v=0;v<u;v++,c+=d,f+=d,_+=d,b+=d)h[I++]=(s[c]+a[0])/i[0],h[g++]=(s[_]+a[1])/i[1],h[M++]=(s[f]+a[2])/i[2],k!==-1&&b!==-1&&(h[k++]=(s[b]+a[3])/i[3]);return l==="RGBA"?new ar("float32",h,[1,4,t,r]):new ar("float32",h,[1,3,t,r])},ob=async(s,e)=>{let t=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,r=typeof ImageData<"u"&&s instanceof ImageData,n=typeof ImageBitmap<"u"&&s instanceof ImageBitmap,i=typeof s=="string",a,o=e??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=h=>typeof HTMLCanvasElement<"u"&&h instanceof HTMLCanvasElement||h instanceof OffscreenCanvas?h.getContext("2d"):null;if(t){let h=l();h.width=s.width,h.height=s.height;let d=u(h);if(d!=null){let c=s.height,_=s.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(c=e.resizedHeight,_=e.resizedWidth),e!==void 0){if(o=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=c,o.width=_}else o.tensorFormat="RGBA",o.height=c,o.width=_;d.drawImage(s,0,0),a=d.getImageData(0,0,_,c).data}else throw new Error("Can not access image data")}else if(r){let h,d;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(h=e.resizedHeight,d=e.resizedWidth):(h=s.height,d=s.width),e!==void 0&&(o=e),o.format="RGBA",o.height=h,o.width=d,e!==void 0){let c=l();c.width=d,c.height=h;let _=u(c);if(_!=null)_.putImageData(s,0,0),a=_.getImageData(0,0,d,h).data;else throw new Error("Can not access image data")}else a=s.data}else if(n){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let h=l();h.width=s.width,h.height=s.height;let d=u(h);if(d!=null){let c=s.height,_=s.width;return d.drawImage(s,0,0,_,c),a=d.getImageData(0,0,_,c).data,o.height=c,o.width=_,Ja(a,o)}else throw new Error("Can not access image data")}else{if(i)return new Promise((h,d)=>{let c=l(),_=u(c);if(!s||!_)return d();let f=new Image;f.crossOrigin="Anonymous",f.src=s,f.onload=()=>{c.width=f.width,c.height=f.height,_.drawImage(f,0,0,c.width,c.height);let b=_.getImageData(0,0,c.width,c.height);o.height=c.height,o.width=c.width,h(Ja(b.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(a!==void 0)return Ja(a,o);throw new Error("Input data provided is not supported - aborted tensor creation")},lb=(s,e)=>{let{width:t,height:r,download:n,dispose:i}=e,a=[1,r,t,4];return new ar({location:"texture",type:"float32",texture:s,dims:a,download:n,dispose:i})},ub=(s,e)=>{let{dataType:t,dims:r,download:n,dispose:i}=e;return new ar({location:"gpu-buffer",type:t??"float32",gpuBuffer:s,dims:r,download:n,dispose:i})},cb=(s,e)=>{let{dataType:t,dims:r,download:n,dispose:i}=e;return new ar({location:"ml-tensor",type:t??"float32",mlTensor:s,dims:r,download:n,dispose:i})},db=(s,e,t)=>new ar({location:"cpu-pinned",type:s,data:e,dims:t??[e.length]})}),An,Qi,ql,hb,jx=Ue(()=>{An=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Qi=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),ql=!1,hb=()=>{if(!ql){ql=!0;let s=typeof BigInt64Array<"u"&&BigInt64Array.from,e=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,r=typeof t<"u"&&t.from;s&&(An.set("int64",BigInt64Array),Qi.set(BigInt64Array,"int64")),e&&(An.set("uint64",BigUint64Array),Qi.set(BigUint64Array,"uint64")),r?(An.set("float16",t),Qi.set(t,"float16")):An.set("float16",Uint16Array)}}}),pb,mb,Nx=Ue(()=>{pc(),pb=s=>{let e=1;for(let t=0;t<s.length;t++){let r=s[t];if(typeof r!="number"||!Number.isSafeInteger(r))throw new TypeError(`dims[${t}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${r}`);e*=r}return e},mb=(s,e)=>{switch(s.location){case"cpu":return new ar(s.type,s.data,e);case"cpu-pinned":return new ar({location:"cpu-pinned",data:s.data,type:s.type,dims:e});case"texture":return new ar({location:"texture",texture:s.texture,type:s.type,dims:e});case"gpu-buffer":return new ar({location:"gpu-buffer",gpuBuffer:s.gpuBuffer,type:s.type,dims:e});case"ml-tensor":return new ar({location:"ml-tensor",mlTensor:s.mlTensor,type:s.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${s.location} is not supported`)}}}),ar,pc=Ue(()=>{Bx(),Rx(),jx(),Nx(),ar=class{constructor(s,e,t){hb();let r,n;if(typeof s=="object"&&"location"in s)switch(this.dataLocation=s.location,r=s.type,n=s.dims,s.location){case"cpu-pinned":{let a=An.get(r);if(!a)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(s.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=s.data;break}case"texture":{if(r!=="float32")throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=s.texture,this.downloader=s.download,this.disposer=s.dispose;break}case"gpu-buffer":{if(r!=="float32"&&r!=="float16"&&r!=="int32"&&r!=="int64"&&r!=="uint32"&&r!=="uint8"&&r!=="bool"&&r!=="uint4"&&r!=="int4")throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=s.gpuBuffer,this.downloader=s.download,this.disposer=s.dispose;break}case"ml-tensor":{if(r!=="float32"&&r!=="float16"&&r!=="int32"&&r!=="int64"&&r!=="uint32"&&r!=="uint64"&&r!=="int8"&&r!=="uint8"&&r!=="bool"&&r!=="uint4"&&r!=="int4")throw new TypeError(`unsupported type "${r}" to create tensor from MLTensor`);this.mlTensorData=s.mlTensor,this.downloader=s.download,this.disposer=s.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,o;if(typeof s=="string")if(r=s,o=t,s==="string"){if(!Array.isArray(e))throw new TypeError("A string tensor's data must be a string array.");a=e}else{let l=An.get(s);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${s}.`);if(Array.isArray(e)){if(s==="float16"&&l===Uint16Array||s==="uint4"||s==="int4")throw new TypeError(`Creating a ${s} tensor from number array is not supported. Please use ${l.name} as data.`);s==="uint64"||s==="int64"?a=l.from(e,BigInt):a=l.from(e)}else if(e instanceof l)a=e;else if(e instanceof Uint8ClampedArray)if(s==="uint8")a=Uint8Array.from(e);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(s==="float16"&&e instanceof Uint16Array&&l!==Uint16Array)a=new globalThis.Float16Array(e.buffer,e.byteOffset,e.length);else throw new TypeError(`A ${r} tensor's data must be type of ${l}`)}else if(o=e,Array.isArray(s)){if(s.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof s[0];if(l==="string")r="string",a=s;else if(l==="boolean")r="bool",a=Uint8Array.from(s);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else if(s instanceof Uint8ClampedArray)r="uint8",a=Uint8Array.from(s);else{let l=Qi.get(s.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${s.constructor}.`);r=l,a=s}if(o===void 0)o=[a.length];else if(!Array.isArray(o))throw new TypeError("A tensor's dims must be a number array");n=o,this.cpuData=a,this.dataLocation="cpu"}let i=pb(n);if(this.cpuData&&i!==this.cpuData.length&&!((r==="uint4"||r==="int4")&&Math.ceil(i/2)===this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=n,this.size=i}static async fromImage(s,e){return ob(s,e)}static fromTexture(s,e){return lb(s,e)}static fromGpuBuffer(s,e){return ub(s,e)}static fromMLTensor(s,e){return cb(s,e)}static fromPinnedBuffer(s,e,t){return db(s,e,t)}toDataURL(s){return ib(this,s)}toImageData(s){return ab(this,s)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(s){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let e=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=e,s&&this.disposer&&(this.disposer(),this.disposer=void 0),e}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(s){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return mb(this,s)}}}),Sr,fb=Ue(()=>{pc(),Sr=ar}),sa,Xl,Ir,mr,_b=Ue(()=>{nb(),sa=(s,e)=>{(typeof hr.trace>"u"?!hr.wasm.trace:!hr.trace)||console.timeStamp(`${s}::ORT::${e}`)},Xl=(s,e)=>{var n;let t=((n=new Error().stack)==null?void 0:n.split(/\r\n|\r|\n/g))||[],r=!1;for(let i=0;i<t.length;i++){if(r&&!t[i].includes("TRACE_FUNC")){let a=`FUNC_${s}::${t[i].trim().split(" ")[1]}`;e&&(a+=`::${e}`),sa("CPU",a);return}t[i].includes("TRACE_FUNC")&&(r=!0)}},Ir=s=>{(typeof hr.trace>"u"?!hr.wasm.trace:!hr.trace)||Xl("BEGIN",s)},mr=s=>{(typeof hr.trace>"u"?!hr.wasm.trace:!hr.trace)||Xl("END",s)}}),gb,Ux=Ue(()=>{sb(),fb(),_b(),gb=class wb{constructor(e){this.handler=e}async run(e,t,r){Ir();let n={},i={};if(typeof e!="object"||e===null||e instanceof Sr||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof Sr)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(let u of t){if(typeof u!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(u)===-1)throw new RangeError(`'fetches' contains invalid output name: ${u}.`);n[u]=null}if(typeof r=="object"&&r!==null)i=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else{let u=!1,h=Object.getOwnPropertyNames(t);for(let d of this.outputNames)if(h.indexOf(d)!==-1){let c=t[d];(c===null||c instanceof Sr)&&(u=!0,a=!1,n[d]=c)}if(u){if(typeof r=="object"&&r!==null)i=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else i=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let u of this.inputNames)if(typeof e[u]>"u")throw new Error(`input '${u}' is missing in 'feeds'.`);if(a)for(let u of this.outputNames)n[u]=null;let o=await this.handler.run(e,n,i),l={};for(let u in o)if(Object.hasOwnProperty.call(o,u)){let h=o[u];h instanceof Sr?l[u]=h:l[u]=new Sr(h.type,h.data,h.dims)}return mr(),l}async release(){return this.handler.dispose()}static async create(e,t,r,n){Ir();let i,a={};if(typeof e=="string"){if(i=e,typeof t=="object"&&t!==null)a=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof t=="object"&&t!==null)a=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let h=e,d=0,c=e.byteLength;if(typeof t=="object"&&t!==null)a=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=h.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${h.byteLength}).`);if(c=e.byteLength-d,typeof r=="number"){if(c=r,!Number.isSafeInteger(c))throw new RangeError("'byteLength' must be an integer.");if(c<=0||d+c>h.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${h.byteLength-d}].`);if(typeof n=="object"&&n!==null)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(typeof r<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(h,d,c)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[o,l]=await tb(a),u=await o.createInferenceSessionHandler(i,l);return mr(),new wb(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),mc,Vx=Ue(()=>{Ux(),mc=gb}),Wx=Ue(()=>{}),Gx=Ue(()=>{}),Kx=Ue(()=>{}),Hx=Ue(()=>{}),Mb={};di(Mb,{InferenceSession:()=>mc,TRACE:()=>sa,TRACE_FUNC_BEGIN:()=>Ir,TRACE_FUNC_END:()=>mr,Tensor:()=>Sr,env:()=>es,registerBackend:()=>Dn});var $r=Ue(()=>{Dx(),zx(),Vx(),fb(),Wx(),Gx(),_b(),Kx(),Hx()}),fc=Ue(()=>{}),bb={};di(bb,{default:()=>yb});var Ql,Jl,yb,qx=Ue(()=>{var s;Pv(),Rn(),_c(),Ql="ort-wasm-proxy-worker",Jl=((s=globalThis.self)==null?void 0:s.name)===Ql,Jl&&(self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":gc(r.wasm).then(()=>{Dc(r).then(()=>{postMessage({type:t})},n=>{postMessage({type:t,err:n})})},n=>{postMessage({type:t,err:n})});break;case"init-ep":{let{epName:n,env:i}=r;Lc(i,n).then(()=>{postMessage({type:t})},a=>{postMessage({type:t,err:a})});break}case"copy-from":{let{buffer:n}=r,i=xo(n);postMessage({type:t,out:i});break}case"create":{let{model:n,options:i}=r;zc(n,i).then(a=>{postMessage({type:t,out:a})},a=>{postMessage({type:t,err:a})});break}case"release":Bc(r),postMessage({type:t});break;case"run":{let{sessionId:n,inputIndices:i,inputs:a,outputIndices:o,options:l}=r;Rc(n,i,a,o,new Array(o.length).fill(null),l).then(u=>{u.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:u},Nc([...a,...u]))},u=>{postMessage({type:t,err:u})});break}case"end-profiling":jc(r),postMessage({type:t});break;default:}}catch(n){postMessage({type:t,err:n})}}),yb=Jl?null:e=>new Worker(e??ir,{type:"module",name:Ql})}),vb={};di(vb,{default:()=>xb});var Yl,Zl,xb,u_,Xx=Ue(()=>{var s,e;Zl=(Yl=import.meta.url,async function(t={}){var Yn;var r,n,i=t,a=new Promise((p,E)=>{r=p,n=E}),o=typeof window=="object",l=typeof WorkerGlobalScope<"u",u=l&&((Yn=self.name)==null?void 0:Yn.startsWith("em-pthread"));i.mountExternalData=(p,E)=>{p.startsWith("./")&&(p=p.substring(2)),(i.Eb||(i.Eb=new Map)).set(p,E)},i.unmountExternalData=()=>{delete i.Eb};var h=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let d=p=>async(...E)=>{var A;try{if(i.Fb)throw Error("Session already started");let z=i.Fb={dc:E[0],errors:[]},U=await p(...E);if(i.Fb!==z)throw Error("Session mismatch");(A=i.Jb)==null||A.flush();let ue=z.errors;if(0<ue.length){let Pe=await Promise.all(ue);if(Pe=Pe.filter(De=>De),0<Pe.length)throw Error(Pe.join(`
`))}return U}finally{i.Fb=null}};i.jsepInit=(p,E)=>{if(p==="webgpu"){[i.Jb,i.Ub,i.Yb,i.Kb,i.Xb,i.jb,i.Zb,i.ac,i.Vb,i.Wb,i.$b]=E;let A=i.Jb;i.jsepRegisterBuffer=(z,U,ue,Pe)=>A.registerBuffer(z,U,ue,Pe),i.jsepGetBuffer=z=>A.getBuffer(z),i.jsepCreateDownloader=(z,U,ue)=>A.createDownloader(z,U,ue),i.jsepOnCreateSession=z=>{A.onCreateSession(z)},i.jsepOnReleaseSession=z=>{A.onReleaseSession(z)},i.jsepOnRunStart=z=>A.onRunStart(z),i.bc=(z,U)=>{A.upload(z,U)}}else if(p==="webnn"){let A=E[0];[i.nc,i.Nb,i.webnnEnsureTensor,i.Ob,i.webnnDownloadTensor]=E.slice(1),i.webnnReleaseTensorId=i.Nb,i.webnnUploadTensor=i.Ob,i.webnnOnRunStart=z=>A.onRunStart(z),i.webnnOnRunEnd=A.onRunEnd.bind(A),i.webnnRegisterMLContext=(z,U)=>{A.registerMLContext(z,U)},i.webnnOnReleaseSession=z=>{A.onReleaseSession(z)},i.webnnCreateMLTensorDownloader=(z,U)=>A.createMLTensorDownloader(z,U),i.webnnRegisterMLTensor=(z,U,ue,Pe)=>A.registerMLTensor(z,U,ue,Pe),i.webnnCreateMLContext=z=>A.createMLContext(z),i.webnnRegisterMLConstant=(z,U,ue,Pe,De,He)=>A.registerMLConstant(z,U,ue,Pe,De,i.Eb,He),i.webnnRegisterGraphInput=A.registerGraphInput.bind(A),i.webnnIsGraphInput=A.isGraphInput.bind(A),i.webnnCreateTemporaryTensor=A.createTemporaryTensor.bind(A),i.webnnIsInt64Supported=A.isInt64Supported.bind(A)}};let c=()=>{let p=(E,A,z)=>(...U)=>{let ue=gs,Pe=A==null?void 0:A();U=E(...U);let De=A==null?void 0:A();return Pe!==De&&(E=De,z(Pe),A=z=null),gs!=ue?new Promise((He,ot)=>{Rs={resolve:He,reject:ot}}):U};(()=>{for(let E of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])i[E]=p(i[E],()=>i[E],A=>i[E]=A)})(),d!==void 0&&(i._OrtRun=d(i._OrtRun),i._OrtRunWithBinding=d(i._OrtRunWithBinding)),c=void 0};i.asyncInit=()=>{c==null||c()};var _,f,b=Object.assign({},i),I=(p,E)=>{throw E},g="";(o||l)&&(l?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),Yl&&(g=Yl),g=g.startsWith("blob:")?"":g.slice(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1),l&&(f=p=>{var E=new XMLHttpRequest;return E.open("GET",p,!1),E.responseType="arraybuffer",E.send(null),new Uint8Array(E.response)}),_=async p=>{if(j(p))return new Promise((A,z)=>{var U=new XMLHttpRequest;U.open("GET",p,!0),U.responseType="arraybuffer",U.onload=()=>{U.status==200||U.status==0&&U.response?A(U.response):z(U.status)},U.onerror=z,U.send(null)});var E=await fetch(p,{credentials:"same-origin"});if(E.ok)return E.arrayBuffer();throw Error(E.status+" : "+E.url)});var M=console.log.bind(console),k=console.error.bind(console),v=M,y=k;Object.assign(i,b),b=null;var T,x,P,O,L,G,K,R,te,H,ee,Z,ne,me=i.wasmBinary,ce=!1,j=p=>p.startsWith("file://");function F(){return T.buffer!=O.buffer&&oe(),O}function V(){return T.buffer!=O.buffer&&oe(),L}function re(){return T.buffer!=O.buffer&&oe(),G}function fe(){return T.buffer!=O.buffer&&oe(),K}function ae(){return T.buffer!=O.buffer&&oe(),R}function ve(){return T.buffer!=O.buffer&&oe(),te}function ze(){return T.buffer!=O.buffer&&oe(),H}function Ge(){return T.buffer!=O.buffer&&oe(),ne}if(u){let p=function(E){try{var A=E.data,z=A.Bb;if(z==="load"){let U=[];self.onmessage=ue=>U.push(ue),self.startWorker=()=>{postMessage({Bb:"loaded"});for(let ue of U)p(ue);self.onmessage=p};for(let ue of A.Rb)i[ue]&&!i[ue].proxy||(i[ue]=(...Pe)=>{postMessage({Bb:"callHandler",Qb:ue,args:Pe})},ue=="print"&&(v=i[ue]),ue=="printErr"&&(y=i[ue]));T=A.kc,oe(),$e(A.lc)}else if(z==="run"){Kr(A.Ab),Hn(A.Ab,0,0,1,0,0),lr(),de(A.Ab),Q||(Si(),Q=!0);try{Hr(A.fc,A.Hb)}catch(U){if(U!="unwind")throw U}}else A.target!=="setimmediate"&&(z==="checkMailbox"?Q&&Te():z&&(y(`worker: received unknown command ${z}`),y(A)))}catch(U){throw qn(),U}};var $e,Q=!1;y=function(...E){E=E.join(" "),console.error(E)},self.alert=function(...E){postMessage({Bb:"alert",text:E.join(" "),ic:gn()})},self.onunhandledrejection=E=>{throw E.reason||E},self.onmessage=p}function oe(){var p=T.buffer;i.HEAP8=O=new Int8Array(p),i.HEAP16=G=new Int16Array(p),i.HEAPU8=L=new Uint8Array(p),i.HEAPU16=K=new Uint16Array(p),i.HEAP32=R=new Int32Array(p),i.HEAPU32=te=new Uint32Array(p),i.HEAPF32=H=new Float32Array(p),i.HEAPF64=ne=new Float64Array(p),i.HEAP64=ee=new BigInt64Array(p),i.HEAPU64=Z=new BigUint64Array(p)}function W(){u?startWorker(i):ht.Ca()}u||(T=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),oe());var be,Ie=0,Ee=null;function Me(){if(--Ie==0&&Ee){var p=Ee;Ee=null,p()}}function Se(p){throw y(p="Aborted("+p+")"),ce=!0,p=new WebAssembly.RuntimeError(p+". Build with -sASSERTIONS for more info."),n(p),p}function we(){return{a:{L:Xe,Aa:Be,b:Xr,$:Ar,A:S,pa:X,X:se,Z:ge,qa:Fe,na:st,ga:gt,ma:mt,J:xt,Y:rt,V:Bt,oa:Ut,W:Us,va:Ss,E:Dr,Q:Gs,O:Ks,D:je,u:et,r:Jt,P:Rr,z:$,R:N,ja:Y,T:Ne,aa:We,M:tt,F:bt,ia:de,sa:Rt,t:Gt,Ba:_s,w:cr,o:os,l:qs,c:fr,n:Nn,j:ia,v:aa,p:oa,f:Jr,s:la,m:ua,e:ca,k:da,i:ha,g:Yr,d:pa,da:ma,ea:_i,fa,ba:gi,ca:Un,N:Mi,xa:bi,ua:_a,h:Wn,C:ga,G:wa,ta:Eo,x:Ma,ra:ba,U:ya,q:wi,y:va,K:xa,S:Ta,za:yi,ya:Ea,ka:Pa,la:xi,_:At,B:Ca,I:Ti,ha:Gn,H:Ei,a:T,wa:Ye}}}var Ae={829644:(p,E,A,z,U)=>{if(i===void 0||!i.Eb)return 1;if((p=Qt(Number(p>>>0))).startsWith("./")&&(p=p.substring(2)),!(p=i.Eb.get(p)))return 2;if(E=Number(E>>>0),A=Number(A>>>0),z=Number(z>>>0),E+A>p.byteLength)return 3;try{let ue=p.subarray(E,E+A);switch(U){case 0:V().set(ue,z>>>0);break;case 1:i.mc?i.mc(z,ue):i.bc(z,ue);break;default:return 4}return 0}catch{return 4}},830468:(p,E,A)=>{i.Ob(p,V().subarray(E>>>0,E+A>>>0))},830532:()=>i.nc(),830574:p=>{i.Nb(p)},830611:()=>{i.Vb()},830642:()=>{i.Wb()},830671:()=>{i.$b()},830696:p=>i.Ub(p),830729:p=>i.Yb(p),830761:(p,E,A)=>{i.Kb(Number(p),Number(E),Number(A),!0)},830824:(p,E,A)=>{i.Kb(Number(p),Number(E),Number(A))},830881:()=>typeof wasmOffsetConverter<"u",830938:p=>{i.jb("Abs",p,void 0)},830989:p=>{i.jb("Neg",p,void 0)},831040:p=>{i.jb("Floor",p,void 0)},831093:p=>{i.jb("Ceil",p,void 0)},831145:p=>{i.jb("Reciprocal",p,void 0)},831203:p=>{i.jb("Sqrt",p,void 0)},831255:p=>{i.jb("Exp",p,void 0)},831306:p=>{i.jb("Erf",p,void 0)},831357:p=>{i.jb("Sigmoid",p,void 0)},831412:(p,E,A)=>{i.jb("HardSigmoid",p,{alpha:E,beta:A})},831491:p=>{i.jb("Log",p,void 0)},831542:p=>{i.jb("Sin",p,void 0)},831593:p=>{i.jb("Cos",p,void 0)},831644:p=>{i.jb("Tan",p,void 0)},831695:p=>{i.jb("Asin",p,void 0)},831747:p=>{i.jb("Acos",p,void 0)},831799:p=>{i.jb("Atan",p,void 0)},831851:p=>{i.jb("Sinh",p,void 0)},831903:p=>{i.jb("Cosh",p,void 0)},831955:p=>{i.jb("Asinh",p,void 0)},832008:p=>{i.jb("Acosh",p,void 0)},832061:p=>{i.jb("Atanh",p,void 0)},832114:p=>{i.jb("Tanh",p,void 0)},832166:p=>{i.jb("Not",p,void 0)},832217:(p,E,A)=>{i.jb("Clip",p,{min:E,max:A})},832286:p=>{i.jb("Clip",p,void 0)},832338:(p,E)=>{i.jb("Elu",p,{alpha:E})},832396:p=>{i.jb("Gelu",p,void 0)},832448:p=>{i.jb("Relu",p,void 0)},832500:(p,E)=>{i.jb("LeakyRelu",p,{alpha:E})},832564:(p,E)=>{i.jb("ThresholdedRelu",p,{alpha:E})},832634:(p,E)=>{i.jb("Cast",p,{to:E})},832692:p=>{i.jb("Add",p,void 0)},832743:p=>{i.jb("Sub",p,void 0)},832794:p=>{i.jb("Mul",p,void 0)},832845:p=>{i.jb("Div",p,void 0)},832896:p=>{i.jb("Pow",p,void 0)},832947:p=>{i.jb("Equal",p,void 0)},833e3:p=>{i.jb("Greater",p,void 0)},833055:p=>{i.jb("GreaterOrEqual",p,void 0)},833117:p=>{i.jb("Less",p,void 0)},833169:p=>{i.jb("LessOrEqual",p,void 0)},833228:(p,E,A,z,U)=>{i.jb("ReduceMean",p,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ae().subarray(Number(z)>>>0,Number(U)>>>0)):[]})},833403:(p,E,A,z,U)=>{i.jb("ReduceMax",p,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ae().subarray(Number(z)>>>0,Number(U)>>>0)):[]})},833577:(p,E,A,z,U)=>{i.jb("ReduceMin",p,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ae().subarray(Number(z)>>>0,Number(U)>>>0)):[]})},833751:(p,E,A,z,U)=>{i.jb("ReduceProd",p,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ae().subarray(Number(z)>>>0,Number(U)>>>0)):[]})},833926:(p,E,A,z,U)=>{i.jb("ReduceSum",p,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ae().subarray(Number(z)>>>0,Number(U)>>>0)):[]})},834100:(p,E,A,z,U)=>{i.jb("ReduceL1",p,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ae().subarray(Number(z)>>>0,Number(U)>>>0)):[]})},834273:(p,E,A,z,U)=>{i.jb("ReduceL2",p,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ae().subarray(Number(z)>>>0,Number(U)>>>0)):[]})},834446:(p,E,A,z,U)=>{i.jb("ReduceLogSum",p,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ae().subarray(Number(z)>>>0,Number(U)>>>0)):[]})},834623:(p,E,A,z,U)=>{i.jb("ReduceSumSquare",p,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ae().subarray(Number(z)>>>0,Number(U)>>>0)):[]})},834803:(p,E,A,z,U)=>{i.jb("ReduceLogSumExp",p,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ae().subarray(Number(z)>>>0,Number(U)>>>0)):[]})},834983:p=>{i.jb("Where",p,void 0)},835036:(p,E,A)=>{i.jb("Transpose",p,{perm:E?Array.from(ae().subarray(Number(E)>>>0,Number(A)>>>0)):[]})},835160:(p,E,A,z)=>{i.jb("DepthToSpace",p,{blocksize:E,mode:Qt(A),format:z?"NHWC":"NCHW"})},835293:(p,E,A,z)=>{i.jb("DepthToSpace",p,{blocksize:E,mode:Qt(A),format:z?"NHWC":"NCHW"})},835426:(p,E,A,z,U,ue,Pe,De,He,ot,Tt,Dt,Kt,vs,Lr)=>{i.jb("ConvTranspose",p,{format:He?"NHWC":"NCHW",autoPad:E,dilations:[A],group:z,kernelShape:[U],pads:[ue,Pe],strides:[De],wIsConst:()=>!!F()[ot>>>0],outputPadding:Tt?Array.from(ae().subarray(Number(Tt)>>>0,Number(Dt)>>>0)):[],outputShape:Kt?Array.from(ae().subarray(Number(Kt)>>>0,Number(vs)>>>0)):[],activation:Qt(Lr)})},835859:(p,E,A,z,U,ue,Pe,De,He,ot,Tt,Dt,Kt,vs)=>{i.jb("ConvTranspose",p,{format:De?"NHWC":"NCHW",autoPad:E,dilations:Array.from(ae().subarray(Number(A)>>>0,2+(Number(A)>>>0)>>>0)),group:z,kernelShape:Array.from(ae().subarray(Number(U)>>>0,2+(Number(U)>>>0)>>>0)),pads:Array.from(ae().subarray(Number(ue)>>>0,4+(Number(ue)>>>0)>>>0)),strides:Array.from(ae().subarray(Number(Pe)>>>0,2+(Number(Pe)>>>0)>>>0)),wIsConst:()=>!!F()[He>>>0],outputPadding:ot?Array.from(ae().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],outputShape:Dt?Array.from(ae().subarray(Number(Dt)>>>0,Number(Kt)>>>0)):[],activation:Qt(vs)})},836520:(p,E,A,z,U,ue,Pe,De,He,ot,Tt,Dt,Kt,vs,Lr)=>{i.jb("ConvTranspose",p,{format:He?"NHWC":"NCHW",autoPad:E,dilations:[A],group:z,kernelShape:[U],pads:[ue,Pe],strides:[De],wIsConst:()=>!!F()[ot>>>0],outputPadding:Tt?Array.from(ae().subarray(Number(Tt)>>>0,Number(Dt)>>>0)):[],outputShape:Kt?Array.from(ae().subarray(Number(Kt)>>>0,Number(vs)>>>0)):[],activation:Qt(Lr)})},836953:(p,E,A,z,U,ue,Pe,De,He,ot,Tt,Dt,Kt,vs)=>{i.jb("ConvTranspose",p,{format:De?"NHWC":"NCHW",autoPad:E,dilations:Array.from(ae().subarray(Number(A)>>>0,2+(Number(A)>>>0)>>>0)),group:z,kernelShape:Array.from(ae().subarray(Number(U)>>>0,2+(Number(U)>>>0)>>>0)),pads:Array.from(ae().subarray(Number(ue)>>>0,4+(Number(ue)>>>0)>>>0)),strides:Array.from(ae().subarray(Number(Pe)>>>0,2+(Number(Pe)>>>0)>>>0)),wIsConst:()=>!!F()[He>>>0],outputPadding:ot?Array.from(ae().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],outputShape:Dt?Array.from(ae().subarray(Number(Dt)>>>0,Number(Kt)>>>0)):[],activation:Qt(vs)})},837614:(p,E)=>{i.jb("GlobalAveragePool",p,{format:E?"NHWC":"NCHW"})},837705:(p,E,A,z,U,ue,Pe,De,He,ot,Tt,Dt,Kt,vs)=>{i.jb("AveragePool",p,{format:vs?"NHWC":"NCHW",auto_pad:E,ceil_mode:A,count_include_pad:z,storage_order:U,dilations:ue?Array.from(ae().subarray(Number(ue)>>>0,Number(Pe)>>>0)):[],kernel_shape:De?Array.from(ae().subarray(Number(De)>>>0,Number(He)>>>0)):[],pads:ot?Array.from(ae().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],strides:Dt?Array.from(ae().subarray(Number(Dt)>>>0,Number(Kt)>>>0)):[]})},838184:(p,E)=>{i.jb("GlobalAveragePool",p,{format:E?"NHWC":"NCHW"})},838275:(p,E,A,z,U,ue,Pe,De,He,ot,Tt,Dt,Kt,vs)=>{i.jb("AveragePool",p,{format:vs?"NHWC":"NCHW",auto_pad:E,ceil_mode:A,count_include_pad:z,storage_order:U,dilations:ue?Array.from(ae().subarray(Number(ue)>>>0,Number(Pe)>>>0)):[],kernel_shape:De?Array.from(ae().subarray(Number(De)>>>0,Number(He)>>>0)):[],pads:ot?Array.from(ae().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],strides:Dt?Array.from(ae().subarray(Number(Dt)>>>0,Number(Kt)>>>0)):[]})},838754:(p,E)=>{i.jb("GlobalMaxPool",p,{format:E?"NHWC":"NCHW"})},838841:(p,E,A,z,U,ue,Pe,De,He,ot,Tt,Dt,Kt,vs)=>{i.jb("MaxPool",p,{format:vs?"NHWC":"NCHW",auto_pad:E,ceil_mode:A,count_include_pad:z,storage_order:U,dilations:ue?Array.from(ae().subarray(Number(ue)>>>0,Number(Pe)>>>0)):[],kernel_shape:De?Array.from(ae().subarray(Number(De)>>>0,Number(He)>>>0)):[],pads:ot?Array.from(ae().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],strides:Dt?Array.from(ae().subarray(Number(Dt)>>>0,Number(Kt)>>>0)):[]})},839316:(p,E)=>{i.jb("GlobalMaxPool",p,{format:E?"NHWC":"NCHW"})},839403:(p,E,A,z,U,ue,Pe,De,He,ot,Tt,Dt,Kt,vs)=>{i.jb("MaxPool",p,{format:vs?"NHWC":"NCHW",auto_pad:E,ceil_mode:A,count_include_pad:z,storage_order:U,dilations:ue?Array.from(ae().subarray(Number(ue)>>>0,Number(Pe)>>>0)):[],kernel_shape:De?Array.from(ae().subarray(Number(De)>>>0,Number(He)>>>0)):[],pads:ot?Array.from(ae().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],strides:Dt?Array.from(ae().subarray(Number(Dt)>>>0,Number(Kt)>>>0)):[]})},839878:(p,E,A,z,U)=>{i.jb("Gemm",p,{alpha:E,beta:A,transA:z,transB:U})},839982:p=>{i.jb("MatMul",p,void 0)},840036:(p,E,A,z)=>{i.jb("ArgMax",p,{keepDims:!!E,selectLastIndex:!!A,axis:z})},840144:(p,E,A,z)=>{i.jb("ArgMin",p,{keepDims:!!E,selectLastIndex:!!A,axis:z})},840252:(p,E)=>{i.jb("Softmax",p,{axis:E})},840315:(p,E)=>{i.jb("Concat",p,{axis:E})},840375:(p,E,A,z,U)=>{i.jb("Split",p,{axis:E,numOutputs:A,splitSizes:z?Array.from(ae().subarray(Number(z)>>>0,Number(U)>>>0)):[]})},840531:p=>{i.jb("Expand",p,void 0)},840585:(p,E)=>{i.jb("Gather",p,{axis:Number(E)})},840656:(p,E)=>{i.jb("GatherElements",p,{axis:Number(E)})},840735:(p,E)=>{i.jb("GatherND",p,{batch_dims:Number(E)})},840814:(p,E,A,z,U,ue,Pe,De,He,ot,Tt)=>{i.jb("Resize",p,{antialias:E,axes:A?Array.from(ae().subarray(Number(A)>>>0,Number(z)>>>0)):[],coordinateTransformMode:Qt(U),cubicCoeffA:ue,excludeOutside:Pe,extrapolationValue:De,keepAspectRatioPolicy:Qt(He),mode:Qt(ot),nearestMode:Qt(Tt)})},841176:(p,E,A,z,U,ue,Pe)=>{i.jb("Slice",p,{starts:E?Array.from(ae().subarray(Number(E)>>>0,Number(A)>>>0)):[],ends:z?Array.from(ae().subarray(Number(z)>>>0,Number(U)>>>0)):[],axes:ue?Array.from(ae().subarray(Number(ue)>>>0,Number(Pe)>>>0)):[]})},841440:p=>{i.jb("Tile",p,void 0)},841492:(p,E,A)=>{i.jb("InstanceNormalization",p,{epsilon:E,format:A?"NHWC":"NCHW"})},841606:(p,E,A)=>{i.jb("InstanceNormalization",p,{epsilon:E,format:A?"NHWC":"NCHW"})},841720:p=>{i.jb("Range",p,void 0)},841773:(p,E)=>{i.jb("Einsum",p,{equation:Qt(E)})},841854:(p,E,A,z,U)=>{i.jb("Pad",p,{mode:E,value:A,pads:z?Array.from(ae().subarray(Number(z)>>>0,Number(U)>>>0)):[]})},841997:(p,E,A,z,U,ue)=>{i.jb("BatchNormalization",p,{epsilon:E,momentum:A,spatial:!!U,trainingMode:!!z,format:ue?"NHWC":"NCHW"})},842166:(p,E,A,z,U,ue)=>{i.jb("BatchNormalization",p,{epsilon:E,momentum:A,spatial:!!U,trainingMode:!!z,format:ue?"NHWC":"NCHW"})},842335:(p,E,A)=>{i.jb("CumSum",p,{exclusive:Number(E),reverse:Number(A)})},842432:(p,E,A)=>{i.jb("DequantizeLinear",p,{axis:E,blockSize:A})},842522:(p,E,A,z,U)=>{i.jb("GridSample",p,{align_corners:E,mode:Qt(A),padding_mode:Qt(z),format:U?"NHWC":"NCHW"})},842692:(p,E,A,z,U)=>{i.jb("GridSample",p,{align_corners:E,mode:Qt(A),padding_mode:Qt(z),format:U?"NHWC":"NCHW"})},842862:(p,E)=>{i.jb("ScatterND",p,{reduction:Qt(E)})},842947:(p,E,A,z,U,ue,Pe,De,He)=>{i.jb("Attention",p,{numHeads:E,isUnidirectional:A,maskFilterValue:z,scale:U,doRotary:ue,qkvHiddenSizes:Pe?Array.from(ae().subarray(Number(De)>>>0,Number(De)+Pe>>>0)):[],pastPresentShareBuffer:!!He})},843219:p=>{i.jb("BiasAdd",p,void 0)},843274:p=>{i.jb("BiasSplitGelu",p,void 0)},843335:p=>{i.jb("FastGelu",p,void 0)},843391:(p,E,A,z,U,ue,Pe,De,He,ot,Tt,Dt,Kt,vs,Lr,ka)=>{i.jb("Conv",p,{format:Dt?"NHWC":"NCHW",auto_pad:E,dilations:A?Array.from(ae().subarray(Number(A)>>>0,Number(z)>>>0)):[],group:U,kernel_shape:ue?Array.from(ae().subarray(Number(ue)>>>0,Number(Pe)>>>0)):[],pads:De?Array.from(ae().subarray(Number(De)>>>0,Number(He)>>>0)):[],strides:ot?Array.from(ae().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],w_is_const:()=>!!F()[Number(Kt)>>>0],activation:Qt(vs),activation_params:Lr?Array.from(ze().subarray(Number(Lr)>>>0,Number(ka)>>>0)):[]})},843975:p=>{i.jb("Gelu",p,void 0)},844027:(p,E,A,z,U,ue,Pe,De,He)=>{i.jb("GroupQueryAttention",p,{numHeads:E,kvNumHeads:A,scale:z,softcap:U,doRotary:ue,rotaryInterleaved:Pe,smoothSoftmax:De,localWindowSize:He})},844244:(p,E,A,z)=>{i.jb("LayerNormalization",p,{axis:E,epsilon:A,simplified:!!z})},844355:(p,E,A,z)=>{i.jb("LayerNormalization",p,{axis:E,epsilon:A,simplified:!!z})},844466:(p,E,A,z,U,ue)=>{i.jb("MatMulNBits",p,{k:E,n:A,accuracyLevel:z,bits:U,blockSize:ue})},844593:(p,E,A,z,U,ue)=>{i.jb("MultiHeadAttention",p,{numHeads:E,isUnidirectional:A,maskFilterValue:z,scale:U,doRotary:ue})},844752:(p,E)=>{i.jb("QuickGelu",p,{alpha:E})},844816:(p,E,A,z,U)=>{i.jb("RotaryEmbedding",p,{interleaved:!!E,numHeads:A,rotaryEmbeddingDim:z,scale:U})},844955:(p,E,A)=>{i.jb("SkipLayerNormalization",p,{epsilon:E,simplified:!!A})},845057:(p,E,A)=>{i.jb("SkipLayerNormalization",p,{epsilon:E,simplified:!!A})},845159:(p,E,A,z)=>{i.jb("GatherBlockQuantized",p,{gatherAxis:E,quantizeAxis:A,blockSize:z})},845280:p=>{i.Zb(p)},845314:(p,E)=>i.ac(Number(p),Number(E),i.Fb.dc,i.Fb.errors)};function Be(p,E,A){return $s(async()=>{await i.Xb(Number(p),Number(E),Number(A))})}function Xe(){return typeof wasmOffsetConverter<"u"}class xe{constructor(E){J(this,"name","ExitStatus");this.message=`Program terminated with exit(${E})`,this.status=E}}var Ze=p=>{p.terminate(),p.onmessage=()=>{}},Ke=[],nt=p=>{kt.length==0&&(Cs(),Xt(kt[0]));var E=kt.pop();if(!E)return 6;Mt.push(E),Ps[p.Ab]=E,E.Ab=p.Ab;var A={Bb:"run",fc:p.ec,Hb:p.Hb,Ab:p.Ab};return E.postMessage(A,p.Mb),0},Je=0,Oe=(p,E,...A)=>{for(var z=2*A.length,U=yn(),ue=Qn(8*z),Pe=ue>>>3,De=0;De<A.length;De++){var He=A[De];typeof He=="bigint"?(ee[Pe+2*De]=1n,ee[Pe+2*De+1]=He):(ee[Pe+2*De]=0n,Ge()[Pe+2*De+1>>>0]=He)}return p=ki(p,0,z,ue,E),bn(U),p};function Ye(p){if(u)return Oe(0,1,p);if(P=p,!(0<Je)){for(var E of Mt)Ze(E);for(E of kt)Ze(E);kt=[],Mt=[],Ps={},ce=!0}I(0,new xe(p))}function at(p){if(u)return Oe(1,0,p);At(p)}var At=p=>{if(P=p,u)throw at(p),"unwind";Ye(p)},kt=[],Mt=[],bs=[],Ps={},Ns=p=>{var E=p.Ab;delete Ps[E],kt.push(p),Mt.splice(Mt.indexOf(p),1),p.Ab=0,Ii(E)};function lr(){bs.forEach(p=>p())}var Xt=p=>new Promise(E=>{p.onmessage=U=>{var ue=(U=U.data).Bb;if(U.Gb&&U.Gb!=gn()){var Pe=Ps[U.Gb];Pe?Pe.postMessage(U,U.Mb):y(`Internal error! Worker sent a message "${ue}" to target pthread ${U.Gb}, but that thread no longer exists!`)}else ue==="checkMailbox"?Te():ue==="spawnThread"?nt(U):ue==="cleanupThread"?Ns(Ps[U.hc]):ue==="loaded"?(p.loaded=!0,E(p)):ue==="alert"?alert(`Thread ${U.ic}: ${U.text}`):U.target==="setimmediate"?p.postMessage(U):ue==="callHandler"?i[U.Qb](...U.args):ue&&y(`worker sent an unknown command ${ue}`)},p.onerror=U=>{throw y(`worker sent an error! ${U.filename}:${U.lineno}: ${U.message}`),U};var A,z=[];for(A of[])i.propertyIsEnumerable(A)&&z.push(A);p.postMessage({Bb:"load",Rb:z,kc:T,lc:x})});function Cs(){var p=new Worker((()=>{let E=URL;return import.meta.url>"file:"&&import.meta.url<"file;"?new E("ort.bundle.min.mjs",import.meta.url):new URL(import.meta.url)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});kt.push(p)}var Kr=p=>{oe();var E=ve()[p+52>>>2>>>0];p=ve()[p+56>>>2>>>0],Xn(E,E-p),bn(E)},Hr=(p,E)=>{Je=0,p=Fi(p,E),0<Je?P=p:Mn(p)};class qr{constructor(E){this.Ib=E-24}}function Xr(p,E,A){var z=new qr(p>>>=0);throw E>>>=0,A>>>=0,ve()[z.Ib+16>>>2>>>0]=0,ve()[z.Ib+4>>>2>>>0]=E,ve()[z.Ib+8>>>2>>>0]=A,p}function pt(p,E,A,z){return u?Oe(2,1,p,E,A,z):Ar(p,E,A,z)}function Ar(p,E,A,z){if(p>>>=0,A>>>=0,z>>>=0,h===void 0)return 6;var U=[];return u&&U.length===0?pt(p,E>>>=0,A,z):(p={ec:A,Ab:p,Hb:z,Mb:U},u?(p.Bb="spawnThread",postMessage(p,U),0):nt(p))}var Fr=typeof TextDecoder<"u"?new TextDecoder:void 0,St=(p,E=0,A=NaN)=>{var z=(E>>>=0)+A;for(A=E;p[A]&&!(A>=z);)++A;if(16<A-E&&p.buffer&&Fr)return Fr.decode(p.buffer instanceof ArrayBuffer?p.subarray(E,A):p.slice(E,A));for(z="";E<A;){var U=p[E++];if(128&U){var ue=63&p[E++];if((224&U)==192)z+=String.fromCharCode((31&U)<<6|ue);else{var Pe=63&p[E++];65536>(U=(240&U)==224?(15&U)<<12|ue<<6|Pe:(7&U)<<18|ue<<12|Pe<<6|63&p[E++])?z+=String.fromCharCode(U):(U-=65536,z+=String.fromCharCode(55296|U>>10,56320|1023&U))}}else z+=String.fromCharCode(U)}return z},Qt=(p,E)=>(p>>>=0)?St(V(),p,E):"";function S(p,E,A){return u?Oe(3,1,p,E,A):0}function X(p,E){if(u)return Oe(4,1,p,E)}var B=p=>{for(var E=0,A=0;A<p.length;++A){var z=p.charCodeAt(A);127>=z?E++:2047>=z?E+=2:55296<=z&&57343>=z?(E+=4,++A):E+=3}return E},q=(p,E,A)=>{var z=V();if(E>>>=0,0<A){var U=E;A=E+A-1;for(var ue=0;ue<p.length;++ue){var Pe=p.charCodeAt(ue);if(55296<=Pe&&57343>=Pe&&(Pe=65536+((1023&Pe)<<10)|1023&p.charCodeAt(++ue)),127>=Pe){if(E>=A)break;z[E++>>>0]=Pe}else{if(2047>=Pe){if(E+1>=A)break;z[E++>>>0]=192|Pe>>6}else{if(65535>=Pe){if(E+2>=A)break;z[E++>>>0]=224|Pe>>12}else{if(E+3>=A)break;z[E++>>>0]=240|Pe>>18,z[E++>>>0]=128|Pe>>12&63}z[E++>>>0]=128|Pe>>6&63}z[E++>>>0]=128|63&Pe}}z[E>>>0]=0,p=E-U}else p=0;return p};function se(p,E){if(u)return Oe(5,1,p,E)}function ge(p,E,A){if(u)return Oe(6,1,p,E,A)}function Fe(p,E,A){return u?Oe(7,1,p,E,A):0}function st(p,E){if(u)return Oe(8,1,p,E)}function gt(p,E,A){if(u)return Oe(9,1,p,E,A)}function mt(p,E,A,z){if(u)return Oe(10,1,p,E,A,z)}function xt(p,E,A,z){if(u)return Oe(11,1,p,E,A,z)}function rt(p,E,A,z){if(u)return Oe(12,1,p,E,A,z)}function Bt(p){if(u)return Oe(13,1,p)}function Ut(p,E){if(u)return Oe(14,1,p,E)}function Us(p,E,A){if(u)return Oe(15,1,p,E,A)}var Qs,rs,Ss=()=>Se(""),ks=p=>{for(var E="";V()[p>>>0];)E+=Qs[V()[p++>>>0]];return E},Vs={},ur={};function Is(p,E,A={}){return function(z,U,ue={}){var Pe=U.name;if(!z)throw new rs(`type "${Pe}" must have a positive integer typeid pointer`);if(ur.hasOwnProperty(z)){if(ue.Sb)return;throw new rs(`Cannot register type '${Pe}' twice`)}ur[z]=U,Vs.hasOwnProperty(z)&&(U=Vs[z],delete Vs[z],U.forEach(De=>De()))}(p,E,A)}var Or=(p,E,A)=>{switch(E){case 1:return A?z=>F()[z>>>0]:z=>V()[z>>>0];case 2:return A?z=>re()[z>>>1>>>0]:z=>fe()[z>>>1>>>0];case 4:return A?z=>ae()[z>>>2>>>0]:z=>ve()[z>>>2>>>0];case 8:return A?z=>ee[z>>>3]:z=>Z[z>>>3];default:throw new TypeError(`invalid integer width (${E}): ${p}`)}};function Dr(p,E,A){A>>>=0,Is(p>>>=0,{name:E=ks(E>>>0),fromWireType:z=>z,toWireType:function(z,U){if(typeof U!="bigint"&&typeof U!="number")throw U=U===null?"null":(z=typeof U)=="object"||z==="array"||z==="function"?U.toString():""+U,new TypeError(`Cannot convert "${U}" to ${this.name}`);return typeof U=="number"&&(U=BigInt(U)),U},Cb:Ws,readValueFromPointer:Or(E,A,E.indexOf("u")==-1),Db:null})}var Ws=8;function Gs(p,E,A,z){Is(p>>>=0,{name:E=ks(E>>>0),fromWireType:function(U){return!!U},toWireType:function(U,ue){return ue?A:z},Cb:Ws,readValueFromPointer:function(U){return this.fromWireType(V()[U>>>0])},Db:null})}var tr=[],Ls=[];function fr(p){9<(p>>>=0)&&--Ls[p+1]==0&&(Ls[p]=void 0,tr.push(p))}var ps=p=>{if(!p)throw new rs("Cannot use deleted val. handle = "+p);return Ls[p]},fs=p=>{switch(p){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let E=tr.pop()||Ls.length;return Ls[E]=p,Ls[E+1]=1,E}};function Js(p){return this.fromWireType(ve()[p>>>2>>>0])}var Br={name:"emscripten::val",fromWireType:p=>{var E=ps(p);return fr(p),E},toWireType:(p,E)=>fs(E),Cb:Ws,readValueFromPointer:Js,Db:null};function Ks(p){return Is(p>>>0,Br)}var Re=(p,E)=>{switch(E){case 4:return function(A){return this.fromWireType(ze()[A>>>2>>>0])};case 8:return function(A){return this.fromWireType(Ge()[A>>>3>>>0])};default:throw new TypeError(`invalid float width (${E}): ${p}`)}};function je(p,E,A){A>>>=0,Is(p>>>=0,{name:E=ks(E>>>0),fromWireType:z=>z,toWireType:(z,U)=>U,Cb:Ws,readValueFromPointer:Re(E,A),Db:null})}function et(p,E,A,z,U){if(p>>>=0,A>>>=0,E=ks(E>>>0),U===-1&&(U=4294967295),U=De=>De,z===0){var ue=32-8*A;U=De=>De<<ue>>>ue}var Pe=E.includes("unsigned")?function(De,He){return He>>>0}:function(De,He){return He};Is(p,{name:E,fromWireType:U,toWireType:Pe,Cb:Ws,readValueFromPointer:Or(E,A,z!==0),Db:null})}function Jt(p,E,A){function z(ue){var Pe=ve()[ue>>>2>>>0];return ue=ve()[ue+4>>>2>>>0],new U(F().buffer,ue,Pe)}var U=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][E];Is(p>>>=0,{name:A=ks(A>>>0),fromWireType:z,Cb:Ws,readValueFromPointer:z},{Sb:!0})}function Rr(p,E){Is(p>>>=0,{name:E=ks(E>>>0),fromWireType:function(A){for(var z,U=ve()[A>>>2>>>0],ue=A+4,Pe=ue,De=0;De<=U;++De){var He=ue+De;De!=U&&V()[He>>>0]!=0||(Pe=Qt(Pe,He-Pe),z===void 0?z=Pe:(z+="\0",z+=Pe),Pe=He+1)}return sr(A),z},toWireType:function(A,z){z instanceof ArrayBuffer&&(z=new Uint8Array(z));var U=typeof z=="string";if(!(U||z instanceof Uint8Array||z instanceof Uint8ClampedArray||z instanceof Int8Array))throw new rs("Cannot pass non-string to std::string");var ue=U?B(z):z.length,Pe=wn(4+ue+1),De=Pe+4;if(ve()[Pe>>>2>>>0]=ue,U)q(z,De,ue+1);else if(U)for(U=0;U<ue;++U){var He=z.charCodeAt(U);if(255<He)throw sr(Pe),new rs("String has UTF-16 code units that do not fit in 8 bits");V()[De+U>>>0]=He}else for(U=0;U<ue;++U)V()[De+U>>>0]=z[U];return A!==null&&A.push(sr,Pe),Pe},Cb:Ws,readValueFromPointer:Js,Db(A){sr(A)}})}var _r=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,jr=(p,E)=>{for(var A=p>>1,z=A+E/2;!(A>=z)&&fe()[A>>>0];)++A;if(32<(A<<=1)-p&&_r)return _r.decode(V().slice(p,A));for(A="",z=0;!(z>=E/2);++z){var U=re()[p+2*z>>>1>>>0];if(U==0)break;A+=String.fromCharCode(U)}return A},gr=(p,E,A)=>{if(A??(A=2147483647),2>A)return 0;var z=E;A=(A-=2)<2*p.length?A/2:p.length;for(var U=0;U<A;++U){var ue=p.charCodeAt(U);re()[E>>>1>>>0]=ue,E+=2}return re()[E>>>1>>>0]=0,E-z},cn=p=>2*p.length,dn=(p,E)=>{for(var A=0,z="";!(A>=E/4);){var U=ae()[p+4*A>>>2>>>0];if(U==0)break;++A,65536<=U?(U-=65536,z+=String.fromCharCode(55296|U>>10,56320|1023&U)):z+=String.fromCharCode(U)}return z},hn=(p,E,A)=>{if(E>>>=0,A??(A=2147483647),4>A)return 0;var z=E;A=z+A-4;for(var U=0;U<p.length;++U){var ue=p.charCodeAt(U);if(55296<=ue&&57343>=ue&&(ue=65536+((1023&ue)<<10)|1023&p.charCodeAt(++U)),ae()[E>>>2>>>0]=ue,(E+=4)+4>A)break}return ae()[E>>>2>>>0]=0,E-z},he=p=>{for(var E=0,A=0;A<p.length;++A){var z=p.charCodeAt(A);55296<=z&&57343>=z&&++A,E+=4}return E};function $(p,E,A){if(p>>>=0,E>>>=0,A=ks(A>>>=0),E===2)var z=jr,U=gr,ue=cn,Pe=De=>fe()[De>>>1>>>0];else E===4&&(z=dn,U=hn,ue=he,Pe=De=>ve()[De>>>2>>>0]);Is(p,{name:A,fromWireType:De=>{for(var He,ot=ve()[De>>>2>>>0],Tt=De+4,Dt=0;Dt<=ot;++Dt){var Kt=De+4+Dt*E;Dt!=ot&&Pe(Kt)!=0||(Tt=z(Tt,Kt-Tt),He===void 0?He=Tt:(He+="\0",He+=Tt),Tt=Kt+E)}return sr(De),He},toWireType:(De,He)=>{if(typeof He!="string")throw new rs(`Cannot pass non-string to C++ string type ${A}`);var ot=ue(He),Tt=wn(4+ot+E);return ve()[Tt>>>2>>>0]=ot/E,U(He,Tt+4,ot+E),De!==null&&De.push(sr,Tt),Tt},Cb:Ws,readValueFromPointer:Js,Db(De){sr(De)}})}function N(p,E){Is(p>>>=0,{Tb:!0,name:E=ks(E>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function Y(p){Hn(p>>>0,!l,1,!o,131072,!1),lr()}var le=p=>{if(!ce)try{if(p(),!(0<Je))try{u?Mn(P):At(P)}catch(E){E instanceof xe||E=="unwind"||I(0,E)}}catch(E){E instanceof xe||E=="unwind"||I(0,E)}};function de(p){p>>>=0,typeof Atomics.jc=="function"&&(Atomics.jc(ae(),p>>>2,p).value.then(Te),p+=128,Atomics.store(ae(),p>>>2,1))}var Te=()=>{var p=gn();p&&(de(p),le(Ai))};function Ne(p,E){(p>>>=0)==E>>>0?setTimeout(Te):u?postMessage({Gb:p,Bb:"checkMailbox"}):(p=Ps[p])&&p.postMessage({Bb:"checkMailbox"})}var qe=[];function We(p,E,A,z,U){for(E>>>=0,z/=2,qe.length=z,A=U>>>0>>>3,U=0;U<z;U++)qe[U]=ee[A+2*U]?ee[A+2*U+1]:Ge()[A+2*U+1>>>0];return(E?Ae[E]:Kn[p])(...qe)}var tt=()=>{Je=0};function bt(p){p>>>=0,u?postMessage({Bb:"cleanupThread",hc:p}):Ns(Ps[p])}function Rt(p){}var Lt=(p,E)=>{var A=ur[p];if(A===void 0)throw p=Ci(p),A=ks(p),sr(p),new rs(`${E} has unknown type ${A}`);return A},ns=(p,E,A)=>{var z=[];return p=p.toWireType(z,A),z.length&&(ve()[E>>>2>>>0]=fs(z)),p};function Gt(p,E,A){return E>>>=0,A>>>=0,p=ps(p>>>0),E=Lt(E,"emval::as"),ns(E,A,p)}function _s(p,E){return E>>>=0,p=ps(p>>>0),(E=Lt(E,"emval::as")).toWireType(null,p)}var ys=p=>{try{p()}catch(E){Se(E)}},as=0,gs=null,zs=0,Ys=[],Zt={},ws={},Hs=0,Rs=null,wr=[];function $s(p){return function(E){if(!ce){if(as===0){var A=!1,z=!1;E((U=0)=>{if(!ce&&(zs=U,A=!0,z)){as=2,ys(()=>Di(gs)),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.resume(),U=!1;try{var ue=function(){var He=ae()[gs+8>>>2>>>0];return He=ht[ws[He]],--Je,He()}()}catch(He){ue=He,U=!0}var Pe=!1;if(!gs){var De=Rs;De&&(Rs=null,(U?De.reject:De.resolve)(ue),Pe=!0)}if(U&&!Pe)throw ue}}),z=!0,A||(as=1,gs=function(){var U=wn(65548),ue=U+12;ve()[U>>>2>>>0]=ue,ve()[U+4>>>2>>>0]=ue+65536,ue=Ys[0];var Pe=Zt[ue];return Pe===void 0&&(Pe=Hs++,Zt[ue]=Pe,ws[Pe]=ue),ue=Pe,ae()[U+8>>>2>>>0]=ue,U}(),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.pause(),ys(()=>Oi(gs)))}else as===2?(as=0,ys(Li),sr(gs),gs=null,wr.forEach(le)):Se(`invalid state: ${as}`);return zs}}(E=>{p().then(E)})}function cr(p){return p>>>=0,$s(async()=>{var E=await ps(p);return fs(E)})}var cs=[];function os(p,E,A,z){return A>>>=0,z>>>=0,(p=cs[p>>>0])(null,E=ps(E>>>0),A,z)}var ms={},is=p=>{var E=ms[p];return E===void 0?ks(p):E};function qs(p,E,A,z,U){return A>>>=0,z>>>=0,U>>>=0,(p=cs[p>>>0])(E=ps(E>>>0),E[A=is(A)],z,U)}var Nr=()=>typeof globalThis=="object"?globalThis:Function("return this")();function Nn(p){return(p>>>=0)==0?fs(Nr()):(p=is(p),fs(Nr()[p]))}var Qr=p=>{var E=cs.length;return cs.push(p),E},na=(p,E)=>{for(var A=Array(p),z=0;z<p;++z)A[z]=Lt(ve()[E+4*z>>>2>>>0],"parameter "+z);return A},hi=(p,E)=>Object.defineProperty(E,"name",{value:p});function ia(p,E,A){var z=(E=na(p,E>>>0)).shift();p--;var U=`return function (obj, func, destructorsRef, args) {
`,ue=0,Pe=[];A===0&&Pe.push("obj");for(var De=["retType"],He=[z],ot=0;ot<p;++ot)Pe.push("arg"+ot),De.push("argType"+ot),He.push(E[ot]),U+=`  var arg${ot} = argType${ot}.readValueFromPointer(args${ue?"+"+ue:""});
`,ue+=E[ot].Cb;return U+=`  var rv = ${A===1?"new func":"func.call"}(${Pe.join(", ")});
`,z.Tb||(De.push("emval_returnValue"),He.push(ns),U+=`  return emval_returnValue(retType, destructorsRef, rv);
`),De.push(U+`};
`),p=function(Tt){var Dt=Function;if(!(Dt instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Dt} which is not a function`);var Kt=hi(Dt.name||"unknownFunctionName",function(){});return Kt.prototype=Dt.prototype,Kt=new Kt,(Tt=Dt.apply(Kt,Tt))instanceof Object?Tt:Kt}(De)(...He),A=`methodCaller<(${E.map(Tt=>Tt.name).join(", ")}) => ${z.name}>`,Qr(hi(A,p))}function aa(p){return p=is(p>>>0),fs(i[p])}function oa(p,E){return E>>>=0,p=ps(p>>>0),E=ps(E),fs(p[E])}function Jr(p){9<(p>>>=0)&&(Ls[p+1]+=1)}function la(){return fs([])}function ua(p){p=ps(p>>>0);for(var E=Array(p.length),A=0;A<p.length;A++)E[A]=p[A];return fs(E)}function ca(p){return fs(is(p>>>0))}function da(){return fs({})}function ha(p){for(var E=ps(p>>>=0);E.length;){var A=E.pop();E.pop()(A)}fr(p)}function Yr(p,E,A){E>>>=0,A>>>=0,p=ps(p>>>0),E=ps(E),A=ps(A),p[E]=A}function pa(p,E){return E>>>=0,p=(p=Lt(p>>>0,"_emval_take_value")).readValueFromPointer(E),fs(p)}function ma(p,E){p=-9007199254740992>p||9007199254740992<p?NaN:Number(p),E>>>=0,p=new Date(1e3*p),ae()[E>>>2>>>0]=p.getUTCSeconds(),ae()[E+4>>>2>>>0]=p.getUTCMinutes(),ae()[E+8>>>2>>>0]=p.getUTCHours(),ae()[E+12>>>2>>>0]=p.getUTCDate(),ae()[E+16>>>2>>>0]=p.getUTCMonth(),ae()[E+20>>>2>>>0]=p.getUTCFullYear()-1900,ae()[E+24>>>2>>>0]=p.getUTCDay(),p=(p.getTime()-Date.UTC(p.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,ae()[E+28>>>2>>>0]=p}var pi=p=>p%4==0&&(p%100!=0||p%400==0),mi=[0,31,60,91,121,152,182,213,244,274,305,335],fi=[0,31,59,90,120,151,181,212,243,273,304,334];function _i(p,E){p=-9007199254740992>p||9007199254740992<p?NaN:Number(p),E>>>=0,p=new Date(1e3*p),ae()[E>>>2>>>0]=p.getSeconds(),ae()[E+4>>>2>>>0]=p.getMinutes(),ae()[E+8>>>2>>>0]=p.getHours(),ae()[E+12>>>2>>>0]=p.getDate(),ae()[E+16>>>2>>>0]=p.getMonth(),ae()[E+20>>>2>>>0]=p.getFullYear()-1900,ae()[E+24>>>2>>>0]=p.getDay();var A=(pi(p.getFullYear())?mi:fi)[p.getMonth()]+p.getDate()-1|0;ae()[E+28>>>2>>>0]=A,ae()[E+36>>>2>>>0]=-60*p.getTimezoneOffset(),A=new Date(p.getFullYear(),6,1).getTimezoneOffset();var z=new Date(p.getFullYear(),0,1).getTimezoneOffset();p=0|(A!=z&&p.getTimezoneOffset()==Math.min(z,A)),ae()[E+32>>>2>>>0]=p}function fa(p){p>>>=0;var E=new Date(ae()[p+20>>>2>>>0]+1900,ae()[p+16>>>2>>>0],ae()[p+12>>>2>>>0],ae()[p+8>>>2>>>0],ae()[p+4>>>2>>>0],ae()[p>>>2>>>0],0),A=ae()[p+32>>>2>>>0],z=E.getTimezoneOffset(),U=new Date(E.getFullYear(),6,1).getTimezoneOffset(),ue=new Date(E.getFullYear(),0,1).getTimezoneOffset(),Pe=Math.min(ue,U);return 0>A?ae()[p+32>>>2>>>0]=+(U!=ue&&Pe==z):0<A!=(Pe==z)&&(U=Math.max(ue,U),E.setTime(E.getTime()+6e4*((0<A?Pe:U)-z))),ae()[p+24>>>2>>>0]=E.getDay(),A=(pi(E.getFullYear())?mi:fi)[E.getMonth()]+E.getDate()-1|0,ae()[p+28>>>2>>>0]=A,ae()[p>>>2>>>0]=E.getSeconds(),ae()[p+4>>>2>>>0]=E.getMinutes(),ae()[p+8>>>2>>>0]=E.getHours(),ae()[p+12>>>2>>>0]=E.getDate(),ae()[p+16>>>2>>>0]=E.getMonth(),ae()[p+20>>>2>>>0]=E.getYear(),p=E.getTime(),BigInt(isNaN(p)?-1:p/1e3)}function gi(p,E,A,z,U,ue,Pe){return u?Oe(16,1,p,E,A,z,U,ue,Pe):-52}function Un(p,E,A,z,U,ue){if(u)return Oe(17,1,p,E,A,z,U,ue)}var Zr={},wi=()=>performance.timeOrigin+performance.now();function Mi(p,E){if(u)return Oe(18,1,p,E);if(Zr[p]&&(clearTimeout(Zr[p].id),delete Zr[p]),!E)return 0;var A=setTimeout(()=>{delete Zr[p],le(()=>$i(p,performance.timeOrigin+performance.now()))},E);return Zr[p]={id:A,qc:E},0}function bi(p,E,A,z){p>>>=0,E>>>=0,A>>>=0,z>>>=0;var U=new Date().getFullYear(),ue=new Date(U,0,1).getTimezoneOffset();U=new Date(U,6,1).getTimezoneOffset();var Pe=Math.max(ue,U);ve()[p>>>2>>>0]=60*Pe,ae()[E>>>2>>>0]=+(ue!=U),p=(E=De=>{var He=Math.abs(De);return`UTC${0<=De?"-":"+"}${String(Math.floor(He/60)).padStart(2,"0")}${String(He%60).padStart(2,"0")}`})(ue),E=E(U),U<ue?(q(p,A,17),q(E,z,17)):(q(p,z,17),q(E,A,17))}var Eo=()=>Date.now();function _a(p,E,A){return 0<=p&&3>=p?(p===0?p=Date.now():p=performance.timeOrigin+performance.now(),ee[A>>>0>>>3]=BigInt(Math.round(1e6*p)),0):28}var pn=[],Vn=(p,E)=>{pn.length=0;for(var A;A=V()[p++>>>0];){var z=A!=105;E+=(z&=A!=112)&&E%8?4:0,pn.push(A==112?ve()[E>>>2>>>0]:A==106?ee[E>>>3]:A==105?ae()[E>>>2>>>0]:Ge()[E>>>3>>>0]),E+=z?8:4}return pn};function Wn(p,E,A){return p>>>=0,E=Vn(E>>>0,A>>>0),Ae[p](...E)}function ga(p,E,A){return p>>>=0,E=Vn(E>>>0,A>>>0),Ae[p](...E)}var wa=()=>{};function Ma(p,E){return y(Qt(p>>>0,E>>>0))}var ba=()=>{throw Je+=1,"unwind"};function ya(){return 4294901760}var va=()=>navigator.hardwareConcurrency;function xa(){return Se("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Ta(p){p>>>=0;var E=V().length;if(p<=E||4294901760<p)return!1;for(var A=1;4>=A;A*=2){var z=E*(1+.2/A);z=Math.min(z,p+100663296);e:{z=(Math.min(4294901760,65536*Math.ceil(Math.max(p,z)/65536))-T.buffer.byteLength+65535)/65536|0;try{T.grow(z),oe();var U=1;break e}catch{}U=void 0}if(U)return!0}return!1}var en=()=>(Se("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),tn={},mn=p=>{p.forEach(E=>{en()})};function yi(){var p=Error().stack.toString().split(`
`);return p[0]=="Error"&&p.shift(),mn(p),tn.Lb=en(),tn.cc=p,tn.Lb}function Ea(p,E,A){if(p>>>=0,E>>>=0,tn.Lb==p)var z=tn.cc;else(z=Error().stack.toString().split(`
`))[0]=="Error"&&z.shift(),mn(z);for(var U=3;z[U]&&en()!=p;)++U;for(p=0;p<A&&z[p+U];++p)ae()[E+4*p>>>2>>>0]=en();return p}var fn,Mr={},vi=()=>{if(!fn){var p,E={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(p in Mr)Mr[p]===void 0?delete E[p]:E[p]=Mr[p];var A=[];for(p in E)A.push(`${p}=${E[p]}`);fn=A}return fn};function Pa(p,E){if(u)return Oe(19,1,p,E);p>>>=0,E>>>=0;var A=0;return vi().forEach((z,U)=>{var ue=E+A;for(U=ve()[p+4*U>>>2>>>0]=ue,ue=0;ue<z.length;++ue)F()[U++>>>0]=z.charCodeAt(ue);F()[U>>>0]=0,A+=z.length+1}),0}function xi(p,E){if(u)return Oe(20,1,p,E);p>>>=0,E>>>=0;var A=vi();ve()[p>>>2>>>0]=A.length;var z=0;return A.forEach(U=>z+=U.length+1),ve()[E>>>2>>>0]=z,0}function Ca(p){return u?Oe(21,1,p):52}function Ti(p,E,A,z){return u?Oe(22,1,p,E,A,z):52}function Gn(p,E,A,z){return u?Oe(23,1,p,E,A,z):70}var Sa=[null,[],[]];function Ei(p,E,A,z){if(u)return Oe(24,1,p,E,A,z);E>>>=0,A>>>=0,z>>>=0;for(var U=0,ue=0;ue<A;ue++){var Pe=ve()[E>>>2>>>0],De=ve()[E+4>>>2>>>0];E+=8;for(var He=0;He<De;He++){var ot=V()[Pe+He>>>0],Tt=Sa[p];ot===0||ot===10?((p===1?v:y)(St(Tt)),Tt.length=0):Tt.push(ot)}U+=De}return ve()[z>>>2>>>0]=U,0}u||function(){for(var p=i.numThreads-1;p--;)Cs();Ke.unshift(()=>{Ie++,function(E){u?E():Promise.all(kt.map(Xt)).then(E)}(()=>Me())})}();for(var Pi=Array(256),_n=0;256>_n;++_n)Pi[_n]=String.fromCharCode(_n);Qs=Pi,rs=i.BindingError=class extends Error{constructor(p){super(p),this.name="BindingError"}},i.InternalError=class extends Error{constructor(p){super(p),this.name="InternalError"}},Ls.push(0,1,void 0,1,null,1,!0,1,!1,1),i.count_emval_handles=()=>Ls.length/2-5-tr.length;var ht,Kn=[Ye,at,pt,S,X,se,ge,Fe,st,gt,mt,xt,rt,Bt,Ut,Us,gi,Un,Mi,Pa,xi,Ca,Ti,Gn,Ei];(async function(){function p(z,U){return ht=z.exports,ht=function(){var ue=ht,Pe={};for(let[De,He]of Object.entries(ue))Pe[De]=typeof He=="function"?(...ot)=>{Ys.push(De);try{return He(...ot)}finally{ce||(Ys.pop(),gs&&as===1&&Ys.length===0&&(as=0,Je+=1,ys(Jn),typeof Fibers<"u"&&Fibers.rc()))}}:He;return Pe}(),ht=function(){var ue=ht,Pe=He=>ot=>He(ot)>>>0,De=He=>()=>He()>>>0;return(ue=Object.assign({},ue)).Da=Pe(ue.Da),ue.fb=De(ue.fb),ue.hb=Pe(ue.hb),ue.tb=Pe(ue.tb),ue.ub=De(ue.ub),ue.__cxa_get_exception_ptr=Pe(ue.__cxa_get_exception_ptr),ue}(),bs.push(ht.ib),x=U,Me(),ht}Ie++;var E=we();if(i.instantiateWasm)return new Promise(z=>{i.instantiateWasm(E,(U,ue)=>{p(U,ue),z(U.exports)})});if(u)return new Promise(z=>{$e=U=>{var ue=new WebAssembly.Instance(U,we());z(p(ue,U))}});be??(be=i.locateFile?i.locateFile?i.locateFile("ort-wasm-simd-threaded.jsep.wasm",g):g+"ort-wasm-simd-threaded.jsep.wasm":new URL("https://solidsnail.github.io/llmini.js/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href);try{var A=await async function(z){var U=be;if(!me&&typeof WebAssembly.instantiateStreaming=="function"&&!j(U))try{var ue=fetch(U,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(ue,z)}catch(Pe){y(`wasm streaming compile failed: ${Pe}`),y("falling back to ArrayBuffer instantiation")}return async function(Pe,De){try{var He=await async function(ot){if(!me)try{var Tt=await _(ot);return new Uint8Array(Tt)}catch{}if(ot==be&&me)ot=new Uint8Array(me);else{if(!f)throw"both async and sync fetching of the wasm failed";ot=f(ot)}return ot}(Pe);return await WebAssembly.instantiate(He,De)}catch(ot){y(`failed to asynchronously prepare wasm: ${ot}`),Se(ot)}}(U,z)}(E);return p(A.instance,A.module)}catch(z){return n(z),Promise.reject(z)}})();var Ci=p=>(Ci=ht.Da)(p),Si=()=>(Si=ht.Ea)();i._OrtInit=(p,E)=>(i._OrtInit=ht.Fa)(p,E),i._OrtGetLastError=(p,E)=>(i._OrtGetLastError=ht.Ga)(p,E),i._OrtCreateSessionOptions=(p,E,A,z,U,ue,Pe,De,He,ot)=>(i._OrtCreateSessionOptions=ht.Ha)(p,E,A,z,U,ue,Pe,De,He,ot),i._OrtAppendExecutionProvider=(p,E,A,z,U)=>(i._OrtAppendExecutionProvider=ht.Ia)(p,E,A,z,U),i._OrtAddFreeDimensionOverride=(p,E,A)=>(i._OrtAddFreeDimensionOverride=ht.Ja)(p,E,A),i._OrtAddSessionConfigEntry=(p,E,A)=>(i._OrtAddSessionConfigEntry=ht.Ka)(p,E,A),i._OrtReleaseSessionOptions=p=>(i._OrtReleaseSessionOptions=ht.La)(p),i._OrtCreateSession=(p,E,A)=>(i._OrtCreateSession=ht.Ma)(p,E,A),i._OrtReleaseSession=p=>(i._OrtReleaseSession=ht.Na)(p),i._OrtGetInputOutputCount=(p,E,A)=>(i._OrtGetInputOutputCount=ht.Oa)(p,E,A),i._OrtGetInputOutputMetadata=(p,E,A,z)=>(i._OrtGetInputOutputMetadata=ht.Pa)(p,E,A,z),i._OrtFree=p=>(i._OrtFree=ht.Qa)(p),i._OrtCreateTensor=(p,E,A,z,U,ue)=>(i._OrtCreateTensor=ht.Ra)(p,E,A,z,U,ue),i._OrtGetTensorData=(p,E,A,z,U)=>(i._OrtGetTensorData=ht.Sa)(p,E,A,z,U),i._OrtReleaseTensor=p=>(i._OrtReleaseTensor=ht.Ta)(p),i._OrtCreateRunOptions=(p,E,A,z)=>(i._OrtCreateRunOptions=ht.Ua)(p,E,A,z),i._OrtAddRunConfigEntry=(p,E,A)=>(i._OrtAddRunConfigEntry=ht.Va)(p,E,A),i._OrtReleaseRunOptions=p=>(i._OrtReleaseRunOptions=ht.Wa)(p),i._OrtCreateBinding=p=>(i._OrtCreateBinding=ht.Xa)(p),i._OrtBindInput=(p,E,A)=>(i._OrtBindInput=ht.Ya)(p,E,A),i._OrtBindOutput=(p,E,A,z)=>(i._OrtBindOutput=ht.Za)(p,E,A,z),i._OrtClearBoundOutputs=p=>(i._OrtClearBoundOutputs=ht._a)(p),i._OrtReleaseBinding=p=>(i._OrtReleaseBinding=ht.$a)(p),i._OrtRunWithBinding=(p,E,A,z,U)=>(i._OrtRunWithBinding=ht.ab)(p,E,A,z,U),i._OrtRun=(p,E,A,z,U,ue,Pe,De)=>(i._OrtRun=ht.bb)(p,E,A,z,U,ue,Pe,De),i._OrtEndProfiling=p=>(i._OrtEndProfiling=ht.cb)(p),i._JsepOutput=(p,E,A)=>(i._JsepOutput=ht.db)(p,E,A),i._JsepGetNodeName=p=>(i._JsepGetNodeName=ht.eb)(p);var gn=()=>(gn=ht.fb)(),sr=i._free=p=>(sr=i._free=ht.gb)(p),wn=i._malloc=p=>(wn=i._malloc=ht.hb)(p),Hn=(p,E,A,z,U,ue)=>(Hn=ht.kb)(p,E,A,z,U,ue),qn=()=>(qn=ht.lb)(),ki=(p,E,A,z,U)=>(ki=ht.mb)(p,E,A,z,U),Ii=p=>(Ii=ht.nb)(p),Mn=p=>(Mn=ht.ob)(p),$i=(p,E)=>($i=ht.pb)(p,E),Ai=()=>(Ai=ht.qb)(),Xn=(p,E)=>(Xn=ht.rb)(p,E),bn=p=>(bn=ht.sb)(p),Qn=p=>(Qn=ht.tb)(p),yn=()=>(yn=ht.ub)(),Fi=i.dynCall_ii=(p,E)=>(Fi=i.dynCall_ii=ht.vb)(p,E),Oi=p=>(Oi=ht.wb)(p),Jn=()=>(Jn=ht.xb)(),Di=p=>(Di=ht.yb)(p),Li=()=>(Li=ht.zb)();return i.stackSave=()=>yn(),i.stackRestore=p=>bn(p),i.stackAlloc=p=>Qn(p),i.setValue=function(p,E,A="i8"){switch(A.endsWith("*")&&(A="*"),A){case"i1":case"i8":F()[p>>>0]=E;break;case"i16":re()[p>>>1>>>0]=E;break;case"i32":ae()[p>>>2>>>0]=E;break;case"i64":ee[p>>>3]=BigInt(E);break;case"float":ze()[p>>>2>>>0]=E;break;case"double":Ge()[p>>>3>>>0]=E;break;case"*":ve()[p>>>2>>>0]=E;break;default:Se(`invalid type for setValue: ${A}`)}},i.getValue=function(p,E="i8"){switch(E.endsWith("*")&&(E="*"),E){case"i1":case"i8":return F()[p>>>0];case"i16":return re()[p>>>1>>>0];case"i32":return ae()[p>>>2>>>0];case"i64":return ee[p>>>3];case"float":return ze()[p>>>2>>>0];case"double":return Ge()[p>>>3>>>0];case"*":return ve()[p>>>2>>>0];default:Se(`invalid type for getValue: ${E}`)}},i.UTF8ToString=Qt,i.stringToUTF8=q,i.lengthBytesUTF8=B,function p(){if(0<Ie)Ee=p;else if(u)r(i),W();else{for(;0<Ke.length;)Ke.shift()(i);0<Ie?Ee=p:(i.calledRun=!0,ce||(W(),r(i)))}}(),i.PTR_SIZE=4,a}),xb=Zl,u_=(e=(s=globalThis.self)==null?void 0:s.name)==null?void 0:e.startsWith("em-pthread"),u_&&Zl()}),eu,Xu,c_,ir,Tb,Ya,d_,h_,tu,p_,su,Eb,ru,Pb,_c=Ue(()=>{fc(),eu=typeof location>"u"?void 0:location.origin,Xu=import.meta.url>"file:"&&import.meta.url<"file;",c_=()=>{{if(Xu){let s=URL;return new URL(new s("ort.bundle.min.mjs",import.meta.url).href,eu).href}return import.meta.url}},ir=c_(),Tb=()=>{if(ir&&!ir.startsWith("blob:"))return ir.substring(0,ir.lastIndexOf("/")+1)},Ya=(s,e)=>{try{let t=e??ir;return(t?new URL(s,t):new URL(s)).origin===eu}catch{return!1}},d_=(s,e)=>{let t=e??ir;try{return(t?new URL(s,t):new URL(s)).href}catch{return}},h_=(s,e)=>`${e??"./"}${s}`,tu=async s=>{let e=await(await fetch(s,{credentials:"same-origin"})).blob();return URL.createObjectURL(e)},p_=async s=>(await import(s)).default,su=(qx(),ta(bb)).default,Eb=async()=>{if(!ir)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(Ya(ir))return[void 0,su()];let s=await tu(ir);return[s,su(s)]},ru=(Xx(),ta(vb)).default,Pb=async(s,e,t)=>{if(!s&&!e&&ru&&ir&&Ya(ir))return[void 0,ru];{let r="ort-wasm-simd-threaded.jsep.mjs",n=s??d_(r,e),i=t&&n&&!Ya(n,e),a=i?await tu(n):n??h_(r,e);return[i?a:void 0,await p_(a)]}}}),nu,Za,ji,iu,m_,f_,__,gc,Yt,Rn=Ue(()=>{_c(),Za=!1,ji=!1,iu=!1,m_=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},f_=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},__=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},gc=async s=>{if(Za)return Promise.resolve();if(ji)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(iu)throw new Error("previous call to 'initializeWebAssembly()' failed.");ji=!0;let e=s.initTimeout,t=s.numThreads;if(s.simd!==!1){if(s.simd==="relaxed"){if(!__())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!f_())throw new Error("WebAssembly SIMD is not supported in the current environment.")}let r=m_();t>1&&!r&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),s.numThreads=t=1);let n=s.wasmPaths,i=typeof n=="string"?n:void 0,a=n==null?void 0:n.mjs,o=(a==null?void 0:a.href)??a,l=n==null?void 0:n.wasm,u=(l==null?void 0:l.href)??l,h=s.wasmBinary,[d,c]=await Pb(o,i,t>1),_=!1,f=[];if(e>0&&f.push(new Promise(b=>{setTimeout(()=>{_=!0,b()},e)})),f.push(new Promise((b,I)=>{let g={numThreads:t};if(h)g.wasmBinary=h;else if(u||i)g.locateFile=M=>u??i+M;else if(o&&o.indexOf("blob:")!==0)g.locateFile=M=>new URL(M,o).href;else if(d){let M=Tb();M&&(g.locateFile=k=>M+k)}c(g).then(M=>{ji=!1,Za=!0,nu=M,b(),d&&URL.revokeObjectURL(d)},M=>{ji=!1,iu=!0,I(M)})})),await Promise.race(f),_)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},Yt=()=>{if(Za&&nu)return nu;throw new Error("WebAssembly is not initialized yet.")}}),Cr,go,qt,wc=Ue(()=>{Rn(),Cr=(s,e)=>{let t=Yt(),r=t.lengthBytesUTF8(s)+1,n=t._malloc(r);return t.stringToUTF8(s,n,r),e.push(n),n},go=(s,e,t,r)=>{if(typeof s=="object"&&s!==null){if(t.has(s))throw new Error("Circular reference in options");t.add(s)}Object.entries(s).forEach(([n,i])=>{let a=e?e+n:n;if(typeof i=="object")go(i,a+".",t,r);else if(typeof i=="string"||typeof i=="number")r(a,i.toString());else if(typeof i=="boolean")r(a,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},qt=s=>{let e=Yt(),t=e.stackSave();try{let r=e.PTR_SIZE,n=e.stackAlloc(2*r);e._OrtGetLastError(n,n+r);let i=Number(e.getValue(n,r===4?"i32":"i64")),a=e.getValue(n+r,"*"),o=a?e.UTF8ToString(a):"";throw new Error(`${s} ERROR_CODE: ${i}, ERROR_MESSAGE: ${o}`)}finally{e.stackRestore(t)}}}),Cb,Qx=Ue(()=>{Rn(),wc(),Cb=s=>{let e=Yt(),t=0,r=[],n=s||{};try{if((s==null?void 0:s.logSeverityLevel)===void 0)n.logSeverityLevel=2;else if(typeof s.logSeverityLevel!="number"||!Number.isInteger(s.logSeverityLevel)||s.logSeverityLevel<0||s.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${s.logSeverityLevel}`);if((s==null?void 0:s.logVerbosityLevel)===void 0)n.logVerbosityLevel=0;else if(typeof s.logVerbosityLevel!="number"||!Number.isInteger(s.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${s.logVerbosityLevel}`);(s==null?void 0:s.terminate)===void 0&&(n.terminate=!1);let i=0;return(s==null?void 0:s.tag)!==void 0&&(i=Cr(s.tag,r)),t=e._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,i),t===0&&qt("Can't create run options."),(s==null?void 0:s.extra)!==void 0&&go(s.extra,"",new WeakSet,(a,o)=>{let l=Cr(a,r),u=Cr(o,r);e._OrtAddRunConfigEntry(t,l,u)!==0&&qt(`Can't set a run config entry: ${a} - ${o}.`)}),[t,r]}catch(i){throw t!==0&&e._OrtReleaseRunOptions(t),r.forEach(a=>e._free(a)),i}}}),g_,w_,M_,Ni,b_,Sb,Jx=Ue(()=>{Rn(),wc(),g_=s=>{switch(s){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${s}`)}},w_=s=>{switch(s){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${s}`)}},M_=s=>{s.extra||(s.extra={}),s.extra.session||(s.extra.session={});let e=s.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),s.executionProviders&&s.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(s.enableMemPattern=!1)},Ni=(s,e,t,r)=>{let n=Cr(e,r),i=Cr(t,r);Yt()._OrtAddSessionConfigEntry(s,n,i)!==0&&qt(`Can't set a session config entry: ${e} - ${t}.`)},b_=async(s,e,t)=>{for(let r of e){let n=typeof r=="string"?r:r.name,i=[];switch(n){case"webnn":if(n="WEBNN",typeof r!="string"){let h=r==null?void 0:r.deviceType;h&&Ni(s,"deviceType",h,t)}break;case"webgpu":if(n="JS",typeof r!="string"){let h=r;if(h!=null&&h.preferredLayout){if(h.preferredLayout!=="NCHW"&&h.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${h.preferredLayout}`);Ni(s,"preferredLayout",h.preferredLayout,t)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let a=Cr(n,t),o=i.length,l=0,u=0;if(o>0){l=Yt()._malloc(o*Yt().PTR_SIZE),t.push(l),u=Yt()._malloc(o*Yt().PTR_SIZE),t.push(u);for(let h=0;h<o;h++)Yt().setValue(l+h*Yt().PTR_SIZE,i[h][0],"*"),Yt().setValue(u+h*Yt().PTR_SIZE,i[h][1],"*")}await Yt()._OrtAppendExecutionProvider(s,a,l,u,o)!==0&&qt(`Can't append execution provider: ${n}.`)}},Sb=async s=>{let e=Yt(),t=0,r=[],n=s||{};M_(n);try{let i=g_(n.graphOptimizationLevel??"all"),a=w_(n.executionMode??"sequential"),o=typeof n.logId=="string"?Cr(n.logId,r):0,l=n.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let u=n.logVerbosityLevel??0;if(!Number.isInteger(u)||u<0||u>4)throw new Error(`log verbosity level is not valid: ${u}`);let h=typeof n.optimizedModelFilePath=="string"?Cr(n.optimizedModelFilePath,r):0;if(t=e._OrtCreateSessionOptions(i,!!n.enableCpuMemArena,!!n.enableMemPattern,a,!!n.enableProfiling,0,o,l,u,h),t===0&&qt("Can't create session options."),n.executionProviders&&await b_(t,n.executionProviders,r),n.enableGraphCapture!==void 0){if(typeof n.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${n.enableGraphCapture}`);Ni(t,"enableGraphCapture",n.enableGraphCapture.toString(),r)}if(n.freeDimensionOverrides)for(let[d,c]of Object.entries(n.freeDimensionOverrides)){if(typeof d!="string")throw new Error(`free dimension override name must be a string: ${d}`);if(typeof c!="number"||!Number.isInteger(c)||c<0)throw new Error(`free dimension override value must be a non-negative integer: ${c}`);let _=Cr(d,r);e._OrtAddFreeDimensionOverride(t,_,c)!==0&&qt(`Can't set a free dimension override: ${d} - ${c}.`)}return n.extra!==void 0&&go(n.extra,"",new WeakSet,(d,c)=>{Ni(t,d,c,r)}),[t,r]}catch(i){throw t!==0&&e._OrtReleaseSessionOptions(t)!==0&&qt("Can't release session options."),r.forEach(a=>e._free(a)),i}}}),ni,Wr,Fn,Mc,wo,bc,yc,Qu,wt=Ue(()=>{ni=s=>{switch(s){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${s}`)}},Wr=s=>{switch(s){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${s}`)}},Fn=(s,e)=>{let t=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][s],r=typeof e=="number"?e:e.reduce((n,i)=>n*i,1);return t>0?Math.ceil(r*t):void 0},Mc=s=>{switch(s){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${s}`)}},wo=s=>{switch(s){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${s}`)}},bc=s=>s==="float32"||s==="float16"||s==="int32"||s==="int64"||s==="uint32"||s==="uint8"||s==="bool"||s==="uint4"||s==="int4",yc=s=>s==="float32"||s==="float16"||s==="int32"||s==="int64"||s==="uint32"||s==="uint64"||s==="int8"||s==="uint8"||s==="bool"||s==="uint4"||s==="int4",Qu=s=>{switch(s){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${s}`)}}}),vc,kb=Ue(()=>{fc(),vc=async s=>{if(typeof s=="string"){let e=await fetch(s);if(!e.ok)throw new Error(`failed to load external data file: ${s}`);let t=e.headers.get("Content-Length"),r=t?parseInt(t,10):0;if(r<1073741824)return new Uint8Array(await e.arrayBuffer());{if(!e.body)throw new Error(`failed to load external data file: ${s}, no response body.`);let n=e.body.getReader(),i;try{i=new ArrayBuffer(r)}catch(o){if(o instanceof RangeError){let l=Math.ceil(r/65536);i=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw o}let a=0;for(;;){let{done:o,value:l}=await n.read();if(o)break;let u=l.byteLength;new Uint8Array(i,a,u).set(l),a+=u}return new Uint8Array(i,0,r)}}else return s instanceof Blob?new Uint8Array(await s.arrayBuffer()):s instanceof Uint8Array?s:new Uint8Array(s)}}),y_,v_,x_,T_,xc,E_,zt,Gr=Ue(()=>{wt(),y_=["V","I","W","E","F"],v_=(s,e)=>{console.log(`[${y_[s]},${new Date().toISOString()}]${e}`)},xc=(s,e)=>{x_=s,T_=e},E_=(s,e)=>{let t=wo(s),r=wo(x_);t>=r&&v_(t,typeof e=="function"?e():e)},zt=(...s)=>{T_&&E_(...s)}}),P_,ui,ye,Mo,Ib,$b,Ab,Pt=Ue(()=>{P_=class{static calcMatMulShape(s,e){return s[1]!==e[0]?void 0:[s[0],e[1]]}},ui=class{static calcShape(s,e,t=!1){let r=s.length,n=e.length;if(r===0)return e;if(n===0)return s;let i=Math.max(s.length,e.length),a=new Array(i);if(t){if(r<2||n<2)return;let o=P_.calcMatMulShape([s[r-2],s[r-1]],[e[n-2],e[n-1]]);if(o===void 0)return;[a[i-2],a[i-1]]=o}for(let o=t?3:1;o<=i;o++){let l=r-o<0?1:s[r-o],u=n-o<0?1:e[n-o];if(l!==u&&l>1&&u>1)return;let h=Math.max(l,u);if(l&&u)a[i-o]=Math.max(l,u);else{if(h>1)return;a[i-o]=0}}return a}static isValidBroadcast(s,e){let t=s.length,r=e.length;if(t>r)return!1;for(let n=1;n<=t;n++)if(s[t-n]!==1&&s[t-n]!==e[r-n])return!1;return!0}},ye=class fo{static size(e){return fo.getSizeFromDimensionRange(e,0,e.length)}static convertShape(e,t=4){let r=e.length;if(r===0)return[];let n=new Array(r),i=r-1;for(;i>=0;){if(e[i]%t===0){n[i]=e[i]/t;break}if(t%e[i]!==0)throw new Error("cannot convert shape");n[i]=1,t/=e[i],i--}for(i--;i>=0;i--)n[i]=e[i];return n}static sizeFromDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return fo.getSizeFromDimensionRange(e,t,e.length)}static sizeToDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${e.length} dimensions.`);return fo.getSizeFromDimensionRange(e,0,t)}static getSizeFromDimensionRange(e,t,r){let n=1;for(let i=t;i<r;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=Number(e[i])}return n}static computeStrides(e){let t=e.length;if(t===0)return[];if(t===1)return[1];let r=new Array(t);r[t-1]=1,r[t-2]=e[t-1];for(let n=t-3;n>=0;--n)r[n]=r[n+1]*e[n+1];return r}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map(r=>this.normalizeAxis(r,t??e.length))}static sortBasedOnPerm(e,t){return t?t.map(r=>e[r]):e.slice().reverse()}static padShape(e,t){let r=e.length;return e.map((n,i)=>n+t[i]+t[i+r])}static areEqual(e,t){return e.length!==t.length?!1:e.every((r,n)=>r===t[n])}},Mo=class Ji{static adjustPoolAttributes(e,t,r,n,i,a){if(!e&&r.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let o=0;o<t.length-2;o++)o>=r.length?r.push(t[o+2]):r[o]=t[o+2];for(let o=0;o<r.length;o++)if(o<n.length){if(n[o]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let o=0;o<r.length;o++)if(o<i.length){if(i[o]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let o=0;o<r.length*2;o++)if(o<a.length){if(a[o]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let o=0;o<r.length;o++){if(r[o]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[o]>=r[o]||a[o+r.length]>=r[o])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,t,r,n,i,a,o){if(o){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<e.length-2;l++)Ji.adjustPadAndReturnShape(e[l+(a?1:2)],t[l],r[l],n[l],i,l,l+e.length-2,o)}}static computePoolOutputShape(e,t,r,n,i,a,o){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let l=[t[0],t[1]];return Ji.computeShapeHelper(e,t,l,r,n,i,a,o),l}static computeConvOutputShape(e,t,r,n,i,a,o){if(e.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[e[0],t[0]];return Ji.computeShapeHelper(!1,e,l,r,n,i,a,o),l}static computeShapeHelper(e,t,r,n,i,a,o,l){if(e)for(let u=0;u<t.length-2;u++)r.push(1);else for(let u=0;u<t.length-2;u++)r.push(Ji.adjustPadAndReturnShape(t[u+2],n[u],i[u],a[u],o,u,u+t.length-2,l))}static adjustPadAndReturnShape(e,t,r,n,i,a,o,l){let u=r*(n-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return i[a]=0,i[o]=0,Math.floor((e-u)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(r!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let h=((e+t-1)/t-1)*t+n-e;return i[a]=Math.floor(l==="SAME_LOWER"?(h+1)/2:h/2),i[o]=h-i[a],Math.floor((e+h-n)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[a]+i[o]-u)/t+1)}},Ib=class{static getShapeOfGemmResult(s,e,t,r,n){if(s.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let i,a,o;e?(i=s[1],a=s[0]):(i=s[0],a=s[1]);let l=-1;if(r?(o=t[0],l=1):(o=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(i<=0||o<=0||a<=0)throw new Error("invalid shape specified");if(n&&!ui.isValidBroadcast(n,[i,o]))throw new Error("gemm: invalid bias shape for broadcast");return[i,o,a]}},$b=-34028234663852886e22,Ab=34028234663852886e22}),Tc,Fb=Ue(()=>{wt(),Tc=(s,e)=>new(Mc(e))(s)}),Ju,au,C_,ou,S_,lu,uu,cu,k_,Ob,Yx=Ue(()=>{Gr(),Ju=(s,e=!0)=>{if(s.byteLength%8!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let t=s.byteLength/8,r=new BigInt64Array(s.buffer,s.byteOffset,t),n=new Int32Array(t);for(let i=0;i<t;i++){let a=r[i];if(a>2147483647n||a<-2147483648n)throw new Error(`Overflow occurred when converting BigInt to Int32 at index ${i}: ${a}`);n[i]=Number(a)}return e?new Uint8Array(n.buffer):n},au=(s,e=!0)=>{if(s.byteLength%4!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let t=s.byteLength/4,r=new Int32Array(s.buffer,s.byteOffset,t),n=BigInt64Array.from(r,BigInt);return e?new Uint8Array(n.buffer):n},C_=1,ou=()=>C_++,S_=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),lu=(s,e)=>{let t=S_.get(s);if(!t)throw new Error("Unsupported data type.");return e.length>0?Math.ceil(e.reduce((r,n)=>r*n)*t/8):0},uu=class{constructor(s){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:e,context:t,tensor:r,dataType:n,shape:i,shouldConvertInt64toInt32:a=!1}=s;this.sessionId=e,this.mlContext=t,this.mlTensor=r,this.dataType=n,this.tensorShape=i,this.shouldConvertInt64toInt32=a}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return lu(this.dataType,this.tensorShape)}destroy(){zt("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(s){this.mlContext.writeTensor(this.mlTensor,s)}async read(s,e){if(s){let t=await this.mlContext.readTensor(this.mlTensor),r=au(new Uint8Array(t));if(e){(e instanceof ArrayBuffer?new Uint8Array(e):new Uint8Array(e.buffer,e.byteOffset,e.byteLength)).set(r);return}else return r.buffer}else return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(s,e,t){return this.mlContext===s&&this.dataType===e&&this.tensorShape.length===t.length&&this.tensorShape.every((r,n)=>r===t[n])}setIsInt64ToInt32Converted(s){this.isInt64ToInt32Converted=s}},cu=class{constructor(s,e){this.tensorManager=s,this.wrapper=e}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(s,e,t,r){let n=e,i=this.tensorManager.getMLContext(s),a=n==="int64"&&!i.opSupportLimits().input.dataTypes.includes("int64");if(a&&(n="int32",zt("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(i,n,t))return this.wrapper.tensor;if(r){if(this.wrapper.byteLength!==lu(n,t))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let o=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(s,n,t,o,!0,!0,a),r&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(s){let e=s;if(this.wrapper)if(this.wrapper.shouldConvertInt64toInt32&&(e=Ju(s,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),e.byteLength===this.wrapper.byteLength){this.wrapper.write(e);return}else zt("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(s){var e,t,r;if(this.activeUpload){let n=(e=this.wrapper)!=null&&e.isInt64ToInt32Converted?au(this.activeUpload):this.activeUpload;if(s){s instanceof ArrayBuffer?new Uint8Array(s).set(n):new Uint8Array(s.buffer,s.byteOffset,s.byteLength).set(n);return}else return n.buffer}if(!this.wrapper)throw new Error("Tensor has not been created.");return s?this.wrapper.read((t=this.wrapper)==null?void 0:t.shouldConvertInt64toInt32,s):this.wrapper.read((r=this.wrapper)==null?void 0:r.shouldConvertInt64toInt32)}},k_=class{constructor(s){this.backend=s,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(s){let e=this.backend.getMLContext(s);if(!e)throw new Error("MLContext not found for session.");return e}reserveTensorId(){let s=ou();return this.tensorTrackersById.set(s,new cu(this)),s}releaseTensorId(s){let e=this.tensorTrackersById.get(s);e&&(this.tensorTrackersById.delete(s),e.tensorWrapper&&this.releaseTensor(e.tensorWrapper))}async ensureTensor(s,e,t,r,n){zt("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${r}, copyOld: ${n}}`);let i=this.tensorTrackersById.get(e);if(!i)throw new Error("Tensor not found.");return i.ensureTensor(s,t,r,n)}upload(s,e){let t=this.tensorTrackersById.get(s);if(!t)throw new Error("Tensor not found.");t.upload(e)}async download(s,e){zt("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${s}, dstBuffer: ${e==null?void 0:e.byteLength}}`);let t=this.tensorTrackersById.get(s);if(!t)throw new Error("Tensor not found.");return t.download(e)}releaseTensorsForSession(s){for(let e of this.freeTensors)e.sessionId===s&&e.destroy();this.freeTensors=this.freeTensors.filter(e=>e.sessionId!==s)}registerTensor(s,e,t,r){let n=this.getMLContext(s),i=ou(),a=new uu({sessionId:s,context:n,tensor:e,dataType:t,shape:r});return this.tensorTrackersById.set(i,new cu(this,a)),this.externalTensors.add(a),i}async getCachedTensor(s,e,t,r,n,i,a=!1){let o=this.getMLContext(s);for(let[u,h]of this.freeTensors.entries())if(h.canReuseTensor(o,e,t)){zt("verbose",()=>`[WebNN] Reusing tensor {dataType: ${e}, shape: ${t}}`);let d=this.freeTensors.splice(u,1)[0];return d.sessionId=s,d}zt("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`);let l=await o.createTensor({dataType:e,shape:t,dimensions:t,usage:r,writable:n,readable:i});return new uu({sessionId:s,context:o,tensor:l,dataType:e,shape:t,shouldConvertInt64toInt32:a})}releaseTensor(s){this.externalTensors.has(s)&&this.externalTensors.delete(s),this.freeTensors.push(s)}},Ob=(...s)=>new k_(...s)}),eo,I_,Db,Zx=Ue(()=>{wt(),Rn(),Fb(),Yx(),Gr(),eo=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),I_=(s,e)=>{if(s===e)return!0;if(s===void 0||e===void 0)return!1;let t=Object.keys(s).sort(),r=Object.keys(e).sort();return t.length===r.length&&t.every((n,i)=>n===r[i]&&s[n]===e[n])},Db=class{constructor(s){this.tensorManager=Ob(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,xc(s.logLevel,!!s.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(s){zt("verbose",()=>`[WebNN] onRunStart {sessionId: ${s}}`),this.activeSessionId=s}onRunEnd(s){zt("verbose",()=>`[WebNN] onRunEnd {sessionId: ${s}}`);let e=this.temporarySessionTensorIds.get(s);if(e){for(let t of e)zt("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(s),this.activeSessionId=void 0}}async createMLContext(s){if(s instanceof GPUDevice){let t=this.mlContextCache.findIndex(r=>r.gpuDevice===s);if(t!==-1)return this.mlContextCache[t].mlContext;{let r=await navigator.ml.createContext(s);return this.mlContextCache.push({gpuDevice:s,mlContext:r}),r}}else if(s===void 0){let t=this.mlContextCache.findIndex(r=>r.options===void 0&&r.gpuDevice===void 0);if(t!==-1)return this.mlContextCache[t].mlContext;{let r=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:r}),r}}let e=this.mlContextCache.findIndex(t=>I_(t.options,s));if(e!==-1)return this.mlContextCache[e].mlContext;{let t=await navigator.ml.createContext(s);return this.mlContextCache.push({options:s,mlContext:t}),t}}registerMLContext(s,e){this.mlContextBySessionId.set(s,e);let t=this.sessionIdsByMLContext.get(e);t||(t=new Set,this.sessionIdsByMLContext.set(e,t)),t.add(s),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(s,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(s){this.sessionGraphInputs.delete(s);let e=this.mlContextBySessionId.get(s);if(!e)return;this.tensorManager.releaseTensorsForSession(s),this.mlContextBySessionId.delete(s);let t=this.sessionIdsByMLContext.get(e);if(t.delete(s),t.size===0){this.sessionIdsByMLContext.delete(e);let r=this.mlContextCache.findIndex(n=>n.mlContext===e);r!==-1&&this.mlContextCache.splice(r,1)}}getMLContext(s){return this.mlContextBySessionId.get(s)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(s){zt("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${s}}`),this.tensorManager.releaseTensorId(s)}async ensureTensor(s,e,t,r,n){let i=eo.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(s??this.currentSessionId,e,i,r,n)}async createTemporaryTensor(s,e,t){zt("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${e}, shape: ${t}}`);let r=eo.get(e);if(!r)throw new Error(`Unsupported ONNX data type: ${e}`);let n=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(s,n,r,t,!1);let i=this.temporarySessionTensorIds.get(s);return i?i.push(n):this.temporarySessionTensorIds.set(s,[n]),n}uploadTensor(s,e){if(!Yt().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");zt("verbose",()=>`[WebNN] uploadTensor {tensorId: ${s}, data: ${e.byteLength}}`),this.tensorManager.upload(s,e)}async downloadTensor(s,e){return this.tensorManager.download(s,e)}createMLTensorDownloader(s,e){return async()=>{let t=await this.tensorManager.download(s);return Tc(t,e)}}registerMLTensor(s,e,t,r){let n=eo.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);let i=this.tensorManager.registerTensor(s,e,n,r);return zt("verbose",()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${n}, dimensions: ${r}} -> {tensorId: ${i}}`),i}registerMLConstant(s,e,t,r,n,i,a=!1){if(!i)throw new Error("External mounted files are not available.");let o=s;s.startsWith("./")&&(o=s.substring(2));let l=i.get(o);if(!l)throw new Error(`File with name ${o} not found in preloaded files.`);if(e+t>l.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let u=l.slice(e,e+t).buffer,h;switch(n.dataType){case"float32":h=new Float32Array(u);break;case"float16":h=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(u):new Uint16Array(u);break;case"int32":h=new Int32Array(u);break;case"uint32":h=new Uint32Array(u);break;case"int64":a?(h=Ju(new Uint8Array(u),!1),n.dataType="int32"):h=new BigInt64Array(u);break;case"uint64":h=new BigUint64Array(u);break;case"int8":h=new Int8Array(u);break;case"int4":case"uint4":case"uint8":h=new Uint8Array(u);break;default:throw new Error(`Unsupported data type: ${n.dataType} in creating WebNN Constant from external data.`)}return zt("verbose",()=>`[WebNN] registerMLConstant {dataType: ${n.dataType}, shape: ${n.shape}}} ${a?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),r.constant(n,h)}registerGraphInput(s){this.temporaryGraphInputs.push(s)}isGraphInput(s,e){let t=this.sessionGraphInputs.get(s);return t?t.includes(e):!1}isInt64Supported(s){var e;return!!((e=this.mlContextBySessionId.get(s))!=null&&e.opSupportLimits().input.dataTypes.includes("int64"))}flush(){}}}),Ec=Ue(()=>{}),du,to,so,$_,A_,hu,Yu,F_,Lb,eT=Ue(()=>{Gr(),Ec(),du=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),to=[],so=s=>Math.ceil(Number(s)/16)*16,$_=s=>{for(let e=0;e<to.length;e++){let t=to[e];if(s<=t)return t}return Math.ceil(s/16)*16},A_=1,hu=()=>A_++,Yu=async(s,e,t,r)=>{let n=so(t),i=s.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=s.getCommandEncoder();s.endComputePass(),a.copyBufferToBuffer(e,0,i,0,n),s.flush(),await i.mapAsync(GPUMapMode.READ);let o=i.getMappedRange();if(r){let l=r();return l.set(new Uint8Array(o,0,t)),l}else return new Uint8Array(o.slice(0,t))}finally{i.destroy()}},F_=class{constructor(s){this.backend=s,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[e]of du)to.push(e),this.freeBuffers.set(e,[]),this.freeUniformBuffers.set(e,[]);this.sessionCount=0}upload(s,e){let t=e.buffer,r=e.byteOffset,n=e.byteLength,i=so(n),a=this.storageCache.get(s);if(!a)throw new Error("gpu data for uploading does not exist");if(Number(a.originalSize)!==n)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${n}`);let o=this.backend.device.createBuffer({mappedAtCreation:!0,size:i,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=o.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,r,n)),o.unmap();let u=this.backend.device.createCommandEncoder();u.copyBufferToBuffer(o,0,a.gpuData.buffer,0,i),this.backend.device.queue.submit([u.finish()]),o.destroy(),zt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${s})`)}memcpy(s,e){let t=this.storageCache.get(s);if(!t)throw new Error("source gpu data for memcpy does not exist");let r=this.storageCache.get(e);if(!r)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==r.originalSize)throw new Error("inconsistent source and destination gpu data size");let n=so(t.originalSize),i=this.backend.getCommandEncoder();this.backend.endComputePass(),i.copyBufferToBuffer(t.gpuData.buffer,0,r.gpuData.buffer,0,n)}registerExternalBuffer(s,e,t){let r;if(t){if(r=t[0],s===t[1])return zt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${e}) => id=${r}, buffer is the same, skip.`),r;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else r=hu();return this.storageCache.set(r,{gpuData:{id:r,type:0,buffer:s},originalSize:e}),zt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${e}) => id=${r}, registered.`),r}unregisterExternalBuffer(s){s!==void 0&&(this.storageCache.delete(s),zt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${s}`))}create(s,e=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=$_(s),r,n=(e&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,i=(e&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(n||i){let o=(n?this.freeBuffers:this.freeUniformBuffers).get(t);o?o.length>0?r=o.pop():r=this.backend.device.createBuffer({size:t,usage:e}):r=this.backend.device.createBuffer({size:t,usage:e})}else r=this.backend.device.createBuffer({size:t,usage:e});let a={id:hu(),type:0,buffer:r};return this.storageCache.set(a.id,{gpuData:a,originalSize:Number(s)}),zt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${s}) => id=${a.id}`),a}get(s){var e;return(e=this.storageCache.get(s))==null?void 0:e.gpuData}release(s){let e=typeof s=="bigint"?Number(s):s,t=this.storageCache.get(e);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return zt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(s,e){let t=this.storageCache.get(Number(s));if(!t)throw new Error("data does not exist");await Yu(this.backend,t.gpuData.buffer,t.originalSize,e)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let s of this.buffersPending){let e=du.get(s.size);if((s.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let t=this.freeBuffers.get(s.size)||[];e===void 0||t.length>=e?s.destroy():t.push(s)}else if((s.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let t=this.freeUniformBuffers.get(s.size)||[];e===void 0||t.length>=e?s.destroy():t.push(s)}else s.destroy()}this.buffersPending=[]}else{let s=this.capturedPendingBuffers.get(this.backend.currentSessionId);s||(s=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,s));for(let e of this.buffersPending)s.push(e);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(s=>{s.forEach(e=>{e.destroy()})}),this.freeUniformBuffers.forEach(s=>{s.forEach(e=>{e.destroy()})}),this.storageCache.forEach(s=>{s.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(s=>{s.forEach(e=>{e.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(s){let e=this.capturedPendingBuffers.get(s);e&&(e.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(s)),this.sessionCount-=1,this.sessionCount===0&&(zt("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},Lb=(...s)=>new F_(...s)}),O_,Wt,hs=Ue(()=>{O_=class{constructor(s){Object.assign(this,s)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(s=>`${this[s]}`).join(";")),this.key}},Wt=s=>new O_(s)}),ci,ro,Ds,Xs,ct,us,Zu,ai,ln,ut,Ui,ke,lt,zb,Pc,D_,Bb,Ct=Ue(()=>{wt(),Pt(),ci=64,ro=(s,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(s)){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${s}`)}},Ds=(s,e=1)=>{let t=ro(s,e);return typeof t=="string"?t:t[0]},Xs=(s,e=1)=>{let t=ro(s,e);return typeof t=="string"?t:t[1]},ct=(...s)=>{let e=[];return s.forEach(t=>{t.length!==0&&e.push({type:12,data:t},{type:12,data:ye.computeStrides(t)})}),e},us=s=>s%4===0?4:s%2===0?2:1,Zu=(s="f32",e,t="0")=>!e||e===1?`${s}(${t})`:`vec${e}<${s}>(${t})`,ai=(s,e,t)=>s==="f32"?t:e===1?`f32(${t})`:`vec${e}<f32>(${t})`,ln=(s,e)=>e===4?`(${s}.x + ${s}.y + ${s}.z + ${s}.w)`:e===2?`(${s}.x + ${s}.y)`:e===3?`(${s}.x + ${s}.y + ${s}.z)`:s,ut=(s,e,t,r)=>s.startsWith("uniforms.")&&t>4?typeof e=="string"?r==="f16"?`${s}[(${e}) / 8][(${e}) % 8 / 4][(${e}) % 8 % 4]`:`${s}[(${e}) / 4][(${e}) % 4]`:r==="f16"?`${s}[${Math.floor(e/8)}][${Math.floor(e%8/4)}][${e%8%4}]`:`${s}[${Math.floor(e/4)}][${e%4}]`:t>1?`${s}[${e}]`:s,Ui=(s,e,t,r,n)=>{let i=typeof t=="number",a=i?t:t.length,o=[...new Array(a).keys()],l=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,u=ro(e,n),h=typeof u=="string"?u:u[1],d=typeof u=="string"?u:u[0],c={indices:l,value:h,storage:d,tensor:e},_=j=>typeof j=="string"?j:`${j}u`,f={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},b=i?"uniforms.":"",I=`${b}${s}_shape`,g=`${b}${s}_strides`,M="";for(let j=0;j<a-1;j++)M+=`
    let dim${j} = current / ${ut(g,j,a)};
    let rest${j} = current % ${ut(g,j,a)};
    indices[${j}] = dim${j};
    current = rest${j};
    `;M+=`indices[${a-1}] = current;`;let k=a<2?"":`
  fn o2i_${s}(offset: u32) -> ${c.indices} {
    var indices: ${c.indices};
    var current = offset;
    ${M}
    return indices;
  }`,v=j=>(f.offsetToIndices=!0,a<2?j:`o2i_${s}(${j})`),y=[];if(a>=2)for(let j=a-1;j>=0;j--)y.push(`${ut(g,j,a)} * (indices[${j}])`);let T=a<2?"":`
  fn i2o_${s}(indices: ${c.indices}) -> u32 {
    return ${y.join("+")};
  }`,x=j=>(f.indicesToOffset=!0,a<2?j:`i2o_${s}(${j})`),P=(...j)=>a===0?"0u":`${c.indices}(${j.map(_).join(",")})`,O=(j,F)=>a<2?`${j}`:`${ut(j,F,a)}`,L=(j,F,V)=>a<2?`${j}=${V};`:`${ut(j,F,a)}=${V};`,G={},K=(j,F)=>{f.broadcastedIndicesToOffset=!0;let V=`${F.name}broadcastedIndicesTo${s}Offset`;if(V in G)return`${V}(${j})`;let re=[];for(let fe=a-1;fe>=0;fe--){let ae=F.indicesGet("outputIndices",fe+F.rank-a);re.push(`${O(g,fe)} * (${ae} % ${O(I,fe)})`)}return G[V]=`fn ${V}(outputIndices: ${F.type.indices}) -> u32 {
             return ${re.length>0?re.join("+"):"0u"};
           }`,`${V}(${j})`},R=(j,F)=>(()=>{if(c.storage===c.value)return`${s}[${j}]=${F};`;if(c.storage==="vec2<u32>"&&c.value==="i32")return`${s}[${j}]=vec2<u32>(u32(${F}), select(0u, 0xFFFFFFFFu, ${F} < 0));`;if(c.storage==="vec2<u32>"&&c.value==="u32")return`${s}[${j}]=vec2<u32>(u32(${F}), 0u);`;if(c.storage==="u32"&&c.value==="vec4<bool>")return`${s}[${j}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${F}));`;throw new Error(`not supported combination of storage type ${c.storage} and value type ${c.value} yet`)})(),te=j=>(()=>{if(c.storage===c.value)return`${s}[${j}]`;if(c.storage==="vec2<u32>"&&c.value==="i32")return`i32(${s}[${j}].x)`;if(c.storage==="vec2<u32>"&&c.value==="u32")return`u32(${s}[${j}].x)`;if(c.storage==="u32"&&c.value==="vec4<bool>")return`vec4<bool>(bool(${s}[${j}] & 0xFFu), bool(${s}[${j}] & 0xFF00u), bool(${s}[${j}] & 0xFF0000u), bool(${s}[${j}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${c.storage} and value type ${c.value} yet`)})(),H=a<2?"":`
  fn get_${s}ByIndices(indices: ${c.indices}) -> ${h} {
    return ${te(`i2o_${s}(indices)`)};
  }`,ee=a<2?"":(()=>{let j=o.map(V=>`d${V}: u32`).join(", "),F=o.map(V=>`d${V}`).join(", ");return`
  fn get_${s}(${j}) -> ${h} {
    return get_${s}ByIndices(${P(F)});
  }`})(),Z=(...j)=>{if(j.length!==a)throw new Error(`indices length must be ${a}`);let F=j.map(_).join(",");return a===0?te("0u"):a===1?te(F[0]):(f.get=!0,f.getByIndices=!0,f.indicesToOffset=!0,`get_${s}(${F})`)},ne=j=>a<2?te(j):(f.getByIndices=!0,f.indicesToOffset=!0,`get_${s}ByIndices(${j})`),me=a<2?"":`
  fn set_${s}ByIndices(indices: ${c.indices}, value: ${h}) {
    ${R(`i2o_${s}(indices)`,"value")}
  }`,ce=a<2?"":(()=>{let j=o.map(V=>`d${V}: u32`).join(", "),F=o.map(V=>`d${V}`).join(", ");return`
  fn set_${s}(${j}, value: ${h}) {
    set_${s}ByIndices(${P(F)}, value);
  }`})();return{impl:()=>{let j=[],F=!1;return f.offsetToIndices&&(j.push(k),F=!0),f.indicesToOffset&&(j.push(T),F=!0),f.broadcastedIndicesToOffset&&(Object.values(G).forEach(V=>j.push(V)),F=!0),f.set&&(j.push(ce),F=!0),f.setByIndices&&(j.push(me),F=!0),f.get&&(j.push(ee),F=!0),f.getByIndices&&(j.push(H),F=!0),!i&&F&&j.unshift(`const ${I} = ${c.indices}(${t.join(",")});`,`const ${g} = ${c.indices}(${ye.computeStrides(t).join(",")});`),j.join(`
`)},type:c,offsetToIndices:v,indicesToOffset:x,broadcastedIndicesToOffset:K,indices:P,indicesGet:O,indicesSet:L,set:(...j)=>{if(j.length!==a+1)throw new Error(`indices length must be ${a}`);let F=j[a];if(typeof F!="string")throw new Error("value must be string");let V=j.slice(0,a).map(_).join(",");return a===0?R("0u",F):a===1?R(V[0],F):(f.set=!0,f.setByIndices=!0,f.indicesToOffset=!0,`set_${s}(${V}, ${F})`)},setByOffset:R,setByIndices:(j,F)=>a<2?R(j,F):(f.setByIndices=!0,f.indicesToOffset=!0,`set_${s}ByIndices(${j}, ${F});`),get:Z,getByOffset:te,getByIndices:ne,usage:r,name:s,strides:g,shape:I,rank:a}},ke=(s,e,t,r=1)=>Ui(s,e,t,"input",r),lt=(s,e,t,r=1)=>Ui(s,e,t,"output",r),zb=(s,e,t)=>Ui(s,e,t,"atomicOutput",1),Pc=(s,e,t,r=1)=>Ui(s,e,t,"internal",r),D_=class{constructor(s,e){this.normalizedDispatchGroup=s,this.limits=e,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(s){return`if (global_idx >= ${typeof s=="number"?`${s}u`:s}) { return; }`}mainStart(s=ci){let e=typeof s=="number"?s:s[0],t=typeof s=="number"?1:s[1],r=typeof s=="number"?1:s[2];if(e>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||r>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${e}, ${t}, ${r}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(e*t*r>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${e}, ${t}, ${r}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let n=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,i=n?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,a=n?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${e*t*r}u + local_idx;`;return`@compute @workgroup_size(${e}, ${t}, ${r})
  fn main(${i}) {
    ${a}
  `}appendVariableUniforms(s){s.rank!==0&&(s.shape.startsWith("uniforms.")&&this.uniforms.push({name:s.shape.replace("uniforms.",""),type:"u32",length:s.rank}),s.strides.startsWith("uniforms.")&&this.uniforms.push({name:s.strides.replace("uniforms.",""),type:"u32",length:s.rank}))}declareVariable(s,e){if(s.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(s),this.appendVariableUniforms(s);let t=s.usage==="input"?"read":"read_write",r=s.usage==="atomicOutput"?"atomic<i32>":s.type.storage;return`@group(0) @binding(${e}) var<storage, ${t}> ${s.name}: array<${r}>;`}declareVariables(...s){return s.map(e=>this.declareVariable(e,this.variableIndex++)).join(`
`)}registerInternalVariable(s){if(s.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(s),this.appendVariableUniforms(s)}registerInternalVariables(...s){return s.forEach(e=>this.registerInternalVariable(e)),this}registerUniform(s,e,t=1){return this.uniforms.push({name:s,type:e,length:t}),this}registerUniforms(s){return this.uniforms=this.uniforms.concat(s),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let s=[];for(let{name:e,type:t,length:r}of this.uniforms)if(r&&r>4)t==="f16"?s.push(`@align(16) ${e}:array<mat2x4<${t}>, ${Math.ceil(r/8)}>`):s.push(`${e}:array<vec4<${t}>, ${Math.ceil(r/4)}>`);else{let n=r==null||r===1?t:`vec${r}<${t}>`;s.push(`${e}:${n}`)}return`
      struct Uniforms { ${s.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(s=>s.impl()).join(`
`)+this.internalVariables.map(s=>s.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let s=e=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(e)];return this.uniforms.map(e=>[s(e.type),e.length??1])}},Bb=(s,e)=>new D_(s,e)}),L_,pu,z_,B_,R_,j_,or,Rb,jb,un=Ue(()=>{wt(),Pt(),hs(),Ct(),L_=(s,e)=>{if(!s||s.length!==1)throw new Error("Transpose requires 1 input.");if(e.length!==0&&e.length!==s[0].dims.length)throw new Error(`perm size ${e.length} does not match input rank ${s[0].dims.length}`)},pu=(s,e)=>e.length!==0?e:[...new Array(s).keys()].reverse(),z_=(s,e)=>ye.sortBasedOnPerm(s,pu(s.length,e)),B_=(s,e,t,r)=>{let n=`fn perm(i: ${r.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`;for(let i=0;i<e;++i)n+=`a[${s[i]}]=i[${i}];`;return n+="return a;}"},R_=(s,e)=>{let t=[],r=[];for(let n=0;n<s.length;++n)s[n]!==1&&t.push(s[n]),s[e[n]]!==1&&r.push(e[n]);return{newShape:t,newPerm:r}},j_=(s,e)=>{let t=0;for(let r=0;r<s.length;++r)if(e[s[r]]!==1){if(s[r]<t)return!1;t=s[r]}return!0},or=(s,e)=>{let t=s.dataType,r=s.dims.length,n=pu(r,e),i=z_(s.dims,n),a=s.dims,o=i,l=r<2||j_(n,s.dims),u;if(l)return u=f=>{let b=ke("input",t,a,4),I=lt("output",t,o,4);return`
  ${f.registerUniform("output_size","u32").declareVariables(b,I)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let f=ye.size(i);return{outputs:[{dims:i,dataType:s.dataType}],dispatchGroup:{x:Math.ceil(f/64/4)},programUniforms:[{type:12,data:Math.ceil(f/4)}]}},getShaderSource:u};let{newShape:h,newPerm:d}=R_(s.dims,n),c=ye.areEqual(d,[2,3,1]),_=ye.areEqual(d,[3,1,2]);if(h.length===2||c||_){a=c?[h[0],h[1]*h[2]]:_?[h[0]*h[1],h[2]]:h,o=[a[1],a[0]];let f=16;return u=b=>{let I=ke("a",t,a.length),g=lt("output",t,o.length);return`
  ${b.registerUniform("output_size","u32").declareVariables(I,g)}
  var<workgroup> tile : array<array<${g.type.value}, ${f+1}>, ${f}>;
  ${b.mainStart([f,f,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${f} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${f}u + local_id.x;
    let input_row = workgroup_id_x * ${f}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${I.getByIndices(`${I.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${f}u + local_id.x;
    let output_row = workgroup_id_y * ${f}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${g.setByIndices(`${g.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let b=ye.size(i);return{outputs:[{dims:i,dataType:s.dataType}],dispatchGroup:{x:Math.ceil(o[1]/f),y:Math.ceil(o[0]/f)},programUniforms:[{type:12,data:b},...ct(a,o)]}},getShaderSource:u}}return u=f=>{let b=ke("a",t,a.length),I=lt("output",t,o.length);return`
  ${f.registerUniform("output_size","u32").declareVariables(b,I)}

  ${B_(n,r,b,I)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${I.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${I.setByOffset("global_idx",b.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:["rank"]},getRunData:()=>{let f=ye.size(i);return{outputs:[{dims:i,dataType:s.dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...ct(a,o)]}},getShaderSource:u}},Rb=(s,e)=>{L_(s.inputs,e.perm),s.compute(or(s.inputs[0],e.perm))},jb=s=>Wt({perm:s.perm})}),N_,U_,V_,W_,G_,K_,H_,q_,X_,Q_,yr,Nb,Ub,Vb,Wb,Gb,Kb,Hb,qb,Xb,Qb,tT=Ue(()=>{wt(),Pt(),Ct(),Cc(),un(),N_={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},U_={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},V_={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},W_={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},G_=(s,e)=>{let t=[];for(let r=e-s;r<e;++r)t.push(r);return t},K_=(s,e)=>{let t=[],r=s.length;for(let i=0;i<r;i++)e.indexOf(i)===-1&&t.push(s[i]);let n=e.map(i=>s[i]);return[t,n]},H_=(s,e)=>{let t=s.length+e.length,r=[],n=0;for(let i=0;i<t;i++)e.indexOf(i)===-1?r.push(s[n++]):r.push(1);return r},q_=(s,e)=>{for(let t=0;t<s.length;++t)if(s[s.length-t-1]!==e-1-t)return!1;return!0},X_=(s,e)=>{let t=[];if(!q_(s,e)){for(let r=0;r<e;++r)s.indexOf(r)===-1&&t.push(r);s.forEach(r=>t.push(r))}return t},Q_=(s,e,t,r,n,i,a)=>{let o=t[0].dims,l=ye.size(i),u=ye.size(a),h=ke("_A",t[0].dataType,o),d=lt("output",n,i),c=64;l===1&&(c=256);let _=`
          var<workgroup> aBestValues : array<f32, ${c}>;
       `,f=b=>`
        ${b.registerUniform("reduceSize","u32").declareVariables(h,d)}
        ${_}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${b.mainStart(c)}

          let outputIndex = global_idx / ${c};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${V_[r]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${c}) {
           let candidate = f32(${h.getByOffset("offset + k")});
           bestValue = ${N_[r]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${c}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${U_[r]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${d.setByOffset("outputIndex",`${r==="mean"?`${d.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${d.type.storage}(${W_[r]})`}`)};
         }
        }`;return{name:s,shaderCache:{hint:`${e};${c}`,inputDependencies:["type"]},getShaderSource:f,getRunData:()=>({outputs:[{dims:i,dataType:n}],dispatchGroup:{x:l},programUniforms:[{type:12,data:u}]})}},yr=(s,e,t,r)=>{let n=s.inputs.length===1?t:ec(s.inputs,t),i=n.axes;i.length===0&&!n.noopWithEmptyAxes&&(i=s.inputs[0].dims.map((_,f)=>f));let a=ye.normalizeAxes(i,s.inputs[0].dims.length),o=a,l=s.inputs[0],u=X_(o,s.inputs[0].dims.length);u.length>0&&(l=s.compute(or(s.inputs[0],u),{inputs:[0],outputs:[-1]})[0],o=G_(o.length,l.dims.length));let[h,d]=K_(l.dims,o),c=h;n.keepDims&&(c=H_(h,a)),s.compute(Q_(e,n.cacheKey,[l],r,s.inputs[0].dataType,c,d),{inputs:[l]})},Nb=(s,e)=>{yr(s,"ReduceMeanShared",e,"mean")},Ub=(s,e)=>{yr(s,"ReduceL1Shared",e,"l1")},Vb=(s,e)=>{yr(s,"ReduceL2Shared",e,"l2")},Wb=(s,e)=>{yr(s,"ReduceLogSumExpShared",e,"logSumExp")},Gb=(s,e)=>{yr(s,"ReduceMaxShared",e,"max")},Kb=(s,e)=>{yr(s,"ReduceMinShared",e,"min")},Hb=(s,e)=>{yr(s,"ReduceProdShared",e,"prod")},qb=(s,e)=>{yr(s,"ReduceSumShared",e,"sum")},Xb=(s,e)=>{yr(s,"ReduceSumSquareShared",e,"sumSquare")},Qb=(s,e)=>{yr(s,"ReduceLogSumShared",e,"logSum")}}),vr,J_,bo,ec,xr,Y_,Z_,eg,tg,sg,rg,ng,ig,ag,og,Tr,Jb,Yb,Zb,e0,t0,s0,r0,n0,i0,a0,Cc=Ue(()=>{wt(),Pt(),hs(),Ct(),tT(),vr=s=>{if(!s||s.length===0||s.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(s.length===2&&s[1].dims.length!==1)throw new Error("Invalid axes input dims.")},J_=s=>["","",`var value = ${s.getByIndices("input_indices")};`,""],bo=(s,e,t,r,n,i,a=!1,o=!1)=>{let l=[],u=t[0].dims,h=u.length,d=ye.normalizeAxes(n,h),c=!o&&d.length===0;u.forEach((b,I)=>{c||d.indexOf(I)>=0?a&&l.push(1):l.push(b)});let _=l.length,f=ye.size(l);return{name:s,shaderCache:e,getShaderSource:b=>{let I=[],g=ke("_A",t[0].dataType,h),M=lt("output",i,_),k=r(g,M,d),v=k[2];for(let y=0,T=0;y<h;y++)c||d.indexOf(y)>=0?(a&&T++,v=`for(var j${y}: u32 = 0; j${y} < ${u[y]}; j${y}++) {
                  ${k[2].includes("last_index")?`let last_index = j${y};`:""}
                  ${g.indicesSet("input_indices",y,`j${y}`)}
                  ${v}
                }`):(I.push(`${g.indicesSet("input_indices",y,M.indicesGet("output_indices",T))};`),T++);return`

        ${b.registerUniform("output_size","u32").declareVariables(g,M)}

        ${b.mainStart()}
          ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${g.type.indices};
          let output_indices = ${M.offsetToIndices("global_idx")};

          ${I.join(`
`)}
          ${k[0]}       // init ops for reduce max/min
          ${k[1]}
          ${v}
          ${k[3]}
          ${k.length===4?M.setByOffset("global_idx","value"):k.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:i}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...ct(u,l)]})}},ec=(s,e)=>{let t=[];return s[1].dims[0]>0&&s[1].getBigInt64Array().forEach(r=>t.push(Number(r))),Wt({axes:t,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},xr=(s,e,t,r)=>{let n=s.inputs,i=n.length===1?t:ec(n,t);s.compute(bo(e,{hint:i.cacheKey,inputDependencies:["rank"]},[n[0]],i.noopWithEmptyAxes&&i.axes.length===0?J_:r,i.axes,n[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},Y_=(s,e)=>{vr(s.inputs),xr(s,"ReduceLogSum",e,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},Z_=(s,e)=>{vr(s.inputs),xr(s,"ReduceL1",e,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},eg=(s,e)=>{vr(s.inputs),xr(s,"ReduceL2",e,(t,r)=>[`var t = ${r.type.value}(0); var value = ${r.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},tg=(s,e)=>{vr(s.inputs),xr(s,"ReduceLogSumExp",e,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},sg=(s,e)=>{vr(s.inputs),xr(s,"ReduceMax",e,(t,r,n)=>{let i=[];for(let a=0;a<t.rank;a++)(n.indexOf(a)>=0||n.length===0)&&i.push(t.indicesSet("input_indices",a,0));return[`${i.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},rg=(s,e)=>{vr(s.inputs),xr(s,"ReduceMean",e,(t,r,n)=>{let i=1;for(let a=0;a<t.rank;a++)(n.indexOf(a)>=0||n.length===0)&&(i*=s.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${r.type.value}(sum / ${i});`]})},ng=(s,e)=>{vr(s.inputs),xr(s,"ReduceMin",e,(t,r,n)=>{let i=[];for(let a=0;a<t.rank;a++)(n.indexOf(a)>=0||n.length===0)&&i.push(`input_indices[${a}] = 0;`);return[`${i.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},ig=(s,e)=>{vr(s.inputs),xr(s,"ReduceProd",e,(t,r)=>[`var value = ${r.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},ag=(s,e)=>{vr(s.inputs),xr(s,"ReduceSum",e,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},og=(s,e)=>{vr(s.inputs),xr(s,"ReduceSumSquare",e,(t,r)=>[`var t = ${r.type.value}(0); var value = ${r.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},Tr=(s,e,t)=>{if(e.length===0)return t;let r=1,n=1;for(let i=0;i<e.length;i++)e.indexOf(i)===-1?r*=s[i]:n*=s[i];return n<32&&r>1024},Jb=(s,e)=>{Tr(s.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?rg(s,e):Nb(s,e)},Yb=(s,e)=>{Tr(s.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Z_(s,e):Ub(s,e)},Zb=(s,e)=>{Tr(s.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?eg(s,e):Vb(s,e)},e0=(s,e)=>{Tr(s.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?tg(s,e):Wb(s,e)},t0=(s,e)=>{Tr(s.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?sg(s,e):Gb(s,e)},s0=(s,e)=>{Tr(s.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?ng(s,e):Kb(s,e)},r0=(s,e)=>{Tr(s.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?ig(s,e):Hb(s,e)},n0=(s,e)=>{Tr(s.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?ag(s,e):qb(s,e)},i0=(s,e)=>{Tr(s.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?og(s,e):Xb(s,e)},a0=(s,e)=>{Tr(s.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Y_(s,e):Qb(s,e)}}),mu,o0,l0,tc,sT=Ue(()=>{wt(),hs(),Cc(),mu=s=>{if(!s||s.length===0||s.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(s[0].dataType!==1)throw new Error("Invalid input type.")},o0=(s,e)=>{mu(s.inputs);let t=(r,n,i)=>{let a=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&a.push(`input_indices[${o}] = 0;`);return[`${a.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${r.getByIndices("input_indices")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${r.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",n.setByOffset("global_idx","best_index")]};s.compute(bo("ArgMin",{hint:e.cacheKey,inputDependencies:["rank"]},[s.inputs[0]],t,[e.axis],7,e.keepDims),{inputs:[0]})},l0=(s,e)=>{mu(s.inputs);let t=(r,n,i)=>{let a=[];for(let o=0;o<r.rank;o++)(i.indexOf(o)>=0||i.length===0)&&a.push(`input_indices[${o}] = 0;`);return[`${a.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${r.getByIndices("input_indices")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${r.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",n.setByOffset("global_idx","best_index")]};s.compute(bo("argMax",{hint:e.cacheKey,inputDependencies:["rank"]},[s.inputs[0]],t,[e.axis],7,e.keepDims),{inputs:[0]})},tc=s=>Wt(s)}),lg,no,ug,cg,dg,ra,hg,u0,Sc=Ue(()=>{wt(),Pt(),Ec(),Ct(),lg=(s,e)=>{let t=s[0],r=s[1],n=s[2],i=s[3],a=s[4],o=s[5];if(a&&o)throw new Error("Attention cannot have both past and attention_bias");if(t.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=t.dims[0],u=t.dims[1],h=t.dims[2];if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(r.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(r.dims[0]!==h)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(n.dims[0]!==r.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let d=n.dims[0]/3,c=d,_=c;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let k of e.qkvHiddenSizes)if(k%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");d=e.qkvHiddenSizes[0],c=e.qkvHiddenSizes[1],_=e.qkvHiddenSizes[2]}let f=u;if(d!==c)throw new Error("qkv_hidden_sizes first element should be same as the second");if(n.dims[0]!==d+c+_)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let b=0;if(a){if(c!==_)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(a.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(a.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(a.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(a.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(a.dims[4]!==c/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(b=a.dims[3])}let I=f+b,g=-1,M=0;if(i)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(o){if(o.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(o.dims[0]!==l||o.dims[1]!==e.numHeads||o.dims[2]!==u||o.dims[3]!==I)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:u,pastSequenceLength:b,kvSequenceLength:f,totalSequenceLength:I,maxSequenceLength:g,inputHiddenSize:h,hiddenSize:d,vHiddenSize:_,headSize:Math.floor(d/e.numHeads),vHeadSize:Math.floor(_/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:M,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},no=(s,e,t)=>e&&s?`
      let total_sequence_length_input = u32(${e.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${s==null?void 0:s.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${t?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,ug=(s,e,t,r,n,i,a,o)=>{let l=us(a?1:i),u=64,h=i/l;h<u&&(u=32);let d=Math.ceil(i/l/u),c=[{type:12,data:e},{type:12,data:t},{type:12,data:r},{type:12,data:n},{type:12,data:h},{type:12,data:d}],_=Ds(s.dataType,l),f=Xs(1,l),b=["type"];a&&b.push("type"),o&&b.push("type");let I=g=>{let M=lt("x",s.dataType,s.dims,l),k=[M],v=a?ke("seq_lens",a.dataType,a.dims):void 0;v&&k.push(v);let y=o?ke("total_sequence_length_input",o.dataType,o.dims):void 0;y&&k.push(y);let T=Xs(s.dataType),x=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${u}>;
  var<workgroup> thread_sum: array<f32, ${u}>;
  ${g.registerUniforms(x).declareVariables(...k)}
  ${g.mainStart([u,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${no(v,y,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${u}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${a?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${f}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${f}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${u}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${f}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${f}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${u}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${M.type.value}(${T}(1.0) / ${T}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${f}(x[offset + i]);
        x[offset + i] = ${M.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${a?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${M.type.value}(${T}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${_};${l}`,inputDependencies:b},getShaderSource:I,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:n,z:e*t},programUniforms:c})}},cg=(s,e,t,r,n,i,a,o,l)=>{let u=a+i.kvSequenceLength,h=[i.batchSize,i.numHeads,i.sequenceLength,u],d=s>1&&r,c=i.kvNumHeads?i.kvNumHeads:i.numHeads,_=d?[i.batchSize,c,u,i.headSize]:void 0,f=i.nReps?i.nReps:1,b=i.scale===0?1/Math.sqrt(i.headSize):i.scale,I=us(i.headSize),g=i.headSize/I,M=12,k={x:Math.ceil(u/M),y:Math.ceil(i.sequenceLength/M),z:i.batchSize*i.numHeads},v=[{type:12,data:i.sequenceLength},{type:12,data:g},{type:12,data:u},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:1,data:b},{type:12,data:a},{type:12,data:i.kvSequenceLength},{type:12,data:f}],y=d&&r&&ye.size(r.dims)>0,T=["type","type"];y&&T.push("type"),n&&T.push("type"),o&&T.push("type"),l&&T.push("type");let x=[{dims:h,dataType:e.dataType,gpuDataType:0}];d&&x.push({dims:_,dataType:e.dataType,gpuDataType:0});let P=O=>{let L=ke("q",e.dataType,e.dims,I),G=ke("key",t.dataType,t.dims,I),K=[L,G];if(y){let me=ke("past_key",r.dataType,r.dims,I);K.push(me)}n&&K.push(ke("attention_bias",n.dataType,n.dims));let R=o?ke("seq_lens",o.dataType,o.dims):void 0;R&&K.push(R);let te=l?ke("total_sequence_length_input",l.dataType,l.dims):void 0;te&&K.push(te);let H=lt("output",e.dataType,h),ee=[H];d&&ee.push(lt("present_key",e.dataType,_,I));let Z=Xs(1,I),ne=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${M}u;

  var<workgroup> tileQ: array<${L.type.storage}, ${M*M}>;
  var<workgroup> tileK: array<${L.type.storage}, ${M*M}>;
  ${O.registerUniforms(ne).declareVariables(...K,...ee)}
  ${O.mainStart([M,M,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${f===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${f===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${no(R,te,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${y&&d?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${d?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${Z}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${y&&d?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${d?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${Z}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(I){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${I}`)}})()};
        output[outputIdx] = ${H.type.value} (sum * uniforms.alpha) + ${n?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${I};${n!==void 0};${r!==void 0};${s}`,inputDependencies:T},getRunData:()=>({outputs:x,dispatchGroup:k,programUniforms:v}),getShaderSource:P}},dg=(s,e,t,r,n,i,a=void 0,o=void 0)=>{let l=i+n.kvSequenceLength,u=n.nReps?n.nReps:1,h=n.vHiddenSize*u,d=s>1&&r,c=n.kvNumHeads?n.kvNumHeads:n.numHeads,_=d?[n.batchSize,c,l,n.headSize]:void 0,f=[n.batchSize,n.sequenceLength,h],b=12,I={x:Math.ceil(n.vHeadSize/b),y:Math.ceil(n.sequenceLength/b),z:n.batchSize*n.numHeads},g=[{type:12,data:n.sequenceLength},{type:12,data:l},{type:12,data:n.vHeadSize},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:12,data:h},{type:12,data:i},{type:12,data:n.kvSequenceLength},{type:12,data:u}],M=d&&r&&ye.size(r.dims)>0,k=["type","type"];M&&k.push("type"),a&&k.push("type"),o&&k.push("type");let v=[{dims:f,dataType:e.dataType,gpuDataType:0}];d&&v.push({dims:_,dataType:e.dataType,gpuDataType:0});let y=T=>{let x=ke("probs",e.dataType,e.dims),P=ke("v",t.dataType,t.dims),O=[x,P];M&&O.push(ke("past_value",r.dataType,r.dims));let L=a?ke("seq_lens",a.dataType,a.dims):void 0;a&&O.push(L);let G=o?ke("total_sequence_length_input",o.dataType,o.dims):void 0;o&&O.push(G);let K=[lt("output",e.dataType,f)];d&&K.push(lt("present_value",e.dataType,_));let R=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${b}u;
  var<workgroup> tileQ: array<${x.type.value}, ${b*b}>;
  var<workgroup> tileV: array<${x.type.value}, ${b*b}>;
  ${T.registerUniforms(R).declareVariables(...O,...K)}
  ${T.mainStart([b,b,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${u===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${u===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${no(L,G,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${M&&d?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${d?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${x.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${M&&d?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${d?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${r!==void 0};${s}`,inputDependencies:k},getRunData:()=>({outputs:v,dispatchGroup:I,programUniforms:g}),getShaderSource:y}},ra=(s,e,t,r,n,i,a,o,l,u,h=void 0,d=void 0)=>{let c=Math.min(s.outputCount,1+(a?1:0)+(o?1:0)),_=c>1?u.pastSequenceLength:0,f=_+u.kvSequenceLength,b=l&&ye.size(l.dims)>0?l:void 0,I=[e,t];c>1&&a&&ye.size(a.dims)>0&&I.push(a),b&&I.push(b),h&&I.push(h),d&&I.push(d);let g=s.compute(cg(c,e,t,a,b,u,_,h,d),{inputs:I,outputs:c>1?[-1,1]:[-1]})[0];s.compute(ug(g,u.batchSize,u.numHeads,_,u.sequenceLength,f,h,d),{inputs:h&&d?[g,h,d]:[g],outputs:[]});let M=[g,r];c>1&&o&&ye.size(o.dims)>0&&M.push(o),h&&M.push(h),d&&M.push(d),s.compute(dg(c,g,r,o,u,_,h,d),{inputs:M,outputs:c>1?[0,2]:[0]})},hg=(s,e)=>{let t=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],r=e.sequenceLength,n=e.inputHiddenSize,i=e.headSize,a=12,o={x:Math.ceil(e.headSize/a),y:Math.ceil(e.sequenceLength/a),z:e.batchSize*e.numHeads},l=[s.inputs[0],s.inputs[1],s.inputs[2]],u=[{type:12,data:r},{type:12,data:n},{type:12,data:i},{type:12,data:e.numHeads},{type:12,data:e.headSize},{type:12,data:e.hiddenSize},{type:12,data:e.hiddenSize+e.hiddenSize+e.vHiddenSize}],h=d=>{let c=lt("output_q",l[0].dataType,t),_=lt("output_k",l[0].dataType,t),f=lt("output_v",l[0].dataType,t),b=ke("input",l[0].dataType,l[0].dims),I=ke("weight",l[1].dataType,l[1].dims),g=ke("bias",l[2].dataType,l[2].dims),M=b.type.storage,k=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${a}u;
  var<workgroup> tileInput: array<${M}, ${a*a}>;
  var<workgroup> tileWeightQ: array<${M}, ${a*a}>;
  var<workgroup> tileWeightK: array<${M}, ${a*a}>;
  var<workgroup> tileWeightV: array<${M}, ${a*a}>;
  ${d.registerUniforms(k).declareVariables(b,I,g,c,_,f)}
  ${d.mainStart([a,a,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${M}(0);
    var valueK = ${M}(0);
    var valueV = ${M}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return s.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:s.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:s.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:s.inputs[0].dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:u}),getShaderSource:h},{inputs:l,outputs:[-1,-1,-1]})},u0=(s,e)=>{let t=lg(s.inputs,e),[r,n,i]=hg(s,t);return ra(s,r,n,i,s.inputs[4],void 0,void 0,void 0,s.inputs[5],t)}}),pg,mg,fg,c0,rT=Ue(()=>{$r(),wt(),Pt(),hs(),Ct(),pg=(s,e)=>{if(!s||s.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(r,n,i)=>{let a=n.length;if(a!==r.length)throw new Error(`${i}: num dimensions != ${a}`);n.forEach((o,l)=>{if(o!==r[l])throw new Error(`${i}: dim[${l}] do not match`)})};if(s[0].dims.length>1){let r=e.format==="NHWC"?e.spatial?s[0].dims.slice(-1):s[0].dims.slice(-1).concat(s[0].dims.slice(1,s[0].dims.length-1)):s[0].dims.slice(1,e.spatial?2:void 0);t(s[1].dims,r,"Invalid input scale"),t(s[2].dims,r,"Invalid input B"),t(s[3].dims,r,"Invalid input mean"),t(s[4].dims,r,"Invalid input var")}else t(s[1].dims,[1],"Invalid input scale"),t(s[2].dims,[1],"Invalid input B"),t(s[3].dims,[1],"Invalid input mean"),t(s[4].dims,[1],"Invalid input var")},mg=(s,e)=>{let{epsilon:t,spatial:r,format:n}=e,i=s[0].dims,a=r?us(i[i.length-1]):1,o=n==="NHWC"&&i.length>1?a:1,l=ye.size(i)/a,u=r,h=u?i.length:i,d=ke("x",s[0].dataType,s[0].dims,a),c=ke("scale",s[1].dataType,s[1].dims,o),_=ke("bias",s[2].dataType,s[2].dims,o),f=ke("inputMean",s[3].dataType,s[3].dims,o),b=ke("inputVar",s[4].dataType,s[4].dims,o),I=lt("y",s[0].dataType,h,a),g=()=>{let k="";if(r)k=`let cOffset = ${i.length===1?"0u":n==="NHWC"?`outputIndices[${i.length-1}] / ${a}`:"outputIndices[1]"};`;else if(n==="NCHW")k=`
            ${I.indicesSet("outputIndices","0","0")}
            let cOffset = ${I.indicesToOffset("outputIndices")};`;else{k=`var cIndices = ${c.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let v=1;v<c.rank;v++)k+=`cIndices[${v}] = outputIndices[${v}];`;k+=`let cOffset = ${c.indicesToOffset("cIndices")};`}return k},M=k=>`
  const epsilon = ${t};
  ${k.registerUniform("outputSize","u32").declareVariables(d,c,_,f,b,I)}
  ${k.mainStart()}
  ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${I.offsetToIndices(`global_idx * ${a}`)};
    ${g()}
    let scale = ${c.getByOffset("cOffset")};
    let bias = ${_.getByOffset("cOffset")};
    let inputMean = ${f.getByOffset("cOffset")};
    let inputVar = ${b.getByOffset("cOffset")};
    let x = ${d.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${I.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${r}_${a}`,inputDependencies:u?["rank","type","type","type","type"]:void 0},getShaderSource:M,getRunData:()=>({outputs:[{dims:s[0].dims,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u?[{type:12,data:l},...ct(i)]:[{type:12,data:l}]})}},fg=s=>Wt(s),c0=(s,e)=>{let{inputs:t,outputCount:r}=s,n=fg({...e,outputCount:r});if(es.webgpu.validateInputContent&&pg(t,n),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");s.compute(mg(t,n))}}),_g,gg,d0,nT=Ue(()=>{Pt(),Ct(),_g=s=>{if(s[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(s[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(s[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(s[0].dims[2]!==s[1].dims[0])throw new Error("last dimension of input and bias are not the same")},gg=s=>{let e=s[0].dims,t=s[0].dims[2],r=ye.size(e)/4,n=s[0].dataType,i=ke("input",n,e,4),a=ke("bias",n,[t],4),o=ke("residual",n,e,4),l=lt("output",n,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)}}),getShaderSource:u=>`
  const channels = ${t}u / 4;
  ${u.declareVariables(i,a,o,l)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(r)}
    let value = ${i.getByOffset("global_idx")}
      + ${a.getByOffset("global_idx % channels")} + ${o.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},d0=s=>{_g(s.inputs),s.compute(gg(s.inputs))}}),wg,Nt,h0,p0,m0,f0,_0,g0,w0,M0,b0,Mg,y0,v0,x0,T0,Yi,E0,_o,P0,C0,S0,k0,I0,$0,A0,F0,O0,D0,L0,z0,B0,R0,j0,N0,fu,U0,sc,rc,V0,W0,G0,bg,yg,K0,kc=Ue(()=>{wt(),Pt(),hs(),Ct(),wg=(s,e,t,r,n,i,a)=>{let o=Math.ceil(e/4),l="";typeof n=="string"?l=`${n}(a)`:l=n("a");let u=ke("inputData",t,[o],4),h=lt("outputData",r,[o],4),d=[{name:"vec_size",type:"u32"}];return a&&d.push(...a),`
      ${s.registerUniforms(d).declareVariables(u,h)}

  ${i??""}

  ${s.mainStart()}
    ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${u.getByOffset("global_idx")};
    ${h.setByOffset("global_idx",l)}
  }`},Nt=(s,e,t,r,n,i=s.dataType,a,o)=>{let l=[{type:12,data:Math.ceil(ye.size(s.dims)/4)}];return a&&l.push(...a),{name:e,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:u=>wg(u,ye.size(s.dims),s.dataType,i,t,r,o),getRunData:u=>({outputs:[{dims:s.dims,dataType:i}],dispatchGroup:{x:Math.ceil(ye.size(u[0].dims)/64/4)},programUniforms:l})}},h0=s=>{s.compute(Nt(s.inputs[0],"Abs","abs"))},p0=s=>{s.compute(Nt(s.inputs[0],"Acos","acos"))},m0=s=>{s.compute(Nt(s.inputs[0],"Acosh","acosh"))},f0=s=>{s.compute(Nt(s.inputs[0],"Asin","asin"))},_0=s=>{s.compute(Nt(s.inputs[0],"Asinh","asinh"))},g0=s=>{s.compute(Nt(s.inputs[0],"Atan","atan"))},w0=s=>{s.compute(Nt(s.inputs[0],"Atanh","atanh"))},M0=s=>Wt(s),b0=(s,e)=>{let t;switch(e.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}s.compute(Nt(s.inputs[0],"Cast",t,void 0,e.cacheKey,e.to))},Mg=s=>{let e,t,r=s.length>=2&&s[1].data!==0,n=s.length>=3&&s[2].data!==0;switch(s[0].dataType){case 1:e=r?s[1].getFloat32Array()[0]:-34028234663852886e22,t=n?s[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:e=r?s[1].getUint16Array()[0]:64511,t=n?s[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Wt({min:e,max:t})},y0=(s,e)=>{let t=e||Mg(s.inputs),r=Xs(s.inputs[0].dataType);s.compute(Nt(s.inputs[0],"Clip",n=>`clamp(${n}, vec4<${r}>(uniforms.min), vec4<${r}>(uniforms.max))`,void 0,t.cacheKey,void 0,[{type:s.inputs[0].dataType,data:t.min},{type:s.inputs[0].dataType,data:t.max}],[{name:"min",type:r},{name:"max",type:r}]),{inputs:[0]})},v0=s=>{s.compute(Nt(s.inputs[0],"Ceil","ceil"))},x0=s=>{s.compute(Nt(s.inputs[0],"Cos","cos"))},T0=s=>{s.compute(Nt(s.inputs[0],"Cosh","cosh"))},Yi=s=>Wt(s),E0=(s,e)=>{let t=Xs(s.inputs[0].dataType);s.compute(Nt(s.inputs[0],"Elu",r=>`elu_vf32(${r})`,`
  const elu_alpha_ = ${t}(${e.alpha});

  fn elu_f32(a: ${t}) -> ${t} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},_o=(s="f32")=>`
const r0: ${s} = 0.3275911;
const r1: ${s} = 0.254829592;
const r2: ${s} = -0.284496736;
const r3: ${s} = 1.421413741;
const r4: ${s} = -1.453152027;
const r5: ${s} = 1.061405429;

fn erf_vf32(v: vec4<${s}>) -> vec4<${s}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,P0=s=>{let e=Xs(s.inputs[0].dataType);s.compute(Nt(s.inputs[0],"Erf",t=>`erf_vf32(${t})`,_o(e)))},C0=s=>{s.compute(Nt(s.inputs[0],"Exp","exp"))},S0=s=>{s.compute(Nt(s.inputs[0],"Floor","floor"))},k0=s=>{let e=Xs(s.inputs[0].dataType);s.compute(Nt(s.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,_o(e)))},I0=(s,e)=>{let t=Xs(s.inputs[0].dataType);s.compute(Nt(s.inputs[0],"LeakyRelu",r=>`select(leaky_relu_alpha_ * ${r}, ${r}, ${r} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${e.alpha});`,e.cacheKey))},$0=s=>{s.compute(Nt(s.inputs[0],"Not",e=>`!${e}`))},A0=s=>{s.compute(Nt(s.inputs[0],"Neg",e=>`-${e}`))},F0=s=>{s.compute(Nt(s.inputs[0],"Reciprocal",e=>`1.0/${e}`))},O0=s=>{let e=Xs(s.inputs[0].dataType);s.compute(Nt(s.inputs[0],"Relu",t=>`select(vec4<${e}>(0.0), ${t}, ${t} > vec4<${e}>(0.0))`))},D0=s=>{s.compute(Nt(s.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},L0=s=>Wt(s),z0=(s,e)=>{let t=Xs(s.inputs[0].dataType);s.compute(Nt(s.inputs[0],"HardSigmoid",r=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${e.alpha} * ${r} + vec4<${t}>(${e.beta})))`,void 0,e.cacheKey))},B0=s=>{s.compute(Nt(s.inputs[0],"Sin","sin"))},R0=s=>{s.compute(Nt(s.inputs[0],"Sinh","sinh"))},j0=s=>{s.compute(Nt(s.inputs[0],"Sqrt","sqrt"))},N0=s=>{s.compute(Nt(s.inputs[0],"Tan","tan"))},fu=s=>`sign(${s}) * (1 - exp(-2 * abs(${s}))) / (1 + exp(-2 * abs(${s})))`,U0=s=>{s.compute(Nt(s.inputs[0],"Tanh",fu))},sc=(s="f32")=>`
const fast_gelu_a: ${s} = 0.5;
const fast_gelu_b: ${s} = 0.7978845608028654;
const fast_gelu_c: ${s} = 0.035677408136300125;

fn tanh_v(v: vec4<${s}>) -> vec4<${s}> {
  return ${fu("v")};
}
`,rc=s=>`(fast_gelu_a + fast_gelu_a * tanh_v(${s} * (fast_gelu_c * ${s} * ${s} + fast_gelu_b))) * ${s}`,V0=s=>{let e=Xs(s.inputs[0].dataType);s.compute(Nt(s.inputs[0],"FastGelu",rc,sc(e),void 0,s.inputs[0].dataType))},W0=(s,e)=>{let t=Xs(s.inputs[0].dataType);return s.compute(Nt(s.inputs[0],"ThresholdedRelu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${e.alpha});`,e.cacheKey)),0},G0=s=>{s.compute(Nt(s.inputs[0],"Log","log"))},bg=(s,e)=>`
const alpha = vec4<${s}>(${e});
const one = ${s}(1.0);
const zero = ${s}(0.0);

fn quick_gelu_impl(x: vec4<${s}>) -> vec4<${s}> {
  let v = x *alpha;
  var x1 : vec4<${s}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,yg=s=>`quick_gelu_impl(${s})`,K0=(s,e)=>{let t=Xs(s.inputs[0].dataType);s.compute(Nt(s.inputs[0],"QuickGelu",yg,bg(t,e.alpha),e.cacheKey,s.inputs[0].dataType))}}),vg,xg,H0,iT=Ue(()=>{Pt(),Ct(),kc(),vg=s=>{if(s[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(s[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(s[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(s[0].dims[2]!==s[1].dims[0])throw new Error("last dimension of input and bias are not the same")},xg=s=>{let e=s[0].dims.slice();e[2]=e[2]/2;let t=ke("input",s[0].dataType,s[0].dims,4),r=ke("bias",s[0].dataType,[s[0].dims[2]],4),n=lt("output",s[0].dataType,e,4),i=ye.size(e)/4,a=Ds(s[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:o=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${s[0].dims[2]/4/2}u;

  ${o.declareVariables(t,r,n)}

  ${_o(a)}

  ${o.mainStart()}
    ${o.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${n.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},H0=s=>{vg(s.inputs),s.compute(xg(s.inputs))}}),Tg,Eg,Er,q0,X0,Q0,J0,Y0,Z0,ey,ty,sy,ry,aT=Ue(()=>{wt(),Pt(),Ct(),Tg=(s,e,t,r,n,i,a,o,l,u,h,d)=>{let c,_;typeof o=="string"?c=_=(M,k)=>`${o}((${M}),(${k}))`:typeof o=="function"?c=_=o:(c=o.scalar,_=o.vector);let f=lt("outputData",h,r.length,4),b=ke("aData",l,e.length,4),I=ke("bData",u,t.length,4),g;if(n)if(i){let M=ye.size(e)===1,k=ye.size(t)===1,v=e.length>0&&e[e.length-1]%4===0,y=t.length>0&&t[t.length-1]%4===0;M||k?g=f.setByOffset("global_idx",_(M?`${b.type.value}(${b.getByOffset("0")}.x)`:b.getByOffset("global_idx"),k?`${I.type.value}(${I.getByOffset("0")}.x)`:I.getByOffset("global_idx"))):g=`
            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};
            let offsetA = ${b.broadcastedIndicesToOffset("outputIndices",f)};
            let offsetB = ${I.broadcastedIndicesToOffset("outputIndices",f)};
            ${f.setByOffset("global_idx",_(a||v?b.getByOffset("offsetA / 4u"):`${b.type.value}(${b.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||y?I.getByOffset("offsetB / 4u"):`${I.type.value}(${I.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else g=f.setByOffset("global_idx",_(b.getByOffset("global_idx"),I.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let M=(k,v,y="")=>{let T=`aData[indexA${v}][componentA${v}]`,x=`bData[indexB${v}][componentB${v}]`;return`
            let outputIndices${v} = ${f.offsetToIndices(`global_idx * 4u + ${v}u`)};
            let offsetA${v} = ${b.broadcastedIndicesToOffset(`outputIndices${v}`,f)};
            let offsetB${v} = ${I.broadcastedIndicesToOffset(`outputIndices${v}`,f)};
            let indexA${v} = offsetA${v} / 4u;
            let indexB${v} = offsetB${v} / 4u;
            let componentA${v} = offsetA${v} % 4u;
            let componentB${v} = offsetB${v} % 4u;
            ${k}[${v}] = ${y}(${c(T,x)});
          `};h===9?g=`
            var data = vec4<u32>(0);
            ${M("data",0,"u32")}
            ${M("data",1,"u32")}
            ${M("data",2,"u32")}
            ${M("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:g=`
            ${M("outputData[global_idx]",0)}
            ${M("outputData[global_idx]",1)}
            ${M("outputData[global_idx]",2)}
            ${M("outputData[global_idx]",3)}
          `}return`
        ${s.registerUniform("vec_size","u32").declareVariables(b,I,f)}

        ${d??""}

        ${s.mainStart()}
        ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${g}
      }`},Eg=(s,e,t,r,n,i,a=t.dataType)=>{let o=t.dims.map(b=>Number(b)??1),l=r.dims.map(b=>Number(b)??1),u=!ye.areEqual(o,l),h=o,d=ye.size(o),c=!1,_=!1,f=[u];if(u){let b=ui.calcShape(o,l,!1);if(!b)throw new Error("Can't perform binary op on the given tensors");h=b.slice(),d=ye.size(h);let I=ye.size(o)===1,g=ye.size(l)===1,M=o.length>0&&o[o.length-1]%4===0,k=l.length>0&&l[l.length-1]%4===0;f.push(I),f.push(g),f.push(M),f.push(k);let v=1;for(let y=1;y<h.length;y++){let T=o[o.length-y],x=l[l.length-y];if(T===x)v*=T;else break}v%4===0?(_=!0,c=!0):(I||g||M||k)&&(c=!0)}else c=!0;return f.push(c),{name:s,shaderCache:{hint:e+f.map(b=>b.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:b=>Tg(b,o,l,h,c,u,_,n,t.dataType,r.dataType,a,i),getRunData:()=>({outputs:[{dims:h,dataType:a}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:Math.ceil(ye.size(h)/4)},...ct(o,l,h)]})}},Er=(s,e,t,r,n,i)=>{s.compute(Eg(e,n??"",s.inputs[0],s.inputs[1],t,r,i))},q0=s=>{Er(s,"Add",(e,t)=>`${e}+${t}`)},X0=s=>{Er(s,"Div",(e,t)=>`${e}/${t}`)},Q0=s=>{Er(s,"Equal",{scalar:(e,t)=>`u32(${e}==${t})`,vector:(e,t)=>`vec4<u32>(${e}==${t})`},void 0,void 0,9)},J0=s=>{Er(s,"Mul",(e,t)=>`${e}*${t}`)},Y0=s=>{let e=ke("input",s.inputs[0].dataType,s.inputs[0].dims).type.value;Er(s,"Pow",{scalar:(t,r)=>`pow_custom(${t},${r})`,vector:(t,r)=>`pow_vector_custom(${t},${r})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Z0=s=>{Er(s,"Sub",(e,t)=>`${e}-${t}`)},ey=s=>{Er(s,"Greater",{scalar:(e,t)=>`u32(${e}>${t})`,vector:(e,t)=>`vec4<u32>(${e}>${t})`},void 0,void 0,9)},ty=s=>{Er(s,"Less",{scalar:(e,t)=>`u32(${e}<${t})`,vector:(e,t)=>`vec4<u32>(${e}<${t})`},void 0,void 0,9)},sy=s=>{Er(s,"GreaterOrEqual",{scalar:(e,t)=>`u32(${e}>=${t})`,vector:(e,t)=>`vec4<u32>(${e}>=${t})`},void 0,void 0,9)},ry=s=>{Er(s,"LessOrEqual",{scalar:(e,t)=>`u32(${e}<=${t})`,vector:(e,t)=>`vec4<u32>(${e}<=${t})`},void 0,void 0,9)}}),Pg,Cg,Sg,kg,ny,iy,oT=Ue(()=>{wt(),Pt(),hs(),Ct(),Pg=(s,e)=>{if(!s||s.length<1)throw new Error("too few inputs");let t=0,r=s[t],n=r.dataType,i=r.dims.length;s.forEach((a,o)=>{if(o!==t){if(a.dataType!==n)throw new Error("input tensors should be one type");if(a.dims.length!==i)throw new Error("input tensors should have the same shape");a.dims.forEach((l,u)=>{if(u!==e&&l!==r.dims[u])throw new Error("non concat dimensions must match")})}})},Cg=(s,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${s}u>(${e});
    for (var i: u32 = 0u; i < ${s}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${s}u;
  }`,Sg=(s,e)=>{let t=s.length,r=[];for(let n=0;n<t;++n){let i=e.setByOffset("global_idx",s[n].getByIndices("indices"));t===1?r.push(i):n===0?r.push(`if (inputIndex == ${n}u) { ${i} }`):n===t-1?r.push(`else { ${i} }`):r.push(`else if (inputIndex == ${n}) { ${i} }`)}return r.join(`
`)},kg=(s,e,t,r)=>{let n=ye.size(t),i=new Array(s.length),a=new Array(s.length),o=0,l=[],u=[],h=[{type:12,data:n}];for(let b=0;b<s.length;++b)o+=s[b].dims[e],i[b]=o,u.push(s[b].dims.length),a[b]=ke(`input${b}`,r,u[b]),l.push("rank"),h.push({type:12,data:i[b]});for(let b=0;b<s.length;++b)h.push(...ct(s[b].dims));h.push(...ct(t));let d=lt("output",r,t.length),c=d.indicesGet("indices",e),_=Array.from(Array(i.length).keys()).map(b=>`uniforms.sizeInConcatAxis${b}`).join(","),f=b=>`

  ${(()=>{b.registerUniform("outputSize","u32");for(let I=0;I<s.length;I++)b.registerUniform(`sizeInConcatAxis${I}`,"u32");return b.declareVariables(...a,d)})()}

  ${Cg(i.length,_)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${d.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${c});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${i.length}u>(${_});
      ${c} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Sg(a,d)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:t,dataType:r}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:h}),getShaderSource:f}},ny=(s,e)=>{let t=s.inputs,r=t[0].dims,n=ye.normalizeAxis(e.axis,r.length);Pg(t,n);let i=r.slice();i[n]=t.reduce((o,l)=>o+(l.dims.length>n?l.dims[n]:0),0);let a=t.filter(o=>ye.size(o.dims)>0);s.compute(kg(a,n,i,t[0].dataType),{inputs:a})},iy=s=>Wt({axis:s.axis})}),Ln,zn,Bn,Ic,jn=Ue(()=>{wt(),Pt(),Ln=(s,e,t="f32")=>{switch(s.activation){case"Relu":return`value = max(value, ${e}(0.0));`;case"Sigmoid":return`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${e}(${t}(uniforms.clip_min)), ${e}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${e}(0.0), min(${e}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${e}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${s.activation}`)}},zn=(s,e)=>{s.activation==="Clip"?e.push({type:1,data:s.clipMax},{type:1,data:s.clipMin}):s.activation==="HardSigmoid"?e.push({type:1,data:s.alpha},{type:1,data:s.beta}):s.activation==="LeakyRelu"&&e.push({type:1,data:s.alpha})},Bn=(s,e)=>{s.activation==="Clip"?e.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):s.activation==="HardSigmoid"?e.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):s.activation==="LeakyRelu"&&e.push({name:"alpha",type:"f32"})},Ic=s=>{let e=(s==null?void 0:s.activation)||"";if(e==="HardSigmoid"){let[t,r]=(s==null?void 0:s.activation_params)||[.2,.5];return{activation:e,alpha:t,beta:r}}else if(e==="Clip"){let[t,r]=(s==null?void 0:s.activation_params)||[$b,Ab];return{activation:e,clipMax:r,clipMin:t}}else if(e==="LeakyRelu"){let[t]=(s==null?void 0:s.activation_params)||[.01];return{activation:e,alpha:t}}return{activation:e}}}),Bs,ay,$c=Ue(()=>{Bs=(s,e)=>{switch(s){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${s}-component is not supported.`)}},ay=s=>`
      ${s?"value = value + getBiasByOutputCoords(coords);":""}
      `}),oy,lT=Ue(()=>{oy=s=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${s}.x), i32(${s}.y), i32(${s}.z), 1));
}
`}),ea,Ac,Fc=Ue(()=>{wt(),Pt(),Ct(),jn(),ea=(s,e,t,r,n)=>{let i=r-t;return`
      ${Array.from({length:t}).map((a,o)=>`
      if (${ut(e.shape,o,e.rank)} != 1) {
        ${e.indicesSet(s,o,ut(n,o+i,r))}
      } else {
        ${e.indicesSet(s,o,0)}
      }`).join("")}
`},Ac=(s,e,t,r,n=!1,i)=>{let a=s[0].dims,o=s[1].dims,l=a[a.length-2],u=o[o.length-1],h=a[a.length-1],d=us(u),c=us(h),_=us(l),f=ye.size(t)/d/_,b=s.length>2,I=r?r.slice(0,-2):t.slice(0,-2),g=[ye.size(I),l,u],M=[{type:12,data:f},{type:12,data:l},{type:12,data:u},{type:12,data:h}];zn(e,M),M.push(...ct(I,a,o)),b&&M.push(...ct(s[2].dims)),M.push(...ct(g));let k=v=>{let y=Pc("batch_dims",s[0].dataType,I.length),T=ke("a",s[0].dataType,a.length,c),x=ke("b",s[1].dataType,o.length,d),P=lt("output",s[0].dataType,g.length,d),O=Ds(P.type.tensor),L=Ln(e,P.type.value,O),G=[T,x],K="";if(b){let H=n?d:1;G.push(ke("bias",s[2].dataType,s[2].dims.length,H)),K=`${n?`value += bias[col / ${H}];`:`value += ${P.type.value}(bias[row + i]);`}`}let R=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Bn(e,R);let te=()=>{let H=`var a_data: ${T.type.value};`;for(let ee=0;ee<c;ee++)H+=`
              let b_data${ee} = b[(b_offset + (k + ${ee}) * uniforms.N + col) / ${d}];`;for(let ee=0;ee<_;ee++){H+=`a_data = a[(a_offset + (row + ${ee}) * uniforms.K + k) / ${c}];`;for(let Z=0;Z<c;Z++)H+=`
            values[${ee}] = fma(${x.type.value}(a_data${c===1?"":`[${Z}]`}), b_data${Z}, values[${ee}]);
`}return H};return`
  ${v.registerUniforms(R).registerInternalVariables(y).declareVariables(...G,P)}
  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${_};
    let row = (index1 % stride1) * ${_};
    let batch = index1 / stride1;

    ${t.length===2?"":`let batch_indices = ${y.offsetToIndices("batch")};`}

    var a_indices: ${T.type.indices};
    ${ea("a_indices",T,T.rank-2,y.rank,"batch_indices")}
    ${T.indicesSet("a_indices",T.rank-2,0)}
    ${T.indicesSet("a_indices",T.rank-1,0)}
    let a_offset = ${T.indicesToOffset("a_indices")};

    var b_indices: ${x.type.indices};
    ${ea("b_indices",x,x.rank-2,y.rank,"batch_indices")}
    ${x.indicesSet("b_indices",x.rank-2,0)}
    ${x.indicesSet("b_indices",x.rank-1,0)}
    let b_offset = ${x.indicesToOffset("b_indices")};
    var values: array<${P.type.value}, ${_}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${c}) {
      ${te()}
    }
    for (var i = 0u; i < ${_}u; i++) {
      var value = values[i];
      ${K}
      ${L}
      let cur_indices = ${P.type.indices}(batch, row + i, col);
      let offset = ${P.indicesToOffset("cur_indices")};
      ${P.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${e.activation};${d};${c};${_};${n}`,inputDependencies:b?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i?i(t):t,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:M}),getShaderSource:k}}}),Ig,$g,nc,_u,Ag,ic,Fg,yo,Oc=Ue(()=>{wt(),Pt(),Ct(),jn(),Fc(),$c(),Ig=(s,e)=>s?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,$g=(s,e)=>s?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,nc=(s,e,t="f32",r,n=!1,i=32,a=!1,o=32)=>{let l=e[1]*s[1],u=e[0]*s[0],h=n?l:i,d=n?i:l,c=h/e[0],_=i/e[1];if(!((n&&c===4&&s[1]===4||!n&&(c===3||c===4))&&h%e[0]===0&&i%e[1]===0&&s[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${c} and workPerThread[1] ${s[1]} must be 4.
      Otherwise, innerElementSize ${c} must be 3 or 4.
  tileAWidth ${h} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${s[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${c}<${t}>, ${h/c}>, ${d}>;
var<workgroup> mm_Bsub: array<array<vec4<${t}>, ${u/s[0]}>, ${i}>;

const rowPerThread = ${s[1]};
const colPerThread = ${s[0]};
const innerElementSize = ${c};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${a?"0":"i32(globalId.z)"};
  ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${a?`${Math.ceil(o/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${a?`i32(globalId.z) * ${o}`:"0"};

  var acc: array<vec4<${t}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${_};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Ig(n,r)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${r?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${c===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${$g(n,c)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},_u=(s,e)=>s?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,Ag=s=>s?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ic=(s,e,t="f32",r,n=!1,i=32,a=!1,o=32,l=!1)=>{let u=s[1]*e[1],h=s[0]*e[0],d=n?u:i,c=n?i:u;if(!(c%e[1]===0&&d%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${c} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let _=c/e[1],f=d/e[0],b=i/e[1],I=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${u};
    let globalColStart = i32(workgroupId.x) * ${h};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${c}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
          ${_u(n,r)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${h}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${r?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${t}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${u};

let tileRowA = i32(localId.y) * ${_};
let tileColA = i32(localId.x) * ${f};
let tileRowB = i32(localId.y) * ${b};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${_u(n,r)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${b}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${r?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${t}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Ag(n)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${t}, ${d}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<${t}, ${h}>, ${i}>;
  const rowPerThread = ${s[1]};
  const colPerThread = ${s[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${a?"0":"i32(globalId.z)"};
    ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${a?`${Math.ceil(o/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${a?`i32(globalId.z) * ${o}`:"0"};

    var acc : array<array<${t}, colPerThread>, rowPerThread>;
    ${I}
  }
`},Fg=(s,e,t,r,n=!1)=>{let[i,a,o,l]=r,u=Ds(r[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${i.type.indices}) -> ${Bs(s,u)} {
      var value = ${Bs(s,u)}(0.0);
      let col = colIn * ${s};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${a.type.indices};
        ${ea("aIndices",a,a.rank-2,i.rank,"batchIndices")}
        ${a.indicesSet("aIndices",a.rank-2,"u32(row)")}
        ${a.indicesSet("aIndices",a.rank-1,"u32(colIn)")}
        value = ${a.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${i.type.indices}) -> ${Bs(s,u)} {
      var value = ${Bs(s,u)}(0.0);
      let col = colIn * ${s};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${o.type.indices};
        ${ea("bIndices",o,o.rank-2,i.rank,"batchIndices")}
        ${o.indicesSet("bIndices",o.rank-2,"u32(row)")}
        ${o.indicesSet("bIndices",o.rank-1,"u32(colIn)")}
        value = ${o.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Bs(s,u)}) {
      let col = colIn * ${s};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${n?"bias[colIn]":`${Bs(s,u)}(bias[row])`};`:""}
        ${t}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},yo=(s,e,t,r,n=!1,i)=>{let a=s[0].dims,o=s[1].dims,l=a.slice(0,-2),u=o.slice(0,-2),h=r?r.slice(0,-2):t.slice(0,-2),d=ye.size(h),c=a[a.length-2],_=a[a.length-1],f=o[o.length-1],b=_%4===0&&f%4===0,I=c<=8?[4,1,1]:[4,4,1],g=[8,8,1],M=[Math.ceil(f/g[0]/I[0]),Math.ceil(c/g[1]/I[1]),Math.ceil(d/g[2]/I[2])],k=b?4:1,v=[...l,c,_/k],y=v.length,T=[...u,_,f/k],x=T.length,P=[d,c,f/k],O=[{type:6,data:c},{type:6,data:f},{type:6,data:_}];zn(e,O),O.push(...ct(h,v,T));let L=["rank","rank"],G=s.length>2;G&&(O.push(...ct(s[2].dims)),L.push("rank")),O.push(...ct(P));let K=R=>{let te=h.length,H=Pc("batchDims",s[0].dataType,te,1),ee=Ds(s[0].dataType),Z=ke("a",s[0].dataType,y,k),ne=ke("b",s[1].dataType,x,k),me=lt("result",s[0].dataType,P.length,k),ce=[Z,ne];if(G){let fe=n?k:1;ce.push(ke("bias",s[2].dataType,s[2].dims.length,fe))}let j=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Bn(e,j);let F=Ds(me.type.tensor),V=Ln(e,me.type.value,F),re=Fg(k,G,V,[H,Z,ne,me],n);return`
  ${R.registerUniforms(j).registerInternalVariables(H).declareVariables(...ce,me)}
  ${re}
  ${b?nc(I,g,ee,H):ic(I,g,ee,H)}
                   `};return{name:"MatMul",shaderCache:{hint:`${I};${e.activation};${b};${n}`,inputDependencies:L},getRunData:()=>({outputs:[{dims:i?i(t):t,dataType:s[0].dataType}],dispatchGroup:{x:M[0],y:M[1],z:M[2]},programUniforms:O}),getShaderSource:K}}}),Og,ly,uT=Ue(()=>{wt(),Gr(),Ct(),jn(),$c(),lT(),Oc(),Og=(s,e,t,r,n=!1,i,a=4,o=4,l=4,u="f32")=>{let h=O=>{switch(O){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${u}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${O} is not supported.`)}},d=O=>{switch(O){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${O} is not supported.`)}},c=s?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,_=s?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,f=s?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",b=s?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",I=s?"row":"col",g=s?"col":"row",M=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${s?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${I} / outWidth;
    let outCol = ${I} % outWidth;

    let WRow = ${g} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${g} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${g} % inChannels;
    var resData = ${Bs(a,u)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${b}) {
      ${c}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${h(a)}
    }
    return resData;`,k=s?e&&r?`
    let col = colIn * ${a};
    ${M}`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${M}
    }
    return ${Bs(a,u)}(0.0);`:r&&t?`
    let col = colIn * ${a};
    ${M}`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${M}
    }
    return ${Bs(a,u)}(0.0);`,v=s?r&&t?d(o):`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${d(o)}
    }
    return ${Bs(o,u)}(0.0);`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${d(o)}
    }
    return ${Bs(o,u)}(0.0);`,y=Bs(l,u),T=Bs(s?a:o,u),x=Bs(s?o:a,u),P=Ln(i,y,u);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${T} {
      ${s?k:v}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${x} {
      ${s?v:k}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${y}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${s?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${_}
      ${ay(n)}
      ${P}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},ly=(s,e,t,r,n,i,a,o,l)=>{let u=e.format==="NHWC",h=u?s[0].dims[3]:s[0].dims[1],d=t[0],c=u?t[2]:t[3],_=u?t[1]:t[2],f=u?t[3]:t[1],b=u&&(h%4===0||h%3===0)&&f%4===0,I=u?f:c*_,g=u?c*_:f,M=[8,8,1],k=r<=8?[4,1,1]:[4,4,1],v=[Math.ceil(I/M[0]/k[0]),Math.ceil(g/M[1]/k[1]),Math.ceil(d/M[2]/k[2])];zt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${v}`);let y=b?u&&h%4!==0?3:4:1,T=M[1]*k[1],x=M[0]*k[0],P=Math.max(M[0]*y,M[1]),O=r%T===0,L=n%x===0,G=i%P===0,K=b?[y,4,4]:[1,1,1],R=[{type:6,data:r},{type:6,data:n},{type:6,data:i},{type:6,data:[e.pads[0],e.pads[1]]},{type:6,data:e.strides},{type:6,data:e.dilations}];zn(e,R),R.push(...ct(s[0].dims,s[1].dims));let te=["rank","rank"];a&&(R.push(...ct(s[2].dims)),te.push("rank")),R.push(...ct(t));let H=ee=>{let Z=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Bn(e,Z);let ne=b?4:1,me=Ds(s[0].dataType),ce=`
      fn setOutputAtIndex(flatIndex : i32, value : ${b?`vec4<${me}>`:me}) {
        result[flatIndex] = ${b?`vec4<${me}>`:me}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${b?`vec4<${me}>`:me}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${b?"/ 4":""}, value);
      }`,j=ke("x",s[0].dataType,s[0].dims.length,y===3?1:y),F=ke("w",s[1].dataType,s[1].dims.length,ne),V=[j,F],re=lt("result",s[0].dataType,t.length,ne);if(a){let fe=ke("bias",s[2].dataType,s[2].dims.length,ne);V.push(fe),ce+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?`vec4<${me}>`:me} {
          return bias[coords.${u?"w":"y"}${b?"/ 4":""}];
        }`}return`
        ${oy("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${ee.registerUniforms(Z).declareVariables(...V,re)}
        ${ce}
        ${Og(u,O,L,G,a,e,K[0],K[1],K[2],me)}
        ${b?nc(k,M,me,void 0,!u,P):ic(k,M,me,void 0,!u,P,!1,void 0,o)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${e.cacheKey};${y};${b};${O};${L};${G};${T};${x};${P}`,inputDependencies:te},getRunData:()=>({outputs:[{dims:l?l(t):t,dataType:s[0].dataType}],dispatchGroup:{x:v[0],y:v[1],z:v[2]},programUniforms:R}),getShaderSource:H}}}),Dg,gu,Vi,Lg,wu,zg,uy,cy,cT=Ue(()=>{wt(),Gr(),Pt(),Ct(),jn(),$c(),Dg=s=>{let e=1;for(let t=0;t<s.length;t++)e*=s[t];return e},gu=s=>typeof s=="number"?[s,s,s]:s,Vi=(s,e)=>e<=1?s:s+(s-1)*(e-1),Lg=(s,e,t,r=1)=>{let n=Vi(e,r);return Math.floor((s[0]*(t-1)-t+n)/2)},wu=(s,e,t,r,n)=>{n==null&&(n=Lg(s,e[0],r[0]));let i=[0,0,0,t];for(let a=0;a<3;a++)s[a]+2*n>=e[a]&&(i[a]=Math.trunc((s[a]-e[a]+2*n)/r[a]+1));return i},zg=(s,e,t,r,n,i,a,o,l,u)=>{let h,d,c,_;if(s==="VALID"&&(s=0),typeof s=="number"){h={top:s,bottom:s,left:s,right:s,front:s,back:s};let f=wu([e,t,r,1],[o,l,u],1,[n,i,a],s);d=f[0],c=f[1],_=f[2]}else if(Array.isArray(s)){if(!s.every((b,I,g)=>b===g[0]))throw Error(`Unsupported padding parameter: ${s}`);h={top:s[0],bottom:s[1],left:s[2],right:s[3],front:s[4],back:s[5]};let f=wu([e,t,r,1],[o,l,u],1,[n,i,a],s[0]);d=f[0],c=f[1],_=f[2]}else if(s==="SAME_UPPER"){d=Math.ceil(e/n),c=Math.ceil(t/i),_=Math.ceil(r/a);let f=(d-1)*n+o-e,b=(c-1)*i+l-t,I=(_-1)*a+u-r,g=Math.floor(f/2),M=f-g,k=Math.floor(b/2),v=b-k,y=Math.floor(I/2),T=I-y;h={top:k,bottom:v,left:y,right:T,front:g,back:M}}else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:h,outDepth:d,outHeight:c,outWidth:_}},uy=(s,e,t,r,n,i=!1,a="channelsLast")=>{let o,l,u,h,d;if(a==="channelsLast")[o,l,u,h,d]=s;else if(a==="channelsFirst")[o,d,l,u,h]=s;else throw new Error(`Unknown dataFormat ${a}`);let[c,,_,f,b]=e,[I,g,M]=gu(t),[k,v,y]=gu(r),T=Vi(_,k),x=Vi(f,v),P=Vi(b,y),{padInfo:O,outDepth:L,outHeight:G,outWidth:K}=zg(n,l,u,h,I,g,M,T,x,P),R=i?c*d:c,te=[0,0,0,0,0];return a==="channelsFirst"?te=[o,R,L,G,K]:a==="channelsLast"&&(te=[o,L,G,K,R]),{batchSize:o,dataFormat:a,inDepth:l,inHeight:u,inWidth:h,inChannels:d,outDepth:L,outHeight:G,outWidth:K,outChannels:R,padInfo:O,strideDepth:I,strideHeight:g,strideWidth:M,filterDepth:_,filterHeight:f,filterWidth:b,effectiveFilterDepth:T,effectiveFilterHeight:x,effectiveFilterWidth:P,dilationDepth:k,dilationHeight:v,dilationWidth:y,inShape:s,outShape:te,filterShape:e}},cy=(s,e,t,r,n,i)=>{let a=i==="channelsLast";a?s[0].dims[3]:s[0].dims[1];let o=[64,1,1],l={x:t.map((I,g)=>g)},u=[Math.ceil(Dg(l.x.map(I=>t[I]))/o[0]),1,1];zt("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${u}`);let h=1,d=ye.size(t),c=[{type:12,data:d},{type:12,data:r},{type:12,data:n},{type:12,data:e.strides},{type:12,data:e.dilations}];zn(e,c),c.push(...ct(s[0].dims,s[1].dims));let _=["rank","rank"],f=s.length===3;f&&(c.push(...ct(s[2].dims)),_.push("rank")),c.push(...ct(t));let b=I=>{let g=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:r.length},{name:"pads",type:"u32",length:n.length},{name:"strides",type:"u32",length:e.strides.length},{name:"dilations",type:"u32",length:e.dilations.length}];Bn(e,g);let M=1,k=Ds(s[0].dataType),v=ke("x",s[0].dataType,s[0].dims.length,h),y=ke("W",s[1].dataType,s[1].dims.length,M),T=[v,y],x=lt("result",s[0].dataType,t.length,M),P="";if(f){let G=ke("bias",s[2].dataType,s[2].dims.length,M);T.push(G),P+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${k} {
          return bias[${a?ut("coords",4,5):ut("coords",1,5)}];
        }`}let O=Bs(h,k),L=Ln(e,O,k);return`
            ${P}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${v.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${y.getByIndices("aIndices")};
            }
          ${I.registerUniforms(g).declareVariables(...T,x)}
          ${I.mainStart()}
          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${x.offsetToIndices("global_idx")};
              let batch = ${ut("coords",0,v.rank)};
              let d2 = ${a?ut("coords",v.rank-1,v.rank):ut("coords",1,v.rank)};
              let xFRCCorner = vec3<u32>(${a?ut("coords",1,v.rank):ut("coords",2,v.rank)},
              ${a?ut("coords",2,v.rank):ut("coords",3,v.rank)},
              ${a?ut("coords",3,v.rank):ut("coords",4,v.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${a?ut("uniforms.x_shape",1,v.rank):ut("uniforms.x_shape",2,v.rank)};
              let xShapeZ = ${a?ut("uniforms.x_shape",2,v.rank):ut("uniforms.x_shape",3,v.rank)};
              let xShapeW = ${a?ut("uniforms.x_shape",3,v.rank):ut("uniforms.x_shape",4,v.rank)};
              let xShapeU = ${a?ut("uniforms.x_shape",4,v.rank):ut("uniforms.x_shape",1,v.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${a?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${a?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${a?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${a?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${f?"value = value + getBiasByOutputCoords(coords)":""};
              ${L}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${e.cacheKey};${a};${h};${f}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:t,dataType:s[0].dataType}],dispatchGroup:{x:u[0],y:u[1],z:u[2]},programUniforms:c}),getShaderSource:b}}}),dy,hy,dT=Ue(()=>{wt(),Pt(),Ct(),jn(),dy=(s,e,t,r)=>{let n=s.length>2,i=n?"value += b[output_channel];":"",a=s[0].dims,o=s[1].dims,l=e.format==="NHWC",u=l?t[3]:t[1],h=u/e.group,d=l&&h>=4?us(u):1,c=ye.size(t)/d,_=[{type:12,data:c},{type:12,data:e.dilations},{type:12,data:[e.strides[0],e.strides[1]]},{type:12,data:[e.pads[0],e.pads[1]]},{type:12,data:h}];zn(e,_),_.push(...ct(a,[o[0],o[1],o[2],o[3]/d]));let f=n?["rank","rank","rank"]:["rank","rank"];_.push(...ct([t[0],t[1],t[2],t[3]/d]));let b=I=>{let g=lt("output",s[0].dataType,t.length,d),M=Ds(g.type.tensor),k=Ln(e,g.type.value,M),v=ke("x",s[0].dataType,a.length),y=ke("w",s[1].dataType,o.length,d),T=[v,y];n&&T.push(ke("b",s[2].dataType,s[2].dims,d));let x=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:e.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Bn(e,x);let P=l?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${v.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${y.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${v.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${y.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${I.registerUniforms(x).declareVariables(...T,g)}

  ${I.mainStart()}
    ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${g.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${d} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];

    var value: ${g.type.value} = ${g.type.value}(0);
    ${P}
    ${i}
    ${k}
    ${g.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${e.cacheKey}_${d}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:r?r(t):t,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:_}),getShaderSource:b}},hy=(s,e,t,r)=>{let n=s.length>2,i=us(t[3]),a=us(t[2]),o=ye.size(t)/i/a,l=[s[0].dims[0],s[0].dims[1],s[0].dims[2],s[0].dims[3]/i],u=[s[1].dims[0],s[1].dims[1],s[1].dims[2],s[1].dims[3]/i],h=[t[0],t[1],t[2],t[3]/i],d=[{type:12,data:o},{type:6,data:[e.strides[0],e.strides[1]]},{type:6,data:[e.pads[0],e.pads[1]]}];zn(e,d),d.push(...ct(l,u,h));let c=(a-1)*e.strides[1]+u[1],_=f=>{let b=lt("output",s[0].dataType,h.length,i),I=Ds(b.type.tensor),g=Ln(e,b.type.value,I),M=ke("x",s[0].dataType,l.length,i),k=ke("w",s[1].dataType,u.length,i),v=[M,k];n&&v.push(ke("b",s[2].dataType,s[2].dims,i));let y=n?"value += b[output_channel];":"",T=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Bn(e,T),`
  ${f.registerUniforms(T).declareVariables(...v,b)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${a}u;
    let col = (index1 % width1) * ${a}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${M.type.value}, ${c}>;
    var values: array<${b.type.value}, ${a}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${u[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${c}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${M.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${M.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${u[1]}; w_width++) {
          let w_val = ${k.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${a}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${a}u; i++) {
      var value = values[i];
      ${y}
      ${g}
      ${b.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${e.cacheKey};${i};${a};${c};${u[0]};${u[1]}`,inputDependencies:n?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r?r(t):t,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:d}),getShaderSource:_}}}),Bg,io,Rg,ao,ac,Mu,jg,Ng,oc,hT=Ue(()=>{Pt(),uT(),cT(),Oc(),dT(),jn(),Fc(),un(),Bg=(s,e,t,r,n,i)=>{let a=s[0],o=s.slice(i?1:2,i?3:4),l=o.length,u=e[0],h=e.slice(2).map((c,_)=>c+(c-1)*(t[_]-1)),d=o.map((c,_)=>c+r[_]+r[_+l]).map((c,_)=>Math.floor((c-h[_]+n[_])/n[_]));return d.splice(0,0,a),d.splice(i?3:1,0,u),d},io=[2,3,1,0],Rg=(s,e)=>{if(!s||s.length!==2&&s.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(s[0].dims.length>5)throw new Error("greater than 5D is not supported");if(s[0].dims.length!==s[1].dims.length)throw new Error("filter does not have same dimension as input");let t=s[0].dims[e.format==="NHWC"?s[0].dims.length-1:1],r=s[1].dims[1]*e.group;if(t!==r)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(s.length===3&&(s[2].dims.length!==1||s[1].dims[0]!==s[2].dims[0]))throw new Error("invalid bias");let n=s[0].dims.length-2;if(e.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(e.strides.length!==n)throw new Error(`strides should be ${n}D`);if(e.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==s[1].dims.length-2)throw new Error("invalid kernel shape")},ao=(s,e)=>{let t=s.kernelShape.slice();t.length<e[1].dims.length-2&&t.push(...Array(e[1].dims.length-2-t.length).fill(0));for(let i=2;i<e[1].dims.length;++i)t[i-2]===0&&(t[i-2]=e[1].dims[i]);let r=s.pads.slice();Mo.adjustPadsBasedOnAutoPad(e[0].dims,s.strides,s.dilations,t,r,s.format==="NHWC",s.autoPad);let n=Object.assign({},s);return Object.assign(n,{kernelShape:t,pads:r}),n},ac=s=>{let e=Ic(s),t=s.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][s.auto_pad],n=s.dilations,i=s.group,a=s.kernel_shape,o=s.pads,l=s.strides,u=s.w_is_const();return{autoPad:r,format:t,dilations:n,group:i,kernelShape:a,pads:o,strides:l,wIsConst:u,...e,cacheKey:`${s.format};${e.activation};`}},Mu=(s,e,t,r)=>{let n=t.format==="NHWC",i=Bg(e[0].dims,e[1].dims,t.dilations,t.pads,t.strides,n);if(t.group!==1){let T=[e[0]];if(n){let x=s.kernelCustomData.wT??s.compute(or(e[1],io),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!s.kernelCustomData.wT&&(s.kernelCustomData.wT=x),T.push(x)}else T.push(e[1]);e.length===3&&T.push(e[2]),!s.adapterInfo.isArchitecture("ampere")&&n&&e[1].dims[0]===t.group&&e[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1?s.compute(hy(T,t,i,r),{inputs:T}):s.compute(dy(T,t,i,r),{inputs:T});return}let a=e.length===3,o=e[0].dims[n?1:2],l=e[0].dims[n?2:3],u=e[0].dims[n?3:1],h=e[1].dims[2],d=e[1].dims[3],c=i[n?1:2],_=i[n?2:3],f=i[n?3:1],b=n&&h===o&&d===l&&t.pads[0]===0&&t.pads[1]===0;if(b||h===1&&d===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let T=i[0],x,P,O,L=[];if(n){let R=s.kernelCustomData.wT??s.compute(or(e[1],io),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!s.kernelCustomData.wT&&(s.kernelCustomData.wT=R),b){let te=o*l*u;x=e[0].reshape([1,T,te]),P=R.reshape([1,te,f]),O=[1,T,f]}else x=e[0].reshape([T,o*l,u]),P=R.reshape([1,u,f]),O=[T,c*_,f];L.push(x),L.push(P)}else x=e[0].reshape([T,u,o*l]),P=e[1].reshape([1,f,u]),O=[T,f,c*_],L.push(P),L.push(x);a&&L.push(e[2]);let G=O[2],K=L[0].dims[L[0].dims.length-1];G<8&&K<8?s.compute(Ac(L,t,i,O,n,r),{inputs:L}):s.compute(yo(L,t,i,O,n,r),{inputs:L});return}let I=!0,g=s.kernelCustomData.wT??s.compute(or(e[1],io),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!s.kernelCustomData.wT&&(s.kernelCustomData.wT=g);let M=[e[0],g];a&&M.push(e[2]);let k=n?c*_:f,v=n?f:c*_,y=h*d*u;s.compute(ly(M,t,i,k,v,y,a,I,r),{inputs:M})},jg=(s,e)=>{let t=e.format==="NHWC",r=[s.inputs[0].reshape(t?[s.inputs[0].dims[0],1,s.inputs[0].dims[1],s.inputs[0].dims[2]]:[s.inputs[0].dims[0],s.inputs[0].dims[1],1,s.inputs[0].dims[2]]),s.inputs[1].reshape([s.inputs[1].dims[0],s.inputs[1].dims[1],1,s.inputs[1].dims[2]])];s.inputs.length===3&&r.push(s.inputs[2]);let n=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),a=[1].concat(e.dilations),o=[1].concat(e.kernelShape),l=ao({...e,pads:n,strides:i,dilations:a,kernelShape:o},r);Mu(s,r,l,u=>t?[u[0],u[2],u[3]]:[u[0],u[1],u[3]])},Ng=(s,e,t)=>{let r=t.format==="NHWC"?"channelsLast":"channelsFirst",n=ao(t,e),i=t.autoPad==="NOTSET"?t.pads:t.autoPad,a=uy(e[0].dims,e[1].dims,t.strides,t.dilations,i,!1,r);s.compute(cy(e,n,a.outShape,[a.filterDepth,a.filterHeight,a.filterWidth],[a.padInfo.front,a.padInfo.top,a.padInfo.left],r))},oc=(s,e)=>{if(Rg(s.inputs,e),s.inputs[0].dims.length===3)jg(s,e);else if(s.inputs[0].dims.length===5)Ng(s,s.inputs,e);else{let t=ao(e,s.inputs);Mu(s,s.inputs,t)}}}),py,pT=Ue(()=>{wt(),Gr(),Pt(),Ct(),py=(s,e,t)=>{let r=s.length>2,n=e.outputShape,i=e.format==="NHWC",a=e.group,o=s[1].dims,l=o[2]/a,u=o[3],h=i?us(l):1,d=i&&u===1&&l>=4,c=d?Math.floor(l/4)*4:Math.floor(l/h)*h,_=l-c,f=i?us(u):1,b=i?u===1?h:f:1,I=ye.size(n)/f,g=[Math.ceil(I/64),1,1];zt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${g}`);let M=["rank","rank"],k=[e.strides[0],e.strides[1]],v=[e.kernelShape[i?1:2],e.kernelShape[i?2:3]],y=[e.dilations[0],e.dilations[1]],T=[v[0]+(e.dilations[0]<=1?0:(e.kernelShape[i?1:2]-1)*(e.dilations[0]-1)),v[1]+(e.dilations[1]<=1?0:(e.kernelShape[i?2:3]-1)*(e.dilations[1]-1))],x=[T[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),T[1]-1-Math.floor((e.pads[1]+e.pads[3])/2)],P=[{type:12,data:I},{type:12,data:k},{type:12,data:v},{type:12,data:y},{type:12,data:T},{type:6,data:x},{type:12,data:c},{type:12,data:l},{type:12,data:u},...ct(s[0].dims,s[1].dims)];r&&(P.push(...ct(s[2].dims)),M.push("rank")),P.push(...ct(n));let O=L=>{let G=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:k.length},{name:"filter_dims",type:"u32",length:v.length},{name:"dilations",type:"u32",length:v.length},{name:"effective_filter_dims",type:"u32",length:T.length},{name:"pads",type:"i32",length:x.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],K=Ds(s[0].dataType),R=i?1:2,te=i?2:3,H=i?3:1,ee=ke("W",s[1].dataType,s[1].dims.length,b),Z=ke("Dy",s[0].dataType,s[0].dims.length,h),ne=[Z,ee];r&&ne.push(ke("bias",s[2].dataType,[n[H]].length,f));let me=lt("result",s[0].dataType,n.length,f),ce=()=>{let V="";if(d)h===4?V+=`
        let xValue = ${Z.getByOffset("x_offset")};
        let wValue = ${ee.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:h===2?V+=`
          dotProd = dotProd + dot(vec4<${K}>(${Z.getByOffset("x_offset")}, ${Z.getByOffset("x_offset + 1u")}), vec4<${K}>(${ee.getByOffset("w_offset")}, ${ee.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:h===1&&(V+=`
          dotProd = dotProd + dot(vec4<${K}>(${Z.getByOffset("x_offset")}, ${Z.getByOffset("x_offset + 1u")}, ${Z.getByOffset("x_offset + 2u")}, ${Z.getByOffset("x_offset + 3u")}), vec4<${K}>(${ee.getByOffset("w_offset")}, ${ee.getByOffset("w_offset + 1u")}, ${ee.getByOffset("w_offset + 2u")}, ${ee.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(V+=`
                  let xValue = ${i?Z.getByOffset(`${Z.indicesToOffset(`${Z.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${h}`):Z.get("batch","inputChannel","idyR","idyC")};
        `,h===1)V+=`
          let w_offset = ${ee.indicesToOffset(`${ee.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${ee.getByOffset(`w_offset / ${b}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let re=0;re<h;re++)V+=`
            let wValue${re} = ${ee.getByOffset(`${ee.indicesToOffset(`${ee.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${re}, wOutChannel)`)} / ${b}`)};
            dotProd = dotProd + xValue[${re}] * wValue${re};`;return V},j=()=>{if(_===0)return"";if(!d)throw new Error(`packInputAs4 ${d} is not true.`);let V="";if(h===1){V+="dotProd = dotProd";for(let re=0;re<_;re++)V+=`
            + ${Z.getByOffset(`x_offset + ${re}`)} * ${ee.getByOffset(`w_offset + ${re}`)}`;V+=";"}else if(h===2){if(_!==2)throw new Error(`Invalid inputChannelsRemainder ${_}.`);V+=`
          let xValue = ${Z.getByOffset("x_offset")};
          let wValue = ${ee.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return V},F=`
            let outputIndices = ${me.offsetToIndices(`global_idx * ${f}`)};
            let batch = ${me.indicesGet("outputIndices",0)};
            let d1 = ${me.indicesGet("outputIndices",H)};
            let r = ${me.indicesGet("outputIndices",R)};
            let c = ${me.indicesGet("outputIndices",te)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${me.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${K}(dyRCorner) + ${K}(wR)) / ${K}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${K}(uniforms.Dy_shape[${R}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${K}(dyCCorner) + ${K}(wC)) / ${K}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${K}(uniforms.Dy_shape[${te}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${d?`
                var x_offset = ${Z.indicesToOffset(`${Z.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${h};
                var w_offset = ${ee.indicesToOffset(`${ee.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${b};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${d?4:h}) {
                  ${ce()}
                  inputChannel = inputChannel + ${d?4:h};
                }
                ${j()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${r?` + bias[d1 / ${f}]`:""};
            ${me.setByOffset("global_idx","value")};
          `;return`
    ${L.registerUniforms(G).declareVariables(...ne,me)}
      ${L.mainStart()}
      ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${F}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${e.cacheKey};${h}${b}${f}${d}${_}`,inputDependencies:M},getRunData:()=>({dispatchGroup:{x:g[0],y:g[1],z:g[2]},outputs:[{dims:t?t(n):n,dataType:s[0].dataType}],programUniforms:P}),getShaderSource:O}}}),Ug,Vg,Wg,bu,my,Gg,yu,Kg,fy,mT=Ue(()=>{pT(),jn(),un(),Ug=(s,e,t,r,n,i)=>(s-1)*e+t+(r-1)*n+1-i,Vg=(s,e,t,r,n)=>{let i=Math.floor(s/2);e==="SAME_UPPER"?(t[r]=i,t[n]=s-i):e==="SAME_LOWER"&&(t[r]=s-i,t[n]=i)},Wg=(s,e,t,r,n,i,a,o,l,u)=>{let h=s.length-2,d=u.length===0;l.length<h&&l.push(...Array(h-l.length).fill(0));let c=s[0],_=e[o?3:1]*n;for(let f=0,b=s.length-h-(o?1:0);f<h;++f,++b){let I=s[b],g=d?I*a[f]:u[f],M=Ug(I,a[f],i[f],e[b],t[f],g);Vg(M,r,i,f,f+h),d&&u.push(a[f]*(I-1)+l[f]+(e[b]-1)*t[f]+1-i[f]-i[f+h])}u.splice(0,0,c),u.splice(o?3:1,0,_)},bu=(s,e)=>{let t=s.kernelShape.slice();if(s.kernelShape.length===0||s.kernelShape.reduce((d,c)=>d*c,1)===0){t.length=0;for(let d=2;d<e[1].dims.length;++d)t.push(e[1].dims[d])}let r=s.format==="NHWC";t.splice(0,0,e[1].dims[0]),t.splice(r?3:1,0,e[1].dims[1]);let n=s.pads.slice(),i=s.outputShape.slice(),a=s.outputPadding.slice(),o=e[0].dims,l=s.dilations.slice();if(l.reduce((d,c)=>d+c,0)===0){let d=e[0].dims.length-2;l=new Array(d).fill(1)}let u=s.strides.slice();if(u.reduce((d,c)=>d+c,0)===0){let d=e[0].dims.length-2;u=new Array(d).fill(1)}Wg(o,t,l,s.autoPad,s.group,n,u,r,a,i);let h=Object.assign({},s);return Object.assign(h,{kernelShape:t,pads:n,outputPadding:a,outputShape:i,dilations:l,strides:u}),h},my=s=>{let e=Ic(s),t=s.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof s.autoPad>"u"?0:s.autoPad],n=s.dilations,i=s.group,a=s.kernelShape,o=s.pads,l=s.strides,u=s.wIsConst(),h=s.outputPadding,d=s.outputShape;return{autoPad:r,format:t,dilations:n,group:i,kernelShape:a,outputPadding:h,outputShape:d,pads:o,strides:l,wIsConst:u,...e,cacheKey:`${s.format};${e.activation};`}},Gg=(s,e)=>{if(!s||s.length!==2&&s.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(s[0].dims.length!==4&&s[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(s[0].dims.length!==s[1].dims.length)throw new Error("filter does not have same dimension as input");let t=s[0].dims[e.format==="NHWC"?s[0].dims.length-1:1],r=s[1].dims[0];if(t!==r)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=s[1].dims[1]*e.group;if(s.length===3&&(s[2].dims.length!==1||s[2].dims[0]!==n))throw new Error("invalid bias");let i=s[0].dims.length-2;if(e.dilations.reduce((a,o)=>a+o,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((a,o)=>a+o,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((a,o)=>a+o,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((a,o)=>a+o,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==s[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==s[0].dims.length-2)throw new Error("invalid output shape")},yu=(s,e,t,r)=>{let n=s.kernelCustomData.wT??s.compute(or(e[1],[2,3,0,1]),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!s.kernelCustomData.wT&&(s.kernelCustomData.wT=n);let i=[e[0],n];e.length===3&&i.push(e[2]),s.compute(py(i,t,r),{inputs:i})},Kg=(s,e)=>{let t=e.format==="NHWC",r=[s.inputs[0].reshape(t?[s.inputs[0].dims[0],1,s.inputs[0].dims[1],s.inputs[0].dims[2]]:[s.inputs[0].dims[0],s.inputs[0].dims[1],1,s.inputs[0].dims[2]]),s.inputs[1].reshape([s.inputs[1].dims[0],s.inputs[1].dims[1],1,s.inputs[1].dims[2]])];s.inputs.length===3&&r.push(s.inputs[2]);let n=e.kernelShape;(n.length===0||n[0]===0)&&(n=[s.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let a=e.strides;(a.length===0||a[0]===0)&&(a=[1]);let o=e.pads;o.length===0&&(o=[0,0]),o=[0,o[0],0,o[1]],a=[1].concat(a),i=[1].concat(i),n=[1].concat(n);let l=e.outputPadding;l=[0].concat(l);let u=bu({...e,pads:o,strides:a,dilations:i,kernelShape:n,outputPadding:l},r);yu(s,r,u,h=>t?[h[0],h[2],h[3]]:[h[0],h[1],h[3]])},fy=(s,e)=>{if(Gg(s.inputs,e),s.inputs[0].dims.length===3)Kg(s,e);else{let t=bu(e,s.inputs);yu(s,s.inputs,t)}}}),Hg,_y,gy,fT=Ue(()=>{wt(),Pt(),hs(),Ct(),Hg=(s,e,t,r)=>{let n=ye.size(e),i=e.length,a=ke("input",s,i),o=lt("output",s,i),l=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),u=ye.normalizeAxis(l,i),h=d=>{let c=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,_=ut("uniforms.input_shape","uniforms.axis",i),f=r.reverse?c+(r.exclusive?" + 1":""):"0",b=r.reverse?_:c+(r.exclusive?"":" + 1");return`
                ${d.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,o)}
                ${d.mainStart()}
                  ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${o.offsetToIndices("global_idx")};
                  var sum = ${o.type.value}(0);
                  let first : i32 = ${f};
                  let last : i32 = ${b};
                  for (var i : i32 = first; i < last; i++) {
                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${a.getByIndices("inputIndices")};
                  }
                  ${o.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:s}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},{type:12,data:u},...ct(e,e)]}),getShaderSource:h}},_y=(s,e)=>{let t=s.inputs[0].dims,r=s.inputs[0].dataType,n=s.inputs[1];s.compute(Hg(r,t,n,e),{inputs:[0]})},gy=s=>{let e=s.exclusive===1,t=s.reverse===1;return Wt({exclusive:e,reverse:t})}}),qg,Xg,Qg,wy,My,_T=Ue(()=>{wt(),Pt(),hs(),Ct(),qg=s=>{if(!s||s.length!==1)throw new Error("DepthToSpace requires 1 input.");if(s[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Xg=(s,e,t,r)=>{let n=[];n.push(`fn perm(i: ${r.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`);for(let i=0;i<e;++i)n.push(t.indicesSet("a",s[i],`i[${i}]`));return n.push("return a;}"),n.join(`
`)},Qg=(s,e)=>{let t,r,n,i,a,o,l=e.format==="NHWC",u=e.blocksize,h=e.mode==="DCR";l?([t,r,n,i]=s.dims,a=h?[t,r,n,u,u,i/u**2]:[t,r,n,i/u**2,u,u],o=h?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([t,r,n,i]=[s.dims[0],s.dims[2],s.dims[3],s.dims[1]],a=h?[t,u,u,i/u**2,r,n]:[t,i/u**2,u,u,r,n],o=h?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let d=s.reshape(a),c=d.dims.length,_=s.dataType,f=ke("a",_,c),b=lt("output",_,c),I=g=>`
  ${g.registerUniform("output_size","u32").declareVariables(f,b)}

  ${Xg(o,c,f,b)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${b.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${b.setByOffset("global_idx",f.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${s.dims};${e.blocksize};${e.mode}`,inputDependencies:["rank"]},getRunData:g=>{let M=l?[t,r*u,n*u,i/u**2]:[t,i/u**2,r*u,n*u],k=ye.size(M),v=d.dims,y=ye.sortBasedOnPerm(v,o);return{outputs:[{dims:M,dataType:g[0].dataType}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:[{type:12,data:k},...ct(v,y)]}},getShaderSource:I}},wy=(s,e)=>{qg(s.inputs),s.compute(Qg(s.inputs[0],e))},My=s=>Wt({blocksize:s.blocksize,mode:s.mode,format:s.format})}),oo,Wi,vu,Jg,Yg,Zg,ew,xu,tw,by,yy,gT=Ue(()=>{wt(),Pt(),hs(),Ct(),oo="[a-zA-Z]|\\.\\.\\.",Wi="("+oo+")+",vu="^"+Wi+"$",Jg="("+Wi+",)*"+Wi,Yg="^"+Jg+"$",Zg=class{constructor(s=-1){this.symbolToIndices=new Map,this.inputIndex=s}addSymbol(s,e){let t=this.symbolToIndices.get(s);t===void 0?t=[e]:t.push(e),this.symbolToIndices.set(s,t)}},ew=class{constructor(s,e){var n;this.equation=e,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,r]=e.includes("->")?e.split("->",2):[e,""];if(!t.match(RegExp(Yg)))throw new Error("Invalid LHS term");if(t.split(",").forEach((i,a)=>{let o=s[a].dims.slice();if(!i.match(RegExp(vu)))throw new Error("Invalid LHS term");let l=this.processTerm(i,!0,o,a);this.lhs.push(l)}),r==="")r+=[...this.symbolToInfo.entries()].filter(([i,a])=>a.count===1||i==="...").map(([i])=>i).join("");else if(!r.match(RegExp(Wi)))throw new Error("Invalid RHS");(n=r.match(RegExp(oo,"g")))==null||n.forEach(i=>{if(i==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let a=this.symbolToInfo.get(i);if(a===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(a.dimValue)}}),this.rhs=this.processTerm(r,!1,this.outputDims)}addSymbol(s,e,t){let r=this.symbolToInfo.get(s);if(r!==void 0){if(r.dimValue!==e&&r.count!==1)throw new Error("Dimension mismatch");r.count++,r.inputIndices.push(t)}else r={count:1,dimValue:e,inputIndices:[t]};this.symbolToInfo.set(s,r)}processTerm(s,e,t,r=-1){let n=t.length,i=!1,a=[],o=0;if(!s.match(RegExp(vu))&&!e&&s!=="")throw new Error("Invalid LHS term");let l=s.match(RegExp(oo,"g")),u=new Zg(r);return l==null||l.forEach((h,d)=>{if(h==="..."){if(i)throw new Error("Only one ellipsis is allowed per input term");i=!0;let c=n-l.length+1;if(c<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(o,o+c),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(e)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let _=0;_<a.length;_++){let f=String.fromCharCode(48+_);u.addSymbol(f,d+_),this.addSymbol(f,t[o++],r)}}else u.addSymbol(h,d+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(h,t[o++],r)}),u}},xu=s=>s+"_max",tw=(s,e,t,r)=>{let n=s.map(u=>u.length).map((u,h)=>ke(`input${h}`,e,u)),i=ye.size(r),a=lt("output",e,r.length),o=[...t.symbolToInfo.keys()].filter(u=>!t.rhs.symbolToIndices.has(u)),l=u=>{let h=[],d="var prod = 1.0;",c="var sum = 0.0;",_="sum += prod;",f=[],b=[],I=[],g=[],M=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((v,y)=>{var T;if(t.rhs.symbolToIndices.has(y)){let x=(T=t.rhs.symbolToIndices.get(y))==null?void 0:T[0];x!==void 0&&t.lhs.forEach((P,O)=>{if(v.inputIndices.includes(O)){let L=P.symbolToIndices.get(y);if(L===void 0)throw new Error("Invalid symbol error");L.forEach(G=>{h.push(`${n[O].indicesSet(`input${O}Indices`,G,a.indicesGet("outputIndices",x))}`)})}})}else t.lhs.forEach((x,P)=>{if(v.inputIndices.includes(P)){let O=x.symbolToIndices.get(y);if(O===void 0)throw new Error("Invalid symbol error");O.forEach(L=>{f.push(`${n[P].indicesSet(`input${P}Indices`,L,`${y}`)}`)}),g.push(`prod *= ${n[P].getByIndices(`input${P}Indices`)};`)}}),b.push(`for(var ${y}: u32 = 0; ${y} < uniforms.${xu(y)}; ${y}++) {`),I.push("}")});let k=M?[...h,`let sum = ${n.map((v,y)=>v.getByIndices(`input${y}Indices`)).join(" * ")};`]:[...h,c,...b,...f,d,...g,_,...I];return`
            ${u.registerUniforms(o.map(v=>({name:`${xu(v)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...n,a)}

            ${u.mainStart()}
            ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${a.offsetToIndices("global_idx")};
            ${n.map((v,y)=>`var input${y}Indices: ${n[y].type.indices};`).join(`
`)}
            ${k.join(`
`)};
            ${a.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:s.map(()=>"rank")},getRunData:()=>{let u=o.filter(d=>t.symbolToInfo.has(d)).map(d=>{var c;return{type:12,data:((c=t.symbolToInfo.get(d))==null?void 0:c.dimValue)||0}});u.push({type:12,data:i});let h=s.map((d,c)=>[...ct(d)]).reduce((d,c)=>d.concat(c),u);return h.push(...ct(r)),{outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:h}},getShaderSource:l}},by=(s,e)=>{let t=new ew(s.inputs,e.equation),r=t.outputDims,n=s.inputs.map((i,a)=>i.dims);s.compute(tw(n,s.inputs[0].dataType,t,r))},yy=s=>{let e=s.equation.replace(/\s+/g,"");return Wt({equation:e})}}),sw,Tu,rw,nw,vy,wT=Ue(()=>{wt(),Pt(),Ct(),sw=s=>{if(!s||s.length!==2)throw new Error("Expand requires 2 input.");let e=s[0].dims,t=Array.from(s[1].getBigInt64Array(),Number),r=t.length<e.length?0:t.length-e.length,n=e.length<t.length?0:e.length-t.length;for(;r<t.length&&n<e.length;++r,++n)if(t[r]!==e[n]&&t[r]!==1&&e[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Tu=(s,e)=>{let t=s.length-e.length,r=[];for(let n=0;n<t;++n)r.push(s[n]);for(let n=0;n<e.length;++n)r.push(e[n]===1?s[n+t]:e[n]);return r},rw=(s,e)=>s.length>e.length?Tu(s,e):Tu(e,s),nw=s=>{let e=s[0].dims,t=Array.from(s[1].getBigInt64Array(),Number),r=rw(e,t),n=s[0].dataType,i=n===9||ye.size(e)===1,a=n===9||e.length>0&&e[e.length-1]%4===0?4:1,o=i||r.length>0&&r[r.length-1]%4===0?4:1,l=Math.ceil(ye.size(r)/o),u=d=>{let c=ke("input",n,e.length,a),_=lt("output",n,r.length,o),f;if(n===9){let b=(I,g,M="")=>`
          let outputIndices${g} = ${_.offsetToIndices(`outputOffset + ${g}u`)};
          let offset${g} = ${c.broadcastedIndicesToOffset(`outputIndices${g}`,_)};
          let index${g} = offset${g} / 4u;
          let component${g} = offset${g} % 4u;
          ${I}[${g}] = ${M}(${c.getByOffset(`index${g}`)}[component${g}]);
        `;f=`
        let outputOffset = global_idx * ${o};
        var data = vec4<u32>(0);
        ${b("data",0,"u32")}
        ${b("data",1,"u32")}
        ${b("data",2,"u32")}
        ${b("data",3,"u32")}
        ${_.setByOffset("global_idx","data")}
      }`}else f=`
        let outputIndices = ${_.offsetToIndices(`global_idx * ${o}`)};
        let inputOffset = ${c.broadcastedIndicesToOffset("outputIndices",_)};
        let data = ${_.type.value}(${c.getByOffset(`inputOffset / ${a}`)});
        ${_.setByOffset("global_idx","data")}
      }`;return`
    ${d.registerUniform("vec_size","u32").declareVariables(c,_)}
    ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${f}`},h=[{type:12,data:l},...ct(e,r)];return{name:"Expand",shaderCache:{hint:`${r.length};${a}${o}`,inputDependencies:["rank"]},getShaderSource:u,getRunData:()=>({outputs:[{dims:r,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:h})}},vy=s=>{sw(s.inputs),s.compute(nw(s.inputs),{inputs:[0]})}}),iw,xy,MT=Ue(()=>{wt(),Pt(),Ct(),kc(),iw=s=>{let e=s[0].dataType,t=ye.size(s[0].dims),r=ye.size(s[1].dims),n=r%4===0,i=a=>{let o=ke("x",e,[1],4),l=ke("bias",e,[1],4),u=lt("y",e,[1],4),h=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],d=_=>`
      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;
      let bias${_} = ${l.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,c=n?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${d(0)}${d(1)}${d(2)}${d(3)}
      let bias = ${o.type.value}(bias0, bias1, bias2, bias3);`;return`${a.registerUniforms(h).declareVariables(o,l,u)}

    ${sc(Xs(e))}

    ${a.mainStart(ci)}
      ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${o.getByOffset("global_idx")};
      ${c}
      let x_in = x + bias;
      ${u.setByOffset("global_idx",rc("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${n}`,inputDependencies:["type","type"]},getShaderSource:i,getRunData:a=>({outputs:[{dims:a[0].dims,dataType:a[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:r}],dispatchGroup:{x:Math.ceil(t/ci/4)}})}},xy=s=>{s.inputs.length<2||ye.size(s.inputs[1].dims)===0?V0(s):s.compute(iw(s.inputs))}}),aw,ow,Ty,Ey,bT=Ue(()=>{wt(),Pt(),hs(),Ct(),aw=s=>{if(!s||s.length!==2)throw new Error("Gather requires 2 inputs.")},ow=(s,e)=>{let t=s[0].dims,r=s[1].dims,n=t.length,i=ye.normalizeAxis(e.axis,n),a=t.slice(0);a.splice(i,1,...r);let o=t[i],l=s[0].dataType===9?4:1,u=Math.ceil(ye.size(a)/l),h=[{type:12,data:u},{type:6,data:o},{type:12,data:i},...ct(s[0].dims,s[1].dims,a)],d=c=>{let _=ke("data",s[0].dataType,s[0].dims.length,l),f=ke("inputIndices",s[1].dataType,s[1].dims.length),b=lt("output",s[0].dataType,a.length,l),I=M=>{let k=r.length,v=`var indicesIndices${M}  = ${f.type.indices}(0);`;for(let y=0;y<k;y++)v+=`${k>1?`indicesIndices${M}[${y}]`:`indicesIndices${M}`} = ${a.length>1?`outputIndices${M}[uniforms.axis + ${y}]`:`outputIndices${M}`};`;v+=`
          var idx${M} = ${f.getByIndices(`indicesIndices${M}`)};
          if (idx${M} < 0) {
            idx${M} = idx${M} + uniforms.axisDimLimit;
          }
          var dataIndices${M} : ${_.type.indices};
        `;for(let y=0,T=0;y<n;y++)y===i?(v+=`${n>1?`dataIndices${M}[${y}]`:`dataIndices${M}`} = u32(idx${M});`,T+=k):(v+=`${n>1?`dataIndices${M}[${y}]`:`dataIndices${M}`} = ${a.length>1?`outputIndices${M}[${T}]`:`outputIndices${M}`};`,T++);return v},g;if(s[0].dataType===9){let M=(k,v,y="")=>`
          let outputIndices${v} = ${b.offsetToIndices(`outputOffset + ${v}u`)};
          ${I(v)};
          let offset${v} = ${_.indicesToOffset(`dataIndices${v}`)};
          let index${v} = offset${v} / 4u;
          let component${v} = offset${v} % 4u;
          ${k}[${v}] = ${y}(${_.getByOffset(`index${v}`)}[component${v}]);
        `;g=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${M("value",0,"u32")}
        ${M("value",1,"u32")}
        ${M("value",2,"u32")}
        ${M("value",3,"u32")}
        ${b.setByOffset("global_idx","value")}
      `}else g=`
      let outputIndices = ${b.offsetToIndices("global_idx")};
      ${I("")};
      let value = ${_.getByIndices("dataIndices")};
      ${b.setByOffset("global_idx","value")};
      `;return`
      ${c.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,f,b)}
      ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${g}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:h}),getShaderSource:d}},Ty=s=>Wt({axis:s.axis}),Ey=(s,e)=>{let t=s.inputs;aw(t),s.compute(ow(s.inputs,e))}}),lw,Py,Cy,yT=Ue(()=>{wt(),Pt(),Ct(),lw=(s,e,t,r,n,i,a,o,l)=>{let u=[{type:12,data:i},{type:12,data:r},{type:12,data:n},{type:12,data:t},{type:12,data:a},{type:12,data:o},{type:12,data:l}],h=[i];u.push(...ct(e.dims,h));let d=c=>{let _=ke("indices_data",e.dataType,e.dims.length),f=lt("input_slice_offsets_data",12,1,1),b=[_,f],I=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:n.length},{name:"sizes_from_slice_dims_data",type:"u32",length:t.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${c.registerUniforms(I).declareVariables(...b)}
  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${n.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${t.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return s.compute({name:"computeSliceOffsets",shaderCache:{hint:`${n.length}_${t.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:h,dataType:s.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:u}),getShaderSource:d},{inputs:[e],outputs:[-1]})[0]},Py=(s,e)=>{let t=s.inputs,r=t[0].dims,n=t[0].dataType,i=t[1].dims,a=i[i.length-1],o=ye.sizeToDimension(i,i.length-1),l=ye.sizeFromDimension(r,e.batchDims+a),u=ye.sizeToDimension(r,e.batchDims),h=ye.sizeFromDimension(r,e.batchDims),d=o/u,c=new Array(a),_=l;for(let v=0;v<a;++v)c[a-1-v]=_,_*=r[e.batchDims+a-1-v];let f=lw(s,t[1],c,e.batchDims,r,o,d,h,a),b=e.batchDims+a;if(b>r.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let I=i.slice(0,-1).concat(r.slice(b)),g=ye.size(I),M=[{type:12,data:g},{type:12,data:l},...ct(t[0].dims,f.dims,I)],k=v=>{let y=ke("data",t[0].dataType,t[0].dims.length),T=ke("slice_offsets",12,f.dims.length),x=lt("output",t[0].dataType,I.length);return`
          ${v.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(y,T,x)}
            ${v.mainStart()}
            ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};s.compute({name:"GatherND",shaderCache:{hint:e.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:I,dataType:n}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:M}),getShaderSource:k},{inputs:[t[0],f]})},Cy=s=>({batchDims:s.batch_dims,cacheKey:""})}),uw,cw,Sy,ky,vT=Ue(()=>{wt(),Pt(),hs(),Ct(),uw=(s,e)=>{if(s.length<3||s.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let t=ye.normalizeAxis(e.quantizeAxis,s[0].dims.length),r=e.blockSize,n=s[0],i=s[2],a=s.length===4?s[3]:void 0;if(i.dims.length!==n.dims.length||!n.dims.map((o,l)=>l===t?Math.ceil(o/r)===i.dims[l]:o===i.dims[l]).reduce((o,l)=>o&&l,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(a){if(a.dataType!==n.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(a.dims.length!==i.dims.length||!a.dims.map((o,l)=>o===i.dims[l]).reduce((o,l)=>o&&l,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},cw=(s,e)=>{let t=s[0].dims,r=s[1].dims,n=t.length,i=ye.normalizeAxis(e.gatherAxis,n),a=ye.normalizeAxis(e.quantizeAxis,n),o=t.slice(0);o.splice(i,1,...r);let l=ye.size(o),u=s[2].dataType,h=s[0].dataType===22,d=[{type:12,data:l},{type:12,data:a},{type:12,data:i},{type:12,data:e.blockSize},...ct(...s.map((_,f)=>_.dims),o)],c=_=>{let f=ke("data",s[0].dataType,s[0].dims.length),b=ke("inputIndices",s[1].dataType,s[1].dims.length),I=ke("scales",s[2].dataType,s[2].dims.length),g=s.length>3?ke("zeroPoint",s[3].dataType,s[3].dims.length):void 0,M=lt("output",u,o.length),k=[f,b,I];g&&k.push(g);let v=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${_.registerUniforms(v).declareVariables(...k,M)}
        ${_.mainStart()}
        let output_indices = ${M.offsetToIndices("global_idx")};
        var indices_indices = ${b.type.indices}(0);
        ${r.length>1?`
          for (var i: u32 = 0; i < ${r.length}; i++) {
            let index = ${M.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${b.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${M.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${f.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${M.indicesGet("output_indices","i")};
          ${f.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${b.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${t[i]};
        }
        ${f.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${o.length}; i++) {
          let index = ${M.indicesGet("output_indices",`i + ${r.length} - 1`)};
          ${f.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${f.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${f.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${h?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${I.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${I.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${I.getByIndices("scale_indices")};
        ${g?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${g.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${g.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${h?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Xs(u)}(quantized_data - zero_point) * scale;
        ${M.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${e.cacheKey};${s.filter((_,f)=>f!==1).map(_=>_.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:s.length},(_,f)=>"rank")},getRunData:()=>({outputs:[{dims:o,dataType:u}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:c}},Sy=(s,e)=>{let t=s.inputs;uw(t,e),s.compute(cw(s.inputs,e))},ky=s=>Wt({blockSize:s.blockSize,gatherAxis:s.gatherAxis,quantizeAxis:s.quantizeAxis})}),dw,hw,Iy,$y,xT=Ue(()=>{wt(),Pt(),hs(),Ct(),dw=s=>{if(!s||s.length!==2)throw new Error("GatherElements requires 2 inputs.");if(s[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(s[0].dims.length!==s[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},hw=(s,e)=>{let t=s[0].dims,r=s[0].dataType,n=t.length,i=s[1].dims,a=s[1].dataType,o=ye.normalizeAxis(e.axis,n),l=t[o],u=i.slice(0),h=ye.size(u),d=ke("input",r,n),c=ke("indicesInput",a,i.length),_=lt("output",r,u.length),f=[{type:12,data:h},{type:6,data:l},{type:12,data:o}];return f.push(...ct(t,i,u)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:u,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:f}),getShaderSource:b=>`
      ${b.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(d,c,_)}
      ${b.mainStart()}
      ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${_.offsetToIndices("global_idx")};

      var idx = ${c.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${d.type.indices}(outputIndices);
      ${d.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${d.getByIndices("inputIndices")};

      ${_.setByOffset("global_idx","value")};
  }`}},Iy=s=>Wt({axis:s.axis}),$y=(s,e)=>{let t=s.inputs;dw(t),s.compute(hw(s.inputs,e))}}),pw,mw,Ay,Fy,TT=Ue(()=>{wt(),Pt(),Ct(),pw=s=>{if(!s)throw new Error("Input is missing");if(s.length<2||s.length>3)throw new Error("Invaid input number.");if(s.length===3&&s[2].dims.length>2)throw new Error("Invalid input shape of C");if(s[0].dataType!==s[1].dataType||s.length===3&&s[0].dataType!==s[2].dataType)throw new Error("Input types are mismatched")},mw=(s,e)=>{let t=s[0].dims.slice(),r=s[1].dims.slice(),[n,i,a]=Ib.getShapeOfGemmResult(t,e.transA,r,e.transB,s.length===3?s[2].dims:void 0),o=[n,i];if(!o)throw new Error("Can't use gemm on the given tensors");let l=16,u=Math.ceil(i/l),h=Math.ceil(n/l),d=!0,c=ye.size(o),_=[{type:12,data:d?u:c},{type:12,data:n},{type:12,data:i},{type:12,data:a},{type:1,data:e.alpha},{type:1,data:e.beta}],f=["type","type"];s.length===3&&(_.push(...ct(s[2].dims)),f.push("rank")),_.push(...ct(o));let b=g=>{let M="";e.transA&&e.transB?M="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":e.transA&&!e.transB?M="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!e.transA&&e.transB?M="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!e.transA&&!e.transB&&(M="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let k=e.alpha===1?"":"value *= uniforms.alpha;",v=ke("a",s[0].dataType,s[0].dims),y=ke("b",s[1].dataType,s[1].dims),T=v.type.value,x=null,P=[v,y];s.length===3&&(x=ke("c",s[2].dataType,s[2].dims.length),P.push(x));let O=lt("output",s[0].dataType,o.length);P.push(O);let L=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${g.registerUniforms(L).declareVariables(...P)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${T}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${M}
    }

    ${k}
    ${x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",O)}; value += ${T}(uniforms.beta) * ${x.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},I=g=>{let M=ke("a",s[0].dataType,s[0].dims),k=ke("b",s[1].dataType,s[1].dims),v=null,y=[M,k];s.length===3&&(v=ke("c",s[2].dataType,s[2].dims.length),y.push(v));let T=lt("output",s[0].dataType,o.length);y.push(T);let x=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],P="",O="";e.transA&&e.transB?(O=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${M.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,P="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):e.transA&&!e.transB?(O=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${M.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,P="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!e.transA&&e.transB?(O=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${M.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,P="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!e.transA&&!e.transB&&(O=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${M.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${k.type.value}(0);
      }
      `,P="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let L=e.alpha===1?"":"value *= uniforms.alpha;";return`
  ${g.registerUniforms(x).declareVariables(...y)}
  var<workgroup> tile_a: array<array<${M.type.storage}, ${l}>, ${l}>;
  var<workgroup> tile_b: array<array<${k.type.storage}, ${l}>, ${l}>;
  ${g.mainStart([l,l,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${l};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${l};
    let num_tiles = (uniforms.K - 1) / ${l} + 1;
    var k_start = 0u;
    var value = ${T.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${O}
      k_start = k_start + ${l};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${l}; k++) {
        ${P}
      }
      workgroupBarrier();
    }

    ${L}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${v!=null?`let cOffset = ${v.broadcastedIndicesToOffset("vec2(m, n)",T)}; value += ${T.type.value}(uniforms.beta) * ${v.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return d?{name:"GemmShared",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:o,dataType:s[0].dataType}],dispatchGroup:{x:u*h},programUniforms:_}),getShaderSource:I}:{name:"Gemm",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:o,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:_}),getShaderSource:b}},Ay=s=>{let e=s.transA,t=s.transB,r=s.alpha,n=s.beta;return{transA:e,transB:t,alpha:r,beta:n,cacheKey:`${s.transA};${s.transB};${s.alpha===1}`}},Fy=(s,e)=>{pw(s.inputs),s.compute(mw(s.inputs,e))}}),zr,Ur,Cn,Sn,fw,_w,gw,ww,Mw,bw,yw,vw,Oy,Dy,ET=Ue(()=>{wt(),Pt(),hs(),Ct(),[zr,Ur,Cn,Sn]=[0,1,2,3],fw=s=>{if(s[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(s[0].dims.length!==s[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(s[0].dims.length-2!==s[1].dims[s[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${s[0].dims.length-2}`);if(s[0].dims[0]!==s[1].dims[0])throw new Error("grid batch size must match input batch size")},_w=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,gw=s=>`
  fn gs_bicubic_interpolate(p: mat4x4<${s}>, x: f32, y: f32) -> ${s} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${s}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,ww=s=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${s.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,Mw=s=>`
  ${s.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,bw=(s,e,t)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${e} {
     var pixel = ${e}(0);
     var indices = vec4<u32>(0);
     indices[${zr}] = batch;
     indices[${Ur}] = channel;`+(()=>{switch(t.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${Cn}] = u32(r);
            indices[${Sn}] = u32(c);
          } else {
            return ${e}(0);
          }
        `;case"border":return`
          indices[${Cn}] = u32(clamp(r, 0, H - 1));
          indices[${Sn}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${Cn}] = gs_reflect(r, border[1], border[3]);
          indices[${Sn}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${t.paddingMode} is not supported`)}})()+`
    return ${s.getByIndices("indices")};
  }
`,yw=(s,e,t)=>(()=>{switch(t.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${zr}], indices[${Ur}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${zr}], indices[${Ur}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${zr}], indices[${Ur}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${zr}], indices[${Ur}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${zr}], indices[${Ur}], border);

          let dx2 = ${e}(f32(x2) - x);
          let dx1 = ${e}(x - f32(x1));
          let dy2 = ${e}(f32(y2) - y);
          let dy1 = ${e}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${e}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${zr}], indices[${Ur}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${t.mode} is not supported`)}})()+`${s.setByOffset("global_idx","result")}`,vw=(s,e)=>{let t=ke("x",s[0].dataType,s[0].dims.length),r=[s[1].dims[0],s[1].dims[1],s[1].dims[2]],n=ke("grid",s[1].dataType,r.length,2),i=[s[0].dims[0],s[0].dims[1],s[1].dims[1],s[1].dims[2]];e.format==="NHWC"&&(i=[s[0].dims[0],s[1].dims[1],s[1].dims[2],s[0].dims[3]],[zr,Ur,Cn,Sn]=[0,3,1,2]);let a=lt("output",s[0].dataType,i.length),o=t.type.value,l=ye.size(i),u=[{type:12,data:l},...ct(s[0].dims,r,i)],h=d=>`
  ${d.registerUniform("output_size","u32").declareVariables(t,n,a)}
  ${_w}
  ${gw(o)}
  ${ww(e)}
  ${Mw(e)}
  ${bw(t,o,e)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${Cn}]);
      let W_in = i32(uniforms.x_shape[${Sn}]);

      ${e.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${a.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${zr}], indices[${Cn}], indices[${Sn}]);
      let nxy = ${n.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${yw(a,o,e)}
  }`;return{name:"GridSample",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:["type","type"]},getRunData:d=>{let c=ye.size(i);return{outputs:[{dims:i,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:u}},getShaderSource:h}},Oy=(s,e)=>{fw(s.inputs),s.compute(vw(s.inputs,e))},Dy=s=>Wt({alignCorners:s.align_corners,mode:s.mode,paddingMode:s.padding_mode,format:s.format})}),er,xw,Ly,Eu,Tw,Zi,zy,By=Ue(()=>{wt(),Pt(),hs(),Ec(),Sc(),Ct(),un(),er=(s,e)=>s.length>e&&s[e].dims.length>0?s[e]:void 0,xw=(s,e)=>{let t=s[0],r=er(s,1),n=er(s,2),i=er(s,3),a=er(s,4),o=er(s,5),l=er(s,6),u=er(s,7);if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let h=t.dims[0],d=t.dims[1],c=t.dims.length===3?t.dims[2]:e.numHeads*t.dims[4],_=d,f=0,b=0,I=Math.floor(c/e.numHeads);if(l&&u&&ye.size(l.dims)&&ye.size(u.dims)){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==h||l.dims[1]!==e.numHeads||l.dims[3]!==I)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(u.dims[0]!==h||u.dims[1]!==e.numHeads||u.dims[3]!==I)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==u.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(u.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');f=l.dims[2],b=l.dims[2]}else if(l&&ye.size(l.dims)||u&&ye.size(u.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let g;if(r&&ye.size(r.dims)>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(r.dims.length===3){if(r.dims[2]!==t.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');g=2,_=r.dims[1]}else if(r.dims.length===5){if(r.dims[2]!==e.numHeads||r.dims[3]!==2||r.dims[4]!==I)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw new Error('Expect "value" be none when "key" has packed kv format.');g=5,_=r.dims[1]}else{if(r.dims[1]!==e.numHeads||r.dims[3]!==I)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');g=0,_=r.dims[2]}}else{if(t.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(t.dims[2]!==e.numHeads||t.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');g=3}if(i&&ye.size(i.dims)>0){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(r&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let M=f+_,k=0;if(a&&ye.size(a.dims)>0){k=8;let x=a.dims;throw x.length===1?x[0]===h?k=1:x[0]===3*h+2&&(k=3):x.length===2&&x[0]===h&&x[1]===M&&(k=5),k===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let v=!1,y=c;if(n&&ye.size(n.dims)>0){if(n.dims.length!==3&&n.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==n.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(n.dims.length===3){if(_!==n.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');y=n.dims[2]}else{if(_!==n.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');y=n.dims[1]*n.dims[3],v=!0}}let T=!1;if(a&&ye.size(a.dims)>0)throw new Error("Key padding mask is not supported");if(o&&ye.size(o.dims)>0){if(o.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(o.dims[0]!==h||o.dims[1]!==e.numHeads||o.dims[2]!==d||o.dims[3]!==M)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:h,sequenceLength:d,pastSequenceLength:f,kvSequenceLength:_,totalSequenceLength:M,maxSequenceLength:b,inputHiddenSize:0,hiddenSize:c,vHiddenSize:y,headSize:I,vHeadSize:Math.floor(y/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:k,scale:e.scale,broadcastResPosBias:T,passPastInKv:v,qkvFormat:g}},Ly=s=>Wt({...s}),Eu=Wt({perm:[0,2,1,3]}),Tw=(s,e,t,r,n,i,a)=>{let o=[r,n,i],l=ye.size(o),u=[{type:12,data:l},{type:12,data:a},{type:12,data:i}],h=d=>{let c=lt("qkv_with_bias",e.dataType,o),_=ke("qkv",e.dataType,o),f=ke("bias",t.dataType,o),b=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${d.registerUniforms(b).declareVariables(_,f,c)}
  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return s.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:h},{inputs:[e,t],outputs:[-1]})[0]},Zi=(s,e,t,r,n,i,a,o)=>{let l=i;if(a&&ye.size(a.dims)>0){if(r===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=Tw(s,i,a,e,r,t*n,o),l=l.reshape([e,r,t,n]),t===1||r===1?l:s.compute(or(l,Eu.perm),{inputs:[l],outputs:[-1]})[0]}else return i.dims.length===3&&(l=i.reshape([e,r,t,n])),t===1||r===1?l:s.compute(or(l,Eu.perm),{inputs:[l],outputs:[-1]})[0]},zy=(s,e)=>{let t=xw(s.inputs,e),r=s.inputs[0],n=er(s.inputs,1),i=er(s.inputs,2),a=er(s.inputs,3),o=er(s.inputs,4),l=er(s.inputs,5),u=er(s.inputs,6),h=er(s.inputs,7);if(r.dims.length===5)throw new Error("Packed QKV is not implemented");if((n==null?void 0:n.dims.length)===5)throw new Error("Packed KV is not implemented");let d=n&&i&&n.dims.length===4&&i.dims.length===4,c=Zi(s,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,r,a,0);if(d)return ra(s,c,n,i,o,void 0,u,h,l,t);if(!n||!i)throw new Error("key and value must be provided");let _=Zi(s,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,n,a,t.hiddenSize),f=Zi(s,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,i,a,2*t.hiddenSize);ra(s,c,_,f,o,void 0,u,h,l,t)}}),Ew,Pw,Cw,Sw,lc,Ry,jy,Ny=Ue(()=>{wt(),Pt(),hs(),Ct(),Ew=s=>{if(!s||s.length<1)throw new Error("too few inputs")},Pw=(s,e)=>{let t=[],r=e.numOutputs;return s[1].dims[0]>0&&(s[1].getBigInt64Array().forEach(n=>t.push(Number(n))),r=t.length),Wt({numOutputs:r,axis:e.axis,splitSizes:t})},Cw=s=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${s}u; i += 1u ) {
    if (index < ${ut("uniforms.size_in_split_axis","i",s)}) {
        return i;
    }
    }
    return ${s}u;
}`,Sw=s=>{let e=s.length,t=[];for(let r=0;r<e;++r){let n=s[r].setByIndices("indices","input[global_idx]");e===1?t.push(n):r===0?t.push(`if (output_number == ${r}u) { ${n} }`):r===e-1?t.push(`else { ${n} }`):t.push(`else if (output_number == ${r}) { ${n} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${s[0].type.indices}, global_idx: u32) {
        ${t.join(`
`)}
      }`},lc=(s,e)=>{let t=s[0].dims,r=ye.size(t),n=s[0].dataType,i=ye.normalizeAxis(e.axis,t.length),a=new Array(e.numOutputs),o=ke("input",n,t.length),l=new Array(e.numOutputs),u=[],h=[],d=0,c=[{type:12,data:r}];for(let f=0;f<e.numOutputs;f++){d+=e.splitSizes[f],l[f]=d;let b=t.slice();b[i]=e.splitSizes[f],h.push(b),a[f]=lt(`output${f}`,n,b.length),u.push({dims:h[f],dataType:s[0].dataType})}c.push({type:12,data:l},...ct(t,...h));let _=f=>`
  ${f.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(o,...a)}
  ${Cw(l.length)}
  ${Sw(a)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${o.offsetToIndices("global_idx")};
    var index = ${o.indicesGet("indices",i)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${ut("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${o.indicesSet("indices",i,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:u,dispatchGroup:{x:Math.ceil(r/64)},programUniforms:c})}},Ry=(s,e)=>{Ew(s.inputs);let t=s.inputs.length===1?e:Pw(s.inputs,e);s.compute(lc(s.inputs,t),{inputs:[0]})},jy=s=>{let e=s.axis,t=s.splitSizes,r=s.numOutputs<0?t.length:s.numOutputs;if(r!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Wt({axis:e,numOutputs:r,splitSizes:t})}}),kw,vo,Uy,Vy=Ue(()=>{wt(),Pt(),hs(),Ct(),kw=(s,e)=>{let[t,r,n,i]=s,{numHeads:a,rotaryEmbeddingDim:o}=e;if(t.dims.length!==3&&t.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${t.dims.length}`);if(!ye.areEqual(r.dims,[])&&!ye.areEqual(r.dims,[1])&&r.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${r.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(!ye.areEqual(n.dims,i.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(o>0&&a===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=t.dims[0],u=t.dims[t.dims.length-2],h=n.dims[0],d=ye.sizeFromDimension(t.dims,1)/u,c=o===0?n.dims[1]*2:d/a;if(o>c)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(r.dims.length===2){if(l!==r.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${r.dims[0]}`);if(u!==r.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${r.dims[1]}`)}if(c/2!==n.dims[1]&&o/2!==n.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${n.dims[1]}`);if(u>h)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},vo=(s,e)=>{let{interleaved:t,numHeads:r,rotaryEmbeddingDim:n,scale:i}=e,a=s[0].dims[0],o=ye.sizeFromDimension(s[0].dims,1),l=s[0].dims[s[0].dims.length-2],u=o/l,h=s[2].dims[1],d=n===0?h*2:u/r,c=new Array(a,l,u/d,d-h),_=ye.computeStrides(c),f=[{type:1,data:i},{type:12,data:c},{type:12,data:_},...s[0].dims.length===3?new Array({type:12,data:[o,u,d,1]}):[],...s[0].dims.length===4?new Array({type:12,data:[o,d,l*d,1]}):[],...ct(s[0].dims,s[1].dims,s[2].dims,s[3].dims,s[0].dims)],b=I=>{let g=ke("input",s[0].dataType,s[0].dims.length),M=ke("position_ids",s[1].dataType,s[1].dims.length),k=ke("cos_cache",s[2].dataType,s[2].dims.length),v=ke("sin_cache",s[3].dataType,s[3].dims.length),y=lt("output",s[0].dataType,s[0].dims.length);return I.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:c.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`
        ${I.declareVariables(g,M,k,v,y)}

        ${I.mainStart(ci)}
          let half_rotary_emb_dim = uniforms.${k.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${I.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${M.broadcastedIndicesToOffset("bsnh.xy",lt("",M.type.tensor,2))};
            let position_id =
                u32(${M.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${t});
            let j = i + select(half_rotary_emb_dim, 1, ${t});
            let re = ${g.getByOffset("i")} * ${k.get("position_id","bsnh[3]")} -
                ${g.getByOffset("j")} * ${v.get("position_id","bsnh[3]")};
            ${y.setByOffset("i","re")}
            let im = ${g.getByOffset("i")} * ${v.get("position_id","bsnh[3]")} +
                ${g.getByOffset("j")} * ${k.get("position_id","bsnh[3]")};
            ${y.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${y.setByOffset("k",g.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Wt({interleaved:t}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:b,getRunData:()=>({outputs:[{dims:s[0].dims,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(ye.size(c)/ci)},programUniforms:f})}},Uy=(s,e)=>{kw(s.inputs,e),s.compute(vo(s.inputs,e))}}),Iw,$w,Pu,Aw,Wy,PT=Ue(()=>{hs(),wt(),Sc(),By(),Ny(),un(),Vy(),Ct(),Iw=(s,e)=>{if(e.doRotary&&s.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let t=s[0],r=s[1],n=s[2],i=s[3],a=s[4];if(e.doRotary!==0&&s.length<=7)throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(e.localWindowSize!==-1)throw new Error("Local attention is not supported");if(e.softcap!==0)throw new Error("Softcap is not supported");if(e.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(e.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let o=!1,l=t.dims[0],u=t.dims[1],h=t.dims.length===3?o?t.dims[2]/3:t.dims[2]:e.numHeads*t.dims[4],d=u,c=0,_=!r||r.dims.length===0,f=Math.floor(_?h/(e.numHeads+2*e.kvNumHeads):h/e.numHeads);_&&(h=f*e.numHeads);let b=i&&i.dims.length!==0,I=a&&a.dims.length!==0;if(b&&i.dims.length===4&&i.dims[0]===l&&i.dims[1]!==e.kvNumHeads&&i.dims[2]===e.kvNumHeads&&i.dims[3]===f)throw new Error("BSNH pastKey/pastValue is not supported");if(b&&I){if(i.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(a.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');c=i.dims[2]}else if(b||I)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let g=1;if(r&&r.dims.length>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(r.dims.length===3){if(t.dims[2]%r.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');d=r.dims[1]}else if(r.dims.length===5){if(r.dims[2]!==e.numHeads||r.dims[3]!==2||r.dims[4]!==f)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw new Error('Expect "value" be none when "key" has packed kv format.');d=r.dims[1]}else{if(r.dims[1]!==e.numHeads||r.dims[3]!==f)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=r.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(t.dims.length===5&&(t.dims[2]!==e.numHeads||t.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');g=3}let M=0,k=!1,v=e.kvNumHeads?f*e.kvNumHeads:h;if(n&&n.dims.length>0){if(n.dims.length!==3&&n.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==n.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(n.dims.length===3){if(d!==n.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=n.dims[2]}else{if(d!==n.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');v=n.dims[1]*n.dims[3],k=!0}}let y=s.length>4?s[5]:void 0;if(y&&y.dims.length!==1&&y.dims[0]!==l)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:u,pastSequenceLength:c,kvSequenceLength:d,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:h,vHiddenSize:v,headSize:f,vHeadSize:Math.floor(v/e.kvNumHeads),numHeads:e.numHeads,kvNumHeads:e.kvNumHeads,nReps:e.numHeads/e.kvNumHeads,pastPresentShareBuffer:!1,maskType:M,scale:e.scale,broadcastResPosBias:!1,passPastInKv:k,qkvFormat:g}},$w=Wt({perm:[0,2,1,3]}),Pu=(s,e,t)=>{let r=e,n=t.kvNumHeads;return e.dims.length===3&&t.kvSequenceLength!==0&&(r=e.reshape([t.batchSize,t.kvSequenceLength,n,t.headSize]),r=s.compute(or(r,$w.perm),{inputs:[r],outputs:[-1]})[0]),r},Aw=(s,e,t,r)=>{let n=7,i=["type","type"],a=[s*e],o=s*e,l=[{type:12,data:o},{type:12,data:e},{type:12,data:s}],u=h=>{let d=ke("seq_lens",t.dataType,t.dims),c=ke("total_seq_lens",r.dataType,r.dims),_=lt("pos_ids",n,a),f=[{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}];return`
  ${h.registerUniforms(f).declareVariables(d,c,_)}
  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let total_sequence_length = u32(${c.getByOffset("0")});
    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;
    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;
    let batch_idx = global_idx / uniforms.sequence_length;
    let sequence_idx = i32(global_idx % uniforms.sequence_length);
    var pos_id: i32 = 0;
    let seqlen = ${d.getByOffset("batch_idx")};
    let total_seqlen = seqlen + 1;
    if (is_first_prompt) {
      if (sequence_idx < total_seqlen) {
        pos_id = sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (is_subsequent_prompt) {
      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);
      if (past_seqlen + sequence_idx < total_seqlen) {
        pos_id = past_seqlen + sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (global_idx < uniforms.batch_size) {
      ${_.setByOffset("global_idx","seqlen")}
    };
  }
  `};return{name:"GeneratePositionIds",shaderCache:{hint:`${s};${e}`,inputDependencies:i},getRunData:()=>({outputs:[{dims:a,dataType:n}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:l}),getShaderSource:u}},Wy=(s,e)=>{var v;let t=Iw(s.inputs,e);if(s.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((v=s.inputs[1])==null?void 0:v.dims.length)===5)throw new Error("Packed KV is not implemented");let r=s.inputs[0],n=s.inputs[1]&&s.inputs[1].dims.length>0?s.inputs[1]:void 0,i=s.inputs[2]&&s.inputs[2].dims.length>0?s.inputs[2]:void 0,a=s.inputs[3]&&s.inputs[3].dims.length!==0?s.inputs[3]:void 0,o=s.inputs[4]&&s.inputs[4].dims.length!==0?s.inputs[4]:void 0,l=s.inputs.length>4?s.inputs[5]:void 0,u=s.inputs.length>5?s.inputs[6]:void 0,h=t.kvNumHeads?t.kvNumHeads:t.numHeads,d=Wt({axis:2,numOutputs:3,splitSizes:[t.numHeads*t.headSize,h*t.headSize,h*t.headSize]}),[c,_,f]=!n&&!i?s.compute(lc([r],d),{inputs:[r],outputs:[-1,-1,-1]}):[r,n,i],b,I;if(e.doRotary){let y=s.compute(Aw(t.batchSize,t.sequenceLength,l,u),{inputs:[l,u],outputs:[-1]})[0],T=s.inputs[7],x=s.inputs[8],P=Wt({interleaved:e.rotaryInterleaved!==0,numHeads:t.numHeads,rotaryEmbeddingDim:0,scale:e.scale}),O=[c,y,T,x],L=[-1];b=s.compute(vo(O,P),{inputs:O,outputs:L})[0],O.splice(0,1,_);let G=Wt({interleaved:e.rotaryInterleaved!==0,numHeads:t.kvNumHeads,rotaryEmbeddingDim:0,scale:e.scale});I=s.compute(vo(O,G),{inputs:O,outputs:L})[0]}let g=Zi(s,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,e.doRotary?b:c,void 0,0),M=Pu(s,e.doRotary?I:_,t),k=Pu(s,f,t);ra(s,g,M,k,void 0,void 0,a,o,void 0,t,l,u)}}),Cu,Fw,Ow,Gy,CT=Ue(()=>{wt(),Pt(),un(),Ct(),Cu=(s,e,t,r,n,i,a,o)=>{let l=us(i),u=l===1?"f32":`vec${l}f`,h=l===1?"vec2f":`mat2x${l}f`,d=n*a,c=64;d===1&&(c=256);let _=[n,a,i/l],f=[n,a,2],b=["rank","type","type"],I=[];I.push(...ct(_,f));let g=M=>{let k=ke("x",e.dataType,3,l),v=ke("scale",t.dataType,t.dims),y=ke("bias",r.dataType,r.dims),T=lt("output",1,3,2),x=[k,v,y,T];return`
  var<workgroup> workgroup_shared : array<${h}, ${c}>;
  const workgroup_size = ${c}u;
  ${M.declareVariables(...x)}
  ${M.mainStart(c)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${u}(0);
    var squared_sum = ${u}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${u}(${k.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${h}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${ln("workgroup_shared[0][0]",l)} / f32(hight * ${l});
      let squared_sum_final = ${ln("workgroup_shared[0][1]",l)} / f32(hight * ${l});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${o}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return s.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${o};${c}`,inputDependencies:b},getRunData:()=>({outputs:[{dims:f,dataType:1}],dispatchGroup:{x:d},programUniforms:I}),getShaderSource:g},{inputs:[e,t,r],outputs:[-1]})[0]},Fw=(s,e,t)=>{let r=e[0].dims,n=r,i=2,a=r[0],o=r[1],l=ye.sizeFromDimension(r,i),u=us(l),h=ye.size(n)/u,d=Cu(s,e[0],e[1],e[2],a,l,o,t.epsilon),c=[a,o,l/u],_=[a,o],f=["type","none"],b=I=>{let g=ke("x",e[0].dataType,c.length,u),M=ke("scale_shift",1,_.length,2),k=lt("output",e[0].dataType,c.length,u),v=[g,M,k];return`
  ${I.registerUniform("output_size","u32").declareVariables(...v)}
  ${I.mainStart()}
  ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${k.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${M.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${g.getByOffset("global_idx")} * ${k.type.value}(scale_shift.x) + ${k.type.value}(scale_shift.y);
      ${k.setByOffset("global_idx","value")};
  }`};s.compute({name:"InstanceNormalization",shaderCache:{hint:`${u}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},...ct(c,_,c)]}),getShaderSource:b},{inputs:[e[0],d]})},Ow=(s,e,t)=>{let r=e[0].dims,n=r,i=r[0],a=r[r.length-1],o=ye.sizeFromDimension(r,1)/a,l=us(a),u=ye.size(n)/l,h=[{type:12,data:o},{type:12,data:Math.floor(a/l)}],d=["type","type"],c=!1,_=[0,r.length-1];for(let g=0;g<r.length-2;g++)c=c||r[g+1]!==1,_.push(g+1);c=c&&r[r.length-1]!==1;let f=c?s.compute(or(s.inputs[0],_),{inputs:[s.inputs[0]],outputs:[-1]})[0]:s.inputs[0].reshape(Array.from({length:r.length},(g,M)=>r[_[M]])),b=Cu(s,f,e[1],e[2],i,o,a,t.epsilon),I=g=>{let M=Ds(e[0].dataType),k=l===1?"vec2f":`mat${l}x2f`,v=x=>{let P=x===0?"x":"y",O=l===1?"f32":`vec${l}f`;switch(l){case 1:return`${M}(${O}(scale.${P}))`;case 2:return`vec2<${M}>(${O}(scale[0].${P}, scale[1].${P}))`;case 4:return`vec4<${M}>(${O}(scale[0].${P}, scale[1].${P}, scale[2].${P}, scale[3].${P}))`;default:throw new Error(`Not supported compoents ${l}`)}},y=ke("input",e[0].dataType,e[0].dims,l),T=lt("output",e[0].dataType,n,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${y.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${k}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${T.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${g.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${v(0)}, ${v(1)});
  }`};s.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:h}),getShaderSource:I},{inputs:[e[0],b]})},Gy=(s,e)=>{e.format==="NHWC"?Ow(s,s.inputs,e):Fw(s,s.inputs,e)}}),Dw,Lw,Ky,ST=Ue(()=>{wt(),Pt(),Ct(),Dw=s=>{if(!s||s.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Lw=(s,e,t)=>{let r=e.simplified,n=s[0].dims,i=s[1],a=!r&&s[2],o=n,l=ye.normalizeAxis(e.axis,n.length),u=ye.sizeToDimension(n,l),h=ye.sizeFromDimension(n,l),d=ye.size(i.dims),c=a?ye.size(a.dims):0;if(d!==h||a&&c!==h)throw new Error(`Size of X.shape()[axis:] == ${h}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${c}`);let _=[];for(let y=0;y<n.length;++y)y<l?_.push(n[y]):_.push(1);let f=us(h),b=["type","type"],I=[{type:12,data:u},{type:1,data:h},{type:12,data:Math.floor(h/f)},{type:1,data:e.epsilon}];a&&b.push("type");let g=t>1,M=t>2,k=y=>{let T=Ds(s[0].dataType),x=[ke("x",s[0].dataType,s[0].dims,f),ke("scale",i.dataType,i.dims,f)];a&&x.push(ke("bias",a.dataType,a.dims,f)),x.push(lt("output",s[0].dataType,o,f)),g&&x.push(lt("mean_data_output",1,_)),M&&x.push(lt("inv_std_output",1,_));let P=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${y.registerUniforms(P).declareVariables(...x)}
  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Zu("f32",f)};
    var mean_square_vector = ${Zu("f32",f)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${ai(T,f,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${ln("mean_vector",f)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${ln("mean_square_vector",f)} / uniforms.norm_size ${r?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${ai(T,f,"x[j + offset]")};
      let f32scale = ${ai(T,f,"scale[j]")};
      output[j + offset] = ${x[0].type.value}((f32input ${r?"":"- mean"}) * inv_std_dev * f32scale
        ${a?`+ ${ai(T,f,"bias[j]")}`:""}
      );
    }

    ${g?"mean_data_output[global_idx] = mean":""};
    ${M?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},v=[{dims:o,dataType:s[0].dataType}];return g&&v.push({dims:_,dataType:1}),M&&v.push({dims:_,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${t};${r}`,inputDependencies:b},getRunData:()=>({outputs:v,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:I}),getShaderSource:k}},Ky=(s,e)=>{Dw(s.inputs),s.compute(Lw(s.inputs,e,s.outputCount))}}),zw,Hy,kT=Ue(()=>{Pt(),Fc(),Oc(),zw=s=>{if(!s||s.length!==2)throw new Error("MatMul requires 2 inputs.");if(s[0].dims[s[0].dims.length-1]!==s[1].dims[s[1].dims.length-2])throw new Error("shared dimension does not match.")},Hy=s=>{zw(s.inputs);let e=ui.calcShape(s.inputs[0].dims,s.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");let t=e[e.length-1],r=s.inputs[0].dims[s.inputs[0].dims.length-1];if(t<8&&r<8)s.compute(Ac(s.inputs,{activation:""},e));else{let n=e[e.length-2],i=ye.size(s.inputs[0].dims.slice(0,-2)),a=ye.size(s.inputs[1].dims.slice(0,-2));if(i!==1&&n===1&&a===1){let o=s.inputs[0].reshape([1,i,r]),l=s.inputs[1].reshape([1,r,t]),u=[1,i,t],h=[o,l];s.compute(yo(h,{activation:""},e,u),{inputs:h})}else s.compute(yo(s.inputs,{activation:""},e))}}}),Bw,Rw,jw,qy,Xy,IT=Ue(()=>{wt(),Pt(),hs(),Ct(),Bw=(s,e)=>{if(s.length<3||s.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=s[0],r=t.dims.length;if(t.dims[r-1]!==e.k)throw new Error("The last dim of input shape does not match the k value");let n=Math.floor((e.k+e.blockSize-1)/e.blockSize),i=e.blockSize/8*e.bits,a=s[1];if(!ye.areEqual(a.dims,[e.n,n,i]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let o=s[2].dims;if(ye.size(o)!==e.n*n)throw new Error("scales input size error.");if(s.length===4){let l=s[3].dims,u=e.bits>4?e.n*n:e.n*Math.floor((n+1)/2);if(ye.size(l)!==u)throw new Error("zeroPoints input size error.")}},Rw=(s,e)=>{let t=s[0].dims,r=t.length,n=t[r-2],i=e.k,a=e.n,o=t.slice(0,r-2),l=ye.size(o),u=s[1].dims[2]/4,h=s[0].dataType,d=us(e.k),c=us(u),_=us(a),f=o.concat([n,a]),b=n>1&&a/_%2===0?2:1,I=ye.size(f)/_/b,g=64,M=[],k=[l,n,i/d],v=ye.convertShape(s[1].dims).slice();v.splice(-1,1,u/c),M.push(...ct(k)),M.push(...ct(v)),M.push(...ct(s[2].dims)),s.length===4&&M.push(...ct(ye.convertShape(s[3].dims)));let y=[l,n,a/_];M.push(...ct(y));let T=x=>{let P=k.length,O=ke("a",s[0].dataType,P,d),L=ke("b",12,v.length,c),G=ke("scales",s[2].dataType,s[2].dims.length),K=[O,L,G],R=s.length===4?ke("zero_points",12,s[3].dims.length):void 0;R&&K.push(R);let te=y.length,H=lt("output",s[0].dataType,te,_),ee=Ds(s[0].dataType),Z=(()=>{switch(d){case 1:return`array<${ee}, 8>`;case 2:return`mat4x2<${ee}>`;case 4:return`mat2x4<${ee}>`;default:throw new Error(`${d}-component is not supported.`)}})(),ne=()=>{let j=`
          // reuse a data
            var input_offset = ${O.indicesToOffset(`${O.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Z};
            for (var j: u32 = 0; j < ${8/d}; j++) {
              a_data[j] = ${O.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let F=0;F<_*b;F++)j+=`
            b_value = ${c===1?`b${F}_data`:`b${F}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Z}(${Array.from({length:4},(V,re)=>`${ee}(b_value_lower[${re}]), ${ee}(b_value_upper[${re}])`).join(", ")});
            b_dequantized_values = ${d===1?`${Z}(${Array.from({length:8},(V,re)=>`(b_quantized_values[${re}] - ${R?`zero_point${F}`:"zero_point"}) * scale${F}`).join(", ")});`:`(b_quantized_values - ${Z}(${Array(8).fill(`${R?`zero_point${F}`:"zero_point"}`).join(",")})) * scale${F};`};
            workgroup_shared[local_id.x * ${b} + ${Math.floor(F/_)}]${_>1?`[${F%_}]`:""} += ${Array.from({length:8/d},(V,re)=>`${d===1?`a_data[${re}] * b_dequantized_values[${re}]`:`dot(a_data[${re}], b_dequantized_values[${re}])`}`).join(" + ")};
          `;return j},me=()=>{let j=`
            var col_index = col * ${_};
            ${R?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${ee}(8);`}
            `;for(let F=0;F<_*b;F++)j+=`
            let scale${F} = ${G.getByOffset("col_index * nBlocksPerCol + block")};
            ${R?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${R.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${F} = ${ee}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return j},ce=()=>{let j=`col_index = col * ${_};`;for(let F=0;F<_*b;F++)j+=`
            let b${F}_data = ${L.getByIndices(`${L.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return j+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Z};
            var b_dequantized_values: ${Z};`,j};return`
        var<workgroup> workgroup_shared: array<${H.type.value}, ${b*g}>;
        ${x.declareVariables(...K,H)}
        ${x.mainStart([g,1,1])}
          let output_indices = ${H.offsetToIndices(`(global_idx / ${g}) * ${b}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${g}) {
            //process one block
            var word_offset: u32 = block * ${e.blockSize/d};
            ${me()}
            for (var word: u32 = 0; word < ${u}; word += ${c}) {
              ${ce()}
              for (var i: u32 = 0; i < ${c}; i++) {
                ${ne()}
                word_offset += ${8/d};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${b}) {
            var output_value: ${H.type.value} = ${H.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${g}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${b};
            }
            ${H.setByIndices(`${H.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${e.blockSize};${e.bits};${d};${c};${_};${b};${g}`,inputDependencies:Array(s.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:h}],dispatchGroup:{x:I},programUniforms:M}),getShaderSource:T}},jw=(s,e)=>{let t=s[0].dims,r=t.length,n=t[r-2],i=e.k,a=e.n,o=t.slice(0,r-2),l=ye.size(o),u=s[1].dims[2]/4,h=s[0].dataType,d=us(e.k),c=us(u),_=o.concat([n,a]),f=128,b=a%8===0?8:a%4===0?4:1,I=f/b,g=I*c*8,M=g/d,k=g/e.blockSize,v=ye.size(_)/b,y=[],T=[l,n,i/d],x=ye.convertShape(s[1].dims).slice();x.splice(-1,1,u/c),y.push(...ct(T)),y.push(...ct(x)),y.push(...ct(s[2].dims)),s.length===4&&y.push(...ct(ye.convertShape(s[3].dims)));let P=[l,n,a];y.push(...ct(P));let O=L=>{let G=T.length,K=ke("a",s[0].dataType,G,d),R=ke("b",12,x.length,c),te=ke("scales",s[2].dataType,s[2].dims.length),H=[K,R,te],ee=s.length===4?ke("zero_points",12,s[3].dims.length):void 0;ee&&H.push(ee);let Z=P.length,ne=lt("output",s[0].dataType,Z),me=Ds(s[0].dataType),ce=()=>{switch(d){case 1:return`
          let a_data0 = vec4<${me}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${me}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${me}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${me}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${d}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${K.type.value}, ${M}>;
        var<workgroup> inter_results: array<array<${ne.type.value}, ${I}>, ${b}>;
        ${L.declareVariables(...H,ne)}
        ${L.mainStart([I,b,1])}
          let output_indices = ${ne.offsetToIndices(`workgroup_index * ${b}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${k} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${M};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${M}; a_offset += ${f})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${K.getByIndices(`${K.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${K.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${k} + local_id.x;
            ${ee?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${ee.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${me}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${me}(8);`}
            let scale = ${te.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${R.getByIndices(`${R.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${e.blockSize/d};
            for (var i: u32 = 0; i < ${c}; i++) {
              ${ce()}
              let b_value = ${c===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${me}>(${Array.from({length:4},(j,F)=>`${me}(b_value_lower[${F}]), ${me}(b_value_upper[${F}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${me}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(j,F)=>`${`dot(a_data${F}, b_dequantized_values[${F}])`}`).join(" + ")};
              word_offset += ${8/d};
            }
            workgroupBarrier();
          }

          if (local_idx < ${b}) {
            var output_value: ${ne.type.value} = ${ne.type.value}(0);
            for (var b = 0u; b < ${I}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${ne.setByIndices(`${ne.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${e.blockSize};${d};${c};${I};${b}`,inputDependencies:Array(s.length).fill("rank")},getRunData:()=>({outputs:[{dims:_,dataType:h}],dispatchGroup:{x:v},programUniforms:y}),getShaderSource:O}},qy=(s,e)=>{Bw(s.inputs,e),e.blockSize===32&&s.adapterInfo.isVendor("intel")&&s.adapterInfo.isArchitecture("gen-12lp")?s.compute(jw(s.inputs,e)):s.compute(Rw(s.inputs,e))},Xy=s=>Wt(s)}),Nw,Uw,Vw,Ww,Gw,Kw,Hw,qw,Qy,$T=Ue(()=>{wt(),Pt(),Ct(),Nw=s=>{if(!s||s.length<1)throw new Error("Too few inputs");if(s[0].dataType!==1&&s[0].dataType!==10)throw new Error("Input type must be float or float16.");if(s.length>=2){let e=s[0].dims.length*2===s[1].dims[0];if(s.length===4&&(e=s[3].dims[0]*2===s[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Uw=(s,e,t)=>{let r="";for(let n=e-1;n>=0;--n)r+=`
            k = i32(${s.indicesGet("indices",n)}) - ${ut("uniforms.pads",n,t)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${ut("uniforms.x_shape",n,e)})) {
              break;
            }
            offset += k * i32(${ut("uniforms.x_strides",n,e)});
        `;return`
          value = ${s.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${r}
            value = x[offset];
          }
      `},Vw=(s,e,t)=>{let r="";for(let n=e-1;n>=0;--n)r+=`
                k = i32(${s.indicesGet("indices",n)}) - ${ut("uniforms.pads",n,t)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${ut("uniforms.x_shape",n,e)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${ut("uniforms.x_shape",n,e)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${ut("uniforms.x_strides",n,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${r}
              value = x[offset];
          `},Ww=(s,e,t)=>{let r="";for(let n=e-1;n>=0;--n)r+=`
                k = i32(${s.indicesGet("indices",n)}) - ${ut("uniforms.pads",n,t)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${ut("uniforms.x_shape",n,e)})) {
                  k = i32(${ut("uniforms.x_shape",n,e)}) - 1;
                }
                offset += k * i32(${ut("uniforms.x_strides",n,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${r}
              value = x[offset];
          `},Gw=(s,e,t)=>{let r="";for(let n=e-1;n>=0;--n)r+=`
                k = i32(${s.indicesGet("indices",n)}) - ${ut("uniforms.pads",n,t)};
                if (k < 0)  {
                  k += i32(${ut("uniforms.x_shape",n,e)}]);
                }
                if (k >= i32(${ut("uniforms.x_shape",n,e)})) {
                  k -= i32(${ut("uniforms.x_shape",n,e)});
                }
                offset += k * i32(${ut("uniforms.x_strides",n,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${r}
              value = x[offset];
          `},Kw=(s,e,t)=>{switch(t.mode){case 0:return Uw(s,e,t.pads.length);case 1:return Vw(s,e,t.pads.length);case 2:return Ww(s,e,t.pads.length);case 3:return Gw(s,e,t.pads.length);default:throw new Error("Invalid mode")}},Hw=(s,e)=>{let t=ye.padShape(s[0].dims.slice(),e.pads),r=s[0].dims,n=ye.size(t),i=[{type:12,data:n},{type:6,data:e.pads}],a=s.length>=3&&s[2].data;e.mode===0&&i.push({type:a?s[2].dataType:1,data:e.value}),i.push(...ct(s[0].dims,t));let o=["rank"],l=u=>{let h=lt("output",s[0].dataType,t.length),d=ke("x",s[0].dataType,r.length),c=d.type.value,_=Kw(h,r.length,e),f=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:e.pads.length}];return e.mode===0&&f.push({name:"constant_value",type:a?c:"f32"}),`
            ${u.registerUniforms(f).declareVariables(d,h)}
            ${u.mainStart()}
            ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${h.offsetToIndices("global_idx")};

            var value = ${c}(0);
            ${_}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${e.mode}${a}`,inputDependencies:o},getRunData:()=>({outputs:[{dims:t,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(ye.size(t)/64)},programUniforms:i}),getShaderSource:l}},qw=(s,e)=>{if(s.length>1){let t=s[1].getBigInt64Array(),r=s.length>=3&&s[2].data?s[2].dataType===10?s[2].getUint16Array()[0]:s[2].getFloat32Array()[0]:0,n=s[0].dims.length,i=new Int32Array(2*n).fill(0);if(s.length>=4){let o=s[3].getBigInt64Array();for(let l=0;l<o.length;l++)i[Number(o[l])]=Number(t[l]),i[Number(o[l])+n]=Number(t[l+o.length])}else t.forEach((o,l)=>i[Number(l)]=Number(o));let a=[];return i.forEach(o=>a.push(o)),{mode:e.mode,value:r,pads:a}}else return e},Qy=(s,e)=>{Nw(s.inputs);let t=qw(s.inputs,e);s.compute(Hw(s.inputs,t),{inputs:[0]})}}),Gi,Su,ku,Iu,$u,Xw,Qw,Au,Fu,Jy,Yy,Ou,Zy,ev,Du,tv,sv,rv,nv,AT=Ue(()=>{$r(),wt(),Pt(),Ct(),Gi=s=>{if(es.webgpu.validateInputContent&&(!s||s.length!==1))throw new Error("Pool ops requires 1 input.")},Su=(s,e,t)=>{let r=e.format==="NHWC",n=s.dims.slice();r&&n.splice(1,0,n.pop());let i=Object.hasOwnProperty.call(e,"dilations"),a=e.kernelShape.slice(),o=e.strides.slice(),l=i?e.dilations.slice():[],u=e.pads.slice();Mo.adjustPoolAttributes(t,n,a,o,l,u);let h=Mo.computePoolOutputShape(t,n,o,l,a,u,e.autoPad),d=Object.assign({},e);i?Object.assign(d,{kernelShape:a,strides:o,pads:u,dilations:l,cacheKey:e.cacheKey}):Object.assign(d,{kernelShape:a,strides:o,pads:u,cacheKey:e.cacheKey});let c=h.slice();return c.push(c.splice(1,1)[0]),[d,r?c:h]},ku=(s,e)=>{let t=e.format==="NHWC",r=ye.size(s),n=ye.size(e.kernelShape),i=[{type:12,data:r},{type:12,data:n}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let o=e.kernelShape[e.kernelShape.length-1],l=e.strides[e.strides.length-1],u=e.pads[e.pads.length/2-1],h=e.pads[e.pads.length-1],d=!!(u+h);i.push({type:12,data:o},{type:12,data:l},{type:12,data:u},{type:12,data:h}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let c=!1;if(e.kernelShape.length===2){let _=e.kernelShape[e.kernelShape.length-2],f=e.strides[e.strides.length-2],b=e.pads[e.pads.length/2-2],I=e.pads[e.pads.length-2];c=!!(b+I),i.push({type:12,data:_},{type:12,data:f},{type:12,data:b},{type:12,data:I}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,a,!0,d,c]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let o=ye.computeStrides(e.kernelShape);i.push({type:12,data:o},{type:12,data:e.pads},{type:12,data:e.strides}),a.push({name:"kernelStrides",type:"u32",length:o.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let l=e.pads.reduce((u,h)=>u+h);return[i,a,!!l,!1,!1]}},Iu=(s,e,t,r,n,i,a,o,l,u,h,d)=>{let c=n.format==="NHWC",_=e.type.value,f=lt("output",e.type.tensor,r);if(n.kernelShape.length<=2){let b="",I="",g="",M=t-(c?2:1);if(h?b=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${M}] = indices[${M}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${M}] < 0 || xIndices[${M}]
                      >= uniforms.x_shape[${M}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:b=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${M}] = indices[${M}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,n.kernelShape.length===2){let k=t-(c?3:2);d?I=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${k}] = indices[${k}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${k}] < 0 || xIndices[${k}] >= uniforms.x_shape[${k}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:I=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${k}] = indices[${k}] * uniforms.sh - uniforms.phStart + j;
                `,g=`
              }
            `}return`
            ${s.registerUniforms(l).declareVariables(e,f)}

            ${s.mainStart()}
              ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var value = ${_}(${o});
              var pad = 0;
              ${I}
              ${b}
              ${g}
              ${a}

              output[global_idx] = value;
            }`}else{if(c)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let b=n.kernelShape.length,I=n.pads.length,g="";return u?g=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:g=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${s.registerUniforms(l).declareVariables(e,f)}

            ${s.mainStart()}
              ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var offsets: array<u32, ${b}>;

              var value = ${_}(${o});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${b-1}u; j++) {
                  offsets[j] = offset / ${ut("uniforms.kernelStrides","j",b)};
                  offset -= offsets[j] * ${ut("uniforms.kernelStrides","j",b)};
                }
                offsets[${b-1}] = offset;

                isPad = false;
                for (var j = ${t-b}u; j < ${t}u; j++) {
                  xIndices[j] = indices[j] * ${ut("uniforms.strides",`j - ${t-b}u`,b)}
                    + offsets[j - ${t-b}u] - ${ut("uniforms.pads","j - 2u",I)};
                  ${g}
              }
              ${a}

              output[global_idx] = value;
            }`}},$u=s=>`${s.format};${s.ceilMode};${s.autoPad};${s.kernelShape.length}`,Xw=s=>`${$u(s)};${s.countIncludePad}`,Qw=s=>`${$u(s)};${s.storageOrder};${s.dilations}`,Au=s=>({format:s.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][s.auto_pad],ceilMode:s.ceil_mode,kernelShape:s.kernel_shape,strides:s.strides,pads:s.pads}),Fu=(s,e,t,r)=>{let[n,i]=Su(e,r,t),a=ke("x",e.dataType,e.dims.length),o=a.type.value,l="value += x_val;",u="";n.countIncludePad?u+=`value /= ${o}(uniforms.kernelSize);`:u+=`value /= ${o}(i32(uniforms.kernelSize) - pad);`;let[h,d,c,_,f]=ku(i,n);h.push(...ct(e.dims,i));let b=["rank"];return{name:s,shaderCache:{hint:`${r.cacheKey};${c};${_};${f}`,inputDependencies:b},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(ye.size(i)/64)},programUniforms:h}),getShaderSource:I=>Iu(I,a,e.dims.length,i.length,n,l,u,0,d,c,_,f)}},Jy=s=>{let e=s.count_include_pad!==0,t=Au(s);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let r={countIncludePad:e,...t,cacheKey:""};return{...r,cacheKey:Xw(r)}},Yy=(s,e)=>{Gi(s.inputs),s.compute(Fu("AveragePool",s.inputs[0],!1,e))},Ou={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Zy=s=>{let e=s.format;return{format:e,...Ou,cacheKey:e}},ev=(s,e)=>{Gi(s.inputs),s.compute(Fu("GlobalAveragePool",s.inputs[0],!0,e))},Du=(s,e,t,r)=>{let[n,i]=Su(e,r,t),a=`
      value = max(x_val, value);
    `,o="",l=ke("x",e.dataType,e.dims.length),u=["rank"],[h,d,c,_,f]=ku(i,n);return h.push(...ct(e.dims,i)),{name:s,shaderCache:{hint:`${r.cacheKey};${c};${_};${f}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(ye.size(i)/64)},programUniforms:h}),getShaderSource:b=>Iu(b,l,e.dims.length,i.length,n,a,o,e.dataType===10?-65504:-1e5,d,c,_,f)}},tv=(s,e)=>{Gi(s.inputs),s.compute(Du("MaxPool",s.inputs[0],!1,e))},sv=s=>{let e=s.storage_order,t=s.dilations,r=Au(s);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let n={storageOrder:e,dilations:t,...r,cacheKey:""};return{...n,cacheKey:Qw(n)}},rv=s=>{let e=s.format;return{format:e,...Ou,cacheKey:e}},nv=(s,e)=>{Gi(s.inputs),s.compute(Du("GlobalMaxPool",s.inputs[0],!0,e))}}),Jw,Yw,iv,av,FT=Ue(()=>{wt(),Pt(),hs(),Ct(),Jw=(s,e)=>{if(s.length<2||s.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(s.length===3&&s[1].dims===s[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(s.length===3&&s[0].dataType!==s[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(s[0].dataType===6&&s.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(s[1].dims.length!==0&&s[1].dims.length!==1&&s[1].dims.length!==s[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(s.length>2){if(s[0].dataType!==s[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(s[1].dims.length!==s[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!s[1].dims.map((t,r)=>t===s[2].dims[r]).reduce((t,r)=>t&&r,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(e.blockSize>0){if(s[1].dims.length===0||s[1].dims.length===1&&s[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!s[1].dims.map((n,i)=>i===e.axis||n===s[0].dims[i]).reduce((n,i)=>n&&i,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(s[1].dims.length!==s[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let t=s[0].dims[e.axis],r=s[1].dims[e.axis];if(e.blockSize<Math.ceil(t/r)||e.blockSize>Math.ceil(t/(r-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Yw=(s,e)=>{let t=ye.normalizeAxis(e.axis,s[0].dims.length),r=s[0].dataType,n=r===3,i=s[0].dims,a=s[1].dataType,o=ye.size(i),l=r===3||r===2,u=l?[Math.ceil(ye.size(s[0].dims)/4)]:s[0].dims,h=s[1].dims,d=s.length>2?s[2]:void 0,c=d?l?[Math.ceil(ye.size(d.dims)/4)]:d.dims:void 0,_=h.length===0||h.length===1&&h[0]===1,f=_===!1&&h.length===1,b=us(o),I=_&&(!l||b===4),g=I?b:1,M=I&&!l?b:1,k=ke("input",l?12:r,u.length,M),v=ke("scale",a,h.length),y=d?ke("zero_point",l?12:r,c.length):void 0,T=lt("output",a,i.length,g),x=[k,v];y&&x.push(y);let P=[u,h];d&&P.push(c);let O=[{type:12,data:o/g},{type:12,data:t},{type:12,data:e.blockSize},...ct(...P,i)],L=G=>{let K=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${G.registerUniforms(K).declareVariables(...x,T)}
      ${G.mainStart()}
          ${G.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${T.offsetToIndices("global_idx")};

          // Set input x
          ${l?`
            let input = ${k.getByOffset("global_idx / 4")};
            let x_vec = ${n?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${g===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${k.getByOffset("global_idx")};`};

          // Set scale input
          ${_?`let scale_value= ${v.getByOffset("0")}`:f?`
            let scale_index = ${T.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${v.getByOffset("scale_index")};`:`
            var scale_indices: ${v.type.indices} = output_indices;
            let index = ${v.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${v.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${v.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${y?_?l?`
                let zero_point_input = ${y.getByOffset("0")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${y.getByOffset("0")}`:f?l?`
                let zero_point_index = ${T.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${y.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${T.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${y.getByOffset("zero_point_index")};`:l?`
                let zero_point_offset = ${v.indicesToOffset("scale_indices")};
                let zero_point_input = ${y.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${y.getByIndices("scale_indices")};`:`let zero_point_value = ${l?n?"i32":"u32":k.type.value}(0);`};
      // Compute and write output
      ${T.setByOffset("global_idx",`${T.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:e.cacheKey,inputDependencies:y?["rank","rank","rank"]:["rank","rank"]},getShaderSource:L,getRunData:()=>({outputs:[{dims:i,dataType:a}],dispatchGroup:{x:Math.ceil(o/g/64),y:1,z:1},programUniforms:O})}},iv=(s,e)=>{Jw(s.inputs,e),s.compute(Yw(s.inputs,e))},av=s=>Wt({axis:s.axis,blockSize:s.blockSize})}),Zw,eM,ov,OT=Ue(()=>{$r(),wt(),Ct(),Zw=(s,e,t)=>{let r=s===e,n=s<e&&t<0,i=s>e&&t>0;if(r||n||i)throw new Error("Range these inputs' contents are invalid.")},eM=(s,e,t,r)=>{let n=Math.abs(Math.ceil((e-s)/t)),i=[n],a=n,o=[{type:12,data:a},{type:r,data:s},{type:r,data:t},...ct(i)],l=u=>{let h=lt("output",r,i.length),d=h.type.value,c=[{name:"outputSize",type:"u32"},{name:"start",type:d},{name:"delta",type:d}];return`
        ${u.registerUniforms(c).declareVariables(h)}
        ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${d}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${r}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:i,dataType:r}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:o})}},ov=s=>{let e=0,t=0,r=0;s.inputs[0].dataType===6?(e=s.inputs[0].getInt32Array()[0],t=s.inputs[1].getInt32Array()[0],r=s.inputs[2].getInt32Array()[0]):s.inputs[0].dataType===1&&(e=s.inputs[0].getFloat32Array()[0],t=s.inputs[1].getFloat32Array()[0],r=s.inputs[2].getFloat32Array()[0]),es.webgpu.validateInputContent&&Zw(e,t,r),s.compute(eM(e,t,r,s.inputs[0].dataType),{inputs:[]})}}),tM,Lu,zu,sM,lv,uv,DT=Ue(()=>{wt(),Pt(),hs(),Ct(),tM=(s,e,t,r)=>{if(s!=="none"&&r!=="i32"&&r!=="u32"&&r!=="f32")throw new Error(`Input ${r} is not supported with reduction ${s}.`);let n=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,i=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${e}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(s){case"none":return`${e}=${t};`;case"add":return r==="i32"||r==="u32"?`atomicAdd(&${e}, bitcast<${r}>(${t}));`:`
              ${n}bitcast<${r}>(oldValue) + (${t})${i}`;case"max":return r==="i32"||r==="u32"?`atomicMax(&${e}, bitcast<${r}>(${t}));`:`
                ${n}max(bitcast<f32>(oldValue), (${t}))${i}`;case"min":return r==="i32"||r==="u32"?`atomicMin(&${e}, bitcast<${r}>(${t}));`:`${n}min(bitcast<${r}>(oldValue), (${t}))${i}`;case"mul":return`${n}(bitcast<${r}>(oldValue) * (${t}))${i}`;default:throw new Error(`Reduction ${s} is not supported.`)}},Lu=(s,e)=>`${s===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[${e?"i - indices_start":"i"}];
    let dim_value = uniforms.output_shape[${e?"i - indices_start":"i"} + uniforms.last_index_dimension];`}
    
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));`,zu=(s,e,t)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {
        let value = updates[uniforms.num_updates_elements * ${t?"global_idx":"idx"} + i];
        ${tM(s.reduction,"output[data_offset + i]","value",e)}
      }`,sM=(s,e)=>{let t=s[0].dims,r=s[1].dims,n=t,i=1,a=Math.ceil(ye.size(r)/i),o=r[r.length-1],l=ye.sizeFromDimension(t,o),u=ye.sizeFromDimension(r,0)/o,h=[{type:12,data:a},{type:12,data:o},{type:12,data:l},...ct(s[1].dims,s[2].dims,n)],d=c=>{let _=ke("indices",s[1].dataType,s[1].dims.length),f=ke("updates",s[2].dataType,s[2].dims.length,i),b=e.reduction!=="none"&&e.reduction!==""?zb("output",s[0].dataType,n.length):lt("output",s[0].dataType,n.length,i);return`
      ${c.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(_,f,b)}
      ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${e.reduction==="none"}) {
    for (var i = 0; i < ${u}; i = i + 1) {
      for (var j = i + 1; j < ${u}; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  if (${e.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    // Process each index-update pair individually when duplicates exist
    for (var idx = 0u; idx < ${u}u; idx++) {
      var data_offset = 0u;
      for (var i = 0u; i < uniforms.last_index_dimension; i++) {
        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);
        ${Lu(t.length,!1)}
      }
      ${zu(e,b.type.value,!1)}
    }
    return;
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  var indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${Lu(t.length,!0)}
  }
  ${zu(e,b.type.value,!0)}
  }`};return{name:"ScatterND",shaderCache:{hint:`${e.cacheKey}_${e.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:h}),getShaderSource:d}},lv=s=>Wt({reduction:s.reduction}),uv=(s,e)=>{s.compute(sM(s.inputs,e),{inputs:[s.inputs[1],s.inputs[2]],outputs:[]})}}),rM,nM,iM,Bu,aM,oM,lM,uM,cM,dM,hM,pM,Ru,mM,fM,_M,gM,wM,cv,dv,LT=Ue(()=>{wt(),Pt(),hs(),Ct(),rM=(s,e)=>{if(s.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),s.length>0){if(e.mode==="linear"){if(!(s.length===2||s.length===3||s.length===4&&s[0]===1&&s[1]===1||s.length===4&&s[0]===1&&s[3]===1||s.length===5&&s[0]===1&&s[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(e.mode==="cubic"&&!(s.length===2||s.length===4&&s[0]===1&&s[1]===1||s.length===4&&s[0]===1&&s[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},nM=(s,e,t)=>{e.every(n=>n>=0&&n<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let r=new Array(t).fill(1);return e.forEach((n,i)=>r[n]=s[i]),r},iM=(s,e,t,r,n,i)=>{let[a,o,l]=t>10?[1,2,3]:[-1,s.length>1?1:-1,-1],u=s[0].dims.length;if(a>0&&s.length>a&&s[a].dims.length>0)s[a].getFloat32Array().forEach(h=>i.push(h));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(o>0&&s.length>o&&s[o].dims.length===1&&s[o].dims[0]>0){if(s[o].getFloat32Array().forEach(h=>r.push(h)),r.length!==0&&r.length!==u&&t>=18&&r.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");rM(r,e),e.axes.length>0&&nM(r,e.axes,u).forEach((h,d)=>r[d]=h)}if(l>0&&s.length>l&&s[l].dims.length===1&&s[l].dims[0]>0&&(s[l].getBigInt64Array().forEach(h=>n.push(Number(h))),n.length!==0&&n.length!==u&&t>=18&&n.length!==e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(r.length!==0&&r.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(n.length!==0&&n.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof r<"u"&&typeof n<"u"&&r.length>0&&n.length>u)throw new Error("Resize requires only of scales or sizes to be specified")},Bu=(s,e,t,r)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${s}) * (${e});
  let whole = ${r}(big / (${t}));
  let fract = ${r}(big % (${t})) / ${r}(${t});
  return whole + fract;
`,aM=(s,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${e} { `+(()=>{switch(s){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${e}(xResized) / ${e}(xScale);
          } else {
            ${Bu("xResized","lengthOriginal","lengthResized",e)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${e}(xResized) + 0.5) / ${e}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${e}(xResized) + 0.5) / ${e}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${Bu("xResized","lengthOriginal - 1","lengthResized - 1",e)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${e}(roiStart) * ${e}(lengthOriginal - 1) +
                        (${e}(xResized) * ${e}(roiEnd - roiStart) * ${e}(lengthOriginal - 1)) /
                        ${e}(lengthResized - 1);
                  } else {
                    return 0.5 * ${e}(roiStart + roiEnd) * ${e}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${e}xScale * ${e}(lengthResized);
                  const adjustment = ${e}(lengthResized) / outputWidth;
                  const center = ${e}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;case"half_pixel":return`return ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${s} is not supported`)}})()+"}",oM=(s,e,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(s){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${s} is not supported`)}})()+"}",lM=(s,e,t)=>{let r=new Array(t).fill(0).concat(new Array(t).fill(1)),n=s.length===0?r:s.slice();return e.length>0?(e.forEach((i,a)=>{r[i]=n[a],r[a+t]=n[e.length+a]}),r):n},uM=(s,e,t,r)=>{let n=[];if(t.length>0)if(r.length>0){if(s.forEach(i=>n.push(i)),Math.max(...r)>s.length)throw new Error("axes is out of bound");r.forEach((i,a)=>n[i]=t[a])}else t.forEach(i=>n.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");n=s.map((i,a)=>Math.round(i*e[a]))}return n},cM=(s,e,t)=>{let r=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(i=>e[i]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(i=>e[i]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let n=s.slice();return t.axes.length>0?(t.axes.forEach(i=>e[i]=r),t.axes.forEach(i=>n[i]=Math.round(s[i]*e[i]))):(e.fill(r,0,e.length),n.forEach((i,a)=>n[a]=Math.round(i*e[a]))),n},dM=(s,e,t,r,n)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${s.type.indices}) -> array<${s.type.value}, ${t.length}> {
      var original_indices: array<${s.type.value}, ${t.length}>;
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${s.indicesGet("output_indices","i")};
        var scale = ${ut("uniforms.scales","i",r)};
        var roi_low = ${ut("uniforms.roi","i",n)};
        var roi_hi = ${ut("uniforms.roi",`i + ${e.length}`,n)};
        if (scale == 1.0) {
          original_indices[i] = ${s.type.value}(output_index);
        } else {
          var input_shape_i = ${ut("uniforms.input_shape","i",e.length)};
          var output_shape_i = ${ut("uniforms.output_shape","i",t.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,hM=(s,e,t,r,n,i,a)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> ${s.type.indices} {
      var input_indices: ${s.type.indices};
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${ut("uniforms.scales","i",n)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${ut("uniforms.roi","i",i)};
          var roi_hi = ${ut("uniforms.roi",`i + ${t.length}`,i)};
          var input_shape_i = ${ut("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${ut("uniforms.output_shape","i",r.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${a} || (original_idx >= 0 && original_idx < ${e.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${e.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${s.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,pM=(s,e)=>`
    fn checkInputIndices(input_indices: ${s.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var input_index = ${s.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${ut("uniforms.input_shape","i",e.length)}) {
          return false;
        }
      }
      return true;
    }`,Ru=(s,e,t,r)=>s.rank>r?`
    ${s.indicesSet("input_indices",e,"channel")};
    ${s.indicesSet("input_indices",t,"batch")};
`:"",mM=(s,e,t,r,n)=>{let[i,a,o,l]=t.length===2?[-1,0,1,-1]:[0,2,3,1],u=s.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${u} {
      var input_indices: ${s.type.indices};
      ${s.indicesSet("input_indices",a,`max(0, min(row, ${t[a]} - 1))`)};
      ${s.indicesSet("input_indices",o,`max(0, min(col, ${t[o]} - 1))`)};
      ${Ru(s,l,i,2)}
      return ${s.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${e.type.indices}) -> ${u} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${u} = originalIndices[${a}];
      var col:${u} = originalIndices[${o}];
      ${r?`if (row < 0 || row > (${t[a]} - 1) || col < 0 || col > (${t[o]} - 1)) {
        return ${n};
      }`:""};
      row = max(0, min(row, ${t[a]} - 1));
      col = max(0, min(col, ${t[o]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${t.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${t.length>2?`u32(originalIndices[${i}])`:"0"};
      var x11: ${u} = getInputValue(batch, channel, row1, col1);
      var x12: ${u} = getInputValue(batch, channel, row1, col2);
      var x21: ${u} = getInputValue(batch, channel, row2, col1);
      var x22: ${u} = getInputValue(batch, channel, row2, col2);
      var dx1: ${u} = abs(row - ${u}(row1));
      var dx2: ${u} = abs(${u}(row2) - row);
      var dy1: ${u} = abs(col - ${u}(col1));
      var dy2: ${u} = abs(${u}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},fM=(s,e,t,r,n,i,a,o,l,u)=>{let h=t.length===2,[d,c]=h?[0,1]:[2,3],_=s.type.value,f=b=>{let I=b===d?"row":"col";return`
      fn ${I}CubicInterpolation(input_indices: ${s.type.indices}, output_indices: ${e.type.indices}) -> ${_} {
        var output_index = ${e.indicesGet("output_indices",b)};
        var originalIdx: ${_} = getOriginalCoordinateFromResizedCoordinate(output_index, ${n[b]},
        ${r[b]}, ${t[b]}, ${i[b]}, ${i[b]} + ${t.length});
        var fractOriginalIdx: ${_} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${o} && (originalIdx < 0 || originalIdx > (${t[b]} - 1))) {
          return ${l};
        }
        var data: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${I}: ${_} = originalIdx + ${_}(i);
          if (${I} < 0 || ${I} >= ${t[b]}) {
            ${u?`coefs[i + 1] = 0.0;
                        continue;`:o?`return ${l};`:`${I} = max(0, min(${I}, ${t[b]} - 1));`};
          }
        var input_indices_copy: ${s.type.indices} = input_indices;
          ${s.indicesSet("input_indices_copy",b,`u32(${I})`)};
          data[i + 1] = ${b===d?s.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${f(d)};
    ${f(c)};
  fn getCubicInterpolationCoefs(s: ${_}) -> array<${_}, 4> {
    var absS = abs(s);
    var coeffs: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${_} = 1.0 - absS;
    var twoMinusAbsS: ${_} = 2.0 - absS;
    var onePlusAbsS: ${_} = 1.0 + absS;
    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};
    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;
    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${_}, 4>, coefs: array<${_}, 4>) -> ${_} {
    var coefsSum: ${_} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${e.type.indices}) -> ${_} {
    var input_indices: ${s.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},_M=(s,e,t,r,n)=>{let[i,a,o,l,u]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],h=s.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${h} {
      var input_indices: ${s.type.indices};
      ${s.indicesSet("input_indices",a,`max(0, min(depth, ${t[a]} - 1))`)};
      ${s.indicesSet("input_indices",o,`max(0, min(height, ${t[o]} - 1))`)};
      ${s.indicesSet("input_indices",l,`max(0, min(width, ${t[l]} - 1))`)};
      ${Ru(s,u,i,3)}
      return ${s.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${e.type.indices}) -> ${h} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${h} = originalIndices[${a}];
      var height:${h} = originalIndices[${o}];
      var width:${h} = originalIndices[${l}];
      ${r?`if (depth < 0 || depth > (${t[a]} - 1) || height < 0 || height > (${t[o]} - 1) || width < 0 || (width > ${t[l]} - 1)) {
      return ${n};
        }`:""};

    depth = max(0, min(depth, ${t[a]} - 1));
      height = max(0, min(height, ${t[o]} - 1));
      width = max(0, min(width, ${t[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${t.length>3?`u32(originalIndices[${u}])`:"0"};
      var batch: u32 =  ${t.length>3?`u32(originalIndices[${i}])`:"0"};

      var x111: ${h} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${h} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${h} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${h} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${h} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${h} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${h} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${h} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${h} = abs(depth - ${h}(depth1));
      var dx2: ${h} = abs(${h}(depth2) - depth);
      var dy1: ${h} = abs(height - ${h}(height1));
      var dy2: ${h} = abs(${h}(height2) - height);
      var dz1: ${h} = abs(width - ${h}(width1));
      var dz2: ${h} = abs(${h}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},gM=(s,e,t,r,n,i)=>{let a=s.dims,o=lM(i,e.axes,a.length),l=uM(a,r,n,e.axes),u=r.slice();r.length===0&&(u=a.map((M,k)=>M===0?1:l[k]/M),e.keepAspectRatioPolicy!=="stretch"&&(l=cM(a,u,e)));let h=lt("output",s.dataType,l.length),d=ke("input",s.dataType,a.length),c=ye.size(l),_=a.length===l.length&&a.every((M,k)=>M===l[k]),f=e.coordinateTransformMode==="tf_crop_and_resize",b=e.extrapolationValue,I=d.type.value,g=M=>`
      ${_?"":`
      ${aM(e.coordinateTransformMode,I)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${pM(d,a)};
              ${oM(e.nearestMode,t,I)};
              ${hM(d,h,a,l,u.length,o.length,f)};
              `;case"linear":return`
              ${dM(h,a,l,u.length,o.length)};
              ${(()=>{if(a.length===2||a.length===4)return`${mM(d,h,a,f,b)}`;if(a.length===3||a.length===5)return`${_M(d,h,a,f,b)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(a.length===2||a.length===4)return`${fM(d,h,a,l,u,o,e.cubicCoeffA,f,e.extrapolationValue,e.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${M.registerUniform("output_size","u32").registerUniform("scales","f32",u.length).registerUniform("roi","f32",o.length).declareVariables(d,h)}
      ${M.mainStart()}
        ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${_?"output[global_idx] = input[global_idx];":`
        let output_indices = ${h.offsetToIndices("global_idx")};
        var input_indices: ${d.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${d.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${t}|${u.length>0?e.mode==="cubic"?u:u.length:""}|${n.length>0?n:""}|${o.length>0?o:""}|${_}|${e.mode==="nearest"?a.length:a}`,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:[{dims:l,dataType:s.dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:[{type:12,data:c},{type:1,data:u},{type:1,data:o},...ct(a,l)]})}},wM=s=>{let e=s.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},cv=(s,e)=>{let t=[],r=[],n=[],i=wM(s);if(e.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");iM(s.inputs,e,i,t,r,n),s.compute(gM(s.inputs[0],e,i,t,r,n),{inputs:[0]})},dv=s=>{let e=s.antialias,t=s.axes,r=s.coordinateTransformMode,n=s.cubicCoeffA,i=s.excludeOutside!==0,a=s.extrapolationValue,o=s.keepAspectRatioPolicy,l=s.mode,u=s.nearestMode===""?"simple":s.nearestMode;return Wt({antialias:e,axes:t,coordinateTransformMode:r,cubicCoeffA:n,excludeOutside:i,extrapolationValue:a,keepAspectRatioPolicy:o,mode:l,nearestMode:u})}}),MM,bM,hv,zT=Ue(()=>{wt(),Pt(),Ct(),MM=s=>{if(!s||s.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=s[0],t=s[1],r=s[2];if(e.dataType!==t.dataType||e.dataType!==r.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(t.dims[t.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(r.dims.length!==1)throw new Error("Gamma must be 1D");if(r.dims[r.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(s.length>3){let a=s[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(s.length>4){let a=s[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},bM=(s,e,t,r)=>{let n=e.simplified,i=s[0].dims,a=ye.size(i),o=i,l=a,u=i.slice(-1)[0],h=r?i.slice(0,-1).concat(1):[],d=!n&&s.length>3,c=s.length>4,_=r&&t>1,f=r&&t>2,b=t>3,I=64,g=us(u),M=[{type:12,data:l},{type:12,data:g},{type:12,data:u},{type:1,data:e.epsilon}],k=y=>{let T=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],x=[ke("x",s[0].dataType,s[0].dims,g),ke("skip",s[1].dataType,s[1].dims,g),ke("gamma",s[2].dataType,s[2].dims,g)];d&&x.push(ke("beta",s[3].dataType,s[3].dims,g)),c&&x.push(ke("bias",s[4].dataType,s[4].dims,g)),x.push(lt("output",s[0].dataType,o,g)),_&&x.push(lt("mean_output",1,h)),f&&x.push(lt("inv_std_output",1,h)),b&&x.push(lt("input_skip_bias_sum",s[0].dataType,o,g));let P=Ds(s[0].dataType),O=Ds(1,g);return`

      ${y.registerUniforms(T).declareVariables(...x)}
      var<workgroup> sum_shared : array<${O}, ${I}>;
      var<workgroup> sum_squared_shared : array<${O}, ${I}>;

      ${y.mainStart([I,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${I};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${I};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${I-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${c?"bias[offset1d + i]":P+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${b?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${ai(P,g,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${I};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${ln("sum",g)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${ln("square_sum",g)} / f32(uniforms.hidden_size) ${n?"":"- mean * mean"} + uniforms.epsilon);
        ${_?"mean_output[global_idx] = mean;":""}
        ${f?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${n?"":`- ${P}(mean)`}) *
            ${P}(inv_std_dev) * gamma[offset1d + i]
            ${d?"+ beta[offset1d + i]":""};
        }
      }`},v=[{dims:o,dataType:s[0].dataType}];return t>1&&v.push({dims:h,dataType:1}),t>2&&v.push({dims:h,dataType:1}),t>3&&v.push({dims:i,dataType:s[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${g};${_};${f};${b}`,inputDependencies:s.map((y,T)=>"type")},getShaderSource:k,getRunData:()=>({outputs:v,dispatchGroup:{x:Math.ceil(l/u)},programUniforms:M})}},hv=(s,e)=>{MM(s.inputs);let t=[0];s.outputCount>1&&t.push(-3),s.outputCount>2&&t.push(-3),s.outputCount>3&&t.push(3),s.compute(bM(s.inputs,e,s.outputCount,!1),{outputs:t})}}),yM,Ki,vM,ju,xM,TM,pv,mv,BT=Ue(()=>{wt(),Pt(),hs(),Ct(),yM=(s,e)=>{if(!s||s.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");s.slice(1).forEach((t,r)=>{if(s[r+1].dataType!==6&&s[r+1].dataType!==7)throw new Error(`Input ${r} must be an array of int32 or int64`)})},Ki=(s,e)=>{let t=[];if(s.length>e)if(s[e].dataType===7)s[e].getBigInt64Array().forEach(r=>t.push(Number(r)));else if(s[e].dataType===6)s[e].getInt32Array().forEach(r=>t.push(Number(r)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return t},vM=(s,e)=>{if(s.length>1){let t=Ki(s,1),r=Ki(s,2),n=Ki(s,3);return n.length===0&&(n=[...Array(s[0].dims.length).keys()]),Wt({starts:t,ends:r,axes:n})}else return e},ju=(s,e,t,r,n)=>{let i=s;return s<0&&(i+=t[r[e]]),n[e]<0?Math.max(0,Math.min(i,t[r[e]]-1)):Math.max(0,Math.min(i,t[r[e]]))},xM=(s,e,t)=>`fn calculateInputIndices(output_indices: ${e.type.indices}) -> ${s.type.indices} {
          var input_indices: ${s.type.indices};
          var carry = 0u;
          for (var i = ${t.length}; i >= 0; i--) {
            let input_shape_i = ${ut("uniforms.input_shape","i",t.length)};
            let steps_i = ${ut("uniforms.steps","i",t.length)};
            let signs_i = ${ut("uniforms.signs","i",t.length)};
            let starts_i = ${ut("uniforms.starts","i",t.length)};
            var output_index = ${e.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${s.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,TM=(s,e)=>{let t=s[0].dims,r=ye.size(t),n=e.axes.length>0?ye.normalizeAxes(e.axes,t.length):[...Array(t.length).keys()],i=Ki(s,4);i.forEach(g=>g!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(n.length).fill(1));let a=e.starts.map((g,M)=>ju(g,M,t,n,i)),o=e.ends.map((g,M)=>ju(g,M,t,n,i));if(n.length!==a.length||n.length!==o.length)throw new Error("start, ends and axes should have the same number of elements");if(n.length!==t.length)for(let g=0;g<t.length;++g)n.includes(g)||(a.splice(g,0,0),o.splice(g,0,t[g]),i.splice(g,0,1));let l=i.map(g=>Math.sign(g));i.forEach((g,M,k)=>{if(g<0){let v=(o[M]-a[M])/g,y=a[M],T=y+v*i[M];a[M]=T,o[M]=y,k[M]=-g}});let u=t.slice(0);n.forEach((g,M)=>{u[g]=Math.ceil((o[g]-a[g])/i[g])});let h={dims:u,dataType:s[0].dataType},d=lt("output",s[0].dataType,u.length),c=ke("input",s[0].dataType,s[0].dims.length),_=ye.size(u),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:i.length}],b=[{type:12,data:_},{type:12,data:a},{type:6,data:l},{type:12,data:i},...ct(s[0].dims,u)],I=g=>`
      ${g.registerUniforms(f).declareVariables(c,d)}
        ${xM(c,d,t)}
        ${g.mainStart()}
          ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${d.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${d.setByOffset("global_idx",c.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${a.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[h],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:b})}},pv=(s,e)=>{yM(s.inputs,e);let t=vM(s.inputs,e);s.compute(TM(s.inputs,t),{inputs:[0]})},mv=s=>{let e=s.starts,t=s.ends,r=s.axes;return Wt({starts:e,ends:t,axes:r})}}),EM,PM,fv,_v,RT=Ue(()=>{wt(),Pt(),hs(),un(),Ct(),EM=s=>{if(!s||s.length!==1)throw new Error("Softmax op requires 1 input.")},PM=(s,e)=>{let t=s.inputs[0],r=t.dims,n=ye.size(r),i=r.length,a=ye.normalizeAxis(e.axis,i),o=a<r.length-1,l,u=[];o?(u=Array.from({length:i},(x,P)=>P),u[a]=i-1,u[i-1]=a,l=s.compute(or(t,u),{inputs:[t],outputs:[-1]})[0]):l=t;let h=l.dims,d=h[i-1],c=n/d,_=us(d),f=d/_,b=64;c===1&&(b=256);let I=(x,P)=>P===4?`max(max(${x}.x, ${x}.y), max(${x}.z, ${x}.w))`:P===2?`max(${x}.x, ${x}.y)`:P===3?`max(max(${x}.x, ${x}.y), ${x}.z)`:x,g=ke("x",l.dataType,l.dims,_),M=lt("result",l.dataType,l.dims,_),k=g.type.value,v=Ds(l.dataType)==="f32"?`var threadMax = ${k}(-3.402823e+38f);`:`var threadMax = ${k}(-65504.0h);`,y=x=>`
      var<workgroup> rowMaxShared : ${k};
      var<workgroup> rowSumShared : ${k};
      var<workgroup> threadShared : array<${k}, ${b}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${k} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${k}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${x.registerUniform("packedCols","i32").declareVariables(g,M)}
      ${x.mainStart(b)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${b};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${v}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${k}(${I("threadShared[0]",_)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${k}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${k}(${ln("threadShared[0]",_)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,T=s.compute({name:"Softmax",shaderCache:{hint:`${_};${b}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:h,dataType:l.dataType}],dispatchGroup:{x:c},programUniforms:[{type:6,data:f}]}),getShaderSource:y},{inputs:[l],outputs:[o?-1:0]})[0];o&&s.compute(or(T,u),{inputs:[T]})},fv=(s,e)=>{EM(s.inputs),PM(s,e)},_v=s=>Wt({axis:s.axis})}),Nu,CM,SM,kM,gv,jT=Ue(()=>{wt(),Pt(),Ct(),Nu=s=>Array.from(s.getBigInt64Array(),Number),CM=s=>{if(!s||s.length!==2)throw new Error("Tile requires 2 inputs.");if(s[0].dataType!==1&&s[0].dataType!==10&&s[0].dataType!==6&&s[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(s[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(s[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Nu(s[1]).length!==s[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},SM=(s,e)=>{let t=[];for(let r=0;r<s.length;++r)t.push(s[r]*e[r]);return t},kM=(s,e)=>{let t=s[0].dims,r=e??Nu(s[1]),n=SM(t,r),i=ye.size(n),a=s[0].dataType,o=ke("input",a,t.length),l=lt("output",a,n.length),u=h=>`
      const inputShape = ${o.indices(...t)};
      ${h.registerUniform("output_size","u32").declareVariables(o,l)}
      ${h.mainStart()}
      ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${l.offsetToIndices("global_idx")};
      var input_indices: ${o.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${o.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;

        ${o.indicesSet("input_indices","i","input_dim_value")}
      }
      ${l.setByOffset("global_idx",o.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:s[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...ct(s[0].dims,n)]}),getShaderSource:u}},gv=s=>{CM(s.inputs),s.compute(kM(s.inputs),{inputs:[0]})}}),IM,$M,wv,NT=Ue(()=>{wt(),Pt(),Ct(),IM=(s,e,t,r,n)=>{let i=lt("output_data",n,t.length,4),a=ke("a_data",e[1].dataType,e[1].dims.length,4),o=ke("b_data",e[2].dataType,e[2].dims.length,4),l=ke("c_data",e[0].dataType,e[0].dims.length,4),u,h=(d,c,_)=>`select(${c}, ${d}, ${_})`;if(!r)u=i.setByOffset("global_idx",h(a.getByOffset("global_idx"),o.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let d=(c,_,f="")=>{let b=`a_data[index_a${_}][component_a${_}]`,I=`b_data[index_b${_}][component_b${_}]`,g=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`
            let output_indices${_} = ${i.offsetToIndices(`global_idx * 4u + ${_}u`)};
            let offset_a${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,i)};
            let offset_b${_} = ${o.broadcastedIndicesToOffset(`output_indices${_}`,i)};
            let offset_c${_} = ${l.broadcastedIndicesToOffset(`output_indices${_}`,i)};
            let index_a${_} = offset_a${_} / 4u;
            let index_b${_} = offset_b${_} / 4u;
            let index_c${_} = offset_c${_} / 4u;
            let component_a${_} = offset_a${_} % 4u;
            let component_b${_} = offset_b${_} % 4u;
            let component_c${_} = offset_c${_} % 4u;
            ${c}[${_}] = ${f}(${h(b,I,g)});
          `};n===9?u=`
            var data = vec4<u32>(0);
            ${d("data",0,"u32")}
            ${d("data",1,"u32")}
            ${d("data",2,"u32")}
            ${d("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:u=`
            ${d("output_data[global_idx]",0)}
            ${d("output_data[global_idx]",1)}
            ${d("output_data[global_idx]",2)}
            ${d("output_data[global_idx]",3)}
          `}return`
        ${s.registerUniform("vec_size","u32").declareVariables(l,a,o,i)}
        ${s.mainStart()}
        ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${u}
      }`},$M=s=>{let e=s[1].dims,t=s[2].dims,r=s[0].dims,n=s[1].dataType,i=!(ye.areEqual(e,t)&&ye.areEqual(t,r)),a=e,o=ye.size(e);if(i){let u=ui.calcShape(ui.calcShape(e,t,!1),r,!1);if(!u)throw new Error("Can't perform where op on the given tensors");a=u,o=ye.size(a)}let l=Math.ceil(o/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:u=>IM(u,s,a,i,n),getRunData:()=>({outputs:[{dims:a,dataType:n}],dispatchGroup:{x:Math.ceil(o/64/4)},programUniforms:[{type:12,data:l},...ct(r,e,t,a)]})}},wv=s=>{s.compute($M(s.inputs))}}),Mv,UT=Ue(()=>{sT(),Sc(),rT(),nT(),iT(),aT(),oT(),hT(),mT(),fT(),_T(),gT(),wT(),MT(),bT(),yT(),vT(),xT(),TT(),ET(),PT(),CT(),ST(),kT(),IT(),By(),$T(),AT(),FT(),OT(),DT(),Cc(),LT(),Vy(),zT(),BT(),RT(),Ny(),jT(),un(),kc(),NT(),Mv=new Map([["Abs",[h0]],["Acos",[p0]],["Acosh",[m0]],["Add",[q0]],["ArgMax",[l0,tc]],["ArgMin",[o0,tc]],["Asin",[f0]],["Asinh",[_0]],["Atan",[g0]],["Atanh",[w0]],["Attention",[u0]],["AveragePool",[Yy,Jy]],["BatchNormalization",[c0]],["BiasAdd",[d0]],["BiasSplitGelu",[H0]],["Cast",[b0,M0]],["Ceil",[v0]],["Clip",[y0]],["Concat",[ny,iy]],["Conv",[oc,ac]],["ConvTranspose",[fy,my]],["Cos",[x0]],["Cosh",[T0]],["CumSum",[_y,gy]],["DepthToSpace",[wy,My]],["DequantizeLinear",[iv,av]],["Div",[X0]],["Einsum",[by,yy]],["Elu",[E0,Yi]],["Equal",[Q0]],["Erf",[P0]],["Exp",[C0]],["Expand",[vy]],["FastGelu",[xy]],["Floor",[S0]],["FusedConv",[oc,ac]],["Gather",[Ey,Ty]],["GatherElements",[$y,Iy]],["GatherBlockQuantized",[Sy,ky]],["GatherND",[Py,Cy]],["Gelu",[k0]],["Gemm",[Fy,Ay]],["GlobalAveragePool",[ev,Zy]],["GlobalMaxPool",[nv,rv]],["Greater",[ey]],["GreaterOrEqual",[sy]],["GridSample",[Oy,Dy]],["GroupQueryAttention",[Wy]],["HardSigmoid",[z0,L0]],["InstanceNormalization",[Gy]],["LayerNormalization",[Ky]],["LeakyRelu",[I0,Yi]],["Less",[ty]],["LessOrEqual",[ry]],["Log",[G0]],["MatMul",[Hy]],["MatMulNBits",[qy,Xy]],["MaxPool",[tv,sv]],["Mul",[J0]],["MultiHeadAttention",[zy,Ly]],["Neg",[A0]],["Not",[$0]],["Pad",[Qy]],["Pow",[Y0]],["QuickGelu",[K0,Yi]],["Range",[ov]],["Reciprocal",[F0]],["ReduceMin",[s0]],["ReduceMean",[Jb]],["ReduceMax",[t0]],["ReduceSum",[n0]],["ReduceProd",[r0]],["ReduceL1",[Yb]],["ReduceL2",[Zb]],["ReduceLogSum",[a0]],["ReduceLogSumExp",[e0]],["ReduceSumSquare",[i0]],["Relu",[O0]],["Resize",[cv,dv]],["RotaryEmbedding",[Uy]],["ScatterND",[uv,lv]],["Sigmoid",[D0]],["Sin",[B0]],["Sinh",[R0]],["Slice",[pv,mv]],["SkipLayerNormalization",[hv]],["Split",[Ry,jy]],["Sqrt",[j0]],["Softmax",[fv,_v]],["Sub",[Z0]],["Tan",[N0]],["Tanh",[U0]],["ThresholdedRelu",[W0,Yi]],["Tile",[gv]],["Transpose",[Rb,jb]],["Where",[wv]]])}),bv,VT=Ue(()=>{$r(),Gr(),Ct(),bv=class{constructor(s){this.backend=s,this.repo=new Map,this.attributesBound=!1}getArtifact(s){return this.repo.get(s)}setArtifact(s,e){this.repo.set(s,e)}run(s,e,t,r,n){Ir(s.programInfo.name);let i=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let o=[];for(let u of e)o.push({binding:o.length,resource:{buffer:u.buffer}});for(let u of t)o.push({binding:o.length,resource:{buffer:u.buffer}});n&&o.push({binding:o.length,resource:n});let l=i.createBindGroup({layout:s.computePipeline.getBindGroupLayout(0),entries:o,label:s.programInfo.name});if(this.backend.sessionStatus==="capturing"){let u={kernelId:this.backend.currentKernelId,computePipeline:s.computePipeline,bindGroup:l,dispatchGroup:r};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(u)}a.setPipeline(s.computePipeline),a.setBindGroup(0,l),a.dispatchWorkgroups(...r),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),mr(s.programInfo.name)}dispose(){}build(s,e){Ir(s.name);let t=this.backend.device,r=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(u=>{t.features.has(u.feature)&&r.push(`enable ${u.extension};`)});let n=Bb(e,this.backend.device.limits),i=s.getShaderSource(n),a=`${r.join(`
`)}
${n.additionalImplementations}
${i}`,o=t.createShaderModule({code:a,label:s.name});zt("verbose",()=>`[WebGPU] ${s.name} shader code: ${a}`);let l=t.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto",label:s.name});return mr(s.name),{programInfo:s,computePipeline:l,uniformVariablesInfo:n.variablesInfo}}normalizeDispatchGroupSize(s){let e=typeof s=="number"?s:s.x,t=typeof s=="number"?1:s.y||1,r=typeof s=="number"?1:s.z||1,n=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(e<=n&&t<=n&&r<=n)return[e,t,r];let i=e*t*r,a=Math.ceil(Math.sqrt(i));if(a>n){if(a=Math.ceil(Math.cbrt(i)),a>n)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}}),yv={};di(yv,{WebGpuBackend:()=>vv});var AM,FM,OM,vv,WT=Ue(()=>{$r(),wt(),Gr(),Fb(),eT(),UT(),VT(),AM=(s,e)=>{if(e.length!==s.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${s.length}.`);let t=[];for(let r=0;r<s.length;++r){let n=s[r].dataType;switch(e[r]){case"none":{t.push("");break}case"type":{t.push(`${n}`);break}case"rank":{let i=s[r].dims.length;t.push(`${n};${i}`);break}case"dims":{let i=s[r].dims.join(",");t.push(`${n};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[r]}`)}}return t.join("|")},FM=(s,e,t)=>{var n,i;let r=s.name;return(n=s.shaderCache)!=null&&n.hint&&(r+="["+s.shaderCache.hint+"]"),r+=":"+t+`:${AM(e,((i=s.shaderCache)==null?void 0:i.inputDependencies)??new Array(e.length).fill("dims"))}`,r},OM=class{constructor(s){s&&(this.architecture=s.architecture,this.vendor=s.vendor)}isArchitecture(s){return this.architecture===s}isVendor(s){return this.vendor===s}},vv=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let s=this.kernelCustomData.get(this.currentKernelId);return s||(s={},this.kernelCustomData.set(this.currentKernelId,s)),s}async initialize(s,e){this.env=s;let t=[],r={requiredLimits:{maxComputeWorkgroupStorageSize:e.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:e.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:e.limits.maxStorageBufferBindingSize,maxBufferSize:e.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:e.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:e.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:e.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:e.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t},n=i=>e.features.has(i)&&t.push(i)&&!0;n("chromium-experimental-timestamp-query-inside-passes")||n("timestamp-query"),n("shader-f16"),n("subgroups"),this.device=await e.requestDevice(r),this.adapterInfo=new OM(e.info||await e.requestAdapterInfo()),this.gpuDataManager=Lb(this),this.programManager=new bv(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,xc(s.logLevel,!!s.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:e,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let s=this.getCommandEncoder(),e={};this.queryType==="at-passes"&&(e.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=s.beginComputePass(e)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Ir(),this.endComputePass();let s;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),s=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(s,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,s,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&s.mapAsync(GPUMapMode.READ).then(()=>{var r;let e=new BigUint64Array(s.getMappedRange()),t=this.pendingQueries.get(s);for(let n=0;n<e.length/2;n++){let i=t[n],a=i.kernelId,o=this.kernels.get(a),l=o.kernelType,u=o.kernelName,h=i.programName,d=i.inputTensorViews,c=i.outputTensorViews,_=e[n*2],f=e[n*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let b=Number(_-this.queryTimeBase),I=Number(f-this.queryTimeBase);if(!Number.isSafeInteger(b)||!Number.isSafeInteger(I))throw new RangeError("incorrect timestamp range");if((r=this.env.webgpu.profiling)!=null&&r.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:d.map(g=>({dims:g.dims,dataType:Wr(g.dataType)})),outputsMetadata:c.map(g=>({dims:g.dims,dataType:Wr(g.dataType)})),kernelId:a,kernelType:l,kernelName:u,programName:h,startTime:b,endTime:I});else{let g="";d.forEach((k,v)=>{g+=`input[${v}]: [${k.dims}] | ${Wr(k.dataType)}, `});let M="";c.forEach((k,v)=>{M+=`output[${v}]: [${k.dims}] | ${Wr(k.dataType)}, `}),console.log(`[profiling] kernel "${a}|${l}|${u}|${h}" ${g}${M}execution time: ${I-b} ns`)}sa("GPU",`${h}::${_}::${f}`)}s.unmap(),this.pendingQueries.delete(s)}),mr()}run(s,e,t,r,n,i){Ir(s.name);let a=[];for(let M=0;M<e.length;++M){let k=e[M].data;if(k===0)continue;let v=this.gpuDataManager.get(k);if(!v)throw new Error(`no GPU data for input: ${k}`);a.push(v)}let{outputs:o,dispatchGroup:l,programUniforms:u}=s.getRunData(e),h=t.length===0?o.map((M,k)=>k):t;if(h.length!==o.length)throw new Error(`Output size ${h.length} must be equal to ${o.length}.`);let d=[],c=[];for(let M=0;M<o.length;++M){if(!Number.isInteger(h[M])||h[M]<-3||h[M]>=i)throw new Error(`Invalid output index: ${h[M]}`);if(h[M]===-3)continue;let k=h[M]===-1,v=h[M]===-2,y=k||v?n(o[M].dataType,o[M].dims):r(h[M],o[M].dataType,o[M].dims);if(d.push(y),y.data===0)continue;let T=this.gpuDataManager.get(y.data);if(!T)throw new Error(`no GPU data for output: ${y.data}`);if(k&&this.temporaryData.push(T),v){let x=this.kernelPersistentData.get(this.currentKernelId);x||(x=[],this.kernelPersistentData.set(this.currentKernelId,x)),x.push(T)}c.push(T)}if(a.length!==e.length||c.length!==d.length){if(c.length===0)return mr(s.name),d;throw new Error(`Program ${s.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let _;if(u){let M=0,k=[];u.forEach(x=>{let P=typeof x.data=="number"?[x.data]:x.data;if(P.length===0)return;let O=x.type===10?2:4,L,G;x.type===10?(G=P.length>4?16:P.length>2?8:P.length*O,L=P.length>4?16:O*P.length):(G=P.length<=2?P.length*O:16,L=16),M=Math.ceil(M/G)*G,k.push(M);let K=x.type===10?8:4;M+=P.length>4?Math.ceil(P.length/K)*L:P.length*O});let v=16;M=Math.ceil(M/v)*v;let y=new ArrayBuffer(M);u.forEach((x,P)=>{let O=k[P],L=typeof x.data=="number"?[x.data]:x.data;if(x.type===6)new Int32Array(y,O,L.length).set(L);else if(x.type===12)new Uint32Array(y,O,L.length).set(L);else if(x.type===10)new Uint16Array(y,O,L.length).set(L);else if(x.type===1)new Float32Array(y,O,L.length).set(L);else throw new Error(`Unsupported uniform type: ${Wr(x.type)}`)});let T=this.gpuDataManager.create(M,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(T.buffer,0,y,0,M),this.gpuDataManager.release(T.id),_={offset:0,size:M,buffer:T.buffer}}let f=this.programManager.normalizeDispatchGroupSize(l),b=f[1]===1&&f[2]===1,I=FM(s,e,b),g=this.programManager.getArtifact(I);if(g||(g=this.programManager.build(s,f),this.programManager.setArtifact(I,g),zt("info",()=>`[artifact] key: ${I}, programName: ${s.name}`)),u&&g.uniformVariablesInfo){if(u.length!==g.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${g.uniformVariablesInfo.length}, got ${u.length} in program "${g.programInfo.name}".`);for(let M=0;M<u.length;M++){let k=u[M],v=k.type,y=typeof k.data=="number"?1:k.data.length,[T,x]=g.uniformVariablesInfo[M];if(v!==T||y!==x)throw new Error(`Uniform variable ${M} mismatch: expect type ${T} with size ${x}, got type ${v} with size ${y} in program "${g.programInfo.name}".`)}}if(zt("info",()=>`[ProgramManager] run "${s.name}" (key=${I}) with ${f[0]}x${f[1]}x${f[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let M={kernelId:this.currentKernelId,programName:g.programInfo.name,inputTensorViews:e,outputTensorViews:d};this.pendingKernels.push(M),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(M)}return this.programManager.run(g,a,c,f,_),mr(s.name),d}upload(s,e){this.gpuDataManager.upload(s,e)}memcpy(s,e){this.gpuDataManager.memcpy(s,e)}async download(s,e){await this.gpuDataManager.download(s,e)}alloc(s){return this.gpuDataManager.create(s).id}free(s){return this.gpuDataManager.release(s)}createKernel(s,e,t,r){let n=Mv.get(s);if(!n)throw new Error(`kernel not implemented: ${s}`);let i={kernelType:s,kernelName:r,kernelEntry:n[0],attributes:[n[1],t]};this.kernels.set(e,i)}releaseKernel(s){let e=this.kernelPersistentData.get(s);if(e){for(let t of e)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(s)}this.kernelCustomData.delete(s),this.kernels.delete(s)}computeKernel(s,e,t){let r=this.kernels.get(s);if(!r)throw new Error(`kernel not created: ${s}`);let n=r.kernelType,i=r.kernelName,a=r.kernelEntry,o=r.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${n}] ${i}" is not allowed to be called recursively`);this.currentKernelId=s,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),zt("info",()=>`[WebGPU] Start to run kernel "[${n}] ${i}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(e,o[1]),0}catch(u){return t.push(Promise.resolve(`[WebGPU] Kernel "[${n}] ${i}" failed. ${u}`)),1}finally{l&&t.push(this.device.popErrorScope().then(u=>u?`GPU validation error for kernel "[${n}] ${i}": ${u.message}`:null));for(let u of this.temporaryData)this.gpuDataManager.release(u.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(s,e,t,r){let n=this.sessionExternalDataMapping.get(s);n||(n=new Map,this.sessionExternalDataMapping.set(s,n));let i=n.get(e),a=this.gpuDataManager.registerExternalBuffer(t,r,i);return n.set(e,[a,t]),a}unregisterBuffers(s){let e=this.sessionExternalDataMapping.get(s);e&&(e.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(s))}getBuffer(s){let e=this.gpuDataManager.get(s);if(!e)throw new Error(`no GPU data for buffer: ${s}`);return e.buffer}createDownloader(s,e,t){return async()=>{let r=await Yu(this,s,e);return Tc(r.buffer,t)}}writeTimestamp(s){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,s)}setQueryType(){var s;this.queryType="none",(((s=this.env.webgpu.profiling)==null?void 0:s.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){zt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){zt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){zt("info","replay"),this.sessionStatus="replaying";let s=this.capturedCommandList.get(this.currentSessionId),e=this.capturedPendingKernels.get(this.currentSessionId),t=s.length;this.pendingKernels=[];for(let r=0;r<t;r++){let n=this.getComputePassEncoder(),i=s[r];this.writeTimestamp(this.pendingDispatchNumber*2),n.setPipeline(i.computePipeline),n.setBindGroup(0,i.bindGroup),n.dispatchWorkgroups(...i.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(e[r]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(s){this.unregisterBuffers(s),this.capturedCommandList.has(s)&&this.capturedCommandList.delete(s),this.capturedPendingKernels.has(s)&&this.capturedPendingKernels.delete(s),this.gpuDataManager.onReleaseSession(s)}onRunStart(s){this.currentSessionId=s,this.setQueryType()}}}),xv={};di(xv,{init:()=>Tv});var lo,DM,Tv,GT=Ue(()=>{wt(),Gr(),Pt(),Zx(),lo=class Ev{constructor(e,t,r,n){this.module=e,this.dataType=t,this.data=r,this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=ye.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=ye.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=ye.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let e=ye.size(this.dims);return e===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(ye.size(e)!==ye.size(this.dims))throw new Error("Invalid new shape");return new Ev(this.module,this.dataType,this.data,e)}},DM=class{constructor(s,e,t){this.module=s,this.backend=e,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=e.adapterInfo;let r=s.PTR_SIZE,n=t/s.PTR_SIZE,i=r===4?"i32":"i64";this.opKernelContext=Number(s.getValue(r*n++,i));let a=Number(s.getValue(r*n++,i));this.outputCount=Number(s.getValue(r*n++,i)),this.customDataOffset=Number(s.getValue(r*n++,"*")),this.customDataSize=Number(s.getValue(r*n++,i));let o=[];for(let l=0;l<a;l++){let u=Number(s.getValue(r*n++,i)),h=Number(s.getValue(r*n++,"*")),d=Number(s.getValue(r*n++,i)),c=[];for(let _=0;_<d;_++)c.push(Number(s.getValue(r*n++,i)));o.push(new lo(s,u,h,c))}this.inputs=o}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(s,e){var a;let t=((a=e==null?void 0:e.inputs)==null?void 0:a.map(o=>typeof o=="number"?this.inputs[o]:o))??this.inputs,r=(e==null?void 0:e.outputs)??[],n=(o,l,u)=>new lo(this.module,l,this.output(o,u),u),i=(o,l)=>{let u=Fn(o,l);if(!u)throw new Error(`Unsupported data type: ${o}`);let h=u>0?this.backend.gpuDataManager.create(u).id:0;return new lo(this.module,o,h,l)};return this.backend.run(s,t,r,n,i,this.outputCount)}output(s,e){let t=this.module.stackSave();try{let r=this.module.PTR_SIZE,n=r===4?"i32":"i64",i=this.module.stackAlloc((1+e.length)*r);this.module.setValue(i,e.length,n);for(let a=0;a<e.length;a++)this.module.setValue(i+r*(a+1),e[a],n);return this.module._JsepOutput(this.opKernelContext,s,i)}catch(r){throw new Error(`Failed to generate kernel's output[${s}] with dims [${e}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${r}`)}finally{this.module.stackRestore(t)}}},Tv=async(s,e,t,r)=>{let n=e.jsepInit;if(!n)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(s==="webgpu"){let i=(WT(),ta(yv)).WebGpuBackend,a=new i;await a.initialize(t,r),n("webgpu",[a,o=>a.alloc(Number(o)),o=>a.free(o),(o,l,u,h=!1)=>{if(h)zt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(o)}, dst=${Number(l)}, size=${Number(u)}`),a.memcpy(Number(o),Number(l));else{zt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(o)}, gpuDataId=${Number(l)}, size=${Number(u)}`);let d=e.HEAPU8.subarray(Number(o>>>0),Number(o>>>0)+Number(u));a.upload(Number(l),d)}},async(o,l,u)=>{zt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${o}, dataOffset=${l}, size=${u}`),await a.download(Number(o),()=>e.HEAPU8.subarray(Number(l)>>>0,Number(l+u)>>>0))},(o,l,u)=>a.createKernel(o,Number(l),u,e.UTF8ToString(e._JsepGetNodeName(Number(l)))),o=>a.releaseKernel(o),(o,l,u,h)=>{zt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${o}, contextDataOffset=${l}`);let d=new DM(e,a,Number(l));return a.computeKernel(Number(o),d,h)},()=>a.captureBegin(),()=>a.captureEnd(),()=>a.replay()])}else{let i=new Db(t);n("webnn",[i,()=>i.reserveTensorId(),a=>i.releaseTensorId(a),async(a,o,l,u,h)=>i.ensureTensor(a,o,l,u,h),(a,o)=>{i.uploadTensor(a,o)},async(a,o)=>i.downloadTensor(a,o)])}}}),LM,Dc,Lc,an,zM,Uu,xo,zc,Bc,Vu,Rc,jc,Nc,Pv=Ue(()=>{Qx(),Jx(),wt(),Rn(),wc(),kb(),LM=(s,e)=>{Yt()._OrtInit(s,e)!==0&&qt("Can't initialize onnxruntime.")},Dc=async s=>{LM(s.wasm.numThreads,wo(s.logLevel))},Lc=async(s,e)=>{var t,r;(r=(t=Yt()).asyncInit)==null||r.call(t);{let n=(GT(),ta(xv)).init;if(e==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let i=s.webgpu.adapter;if(i){if(typeof i.limits!="object"||typeof i.features!="object"||typeof i.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let a=s.webgpu.powerPreference;if(a!==void 0&&a!=="low-power"&&a!=="high-performance")throw new Error(`Invalid powerPreference setting: "${a}"`);let o=s.webgpu.forceFallbackAdapter;if(o!==void 0&&typeof o!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${o}"`);if(i=await navigator.gpu.requestAdapter({powerPreference:a,forceFallbackAdapter:o}),!i)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await n("webgpu",Yt(),s,i)}if(e==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await n("webnn",Yt(),s)}}},an=new Map,zM=s=>{let e=Yt(),t=e.stackSave();try{let r=e.PTR_SIZE,n=e.stackAlloc(2*r);e._OrtGetInputOutputCount(s,n,n+r)!==0&&qt("Can't get session input/output count.");let i=r===4?"i32":"i64";return[Number(e.getValue(n,i)),Number(e.getValue(n+r,i))]}finally{e.stackRestore(t)}},Uu=(s,e)=>{let t=Yt(),r=t.stackSave(),n=0;try{let i=t.PTR_SIZE,a=t.stackAlloc(2*i);t._OrtGetInputOutputMetadata(s,e,a,a+i)!==0&&qt("Can't get session input/output metadata.");let o=Number(t.getValue(a,"*"));n=Number(t.getValue(a+i,"*"));let l=t.HEAP32[n/4];if(l===0)return[o,0];let u=t.HEAPU32[n/4+1],h=[];for(let d=0;d<u;d++){let c=Number(t.getValue(n+8+d*i,"*"));h.push(c!==0?t.UTF8ToString(c):Number(t.getValue(n+8+(d+u)*i,"*")))}return[o,l,h]}finally{t.stackRestore(r),n!==0&&t._OrtFree(n)}},xo=s=>{let e=Yt(),t=e._malloc(s.byteLength);if(t===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${s.byteLength}.`);return e.HEAPU8.set(s,t),[t,s.byteLength]},zc=async(s,e)=>{var d,c,_,f;let t,r,n=Yt();Array.isArray(s)?[t,r]=s:s.buffer===n.HEAPU8.buffer?[t,r]=[s.byteOffset,s.byteLength]:[t,r]=xo(s);let i=0,a=0,o=0,l=[],u=[],h=[];try{if([a,l]=await Sb(e),(e==null?void 0:e.externalData)&&n.mountExternalData){let P=[];for(let O of e.externalData){let L=typeof O=="string"?O:O.path;P.push(vc(typeof O=="string"?O:O.data).then(G=>{n.mountExternalData(L,G)}))}await Promise.all(P)}for(let P of(e==null?void 0:e.executionProviders)??[])if((typeof P=="string"?P:P.name)==="webnn"){if(n.shouldTransferToMLTensor=!1,typeof P!="string"){let O=P,L=O==null?void 0:O.context,G=O==null?void 0:O.gpuDevice,K=O==null?void 0:O.deviceType,R=O==null?void 0:O.powerPreference;L?n.currentContext=L:G?n.currentContext=await n.webnnCreateMLContext(G):n.currentContext=await n.webnnCreateMLContext({deviceType:K,powerPreference:R})}else n.currentContext=await n.webnnCreateMLContext();break}i=await n._OrtCreateSession(t,r,a),(d=n.webgpuOnCreateSession)==null||d.call(n,i),i===0&&qt("Can't create a session."),(c=n.jsepOnCreateSession)==null||c.call(n),n.currentContext&&(n.webnnRegisterMLContext(i,n.currentContext),n.currentContext=void 0,n.shouldTransferToMLTensor=!0);let[b,I]=zM(i),g=!!(e!=null&&e.enableGraphCapture),M=[],k=[],v=[],y=[],T=[];for(let P=0;P<b;P++){let[O,L,G]=Uu(i,P);O===0&&qt("Can't get an input name."),u.push(O);let K=n.UTF8ToString(O);M.push(K),v.push(L===0?{name:K,isTensor:!1}:{name:K,isTensor:!0,type:Wr(L),shape:G})}for(let P=0;P<I;P++){let[O,L,G]=Uu(i,P+b);O===0&&qt("Can't get an output name."),h.push(O);let K=n.UTF8ToString(O);k.push(K),y.push(L===0?{name:K,isTensor:!1}:{name:K,isTensor:!0,type:Wr(L),shape:G});{if(g&&(e==null?void 0:e.preferredOutputLocation)===void 0){T.push("gpu-buffer");continue}let R=typeof(e==null?void 0:e.preferredOutputLocation)=="string"?e.preferredOutputLocation:((_=e==null?void 0:e.preferredOutputLocation)==null?void 0:_[K])??"cpu";if(R!=="cpu"&&R!=="cpu-pinned"&&R!=="gpu-buffer"&&R!=="ml-tensor")throw new Error(`Not supported preferred output location: ${R}.`);if(g&&R!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${R}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);T.push(R)}}let x=null;return T.some(P=>P==="gpu-buffer"||P==="ml-tensor")&&(o=n._OrtCreateBinding(i),o===0&&qt("Can't create IO binding."),x={handle:o,outputPreferredLocations:T,outputPreferredLocationsEncoded:T.map(P=>Qu(P))}),an.set(i,[i,u,h,x,g,!1]),[i,M,k,v,y]}catch(b){throw u.forEach(I=>n._OrtFree(I)),h.forEach(I=>n._OrtFree(I)),o!==0&&n._OrtReleaseBinding(o)!==0&&qt("Can't release IO binding."),i!==0&&n._OrtReleaseSession(i)!==0&&qt("Can't release session."),b}finally{n._free(t),a!==0&&n._OrtReleaseSessionOptions(a)!==0&&qt("Can't release session options."),l.forEach(b=>n._free(b)),(f=n.unmountExternalData)==null||f.call(n)}},Bc=s=>{var l,u,h;let e=Yt(),t=an.get(s);if(!t)throw new Error(`cannot release session. invalid session id: ${s}`);let[r,n,i,a,o]=t;a&&(o&&e._OrtClearBoundOutputs(a.handle)!==0&&qt("Can't clear bound outputs."),e._OrtReleaseBinding(a.handle)!==0&&qt("Can't release IO binding.")),(l=e.jsepOnReleaseSession)==null||l.call(e,s),(u=e.webnnOnReleaseSession)==null||u.call(e,s),(h=e.webgpuOnReleaseSession)==null||h.call(e,s),n.forEach(d=>e._OrtFree(d)),i.forEach(d=>e._OrtFree(d)),e._OrtReleaseSession(r)!==0&&qt("Can't release session."),an.delete(s)},Vu=async(s,e,t,r,n,i,a=!1)=>{if(!s){e.push(0);return}let o=Yt(),l=o.PTR_SIZE,u=s[0],h=s[1],d=s[3],c=d,_,f;if(u==="string"&&(d==="gpu-buffer"||d==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(a&&d!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(d==="gpu-buffer"){let g=s[2].gpuBuffer;f=Fn(ni(u),h);{let M=o.jsepRegisterBuffer;if(!M)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');_=M(r,i,g,f)}}else if(d==="ml-tensor"){let g=s[2].mlTensor;f=Fn(ni(u),h);let M=o.webnnRegisterMLTensor;if(!M)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');_=M(r,g,ni(u),h)}else{let g=s[2];if(Array.isArray(g)){f=l*g.length,_=o._malloc(f),t.push(_);for(let M=0;M<g.length;M++){if(typeof g[M]!="string")throw new TypeError(`tensor data at index ${M} is not a string`);o.setValue(_+M*l,Cr(g[M],t),"*")}}else{let M=o.webnnIsGraphInput;if(u!=="string"&&M){let k=o.UTF8ToString(n);if(M(r,k)){let v=ni(u);f=Fn(v,h),c="ml-tensor";let y=o.webnnCreateTemporaryTensor,T=o.webnnUploadTensor;if(!y||!T)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let x=await y(r,v,h);T(x,new Uint8Array(g.buffer,g.byteOffset,g.byteLength)),_=x}else f=g.byteLength,_=o._malloc(f),t.push(_),o.HEAPU8.set(new Uint8Array(g.buffer,g.byteOffset,f),_)}else f=g.byteLength,_=o._malloc(f),t.push(_),o.HEAPU8.set(new Uint8Array(g.buffer,g.byteOffset,f),_)}}let b=o.stackSave(),I=o.stackAlloc(4*h.length);try{h.forEach((M,k)=>o.setValue(I+k*l,M,l===4?"i32":"i64"));let g=o._OrtCreateTensor(ni(u),_,f,I,h.length,Qu(c));g===0&&qt(`Can't create tensor for input/output. session=${r}, index=${i}.`),e.push(g)}finally{o.stackRestore(b)}},Rc=async(s,e,t,r,n,i)=>{var G,K,R,te;let a=Yt(),o=a.PTR_SIZE,l=an.get(s);if(!l)throw new Error(`cannot run inference. invalid session id: ${s}`);let u=l[0],h=l[1],d=l[2],c=l[3],_=l[4],f=l[5],b=e.length,I=r.length,g=0,M=[],k=[],v=[],y=[],T=a.stackSave(),x=a.stackAlloc(b*o),P=a.stackAlloc(b*o),O=a.stackAlloc(I*o),L=a.stackAlloc(I*o);try{[g,M]=Cb(i);for(let Z=0;Z<b;Z++)await Vu(t[Z],k,y,s,h[e[Z]],e[Z],_);for(let Z=0;Z<I;Z++)await Vu(n[Z],v,y,s,d[r[Z]],b+r[Z],_);for(let Z=0;Z<b;Z++)a.setValue(x+Z*o,k[Z],"*"),a.setValue(P+Z*o,h[e[Z]],"*");for(let Z=0;Z<I;Z++)a.setValue(O+Z*o,v[Z],"*"),a.setValue(L+Z*o,d[r[Z]],"*");if(c&&!f){let{handle:Z,outputPreferredLocations:ne,outputPreferredLocationsEncoded:me}=c;if(h.length!==b)throw new Error(`input count from feeds (${b}) is expected to be always equal to model's input count (${h.length}).`);for(let ce=0;ce<b;ce++){let j=e[ce];await a._OrtBindInput(Z,h[j],k[ce])!==0&&qt(`Can't bind input[${ce}] for session=${s}.`)}for(let ce=0;ce<I;ce++){let j=r[ce];(G=n[ce])!=null&&G[3]?a._OrtBindOutput(Z,d[j],v[ce],0)!==0&&qt(`Can't bind pre-allocated output[${ce}] for session=${s}.`):a._OrtBindOutput(Z,d[j],0,me[j])!==0&&qt(`Can't bind output[${ce}] to ${ne[ce]} for session=${s}.`)}an.set(s,[u,h,d,c,_,!0])}(K=a.jsepOnRunStart)==null||K.call(a,u),(R=a.webnnOnRunStart)==null||R.call(a,u);let H;c?H=await a._OrtRunWithBinding(u,c.handle,I,O,g):H=await a._OrtRun(u,P,x,b,L,I,O,g),H!==0&&qt("failed to call OrtRun().");let ee=[];for(let Z=0;Z<I;Z++){let ne=Number(a.getValue(O+Z*o,"*"));if(ne===v[Z]){ee.push(n[Z]);continue}let me=a.stackSave(),ce=a.stackAlloc(4*o),j=!1,F,V=0;try{a._OrtGetTensorData(ne,ce,ce+o,ce+2*o,ce+3*o)!==0&&qt(`Can't access output tensor data on index ${Z}.`);let re=o===4?"i32":"i64",fe=Number(a.getValue(ce,re));V=a.getValue(ce+o,"*");let ae=a.getValue(ce+o*2,"*"),ve=Number(a.getValue(ce+o*3,re)),ze=[];for(let Q=0;Q<ve;Q++)ze.push(Number(a.getValue(ae+Q*o,re)));a._OrtFree(ae)!==0&&qt("Can't free memory for tensor dims.");let Ge=ze.reduce((Q,oe)=>Q*oe,1);F=Wr(fe);let $e=c==null?void 0:c.outputPreferredLocations[r[Z]];if(F==="string"){if($e==="gpu-buffer"||$e==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let Q=[];for(let oe=0;oe<Ge;oe++){let W=a.getValue(V+oe*o,"*"),be=a.getValue(V+(oe+1)*o,"*"),Ie=oe===Ge-1?void 0:be-W;Q.push(a.UTF8ToString(W,Ie))}ee.push([F,ze,Q,"cpu"])}else if($e==="gpu-buffer"&&Ge>0){let Q=a.jsepGetBuffer;if(!Q)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let oe=Q(V),W=Fn(fe,Ge);if(W===void 0||!bc(F))throw new Error(`Unsupported data type: ${F}`);j=!0,ee.push([F,ze,{gpuBuffer:oe,download:a.jsepCreateDownloader(oe,W,F),dispose:()=>{a._OrtReleaseTensor(ne)!==0&&qt("Can't release tensor.")}},"gpu-buffer"])}else if($e==="ml-tensor"&&Ge>0){let Q=a.webnnEnsureTensor,oe=a.webnnIsInt64Supported;if(!Q||!oe)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(Fn(fe,Ge)===void 0||!yc(F))throw new Error(`Unsupported data type: ${F}`);if(F==="int64"&&!oe(s))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let W=await Q(s,V,fe,ze,!1);j=!0,ee.push([F,ze,{mlTensor:W,download:a.webnnCreateMLTensorDownloader(V,F),dispose:()=>{a.webnnReleaseTensorId(V),a._OrtReleaseTensor(ne)}},"ml-tensor"])}else{let Q=Mc(F),oe=new Q(Ge);new Uint8Array(oe.buffer,oe.byteOffset,oe.byteLength).set(a.HEAPU8.subarray(V,V+oe.byteLength)),ee.push([F,ze,oe,"cpu"])}}finally{a.stackRestore(me),F==="string"&&V&&a._free(V),j||a._OrtReleaseTensor(ne),(te=a.webnnOnRunEnd)==null||te.call(a,u)}}return c&&!_&&(a._OrtClearBoundOutputs(c.handle)!==0&&qt("Can't clear bound outputs."),an.set(s,[u,h,d,c,_,!1])),ee}finally{a.stackRestore(T),k.forEach(H=>a._OrtReleaseTensor(H)),v.forEach(H=>a._OrtReleaseTensor(H)),y.forEach(H=>a._free(H)),g!==0&&a._OrtReleaseRunOptions(g),M.forEach(H=>a._free(H))}},jc=s=>{let e=Yt(),t=an.get(s);if(!t)throw new Error("invalid session id");let r=t[0],n=e._OrtEndProfiling(r);n===0&&qt("Can't get an profile file name."),e._OrtFree(n)},Nc=s=>{let e=[];for(let t of s){let r=t[2];!Array.isArray(r)&&"buffer"in r&&e.push(r.buffer)}return e}}),on,rr,si,Hi,qi,uo,Wu,co,kn,In,BM,Cv,Sv,kv,Iv,$v,Av,Fv,Ov=Ue(()=>{$r(),Pv(),Rn(),_c(),on=()=>!!es.wasm.proxy&&typeof document<"u",si=!1,Hi=!1,qi=!1,co=new Map,kn=(s,e)=>{let t=co.get(s);t?t.push(e):co.set(s,[e])},In=()=>{if(si||!Hi||qi||!rr)throw new Error("worker not ready")},BM=s=>{switch(s.data.type){case"init-wasm":si=!1,s.data.err?(qi=!0,Wu[1](s.data.err)):(Hi=!0,Wu[0]()),uo&&(URL.revokeObjectURL(uo),uo=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let e=co.get(s.data.type);s.data.err?e.shift()[1](s.data.err):e.shift()[0](s.data.out);break}}},Cv=async()=>{if(!Hi){if(si)throw new Error("multiple calls to 'initWasm()' detected.");if(qi)throw new Error("previous call to 'initWasm()' failed.");if(si=!0,on())return new Promise((s,e)=>{rr==null||rr.terminate(),Eb().then(([t,r])=>{try{rr=r,rr.onerror=i=>e(i),rr.onmessage=BM,Wu=[s,e];let n={type:"init-wasm",in:es};!n.in.wasm.wasmPaths&&(t||Xu)&&(n.in.wasm.wasmPaths={wasm:new URL("https://solidsnail.github.io/llmini.js/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href}),rr.postMessage(n),uo=t}catch(n){e(n)}},e)});try{await gc(es.wasm),await Dc(es),Hi=!0}catch(s){throw qi=!0,s}finally{si=!1}}},Sv=async s=>{if(on())return In(),new Promise((e,t)=>{kn("init-ep",[e,t]);let r={type:"init-ep",in:{epName:s,env:es}};rr.postMessage(r)});await Lc(es,s)},kv=async s=>on()?(In(),new Promise((e,t)=>{kn("copy-from",[e,t]);let r={type:"copy-from",in:{buffer:s}};rr.postMessage(r,[s.buffer])})):xo(s),Iv=async(s,e)=>{if(on()){if(e!=null&&e.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return In(),new Promise((t,r)=>{kn("create",[t,r]);let n={type:"create",in:{model:s,options:{...e}}},i=[];s instanceof Uint8Array&&i.push(s.buffer),rr.postMessage(n,i)})}else return zc(s,e)},$v=async s=>{if(on())return In(),new Promise((e,t)=>{kn("release",[e,t]);let r={type:"release",in:s};rr.postMessage(r)});Bc(s)},Av=async(s,e,t,r,n,i)=>{if(on()){if(t.some(a=>a[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(n.some(a=>a))throw new Error("pre-allocated output tensor is not supported for proxy.");return In(),new Promise((a,o)=>{kn("run",[a,o]);let l=t,u={type:"run",in:{sessionId:s,inputIndices:e,inputs:l,outputIndices:r,options:i}};rr.postMessage(u,Nc(l))})}else return Rc(s,e,t,r,n,i)},Fv=async s=>{if(on())return In(),new Promise((e,t)=>{kn("end-profiling",[e,t]);let r={type:"end-profiling",in:s};rr.postMessage(r)});jc(s)}}),Gu,RM,Dv,KT=Ue(()=>{$r(),Ov(),wt(),fc(),kb(),Gu=(s,e)=>{switch(s.location){case"cpu":return[s.type,s.dims,s.data,"cpu"];case"gpu-buffer":return[s.type,s.dims,{gpuBuffer:s.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[s.type,s.dims,{mlTensor:s.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${s.location} for ${e()}`)}},RM=s=>{switch(s[3]){case"cpu":return new Sr(s[0],s[2],s[1]);case"gpu-buffer":{let e=s[0];if(!bc(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:t,download:r,dispose:n}=s[2];return Sr.fromGpuBuffer(t,{dataType:e,dims:s[1],download:r,dispose:n})}case"ml-tensor":{let e=s[0];if(!yc(e))throw new Error(`not supported data type: ${e} for deserializing MLTensor tensor`);let{mlTensor:t,download:r,dispose:n}=s[2];return Sr.fromMLTensor(t,{dataType:e,dims:s[1],download:r,dispose:n})}default:throw new Error(`invalid data location: ${s[3]}`)}},Dv=class{async fetchModelAndCopyToWasmMemory(s){return kv(await vc(s))}async loadModel(s,e){Ir();let t;typeof s=="string"?t=await this.fetchModelAndCopyToWasmMemory(s):t=s,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await Iv(t,e),mr()}async dispose(){return $v(this.sessionId)}async run(s,e,t){Ir();let r=[],n=[];Object.entries(s).forEach(d=>{let c=d[0],_=d[1],f=this.inputNames.indexOf(c);if(f===-1)throw new Error(`invalid input '${c}'`);r.push(_),n.push(f)});let i=[],a=[];Object.entries(e).forEach(d=>{let c=d[0],_=d[1],f=this.outputNames.indexOf(c);if(f===-1)throw new Error(`invalid output '${c}'`);i.push(_),a.push(f)});let o=r.map((d,c)=>Gu(d,()=>`input "${this.inputNames[n[c]]}"`)),l=i.map((d,c)=>d?Gu(d,()=>`output "${this.outputNames[a[c]]}"`):null),u=await Av(this.sessionId,n,o,a,l,t),h={};for(let d=0;d<u.length;d++)h[this.outputNames[a[d]]]=i[d]??RM(u[d]);return mr(),h}startProfiling(){}endProfiling(){Fv(this.sessionId)}}}),Lv={};di(Lv,{OnnxruntimeWebAssemblyBackend:()=>cc,initializeFlags:()=>uc,wasmBackend:()=>zv});var uc,cc,zv,HT=Ue(()=>{$r(),Ov(),KT(),uc=()=>{(typeof es.wasm.initTimeout!="number"||es.wasm.initTimeout<0)&&(es.wasm.initTimeout=0);let s=es.wasm.simd;if(typeof s!="boolean"&&s!==void 0&&s!=="fixed"&&s!=="relaxed"&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${s}". Reset it to \`false\` and ignore SIMD feature checking.`),es.wasm.simd=!1),typeof es.wasm.proxy!="boolean"&&(es.wasm.proxy=!1),typeof es.wasm.trace!="boolean"&&(es.wasm.trace=!1),typeof es.wasm.numThreads!="number"||!Number.isInteger(es.wasm.numThreads)||es.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)es.wasm.numThreads=1;else{let e=typeof navigator>"u"?Fx("node:os").cpus().length:navigator.hardwareConcurrency;es.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},cc=class{async init(s){uc(),await Cv(),await Sv(s)}async createInferenceSessionHandler(s,e){let t=new Dv;return await t.loadModel(s,e),t}},zv=new cc});$r();$r();$r();var qT="1.22.0-dev.20250409-89f8206ba4",XT=Mb;{let s=(HT(),ta(Lv)).wasmBackend;Dn("webgpu",s,5),Dn("webnn",s,5),Dn("cpu",s,10),Dn("wasm",s,10)}Object.defineProperty(es.versions,"web",{value:qT,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var QT=Object.freeze({__proto__:null,get InferenceSession(){return mc},get TRACE(){return sa},get TRACE_FUNC_BEGIN(){return Ir},get TRACE_FUNC_END(){return mr},get Tensor(){return Sr},default:XT,get env(){return es},get registerBackend(){return Dn}}),Vr={},JT={"onnxruntime-common":s=>{s.exports=kx},"onnxruntime-web":s=>{s.exports=QT},"?2ce3":()=>{},"?7992":()=>{},"?5af5":()=>{},"?2b25":()=>{},"?db59":()=>{},"?383f":()=>{},"?fa4b":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(s,e,t)=>{t.r(e),t.d(e,{Environment:()=>Oe,Interpreter:()=>at,Template:()=>Qt,parse:()=>ae,tokenize:()=>h});var r=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Comment:"Comment"}),n=class{constructor(S,X){this.value=S,this.type=X}};function i(S){return/\w/.test(S)}function a(S){return/[0-9]/.test(S)}var o=[["{%",r.OpenStatement],["%}",r.CloseStatement],["{{",r.OpenExpression],["}}",r.CloseExpression],["(",r.OpenParen],[")",r.CloseParen],["{",r.OpenCurlyBracket],["}",r.CloseCurlyBracket],["[",r.OpenSquareBracket],["]",r.CloseSquareBracket],[",",r.Comma],[".",r.Dot],[":",r.Colon],["|",r.Pipe],["<=",r.ComparisonBinaryOperator],[">=",r.ComparisonBinaryOperator],["==",r.ComparisonBinaryOperator],["!=",r.ComparisonBinaryOperator],["<",r.ComparisonBinaryOperator],[">",r.ComparisonBinaryOperator],["+",r.AdditiveBinaryOperator],["-",r.AdditiveBinaryOperator],["~",r.AdditiveBinaryOperator],["*",r.MultiplicativeBinaryOperator],["/",r.MultiplicativeBinaryOperator],["%",r.MultiplicativeBinaryOperator],["=",r.Equals]],l=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function u(S,X={}){return S.endsWith(`
`)&&(S=S.slice(0,-1)),X.lstrip_blocks&&(S=S.replace(/^[ \t]*({[#%-])/gm,"$1")),X.trim_blocks&&(S=S.replace(/([#%-]})\n/g,"$1")),S.replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{").replace(/-#}\s*/g,"#}").replace(/\s*{#-/g,"{#").replace(/{%\s*(end)?generation\s*%}/gs,"")}function h(S,X={}){var st,gt;const B=[],q=u(S,X);let se=0,ge=0;const Fe=mt=>{let xt="";for(;mt(q[se]);){if(q[se]==="\\"){if(++se,se>=q.length)throw new SyntaxError("Unexpected end of input");const rt=q[se++],Bt=l.get(rt);if(Bt===void 0)throw new SyntaxError(`Unexpected escaped character: ${rt}`);xt+=Bt;continue}if(xt+=q[se++],se>=q.length)throw new SyntaxError("Unexpected end of input")}return xt};e:for(;se<q.length;){const mt=(st=B.at(-1))==null?void 0:st.type;if(mt===void 0||mt===r.CloseStatement||mt===r.CloseExpression||mt===r.Comment){let rt="";for(;se<q.length&&!(q[se]==="{"&&(q[se+1]==="%"||q[se+1]==="{"||q[se+1]==="#"));)rt+=q[se++];if(rt.length>0){B.push(new n(rt,r.Text));continue}}if(q[se]==="{"&&q[se+1]==="#"){se+=2;let rt="";for(;q[se]!=="#"||q[se+1]!=="}";){if(se+2>=q.length)throw new SyntaxError("Missing end of comment tag");rt+=q[se++]}B.push(new n(rt,r.Comment)),se+=2;continue}Fe(rt=>/\s/.test(rt));const xt=q[se];if(xt==="-"||xt==="+"){const rt=(gt=B.at(-1))==null?void 0:gt.type;if(rt===r.Text||rt===void 0)throw new SyntaxError(`Unexpected character: ${xt}`);switch(rt){case r.Identifier:case r.NumericLiteral:case r.StringLiteral:case r.CloseParen:case r.CloseSquareBracket:break;default:{++se;const Bt=Fe(a);B.push(new n(`${xt}${Bt}`,Bt.length>0?r.NumericLiteral:r.UnaryOperator));continue}}}for(const[rt,Bt]of o){if(rt==="}}"&&ge>0)continue;if(q.slice(se,se+rt.length)===rt){B.push(new n(rt,Bt)),Bt===r.OpenExpression?ge=0:Bt===r.OpenCurlyBracket?++ge:Bt===r.CloseCurlyBracket&&--ge,se+=rt.length;continue e}}if(xt==="'"||xt==='"'){++se;const rt=Fe(Bt=>Bt!==xt);B.push(new n(rt,r.StringLiteral)),++se;continue}if(a(xt)){let rt=Fe(a);if(q[se]==="."&&a(q[se+1])){++se;const Bt=Fe(a);rt=`${rt}.${Bt}`}B.push(new n(rt,r.NumericLiteral));continue}if(i(xt)){const rt=Fe(i);B.push(new n(rt,r.Identifier));continue}throw new SyntaxError(`Unexpected character: ${xt}`)}return B}var d=class{constructor(){J(this,"type","Statement")}},c=class extends d{constructor(X){super();J(this,"type","Program");this.body=X}},_=class extends d{constructor(X,B,q){super();J(this,"type","If");this.test=X,this.body=B,this.alternate=q}},f=class extends d{constructor(X,B,q,se){super();J(this,"type","For");this.loopvar=X,this.iterable=B,this.body=q,this.defaultBlock=se}},b=class extends d{constructor(){super(...arguments);J(this,"type","Break")}},I=class extends d{constructor(){super(...arguments);J(this,"type","Continue")}},g=class extends d{constructor(X,B,q){super();J(this,"type","Set");this.assignee=X,this.value=B,this.body=q}},M=class extends d{constructor(X,B,q){super();J(this,"type","Macro");this.name=X,this.args=B,this.body=q}},k=class extends d{constructor(X){super();J(this,"type","Comment");this.value=X}},v=class extends d{constructor(){super(...arguments);J(this,"type","Expression")}},y=class extends v{constructor(X,B,q){super();J(this,"type","MemberExpression");this.object=X,this.property=B,this.computed=q}},T=class extends v{constructor(X,B){super();J(this,"type","CallExpression");this.callee=X,this.args=B}},x=class extends v{constructor(X){super();J(this,"type","Identifier");this.value=X}},P=class extends v{constructor(X){super();J(this,"type","Literal");this.value=X}},O=class extends P{constructor(){super(...arguments);J(this,"type","IntegerLiteral")}},L=class extends P{constructor(){super(...arguments);J(this,"type","FloatLiteral")}},G=class extends P{constructor(){super(...arguments);J(this,"type","StringLiteral")}},K=class extends P{constructor(){super(...arguments);J(this,"type","ArrayLiteral")}},R=class extends P{constructor(){super(...arguments);J(this,"type","TupleLiteral")}},te=class extends P{constructor(){super(...arguments);J(this,"type","ObjectLiteral")}},H=class extends v{constructor(X,B,q){super();J(this,"type","BinaryExpression");this.operator=X,this.left=B,this.right=q}},ee=class extends v{constructor(X,B){super();J(this,"type","FilterExpression");this.operand=X,this.filter=B}},Z=class extends d{constructor(X,B){super();J(this,"type","FilterStatement");this.filter=X,this.body=B}},ne=class extends v{constructor(X,B){super();J(this,"type","SelectExpression");this.lhs=X,this.test=B}},me=class extends v{constructor(X,B,q){super();J(this,"type","TestExpression");this.operand=X,this.negate=B,this.test=q}},ce=class extends v{constructor(X,B){super();J(this,"type","UnaryExpression");this.operator=X,this.argument=B}},j=class extends v{constructor(X=void 0,B=void 0,q=void 0){super();J(this,"type","SliceExpression");this.start=X,this.stop=B,this.step=q}},F=class extends v{constructor(X,B){super();J(this,"type","KeywordArgumentExpression");this.key=X,this.value=B}},V=class extends v{constructor(X){super();J(this,"type","SpreadExpression");this.argument=X}},re=class extends d{constructor(X,B,q){super();J(this,"type","CallStatement");this.call=X,this.callerArgs=B,this.body=q}},fe=class extends v{constructor(X,B,q){super();J(this,"type","Ternary");this.condition=X,this.trueExpr=B,this.falseExpr=q}};function ae(S){const X=new c([]);let B=0;function q(Re,je){const et=S[B++];if(!et||et.type!==Re)throw new Error(`Parser Error: ${je}. ${et.type} !== ${Re}.`);return et}function se(Re){if(!gt(Re))throw new SyntaxError(`Expected ${Re}`);++B}function ge(){switch(S[B].type){case r.Comment:return new k(S[B++].value);case r.Text:return mt();case r.OpenStatement:return xt();case r.OpenExpression:return rt();default:throw new SyntaxError(`Unexpected token type: ${S[B].type}`)}}function Fe(...Re){return B+Re.length<=S.length&&Re.every((je,et)=>je===S[B+et].type)}function st(...Re){var je,et,Jt;return((je=S[B])==null?void 0:je.type)===r.OpenStatement&&((et=S[B+1])==null?void 0:et.type)===r.Identifier&&Re.includes((Jt=S[B+1])==null?void 0:Jt.value)}function gt(...Re){return B+Re.length<=S.length&&Re.every((je,et)=>S[B+et].type==="Identifier"&&je===S[B+et].value)}function mt(){return new G(q(r.Text,"Expected text token").value)}function xt(){if(q(r.OpenStatement,"Expected opening statement token"),S[B].type!==r.Identifier)throw new SyntaxError(`Unknown statement, got ${S[B].type}`);const Re=S[B].value;let je;switch(Re){case"set":++B,je=Bt();break;case"if":++B,je=Ut(),q(r.OpenStatement,"Expected {% token"),se("endif"),q(r.CloseStatement,"Expected %} token");break;case"macro":++B,je=Us(),q(r.OpenStatement,"Expected {% token"),se("endmacro"),q(r.CloseStatement,"Expected %} token");break;case"for":++B,je=rs(),q(r.OpenStatement,"Expected {% token"),se("endfor"),q(r.CloseStatement,"Expected %} token");break;case"call":{++B;let et=null;Fe(r.OpenParen)&&(et=tr());const Jt=Ks();if(Jt.type!=="Identifier")throw new SyntaxError("Expected identifier following call statement");const Rr=tr();q(r.CloseStatement,"Expected closing statement token");const _r=[];for(;!st("endcall");)_r.push(ge());q(r.OpenStatement,"Expected '{%'"),se("endcall"),q(r.CloseStatement,"Expected closing statement token");const jr=new T(Jt,Rr);je=new re(jr,et,_r);break}case"break":++B,q(r.CloseStatement,"Expected closing statement token"),je=new b;break;case"continue":++B,q(r.CloseStatement,"Expected closing statement token"),je=new I;break;case"filter":{++B;let et=Ks();et instanceof x&&Fe(r.OpenParen)&&(et=Gs(et)),q(r.CloseStatement,"Expected closing statement token");const Jt=[];for(;!st("endfilter");)Jt.push(ge());q(r.OpenStatement,"Expected '{%'"),se("endfilter"),q(r.CloseStatement,"Expected '%}'"),je=new Z(et,Jt);break}default:throw new SyntaxError(`Unknown statement type: ${Re}`)}return je}function rt(){q(r.OpenExpression,"Expected opening expression token");const Re=Ss();return q(r.CloseExpression,"Expected closing expression token"),Re}function Bt(){const Re=Qs();let je=null;const et=[];if(Fe(r.Equals))++B,je=Qs();else{for(q(r.CloseStatement,"Expected %} token");!st("endset");)et.push(ge());q(r.OpenStatement,"Expected {% token"),se("endset")}return q(r.CloseStatement,"Expected closing statement token"),new g(Re,je,et)}function Ut(){const Re=Ss();q(r.CloseStatement,"Expected closing statement token");const je=[],et=[];for(;!st("elif","else","endif");)je.push(ge());if(st("elif")){++B,++B;const Jt=Ut();et.push(Jt)}else if(st("else"))for(++B,++B,q(r.CloseStatement,"Expected closing statement token");!st("endif");)et.push(ge());return new _(Re,je,et)}function Us(){const Re=Ks();if(Re.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const je=tr();q(r.CloseStatement,"Expected closing statement token");const et=[];for(;!st("endmacro");)et.push(ge());return new M(Re,je,et)}function Qs(Re=!1){const je=Re?Ks:Ss,et=[je()],Jt=Fe(r.Comma);for(;Jt&&(++B,et.push(je()),!!Fe(r.Comma)););return Jt?new R(et):et[0]}function rs(){const Re=Qs(!0);if(!(Re instanceof x||Re instanceof R))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Re.type} instead`);if(!gt("in"))throw new SyntaxError("Expected `in` keyword following loop variable");++B;const je=Ss();q(r.CloseStatement,"Expected closing statement token");const et=[];for(;!st("endfor","else");)et.push(ge());const Jt=[];if(st("else"))for(++B,++B,q(r.CloseStatement,"Expected closing statement token");!st("endfor");)Jt.push(ge());return new f(Re,je,et,Jt)}function Ss(){return ks()}function ks(){const Re=Vs();if(gt("if")){++B;const je=Vs();if(gt("else")){++B;const et=ks();return new fe(je,Re,et)}else return new ne(Re,je)}return Re}function Vs(){let Re=ur();for(;gt("or");){const je=S[B];++B;const et=ur();Re=new H(je,Re,et)}return Re}function ur(){let Re=Is();for(;gt("and");){const je=S[B];++B;const et=Is();Re=new H(je,Re,et)}return Re}function Is(){let Re;for(;gt("not");){const je=S[B];++B;const et=Is();Re=new ce(je,et)}return Re??Or()}function Or(){let Re=Dr();for(;;){let je;if(gt("not","in"))je=new n("not in",r.Identifier),B+=2;else if(gt("in"))je=S[B++];else if(Fe(r.ComparisonBinaryOperator))je=S[B++];else break;const et=Dr();Re=new H(je,Re,et)}return Re}function Dr(){let Re=fs();for(;Fe(r.AdditiveBinaryOperator);){const je=S[B];++B;const et=fs();Re=new H(je,Re,et)}return Re}function Ws(){const Re=ps(Ks());return Fe(r.OpenParen)?Gs(Re):Re}function Gs(Re){let je=new T(Re,tr());return je=ps(je),Fe(r.OpenParen)&&(je=Gs(je)),je}function tr(){q(r.OpenParen,"Expected opening parenthesis for arguments list");const Re=Ls();return q(r.CloseParen,"Expected closing parenthesis for arguments list"),Re}function Ls(){const Re=[];for(;!Fe(r.CloseParen);){let je;if(S[B].type===r.MultiplicativeBinaryOperator&&S[B].value==="*"){++B;const et=Ss();je=new V(et)}else if(je=Ss(),Fe(r.Equals)){if(++B,!(je instanceof x))throw new SyntaxError("Expected identifier for keyword argument");const et=Ss();je=new F(je,et)}Re.push(je),Fe(r.Comma)&&++B}return Re}function fr(){const Re=[];let je=!1;for(;!Fe(r.CloseSquareBracket);)Fe(r.Colon)?(Re.push(void 0),++B,je=!0):(Re.push(Ss()),Fe(r.Colon)&&(++B,je=!0));if(Re.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(je){if(Re.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new j(...Re)}return Re[0]}function ps(Re){for(;Fe(r.Dot)||Fe(r.OpenSquareBracket);){const je=S[B];++B;let et;const Jt=je.type===r.OpenSquareBracket;if(Jt)et=fr(),q(r.CloseSquareBracket,"Expected closing square bracket");else if(et=Ks(),et.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Re=new y(Re,et,Jt)}return Re}function fs(){let Re=Js();for(;Fe(r.MultiplicativeBinaryOperator);){const je=S[B++],et=Js();Re=new H(je,Re,et)}return Re}function Js(){let Re=Br();for(;gt("is");){++B;const je=gt("not");je&&++B;const et=Ks();if(!(et instanceof x))throw new SyntaxError("Expected identifier for the test");Re=new me(Re,je,et)}return Re}function Br(){let Re=Ws();for(;Fe(r.Pipe);){++B;let je=Ks();if(!(je instanceof x))throw new SyntaxError("Expected identifier for the filter");Fe(r.OpenParen)&&(je=Gs(je)),Re=new ee(Re,je)}return Re}function Ks(){const Re=S[B++];switch(Re.type){case r.NumericLiteral:{const je=Re.value;return je.includes(".")?new L(Number(je)):new O(Number(je))}case r.StringLiteral:{let je=Re.value;for(;Fe(r.StringLiteral);)je+=S[B++].value;return new G(je)}case r.Identifier:return new x(Re.value);case r.OpenParen:{const je=Qs();return q(r.CloseParen,"Expected closing parenthesis, got ${tokens[current].type} instead."),je}case r.OpenSquareBracket:{const je=[];for(;!Fe(r.CloseSquareBracket);)je.push(Ss()),Fe(r.Comma)&&++B;return++B,new K(je)}case r.OpenCurlyBracket:{const je=new Map;for(;!Fe(r.CloseCurlyBracket);){const et=Ss();q(r.Colon,"Expected colon between key and value in object literal");const Jt=Ss();je.set(et,Jt),Fe(r.Comma)&&++B}return++B,new te(je)}default:throw new SyntaxError(`Unexpected token: ${Re.type}`)}}for(;B<S.length;)X.body.push(ge());return X}function ve(S,X,B=1){X===void 0&&(X=S,S=0);const q=[];for(let se=S;se<X;se+=B)q.push(se);return q}function ze(S,X,B,q=1){const se=Math.sign(q);se>=0?(X=(X??(X=0))<0?Math.max(S.length+X,0):Math.min(X,S.length),B=(B??(B=S.length))<0?Math.max(S.length+B,0):Math.min(B,S.length)):(X=(X??(X=S.length-1))<0?Math.max(S.length+X,-1):Math.min(X,S.length-1),B=(B??(B=-1))<-1?Math.max(S.length+B,-1):Math.min(B,S.length-1));const ge=[];for(let Fe=X;se*Fe<se*B;Fe+=q)ge.push(S[Fe]);return ge}function Ge(S){return S.replace(/\b\w/g,X=>X.toUpperCase())}function $e(S){return Q(new Date,S)}function Q(S,X){const B=new Intl.DateTimeFormat(void 0,{month:"long"}),q=new Intl.DateTimeFormat(void 0,{month:"short"}),se=ge=>ge<10?"0"+ge:ge.toString();return X.replace(/%[YmdbBHM%]/g,ge=>{switch(ge){case"%Y":return S.getFullYear().toString();case"%m":return se(S.getMonth()+1);case"%d":return se(S.getDate());case"%b":return q.format(S);case"%B":return B.format(S);case"%H":return se(S.getHours());case"%M":return se(S.getMinutes());case"%%":return"%";default:return ge}})}function oe(S){return S.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function W(S,X,B,q){if(q===0)return S;let se=q==null||q<0?1/0:q;const ge=X.length===0?new RegExp("(?=)","gu"):new RegExp(oe(X),"gu");return S.replaceAll(ge,Fe=>se>0?(--se,B):Fe)}var be=class extends Error{},Ie=class extends Error{},Ee=class{constructor(S=void 0){J(this,"type","RuntimeValue");J(this,"value");J(this,"builtins",new Map);this.value=S}__bool__(){return new Ae(!!this.value)}toString(){return String(this.value)}},Me=class extends Ee{constructor(){super(...arguments);J(this,"type","IntegerValue")}},Se=class extends Ee{constructor(){super(...arguments);J(this,"type","FloatValue")}toString(){return this.value%1===0?this.value.toFixed(1):this.value.toString()}},we=class extends Ee{constructor(){super(...arguments);J(this,"type","StringValue");J(this,"builtins",new Map([["upper",new Ke(()=>new we(this.value.toUpperCase()))],["lower",new Ke(()=>new we(this.value.toLowerCase()))],["strip",new Ke(()=>new we(this.value.trim()))],["title",new Ke(()=>new we(Ge(this.value)))],["capitalize",new Ke(()=>new we(this.value.charAt(0).toUpperCase()+this.value.slice(1)))],["length",new Me(this.value.length)],["rstrip",new Ke(()=>new we(this.value.trimEnd()))],["lstrip",new Ke(()=>new we(this.value.trimStart()))],["startswith",new Ke(X=>{if(X.length===0)throw new Error("startswith() requires at least one argument");const B=X[0];if(B instanceof we)return new Ae(this.value.startsWith(B.value));if(B instanceof xe){for(const q of B.value){if(!(q instanceof we))throw new Error("startswith() tuple elements must be strings");if(this.value.startsWith(q.value))return new Ae(!0)}return new Ae(!1)}throw new Error("startswith() argument must be a string or tuple of strings")})],["endswith",new Ke(X=>{if(X.length===0)throw new Error("endswith() requires at least one argument");const B=X[0];if(B instanceof we)return new Ae(this.value.endsWith(B.value));if(B instanceof xe){for(const q of B.value){if(!(q instanceof we))throw new Error("endswith() tuple elements must be strings");if(this.value.endsWith(q.value))return new Ae(!0)}return new Ae(!1)}throw new Error("endswith() argument must be a string or tuple of strings")})],["split",new Ke(X=>{const B=X[0]??new nt;if(!(B instanceof we||B instanceof nt))throw new Error("sep argument must be a string or null");const q=X[1]??new Me(-1);if(!(q instanceof Me))throw new Error("maxsplit argument must be a number");let se=[];if(B instanceof nt){const ge=this.value.trimStart();for(const{0:Fe,index:st}of ge.matchAll(/\S+/g)){if(q.value!==-1&&se.length>=q.value&&st!==void 0){se.push(Fe+ge.slice(st+Fe.length));break}se.push(Fe)}}else{if(B.value==="")throw new Error("empty separator");se=this.value.split(B.value),q.value!==-1&&se.length>q.value&&se.push(se.splice(q.value).join(B.value))}return new xe(se.map(ge=>new we(ge)))})],["replace",new Ke(X=>{if(X.length<2)throw new Error("replace() requires at least two arguments");const B=X[0],q=X[1];if(!(B instanceof we&&q instanceof we))throw new Error("replace() arguments must be strings");let se;if(X.length>2?X[2].type==="KeywordArgumentsValue"?se=X[2].value.get("count")??new nt:se=X[2]:se=new nt,!(se instanceof Me||se instanceof nt))throw new Error("replace() count argument must be a number or null");return new we(W(this.value,B.value,q.value,se.value))})]]))}},Ae=class extends Ee{constructor(){super(...arguments);J(this,"type","BooleanValue")}},Be=class extends Ee{constructor(){super(...arguments);J(this,"type","ObjectValue");J(this,"builtins",new Map([["get",new Ke(([X,B])=>{if(!(X instanceof we))throw new Error(`Object key must be a string: got ${X.type}`);return this.value.get(X.value)??B??new nt})],["items",new Ke(()=>this.items())],["keys",new Ke(()=>this.keys())],["values",new Ke(()=>this.values())]]))}__bool__(){return new Ae(this.value.size>0)}items(){return new xe(Array.from(this.value.entries()).map(([X,B])=>new xe([new we(X),B])))}keys(){return new xe(Array.from(this.value.keys()).map(X=>new we(X)))}values(){return new xe(Array.from(this.value.values()))}},Xe=class extends Be{constructor(){super(...arguments);J(this,"type","KeywordArgumentsValue")}},xe=class extends Ee{constructor(){super(...arguments);J(this,"type","ArrayValue");J(this,"builtins",new Map([["length",new Me(this.value.length)]]))}__bool__(){return new Ae(this.value.length>0)}},Ze=class extends xe{constructor(){super(...arguments);J(this,"type","TupleValue")}},Ke=class extends Ee{constructor(){super(...arguments);J(this,"type","FunctionValue")}},nt=class extends Ee{constructor(){super(...arguments);J(this,"type","NullValue")}},Je=class extends Ee{constructor(){super(...arguments);J(this,"type","UndefinedValue")}},Oe=class{constructor(S){J(this,"variables",new Map([["namespace",new Ke(S=>{if(S.length===0)return new Be(new Map);if(S.length!==1||!(S[0]instanceof Be))throw new Error("`namespace` expects either zero arguments or a single object argument");return S[0]})]]));J(this,"tests",new Map([["boolean",S=>S.type==="BooleanValue"],["callable",S=>S instanceof Ke],["odd",S=>{if(!(S instanceof Me))throw new Error(`cannot odd on ${S.type}`);return S.value%2!==0}],["even",S=>{if(!(S instanceof Me))throw new Error(`cannot even on ${S.type}`);return S.value%2===0}],["false",S=>S.type==="BooleanValue"&&!S.value],["true",S=>S.type==="BooleanValue"&&S.value],["none",S=>S.type==="NullValue"],["string",S=>S.type==="StringValue"],["number",S=>S instanceof Me||S instanceof Se],["integer",S=>S instanceof Me],["iterable",S=>S.type==="ArrayValue"||S.type==="StringValue"],["mapping",S=>S.type==="ObjectValue"],["lower",S=>{const X=S.value;return S.type==="StringValue"&&X===X.toLowerCase()}],["upper",S=>{const X=S.value;return S.type==="StringValue"&&X===X.toUpperCase()}],["none",S=>S.type==="NullValue"],["defined",S=>S.type!=="UndefinedValue"],["undefined",S=>S.type==="UndefinedValue"],["equalto",(S,X)=>S.value===X.value],["eq",(S,X)=>S.value===X.value]]));this.parent=S}set(S,X){return this.declareVariable(S,At(X))}declareVariable(S,X){if(this.variables.has(S))throw new SyntaxError(`Variable already declared: ${S}`);return this.variables.set(S,X),X}setVariable(S,X){return this.variables.set(S,X),X}resolve(S){if(this.variables.has(S))return this;if(this.parent)return this.parent.resolve(S);throw new Error(`Unknown variable: ${S}`)}lookupVariable(S){try{return this.resolve(S).variables.get(S)??new Je}catch{return new Je}}};function Ye(S){S.set("false",!1),S.set("true",!0),S.set("none",null),S.set("raise_exception",X=>{throw new Error(X)}),S.set("range",ve),S.set("strftime_now",$e),S.set("True",!0),S.set("False",!1),S.set("None",null)}var at=class{constructor(S){J(this,"global");this.global=S??new Oe}run(S){return this.evaluate(S,this.global)}evaluateBinaryExpression(S,X){const B=this.evaluate(S.left,X);switch(S.operator.value){case"and":return B.__bool__().value?this.evaluate(S.right,X):B;case"or":return B.__bool__().value?B:this.evaluate(S.right,X)}const q=this.evaluate(S.right,X);switch(S.operator.value){case"==":return new Ae(B.value==q.value);case"!=":return new Ae(B.value!=q.value)}if(B instanceof Je||q instanceof Je){if(q instanceof Je&&["in","not in"].includes(S.operator.value))return new Ae(S.operator.value==="not in");throw new Error(`Cannot perform operation ${S.operator.value} on undefined values`)}else{if(B instanceof nt||q instanceof nt)throw new Error("Cannot perform operation on null values");if(S.operator.value==="~")return new we(B.value.toString()+q.value.toString());if((B instanceof Me||B instanceof Se)&&(q instanceof Me||q instanceof Se)){const se=B.value,ge=q.value;switch(S.operator.value){case"+":case"-":case"*":{const Fe=S.operator.value==="+"?se+ge:S.operator.value==="-"?se-ge:se*ge;return B instanceof Se||q instanceof Se?new Se(Fe):new Me(Fe)}case"/":return new Se(se/ge);case"%":{const Fe=se%ge;return B instanceof Se||q instanceof Se?new Se(Fe):new Me(Fe)}case"<":return new Ae(se<ge);case">":return new Ae(se>ge);case">=":return new Ae(se>=ge);case"<=":return new Ae(se<=ge)}}else if(B instanceof xe&&q instanceof xe)switch(S.operator.value){case"+":return new xe(B.value.concat(q.value))}else if(q instanceof xe){const se=q.value.find(ge=>ge.value===B.value)!==void 0;switch(S.operator.value){case"in":return new Ae(se);case"not in":return new Ae(!se)}}}if(B instanceof we||q instanceof we)switch(S.operator.value){case"+":return new we(B.value.toString()+q.value.toString())}if(B instanceof we&&q instanceof we)switch(S.operator.value){case"in":return new Ae(q.value.includes(B.value));case"not in":return new Ae(!q.value.includes(B.value))}if(B instanceof we&&q instanceof Be)switch(S.operator.value){case"in":return new Ae(q.value.has(B.value));case"not in":return new Ae(!q.value.has(B.value))}throw new SyntaxError(`Unknown operator "${S.operator.value}" between ${B.type} and ${q.type}`)}evaluateArguments(S,X){const B=[],q=new Map;for(const se of S)if(se.type==="SpreadExpression"){const ge=se,Fe=this.evaluate(ge.argument,X);if(!(Fe instanceof xe))throw new Error(`Cannot unpack non-iterable type: ${Fe.type}`);for(const st of Fe.value)B.push(st)}else if(se.type==="KeywordArgumentExpression"){const ge=se;q.set(ge.key.value,this.evaluate(ge.value,X))}else{if(q.size>0)throw new Error("Positional arguments must come before keyword arguments");B.push(this.evaluate(se,X))}return[B,q]}applyFilter(S,X,B){if(X.type==="Identifier"){const q=X;if(q.value==="tojson")return new we(kt(S));if(S instanceof xe)switch(q.value){case"list":return S;case"first":return S.value[0];case"last":return S.value[S.value.length-1];case"length":return new Me(S.value.length);case"reverse":return new xe(S.value.reverse());case"sort":return new xe(S.value.sort((se,ge)=>{if(se.type!==ge.type)throw new Error(`Cannot compare different types: ${se.type} and ${ge.type}`);switch(se.type){case"IntegerValue":case"FloatValue":return se.value-ge.value;case"StringValue":return se.value.localeCompare(ge.value);default:throw new Error(`Cannot compare type: ${se.type}`)}}));case"join":return new we(S.value.map(se=>se.value).join(""));case"string":return new we(kt(S));case"unique":{const se=new Set,ge=[];for(const Fe of S.value)se.has(Fe.value)||(se.add(Fe.value),ge.push(Fe));return new xe(ge)}default:throw new Error(`Unknown ArrayValue filter: ${q.value}`)}else if(S instanceof we)switch(q.value){case"length":case"upper":case"lower":case"title":case"capitalize":{const se=S.builtins.get(q.value);if(se instanceof Ke)return se.value([],B);if(se instanceof Me)return se;throw new Error(`Unknown StringValue filter: ${q.value}`)}case"trim":return new we(S.value.trim());case"indent":return new we(S.value.split(`
`).map((se,ge)=>ge===0||se.length===0?se:"    "+se).join(`
`));case"join":case"string":return S;case"int":{const se=parseInt(S.value,10);return new Me(isNaN(se)?0:se)}case"float":{const se=parseFloat(S.value);return new Se(isNaN(se)?0:se)}default:throw new Error(`Unknown StringValue filter: ${q.value}`)}else if(S instanceof Me||S instanceof Se)switch(q.value){case"abs":return S instanceof Me?new Me(Math.abs(S.value)):new Se(Math.abs(S.value));case"int":return new Me(Math.floor(S.value));case"float":return new Se(S.value);default:throw new Error(`Unknown NumericValue filter: ${q.value}`)}else if(S instanceof Be)switch(q.value){case"items":return new xe(Array.from(S.value.entries()).map(([se,ge])=>new xe([new we(se),ge])));case"length":return new Me(S.value.size);default:throw new Error(`Unknown ObjectValue filter: ${q.value}`)}else if(S instanceof Ae)switch(q.value){case"bool":return new Ae(S.value);case"int":return new Me(S.value?1:0);case"float":return new Se(S.value?1:0);case"string":return new we(S.value?"true":"false");default:throw new Error(`Unknown BooleanValue filter: ${q.value}`)}throw new Error(`Cannot apply filter "${q.value}" to type: ${S.type}`)}else if(X.type==="CallExpression"){const q=X;if(q.callee.type!=="Identifier")throw new Error(`Unknown filter: ${q.callee.type}`);const se=q.callee.value;if(se==="tojson"){const[,ge]=this.evaluateArguments(q.args,B),Fe=ge.get("indent")??new nt;if(!(Fe instanceof Me||Fe instanceof nt))throw new Error("If set, indent must be a number");return new we(kt(S,Fe.value))}else if(se==="join"){let ge;if(S instanceof we)ge=Array.from(S.value);else if(S instanceof xe)ge=S.value.map(mt=>mt.value);else throw new Error(`Cannot apply filter "${se}" to type: ${S.type}`);const[Fe,st]=this.evaluateArguments(q.args,B),gt=Fe.at(0)??st.get("separator")??new we("");if(!(gt instanceof we))throw new Error("separator must be a string");return new we(ge.join(gt.value))}else if(se==="int"||se==="float"){const[ge,Fe]=this.evaluateArguments(q.args,B),st=ge.at(0)??Fe.get("default")??(se==="int"?new Me(0):new Se(0));if(S instanceof we){const gt=se==="int"?parseInt(S.value,10):parseFloat(S.value);return isNaN(gt)?st:se==="int"?new Me(gt):new Se(gt)}else{if(S instanceof Me||S instanceof Se)return S;if(S instanceof Ae)return se==="int"?new Me(S.value?1:0):new Se(S.value?1:0);throw new Error(`Cannot apply filter "${se}" to type: ${S.type}`)}}else if(se==="default"){const[ge,Fe]=this.evaluateArguments(q.args,B),st=ge[0]??new we(""),gt=ge[1]??Fe.get("boolean")??new Ae(!1);if(!(gt instanceof Ae))throw new Error("`default` filter flag must be a boolean");return S instanceof Je||gt.value&&!S.__bool__().value?st:S}if(S instanceof xe){switch(se){case"selectattr":case"rejectattr":{const ge=se==="selectattr";if(S.value.some(rt=>!(rt instanceof Be)))throw new Error(`\`${se}\` can only be applied to array of objects`);if(q.args.some(rt=>rt.type!=="StringLiteral"))throw new Error(`arguments of \`${se}\` must be strings`);const[Fe,st,gt]=q.args.map(rt=>this.evaluate(rt,B));let mt;if(st){const rt=B.tests.get(st.value);if(!rt)throw new Error(`Unknown test: ${st.value}`);mt=rt}else mt=(...rt)=>rt[0].__bool__().value;const xt=S.value.filter(rt=>{const Bt=rt.value.get(Fe.value),Ut=Bt?mt(Bt,gt):!1;return ge?Ut:!Ut});return new xe(xt)}case"map":{const[,ge]=this.evaluateArguments(q.args,B);if(ge.has("attribute")){const Fe=ge.get("attribute");if(!(Fe instanceof we))throw new Error("attribute must be a string");const st=ge.get("default"),gt=S.value.map(mt=>{if(!(mt instanceof Be))throw new Error("items in map must be an object");return mt.value.get(Fe.value)??st??new Je});return new xe(gt)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${se}`)}else if(S instanceof we){switch(se){case"indent":{const[ge,Fe]=this.evaluateArguments(q.args,B),st=ge.at(0)??Fe.get("width")??new Me(4);if(!(st instanceof Me))throw new Error("width must be a number");const gt=ge.at(1)??Fe.get("first")??new Ae(!1),mt=ge.at(2)??Fe.get("blank")??new Ae(!1),xt=S.value.split(`
`),rt=" ".repeat(st.value),Bt=xt.map((Ut,Us)=>!gt.value&&Us===0||!mt.value&&Ut.length===0?Ut:rt+Ut);return new we(Bt.join(`
`))}case"replace":{const ge=S.builtins.get("replace");if(!(ge instanceof Ke))throw new Error("replace filter not available");const[Fe,st]=this.evaluateArguments(q.args,B);return ge.value([...Fe,new Xe(st)],B)}}throw new Error(`Unknown StringValue filter: ${se}`)}else throw new Error(`Cannot apply filter "${se}" to type: ${S.type}`)}throw new Error(`Unknown filter: ${X.type}`)}evaluateFilterExpression(S,X){const B=this.evaluate(S.operand,X);return this.applyFilter(B,S.filter,X)}evaluateTestExpression(S,X){const B=this.evaluate(S.operand,X),q=X.tests.get(S.test.value);if(!q)throw new Error(`Unknown test: ${S.test.value}`);const se=q(B);return new Ae(S.negate?!se:se)}evaluateSelectExpression(S,X){return this.evaluate(S.test,X).__bool__().value?this.evaluate(S.lhs,X):new Je}evaluateUnaryExpression(S,X){const B=this.evaluate(S.argument,X);switch(S.operator.value){case"not":return new Ae(!B.value);default:throw new SyntaxError(`Unknown operator: ${S.operator.value}`)}}evaluateTernaryExpression(S,X){return this.evaluate(S.condition,X).__bool__().value?this.evaluate(S.trueExpr,X):this.evaluate(S.falseExpr,X)}evalProgram(S,X){return this.evaluateBlock(S.body,X)}evaluateBlock(S,X){let B="";for(const q of S){const se=this.evaluate(q,X);se.type!=="NullValue"&&se.type!=="UndefinedValue"&&(B+=se.toString())}return new we(B)}evaluateIdentifier(S,X){return X.lookupVariable(S.value)}evaluateCallExpression(S,X){const[B,q]=this.evaluateArguments(S.args,X);q.size>0&&B.push(new Xe(q));const se=this.evaluate(S.callee,X);if(se.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${se.type}`);return se.value(B,X)}evaluateSliceExpression(S,X,B){if(!(S instanceof xe||S instanceof we))throw new Error("Slice object must be an array or string");const q=this.evaluate(X.start,B),se=this.evaluate(X.stop,B),ge=this.evaluate(X.step,B);if(!(q instanceof Me||q instanceof Je))throw new Error("Slice start must be numeric or undefined");if(!(se instanceof Me||se instanceof Je))throw new Error("Slice stop must be numeric or undefined");if(!(ge instanceof Me||ge instanceof Je))throw new Error("Slice step must be numeric or undefined");return S instanceof xe?new xe(ze(S.value,q.value,se.value,ge.value)):new we(ze(Array.from(S.value),q.value,se.value,ge.value).join(""))}evaluateMemberExpression(S,X){const B=this.evaluate(S.object,X);let q;if(S.computed){if(S.property.type==="SliceExpression")return this.evaluateSliceExpression(B,S.property,X);q=this.evaluate(S.property,X)}else q=new we(S.property.value);let se;if(B instanceof Be){if(!(q instanceof we))throw new Error(`Cannot access property with non-string: got ${q.type}`);se=B.value.get(q.value)??B.builtins.get(q.value)}else if(B instanceof xe||B instanceof we)if(q instanceof Me)se=B.value.at(q.value),B instanceof we&&(se=new we(B.value.at(q.value)));else if(q instanceof we)se=B.builtins.get(q.value);else throw new Error(`Cannot access property with non-string/non-number: got ${q.type}`);else{if(!(q instanceof we))throw new Error(`Cannot access property with non-string: got ${q.type}`);se=B.builtins.get(q.value)}return se instanceof Ee?se:new Je}evaluateSet(S,X){const B=S.value?this.evaluate(S.value,X):this.evaluateBlock(S.body,X);if(S.assignee.type==="Identifier"){const q=S.assignee.value;X.setVariable(q,B)}else if(S.assignee.type==="TupleLiteral"){const q=S.assignee;if(!(B instanceof xe))throw new Error(`Cannot unpack non-iterable type in set: ${B.type}`);const se=B.value;if(se.length!==q.value.length)throw new Error(`Too ${q.value.length>se.length?"few":"many"} items to unpack in set`);for(let ge=0;ge<q.value.length;++ge){const Fe=q.value[ge];if(Fe.type!=="Identifier")throw new Error(`Cannot unpack to non-identifier in set: ${Fe.type}`);X.setVariable(Fe.value,se[ge])}}else if(S.assignee.type==="MemberExpression"){const q=S.assignee,se=this.evaluate(q.object,X);if(!(se instanceof Be))throw new Error("Cannot assign to member of non-object");if(q.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");se.value.set(q.property.value,B)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(S.assignee)}`);return new nt}evaluateIf(S,X){const B=this.evaluate(S.test,X);return this.evaluateBlock(B.__bool__().value?S.body:S.alternate,X)}evaluateFor(S,X){const B=new Oe(X);let q,se;if(S.iterable.type==="SelectExpression"){const mt=S.iterable;se=this.evaluate(mt.lhs,B),q=mt.test}else se=this.evaluate(S.iterable,B);if(!(se instanceof xe||se instanceof Be))throw new Error(`Expected iterable or object type in for loop: got ${se.type}`);se instanceof Be&&(se=se.keys());const ge=[],Fe=[];for(let mt=0;mt<se.value.length;++mt){const xt=new Oe(B),rt=se.value[mt];let Bt;if(S.loopvar.type==="Identifier")Bt=Ut=>Ut.setVariable(S.loopvar.value,rt);else if(S.loopvar.type==="TupleLiteral"){const Ut=S.loopvar;if(rt.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${rt.type}`);const Us=rt;if(Ut.value.length!==Us.value.length)throw new Error(`Too ${Ut.value.length>Us.value.length?"few":"many"} items to unpack`);Bt=Qs=>{for(let rs=0;rs<Ut.value.length;++rs){if(Ut.value[rs].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Ut.value[rs].type}`);Qs.setVariable(Ut.value[rs].value,Us.value[rs])}}}else throw new Error(`Invalid loop variable(s): ${S.loopvar.type}`);q&&(Bt(xt),!this.evaluate(q,xt).__bool__().value)||(ge.push(rt),Fe.push(Bt))}let st="",gt=!0;for(let mt=0;mt<ge.length;++mt){const xt=new Map([["index",new Me(mt+1)],["index0",new Me(mt)],["revindex",new Me(ge.length-mt)],["revindex0",new Me(ge.length-mt-1)],["first",new Ae(mt===0)],["last",new Ae(mt===ge.length-1)],["length",new Me(ge.length)],["previtem",mt>0?ge[mt-1]:new Je],["nextitem",mt<ge.length-1?ge[mt+1]:new Je]]);B.setVariable("loop",new Be(xt)),Fe[mt](B);try{const rt=this.evaluateBlock(S.body,B);st+=rt.value}catch(rt){if(rt instanceof Ie)continue;if(rt instanceof be)break;throw rt}gt=!1}if(gt){const mt=this.evaluateBlock(S.defaultBlock,B);st+=mt.value}return new we(st)}evaluateMacro(S,X){return X.setVariable(S.name.value,new Ke((B,q)=>{var Fe;const se=new Oe(q);B=B.slice();let ge;((Fe=B.at(-1))==null?void 0:Fe.type)==="KeywordArgumentsValue"&&(ge=B.pop());for(let st=0;st<S.args.length;++st){const gt=S.args[st],mt=B[st];if(gt.type==="Identifier"){const xt=gt;if(!mt)throw new Error(`Missing positional argument: ${xt.value}`);se.setVariable(xt.value,mt)}else if(gt.type==="KeywordArgumentExpression"){const xt=gt,rt=mt??(ge==null?void 0:ge.value.get(xt.key.value))??this.evaluate(xt.value,se);se.setVariable(xt.key.value,rt)}else throw new Error(`Unknown argument type: ${gt.type}`)}return this.evaluateBlock(S.body,se)})),new nt}evaluateCallStatement(S,X){const B=new Ke((st,gt)=>{const mt=new Oe(gt);if(S.callerArgs)for(let xt=0;xt<S.callerArgs.length;++xt){const rt=S.callerArgs[xt];if(rt.type!=="Identifier")throw new Error(`Caller parameter must be an identifier, got ${rt.type}`);mt.setVariable(rt.value,st[xt]??new Je)}return this.evaluateBlock(S.body,mt)}),[q,se]=this.evaluateArguments(S.call.args,X);q.push(new Xe(se));const ge=this.evaluate(S.call.callee,X);if(ge.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${ge.type}`);const Fe=new Oe(X);return Fe.setVariable("caller",B),ge.value(q,Fe)}evaluateFilterStatement(S,X){const B=this.evaluateBlock(S.body,X);return this.applyFilter(B,S.filter,X)}evaluate(S,X){if(!S)return new Je;switch(S.type){case"Program":return this.evalProgram(S,X);case"Set":return this.evaluateSet(S,X);case"If":return this.evaluateIf(S,X);case"For":return this.evaluateFor(S,X);case"Macro":return this.evaluateMacro(S,X);case"CallStatement":return this.evaluateCallStatement(S,X);case"Break":throw new be;case"Continue":throw new Ie;case"IntegerLiteral":return new Me(S.value);case"FloatLiteral":return new Se(S.value);case"StringLiteral":return new we(S.value);case"ArrayLiteral":return new xe(S.value.map(B=>this.evaluate(B,X)));case"TupleLiteral":return new Ze(S.value.map(B=>this.evaluate(B,X)));case"ObjectLiteral":{const B=new Map;for(const[q,se]of S.value){const ge=this.evaluate(q,X);if(!(ge instanceof we))throw new Error(`Object keys must be strings: got ${ge.type}`);B.set(ge.value,this.evaluate(se,X))}return new Be(B)}case"Identifier":return this.evaluateIdentifier(S,X);case"CallExpression":return this.evaluateCallExpression(S,X);case"MemberExpression":return this.evaluateMemberExpression(S,X);case"UnaryExpression":return this.evaluateUnaryExpression(S,X);case"BinaryExpression":return this.evaluateBinaryExpression(S,X);case"FilterExpression":return this.evaluateFilterExpression(S,X);case"FilterStatement":return this.evaluateFilterStatement(S,X);case"TestExpression":return this.evaluateTestExpression(S,X);case"SelectExpression":return this.evaluateSelectExpression(S,X);case"Ternary":return this.evaluateTernaryExpression(S,X);case"Comment":return new nt;default:throw new SyntaxError(`Unknown node type: ${S.type}`)}}};function At(S){switch(typeof S){case"number":return Number.isInteger(S)?new Me(S):new Se(S);case"string":return new we(S);case"boolean":return new Ae(S);case"undefined":return new Je;case"object":return S===null?new nt:Array.isArray(S)?new xe(S.map(At)):new Be(new Map(Object.entries(S).map(([X,B])=>[X,At(B)])));case"function":return new Ke((X,B)=>{const q=S(...X.map(se=>se.value))??null;return At(q)});default:throw new Error(`Cannot convert to runtime value: ${S}`)}}function kt(S,X,B){const q=B??0;switch(S.type){case"NullValue":case"UndefinedValue":return"null";case"IntegerValue":case"FloatValue":case"StringValue":case"BooleanValue":return JSON.stringify(S.value);case"ArrayValue":case"ObjectValue":{const se=X?" ".repeat(X):"",ge=`
`+se.repeat(q),Fe=ge+se;if(S.type==="ArrayValue"){const st=S.value.map(gt=>kt(gt,X,q+1));return X?`[${Fe}${st.join(`,${Fe}`)}${ge}]`:`[${st.join(", ")}]`}else{const st=Array.from(S.value.entries()).map(([gt,mt])=>{const xt=`"${gt}": ${kt(mt,X,q+1)}`;return X?`${Fe}${xt}`:xt});return X?`{${st.join(",")}${ge}}`:`{${st.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${S.type}`)}}var Mt=`
`,bs="{%- ",Ps=" -%}";function Ns(S){switch(S.operator.type){case"MultiplicativeBinaryOperator":return 4;case"AdditiveBinaryOperator":return 3;case"ComparisonBinaryOperator":return 2;case"Identifier":return S.operator.value==="and"?1:S.operator.value==="in"||S.operator.value==="not in"?2:0}return 0}function lr(S,X="	"){const B=typeof X=="number"?" ".repeat(X):X;return Cs(S.body,0,B).replace(/\n$/,"")}function Xt(...S){return bs+S.join(" ")+Ps}function Cs(S,X,B){return S.map(q=>Kr(q,X,B)).join(Mt)}function Kr(S,X,B){const q=B.repeat(X);switch(S.type){case"Program":return Cs(S.body,X,B);case"If":return Hr(S,X,B);case"For":return qr(S,X,B);case"Set":return Xr(S,X,B);case"Macro":return pt(S,X,B);case"Break":return q+Xt("break");case"Continue":return q+Xt("continue");case"CallStatement":return Ar(S,X,B);case"FilterStatement":return Fr(S,X,B);case"Comment":return q+"{# "+S.value+" #}";default:return q+"{{- "+St(S)+" -}}"}}function Hr(S,X,B){const q=B.repeat(X),se=[];let ge=S;for(;ge&&(se.push({test:ge.test,body:ge.body}),ge.alternate.length===1&&ge.alternate[0].type==="If");)ge=ge.alternate[0];let Fe=q+Xt("if",St(se[0].test))+Mt+Cs(se[0].body,X+1,B);for(let st=1;st<se.length;++st)Fe+=Mt+q+Xt("elif",St(se[st].test))+Mt+Cs(se[st].body,X+1,B);return ge&&ge.alternate.length>0&&(Fe+=Mt+q+Xt("else")+Mt+Cs(ge.alternate,X+1,B)),Fe+=Mt+q+Xt("endif"),Fe}function qr(S,X,B){const q=B.repeat(X);let se="";if(S.iterable.type==="SelectExpression"){const Fe=S.iterable;se=`${St(Fe.lhs)} if ${St(Fe.test)}`}else se=St(S.iterable);let ge=q+Xt("for",St(S.loopvar),"in",se)+Mt+Cs(S.body,X+1,B);return S.defaultBlock.length>0&&(ge+=Mt+q+Xt("else")+Mt+Cs(S.defaultBlock,X+1,B)),ge+=Mt+q+Xt("endfor"),ge}function Xr(S,X,B){const q=B.repeat(X),se=St(S.assignee),ge=S.value?St(S.value):"",Fe=q+Xt("set",`${se}${S.value?" = "+ge:""}`);return S.body.length===0?Fe:Fe+Mt+Cs(S.body,X+1,B)+Mt+q+Xt("endset")}function pt(S,X,B){const q=B.repeat(X),se=S.args.map(St).join(", ");return q+Xt("macro",`${S.name.value}(${se})`)+Mt+Cs(S.body,X+1,B)+Mt+q+Xt("endmacro")}function Ar(S,X,B){const q=B.repeat(X),se=S.callerArgs&&S.callerArgs.length>0?`(${S.callerArgs.map(St).join(", ")})`:"",ge=St(S.call);let Fe=q+Xt(`call${se}`,ge)+Mt;return Fe+=Cs(S.body,X+1,B)+Mt,Fe+=q+Xt("endcall"),Fe}function Fr(S,X,B){const q=B.repeat(X),se=S.filter.type==="Identifier"?S.filter.value:St(S.filter);let ge=q+Xt("filter",se)+Mt;return ge+=Cs(S.body,X+1,B)+Mt,ge+=q+Xt("endfilter"),ge}function St(S,X=-1){switch(S.type){case"SpreadExpression":return`*${St(S.argument)}`;case"Identifier":return S.value;case"IntegerLiteral":return`${S.value}`;case"FloatLiteral":return`${S.value}`;case"StringLiteral":return JSON.stringify(S.value);case"BinaryExpression":{const B=S,q=Ns(B),se=St(B.left,q),ge=St(B.right,q+1),Fe=`${se} ${B.operator.value} ${ge}`;return q<X?`(${Fe})`:Fe}case"UnaryExpression":{const B=S;return B.operator.value+(B.operator.value==="not"?" ":"")+St(B.argument,1/0)}case"CallExpression":{const B=S,q=B.args.map(St).join(", ");return`${St(B.callee)}(${q})`}case"MemberExpression":{const B=S;let q=St(B.object);["Identifier","MemberExpression","CallExpression","StringLiteral","IntegerLiteral","FloatLiteral","ArrayLiteral","TupleLiteral","ObjectLiteral"].includes(B.object.type)||(q=`(${q})`);let se=St(B.property);return!B.computed&&B.property.type!=="Identifier"&&(se=`(${se})`),B.computed?`${q}[${se}]`:`${q}.${se}`}case"FilterExpression":{const B=S,q=St(B.operand,1/0);return B.filter.type==="CallExpression"?`${q} | ${St(B.filter)}`:`${q} | ${B.filter.value}`}case"SelectExpression":{const B=S;return`${St(B.lhs)} if ${St(B.test)}`}case"TestExpression":{const B=S;return`${St(B.operand)} is${B.negate?" not":""} ${B.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const B=S.value.map(St),q=S.type==="ArrayLiteral"?"[]":"()";return`${q[0]}${B.join(", ")}${q[1]}`}case"ObjectLiteral":return`{${Array.from(S.value.entries()).map(([q,se])=>`${St(q)}: ${St(se)}`).join(", ")}}`;case"SliceExpression":{const B=S,q=B.start?St(B.start):"",se=B.stop?St(B.stop):"",ge=B.step?`:${St(B.step)}`:"";return`${q}:${se}${ge}`}case"KeywordArgumentExpression":{const B=S;return`${B.key.value}=${St(B.value)}`}case"Ternary":{const B=S,q=`${St(B.trueExpr)} if ${St(B.condition,0)} else ${St(B.falseExpr)}`;return X>-1?`(${q})`:q}default:throw new Error(`Unknown expression type: ${S.type}`)}}var Qt=class{constructor(S){J(this,"parsed");const X=h(S,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=ae(X)}render(S){const X=new Oe;if(Ye(X),S)for(const[se,ge]of Object.entries(S))X.set(se,ge);return new at(X).run(this.parsed).value}format(S){return lr(this.parsed,(S==null?void 0:S.indent)||"	")}}},"./src/backends/onnx.js":(s,e,t)=>{var r;t.r(e),t.d(e,{Tensor:()=>o.Tensor,createInferenceSession:()=>I,deviceToExecutionProviders:()=>f,isONNXProxy:()=>k,isONNXTensor:()=>g});var n=t("./src/env.js"),i=t("?2ce3"),a=t("onnxruntime-web"),o=t("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),u=[];let h,d;const c=Symbol.for("onnxruntime");if(c in globalThis)d=globalThis[c];else if(n.apis.IS_NODE_ENV){switch(d=i??(r||(r=t.t(i,2))),process.platform){case"win32":u.push("dml");break;case"linux":process.arch==="x64"&&u.push("cuda");break}u.push("cpu"),h=["cpu"]}else d=a,n.apis.IS_WEBNN_AVAILABLE&&u.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),n.apis.IS_WEBGPU_AVAILABLE&&u.push("webgpu"),u.push("wasm"),h=["wasm"];const _=d.InferenceSession;function f(v=null){if(!v)return h;switch(v){case"auto":return u;case"gpu":return u.filter(y=>["webgpu","cuda","dml","webnn-gpu"].includes(y))}if(u.includes(v))return[l[v]??v];throw new Error(`Unsupported device: "${v}". Should be one of: ${u.join(", ")}.`)}let b=null;async function I(v,y,T){b&&await b;const x=_.create(v,y);b??(b=x);const P=await x;return P.config=T,P}function g(v){return v instanceof d.Tensor}const M=d==null?void 0:d.env;M!=null&&M.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!M.wasm.wasmPaths&&(M.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${n.env.version}/dist/`),M.wasm.proxy=!1),M!=null&&M.webgpu&&(M.webgpu.powerPreference="high-performance");function k(){var v;return(v=M==null?void 0:M.wasm)==null?void 0:v.proxy}n.env.backends.onnx=M},"./src/base/feature_extraction_utils.js":(s,e,t)=>{t.r(e),t.d(e,{FeatureExtractor:()=>a,validate_audio_inputs:()=>o});var r=t("./src/utils/constants.js"),n=t("./src/utils/generic.js"),i=t("./src/utils/hub.js");class a extends n.Callable{constructor(u){super(),this.config=u}static async from_pretrained(u,h={}){const d=await(0,i.getModelJSON)(u,r.FEATURE_EXTRACTOR_NAME,!0,h);return new this(d)}}function o(l,u){var h;if(!(l instanceof Float32Array||l instanceof Float64Array))throw new Error(`${u} expects input to be a Float32Array or a Float64Array, but got ${((h=l==null?void 0:l.constructor)==null?void 0:h.name)??typeof l} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(s,e,t)=>{t.r(e),t.d(e,{ImageProcessor:()=>v,center_to_corners_format:()=>d,post_process_instance_segmentation:()=>k,post_process_object_detection:()=>c,post_process_panoptic_segmentation:()=>M,post_process_semantic_segmentation:()=>_});var r=t("./src/utils/generic.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/maths.js");t("./src/utils/image.js");var a=t("./src/utils/core.js"),o=t("./src/utils/hub.js"),l=t("./src/utils/constants.js");function u(y,T,x=0,P=null){const O=y/T;let L=(0,i.bankers_round)(O)*T;return P!==null&&L>P&&(L=Math.floor(O)*T),L<x&&(L=Math.ceil(O)*T),L}function h([y,T],x){return[Math.max(Math.floor(y/x),1)*x,Math.max(Math.floor(T/x),1)*x]}function d([y,T,x,P]){return[y-x/2,T-P/2,y+x/2,T+P/2]}function c(y,T=.5,x=null,P=!1){const O=y.logits,L=y.pred_boxes,[G,K,R]=O.dims;if(x!==null&&x.length!==G)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let te=[];for(let H=0;H<G;++H){let ee=x!==null?x[H]:null,Z={boxes:[],classes:[],scores:[]},ne=O[H],me=L[H];for(let ce=0;ce<K;++ce){let j=ne[ce],F=[],V;if(P){V=j.sigmoid().data;for(let re=0;re<V.length;++re)V[re]>T&&F.push(re)}else{let re=(0,i.max)(j.data)[1];if(re===R-1||(V=(0,i.softmax)(j.data),V[re]<T))continue;F.push(re)}for(const re of F){let fe=me[ce].data;fe=d(fe),ee!==null&&(fe=fe.map((ae,ve)=>ae*ee[(ve+1)%2])),Z.boxes.push(fe),Z.classes.push(re),Z.scores.push(V[re])}}te.push(Z)}return te}function _(y,T=null){const x=y.logits,P=x.dims[0];if(T!==null&&T.length!==P)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const O=[];for(let L=0;L<P;++L){const G=T!==null?T[L]:null;let K=x[L];G!==null&&(K=(0,n.interpolate)(K,G,"bilinear",!1));const[R,te]=G??K.dims.slice(-2),H=new n.Tensor("int32",new Int32Array(R*te),[R,te]),ee=K[0].data,Z=H.data;for(let ce=1;ce<K.dims[0];++ce){const j=K[ce].data;for(let F=0;F<j.length;++F)j[F]>ee[F]&&(ee[F]=j[F],Z[F]=ce)}const ne=new Array(K.dims[0]);for(let ce=0;ce<Z.length;++ce){const j=Z[ce];ne[j]=j}const me=ne.filter(ce=>ce!==void 0);O.push({segmentation:H,labels:me})}return O}function f(y,T,x,P){const O=[],L=[],G=[];for(let K=0;K<y.dims[0];++K){const R=y[K],te=T[K],H=(0,i.max)(R.data)[1];if(H===P)continue;const Z=(0,i.softmax)(R.data)[H];Z>x&&(O.push(te),L.push(Z),G.push(H))}return[O,L,G]}function b(y,T,x,P=.5,O=.8){const L=[];let G=0,K=0;const R=T[x].data;for(let H=0;H<y.length;++H)y[H]===x&&(L.push(H),++G),R[H]>=P&&++K;let te=G>0&&K>0;return te&&(te=G/K>O),[te,L]}function I(y,T,x,P,O,L=null,G=null){const[K,R]=G??y[0].dims,te=new n.Tensor("int32",new Int32Array(K*R),[K,R]),H=[];if(G!==null)for(let ce=0;ce<y.length;++ce)y[ce]=(0,n.interpolate)(y[ce],G,"bilinear",!1);const ee=new Int32Array(y[0].data.length),Z=new Float32Array(y[0].data.length);for(let ce=0;ce<y.length;++ce){let j=T[ce];const F=y[ce].data;for(let V=0;V<F.length;++V)F[V]*=j,F[V]>Z[V]&&(ee[V]=ce,Z[V]=F[V])}let ne=0;const me=te.data;for(let ce=0;ce<x.length;++ce){const j=x[ce],[F,V]=b(ee,y,ce,P,O);if(F){++ne;for(const re of V)me[re]=ne;H.push({id:ne,label_id:j,score:T[ce]})}}return[te,H]}function g(y,T,x=28,P=3136,O=784*1280){if(y<x||T<x)throw new Error(`height:${y} or width:${T} must be larger than factor:${x}`);if(Math.max(y,T)/Math.min(y,T)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(y,T)/Math.min(y,T)}`);let L=Math.round(y/x)*x,G=Math.round(T/x)*x;if(L*G>O){const K=Math.sqrt(y*T/O);L=Math.floor(y/K/x)*x,G=Math.floor(T/K/x)*x}else if(L*G<P){const K=Math.sqrt(P/(y*T));L=Math.ceil(y*K/x)*x,G=Math.ceil(T*K/x)*x}return[L,G]}function M(y,T=.5,x=.5,P=.8,O=null,L=null){O===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),O=new Set);const G=y.class_queries_logits??y.logits,R=(y.masks_queries_logits??y.pred_masks).sigmoid();let[te,H,ee]=G.dims;if(ee-=1,L!==null&&L.length!==te)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Z=[];for(let ne=0;ne<te;++ne){let me=L!==null?L[ne]:null,ce=G[ne],j=R[ne],[F,V,re]=f(ce,j,T,ee);if(re.length===0){let[ve,ze]=me??j.dims.slice(-2),Ge=new n.Tensor("int32",new Int32Array(ve*ze).fill(-1),[ve,ze]);Z.push({segmentation:Ge,segments_info:[]});continue}let[fe,ae]=I(F,V,re,x,P,O,me);Z.push({segmentation:fe,segments_info:ae})}return Z}function k(y,T=.5,x=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class v extends r.Callable{constructor(T){super(),this.image_mean=T.image_mean??T.mean,this.image_std=T.image_std??T.std,this.resample=T.resample??2,this.do_rescale=T.do_rescale??!0,this.rescale_factor=T.rescale_factor??1/255,this.do_normalize=T.do_normalize,this.do_thumbnail=T.do_thumbnail,this.size=T.size??T.image_size,this.do_resize=T.do_resize??this.size!==void 0,this.size_divisibility=T.size_divisibility??T.size_divisor,this.do_center_crop=T.do_center_crop,this.crop_size=T.crop_size,this.do_convert_rgb=T.do_convert_rgb??!0,this.do_crop_margin=T.do_crop_margin,this.pad_size=T.pad_size,this.do_pad=T.do_pad,this.min_pixels=T.min_pixels,this.max_pixels=T.max_pixels,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=T.do_flip_channel_order??!1,this.config=T}async thumbnail(T,x,P=2){const O=T.height,L=T.width,G=x.height,K=x.width;let R=Math.min(O,G),te=Math.min(L,K);return R===O&&te===L?T:(O>L?te=Math.floor(L*R/O):L>O&&(R=Math.floor(O*te/L)),await T.resize(te,R,{resample:P}))}async crop_margin(T,x=200){const P=T.clone().grayscale(),O=(0,i.min)(P.data)[0],G=(0,i.max)(P.data)[0]-O;if(G===0)return T;const K=x/255;let R=P.width,te=P.height,H=0,ee=0;const Z=P.data;for(let ne=0;ne<P.height;++ne){const me=ne*P.width;for(let ce=0;ce<P.width;++ce)(Z[me+ce]-O)/G<K&&(R=Math.min(R,ce),te=Math.min(te,ne),H=Math.max(H,ce),ee=Math.max(ee,ne))}return T=await T.crop([R,te,H,ee]),T}pad_image(T,x,P,{mode:O="constant",center:L=!1,constant_values:G=0}={}){const[K,R,te]=x;let H,ee;if(typeof P=="number"?(H=P,ee=P):P==="square"?H=ee=Math.max(K,R):(H=P.width,ee=P.height),H!==R||ee!==K){const Z=new Float32Array(H*ee*te);if(Array.isArray(G))for(let ce=0;ce<Z.length;++ce)Z[ce]=G[ce%te];else G!==0&&Z.fill(G);const[ne,me]=L?[Math.floor((H-R)/2),Math.floor((ee-K)/2)]:[0,0];for(let ce=0;ce<K;++ce){const j=(ce+me)*H,F=ce*R;for(let V=0;V<R;++V){const re=(j+V+ne)*te,fe=(F+V)*te;for(let ae=0;ae<te;++ae)Z[re+ae]=T[fe+ae]}}if(O==="symmetric"){if(L)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const ce=K-1,j=R-1;for(let F=0;F<ee;++F){const V=F*H,re=(0,a.calculateReflectOffset)(F,ce)*R;for(let fe=0;fe<H;++fe){if(F<K&&fe<R)continue;const ae=(V+fe)*te,ve=(re+(0,a.calculateReflectOffset)(fe,j))*te;for(let ze=0;ze<te;++ze)Z[ae+ze]=T[ve+ze]}}}T=Z,x=[ee,H,te]}return[T,x]}rescale(T){for(let x=0;x<T.length;++x)T[x]=this.rescale_factor*T[x]}get_resize_output_image_size(T,x){const[P,O]=T.size;let L,G;if(this.do_thumbnail){const{height:K,width:R}=x;L=Math.min(K,R)}else Number.isInteger(x)?(L=x,G=this.config.max_size??L):x!==void 0&&(L=x.shortest_edge,G=x.longest_edge);if(L!==void 0||G!==void 0){const K=L===void 0?1:Math.max(L/P,L/O),R=P*K,te=O*K,H=G===void 0?1:Math.min(G/R,G/te);let ee=Math.floor(Number((R*H).toFixed(2))),Z=Math.floor(Number((te*H).toFixed(2)));return this.size_divisibility!==void 0&&([ee,Z]=h([ee,Z],this.size_divisibility)),[ee,Z]}else if(x!==void 0&&x.width!==void 0&&x.height!==void 0){let K=x.width,R=x.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let te=R/O,H=K/P;Math.abs(1-H)<Math.abs(1-te)?te=H:H=te,R=u(te*O,this.config.ensure_multiple_of),K=u(H*P,this.config.ensure_multiple_of)}return[K,R]}else{if(this.size_divisibility!==void 0)return h([P,O],this.size_divisibility);if(this.min_pixels!==void 0&&this.max_pixels!==void 0){const K=this.config.patch_size*this.config.merge_size;return g(O,P,K,this.min_pixels,this.max_pixels)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(x)}`)}}async resize(T){const[x,P]=this.get_resize_output_image_size(T,this.size);return await T.resize(x,P,{resample:this.resample})}async preprocess(T,{do_normalize:x=null,do_pad:P=null,do_convert_rgb:O=null,do_convert_grayscale:L=null,do_flip_channel_order:G=null}={}){this.do_crop_margin&&(T=await this.crop_margin(T));const[K,R]=T.size;if(O??this.do_convert_rgb?T=T.rgb():L&&(T=T.grayscale()),this.do_resize&&(T=await this.resize(T)),this.do_thumbnail&&(T=await this.thumbnail(T,this.size,this.resample)),this.do_center_crop){let ne,me;Number.isInteger(this.crop_size)?(ne=this.crop_size,me=this.crop_size):(ne=this.crop_size.width,me=this.crop_size.height),T=await T.center_crop(ne,me)}const te=[T.height,T.width];let H=Float32Array.from(T.data),ee=[T.height,T.width,T.channels];if(this.do_rescale&&this.rescale(H),x??this.do_normalize){let ne=this.image_mean;Array.isArray(this.image_mean)||(ne=new Array(T.channels).fill(ne));let me=this.image_std;if(Array.isArray(this.image_std)||(me=new Array(T.channels).fill(ne)),ne.length!==T.channels||me.length!==T.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${ne.length}) and \`image_std\` (${me.length}) must match the number of channels in the image (${T.channels}).`);for(let ce=0;ce<H.length;ce+=T.channels)for(let j=0;j<T.channels;++j)H[ce+j]=(H[ce+j]-ne[j])/me[j]}if(P??this.do_pad){if(this.pad_size)[H,ee]=this.pad_image(H,[T.height,T.width,T.channels],this.pad_size);else if(this.size_divisibility){const[ne,me]=h([ee[1],ee[0]],this.size_divisibility);[H,ee]=this.pad_image(H,ee,{width:ne,height:me})}}if(G??this.do_flip_channel_order){if(ee[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let ne=0;ne<H.length;ne+=3){const me=H[ne];H[ne]=H[ne+2],H[ne+2]=me}}const Z=new n.Tensor("float32",H,ee).permute(2,0,1);return{original_size:[R,K],reshaped_input_size:te,pixel_values:Z}}async _call(T,...x){Array.isArray(T)||(T=[T]);const P=await Promise.all(T.map(L=>this.preprocess(L)));return{pixel_values:(0,n.stack)(P.map(L=>L.pixel_values),0),original_sizes:P.map(L=>L.original_size),reshaped_input_sizes:P.map(L=>L.reshaped_input_size)}}static async from_pretrained(T,x={}){const P=await(0,o.getModelJSON)(T,l.IMAGE_PROCESSOR_NAME,!0,x);return new this(P)}}},"./src/base/processing_utils.js":(s,e,t)=>{t.r(e),t.d(e,{Processor:()=>a});var r=t("./src/utils/constants.js"),n=t("./src/utils/generic.js"),i=t("./src/utils/hub.js");class a extends n.Callable{constructor(l,u,h){super(),this.config=l,this.components=u,this.chat_template=h}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(l,u={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(l,{tokenize:!1,chat_template:this.chat_template??void 0,...u})}batch_decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...l)}decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...l)}async _call(l,...u){for(const h of[this.image_processor,this.feature_extractor,this.tokenizer])if(h)return h(l,...u);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(l,u={}){const[h,d,c]=await Promise.all([this.uses_processor_config?(0,i.getModelJSON)(l,r.PROCESSOR_NAME,!0,u):{},Promise.all(this.classes.filter(_=>_ in this).map(async _=>{const f=await this[_].from_pretrained(l,u);return[_.replace(/_class$/,""),f]})).then(Object.fromEntries),this.uses_chat_template_file?(0,i.getModelText)(l,r.CHAT_TEMPLATE_NAME,!0,u):null]);return new this(h,d,c)}}J(a,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),J(a,"uses_processor_config",!1),J(a,"uses_chat_template_file",!1)},"./src/configs.js":(s,e,t)=>{t.r(e),t.d(e,{AutoConfig:()=>h,PretrainedConfig:()=>u,getCacheShapes:()=>o});var r=t("./src/utils/core.js"),n=t("./src/utils/hub.js");async function i(d,c){return await(0,n.getModelJSON)(d,"config.json",!0,c)}function a(d){const c={};let _={};switch(d.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"voxtral":case"smolvlm":case"gemma3n":_=a(d.text_config);break;case"moondream1":_=a(d.phi_config);break;case"musicgen":_=a(d.decoder);break;case"multi_modality":_=a(d.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":c.num_heads="n_head",c.num_layers="n_layer",c.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":case"modernbert-decoder":c.num_heads="num_attention_heads",c.num_layers="num_hidden_layers",c.hidden_size="hidden_size";break;case"llama":case"arcee":case"lfm2":case"smollm3":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":case"llava_qwen2":c.num_heads="num_key_value_heads",c.num_layers="num_hidden_layers",c.hidden_size="hidden_size",c.num_attention_heads="num_attention_heads",c.dim_kv="head_dim";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"gemma3n_text":case"glm":case"helium":case"ernie4_5":c.num_heads="num_key_value_heads",c.num_layers="num_hidden_layers",c.dim_kv="head_dim";break;case"openelm":c.num_heads="num_kv_heads",c.num_layers="num_transformer_layers",c.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":c.num_heads="num_heads",c.num_layers="num_layers",c.hidden_size="hidden_size";break;case"bloom":c.num_heads="n_head",c.num_layers="n_layer",c.hidden_size="hidden_size";break;case"mpt":c.num_heads="n_heads",c.num_layers="n_layers",c.hidden_size="d_model";break;case"exaone":c.num_heads="num_key_value_heads",c.num_layers="num_layers",c.dim_kv="head_dim",c.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":c.num_decoder_layers="num_decoder_layers",c.num_decoder_heads="num_heads",c.decoder_dim_kv="d_kv",c.num_encoder_layers="num_layers",c.num_encoder_heads="num_heads",c.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":c.num_decoder_layers="decoder_layers",c.num_decoder_heads="decoder_attention_heads",c.decoder_hidden_size="d_model",c.num_encoder_layers="encoder_layers",c.num_encoder_heads="encoder_attention_heads",c.encoder_hidden_size="d_model";break;case"speecht5":c.num_decoder_layers="decoder_layers",c.num_decoder_heads="decoder_attention_heads",c.decoder_hidden_size="hidden_size",c.num_encoder_layers="encoder_layers",c.num_encoder_heads="encoder_attention_heads",c.encoder_hidden_size="hidden_size";break;case"trocr":c.num_encoder_layers=c.num_decoder_layers="decoder_layers",c.num_encoder_heads=c.num_decoder_heads="decoder_attention_heads",c.encoder_hidden_size=c.decoder_hidden_size="d_model";break;case"musicgen_decoder":c.num_encoder_layers=c.num_decoder_layers="num_hidden_layers",c.num_encoder_heads=c.num_decoder_heads="num_attention_heads",c.encoder_hidden_size=c.decoder_hidden_size="hidden_size";break;case"moonshine":c.num_decoder_layers="decoder_num_hidden_layers",c.num_decoder_heads="decoder_num_key_value_heads",c.num_encoder_layers="encoder_num_hidden_layers",c.num_encoder_heads="encoder_num_key_value_heads",c.encoder_hidden_size=c.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const b=a(d.decoder),I="num_decoder_layers"in b,g=(0,r.pick)(d,["model_type","is_encoder_decoder"]);return I?(g.num_decoder_layers=b.num_decoder_layers,g.num_decoder_heads=b.num_decoder_heads,g.decoder_hidden_size=b.decoder_hidden_size,g.num_encoder_layers=b.num_encoder_layers,g.num_encoder_heads=b.num_encoder_heads,g.encoder_hidden_size=b.encoder_hidden_size):(g.num_layers=b.num_layers,g.num_heads=b.num_heads,g.hidden_size=b.hidden_size),g}const f={..._,...(0,r.pick)(d,["model_type","multi_query","is_encoder_decoder"])};for(const b in c)f[b]=d[c[b]];return f}function o(d,c){if(d.model_type==="lfm2"){const _=(c==null?void 0:c.prefix)??"past_key_values",f=_==="present"?"present":"past",b={},{layer_types:I,num_attention_heads:g,num_key_value_heads:M,hidden_size:k,conv_L_cache:v}=d,y=k/g,T=(c==null?void 0:c.batch_size)??1;for(let x=0;x<I.length;++x)if(I[x]==="full_attention")for(const P of["key","value"])b[`${_}.${x}.${P}`]=[T,M,0,y];else if(I[x]==="conv")b[`${f}_conv.${x}`]=[T,k,v];else throw new Error(`Unsupported layer type: ${I[x]}`);return b}return l(d,c)}function l(d,{prefix:c="past_key_values",batch_size:_=1}={}){const f={},b=d.normalized_config;if(b.is_encoder_decoder&&"num_encoder_heads"in b&&"num_decoder_heads"in b){const I=b.encoder_dim_kv??b.encoder_hidden_size/b.num_encoder_heads,g=b.decoder_dim_kv??b.decoder_hidden_size/b.num_decoder_heads,M=[_,b.num_encoder_heads,0,I],k=[_,b.num_decoder_heads,0,g];for(let v=0;v<b.num_decoder_layers;++v)f[`${c}.${v}.encoder.key`]=M,f[`${c}.${v}.encoder.value`]=M,f[`${c}.${v}.decoder.key`]=k,f[`${c}.${v}.decoder.value`]=k}else{const I=b.num_heads,g=b.num_layers,M=b.dim_kv??b.hidden_size/(b.num_attention_heads??I);if(b.model_type==="falcon"){const k=[_*I,0,M];for(let v=0;v<g;++v)f[`${c}.${v}.key`]=k,f[`${c}.${v}.value`]=k}else if(b.multi_query){const k=[_*I,0,2*M];for(let v=0;v<g;++v)f[`${c}.${v}.key_value`]=k}else if(b.model_type==="bloom"){const k=[_*I,M,0],v=[_*I,0,M];for(let y=0;y<g;++y)f[`${c}.${y}.key`]=k,f[`${c}.${y}.value`]=v}else if(b.model_type==="openelm")for(let k=0;k<g;++k){const v=[_,I[k],0,M];f[`${c}.${k}.key`]=v,f[`${c}.${k}.value`]=v}else{const k=[_,I,0,M];for(let v=0;v<g;++v)f[`${c}.${v}.key`]=k,f[`${c}.${v}.value`]=k}}return f}class u{constructor(c){J(this,"model_type",null);J(this,"is_encoder_decoder",!1);J(this,"max_position_embeddings");J(this,"transformers.js_config");Object.assign(this,c),this.normalized_config=a(this)}static async from_pretrained(c,{progress_callback:_=null,config:f=null,cache_dir:b=null,local_files_only:I=!1,revision:g="main"}={}){f&&!(f instanceof u)&&(f=new u(f));const M=f??await i(c,{progress_callback:_,config:f,cache_dir:b,local_files_only:I,revision:g});return new this(M)}}class h{static async from_pretrained(...c){return u.from_pretrained(...c)}}},"./src/env.js":(s,e,t)=>{var O,L;t.r(e),t.d(e,{apis:()=>g,env:()=>x});var r=t("?db59"),n=t("?383f"),i=t("?fa4b");const a="3.7.1",o=typeof window<"u"&&typeof window.document<"u",l=typeof self<"u"&&["DedicatedWorkerGlobalScope","ServiceWorkerGlobalScope","SharedWorkerGlobalScope"].includes((O=self.constructor)==null?void 0:O.name),u=typeof self<"u"&&"caches"in self,h=typeof navigator<"u"&&"gpu"in navigator,d=typeof navigator<"u"&&"ml"in navigator,c=typeof process<"u",_=c&&((L=process==null?void 0:process.release)==null?void 0:L.name)==="node",f=!P(r),b=!P(n),I=typeof globalThis.Deno<"u",g=Object.freeze({IS_BROWSER_ENV:o,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:u,IS_WEBGPU_AVAILABLE:h,IS_WEBNN_AVAILABLE:d,IS_PROCESS_AVAILABLE:c,IS_NODE_ENV:_,IS_FS_AVAILABLE:f,IS_PATH_AVAILABLE:b}),M=f&&b;let k="./";if(M){const G=Object(import.meta).url;G?k=n.dirname(n.dirname(i.fileURLToPath(G))):typeof __dirname<"u"&&(k=n.dirname(__dirname))}const v=M?n.join(k,"/.cache/"):null,y="/models/",T=M?n.join(k,y):y,x={version:a,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(o||l),localModelPath:T,useFS:f,useBrowserCache:u&&!I,useFSCache:f,cacheDir:v,useCustomCache:!1,customCache:null};function P(G){return Object.keys(G).length===0}},"./src/generation/configuration_utils.js":(s,e,t)=>{t.r(e),t.d(e,{GenerationConfig:()=>n});var r=t("./src/utils/core.js");class n{constructor(a){J(this,"max_length",20);J(this,"max_new_tokens",null);J(this,"min_length",0);J(this,"min_new_tokens",null);J(this,"early_stopping",!1);J(this,"max_time",null);J(this,"do_sample",!1);J(this,"num_beams",1);J(this,"num_beam_groups",1);J(this,"penalty_alpha",null);J(this,"use_cache",!0);J(this,"temperature",1);J(this,"top_k",50);J(this,"top_p",1);J(this,"typical_p",1);J(this,"epsilon_cutoff",0);J(this,"eta_cutoff",0);J(this,"diversity_penalty",0);J(this,"repetition_penalty",1);J(this,"encoder_repetition_penalty",1);J(this,"length_penalty",1);J(this,"no_repeat_ngram_size",0);J(this,"bad_words_ids",null);J(this,"force_words_ids",null);J(this,"renormalize_logits",!1);J(this,"constraints",null);J(this,"forced_bos_token_id",null);J(this,"forced_eos_token_id",null);J(this,"remove_invalid_values",!1);J(this,"exponential_decay_length_penalty",null);J(this,"suppress_tokens",null);J(this,"streamer",null);J(this,"begin_suppress_tokens",null);J(this,"forced_decoder_ids",null);J(this,"guidance_scale",null);J(this,"num_return_sequences",1);J(this,"output_attentions",!1);J(this,"output_hidden_states",!1);J(this,"output_scores",!1);J(this,"return_dict_in_generate",!1);J(this,"pad_token_id",null);J(this,"bos_token_id",null);J(this,"eos_token_id",null);J(this,"encoder_no_repeat_ngram_size",0);J(this,"decoder_start_token_id",null);J(this,"generation_kwargs",{});Object.assign(this,(0,r.pick)(a,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(s,e,t)=>{t.r(e),t.d(e,{ClassifierFreeGuidanceLogitsProcessor:()=>g,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>u,LogitsProcessor:()=>i,LogitsProcessorList:()=>o,LogitsWarper:()=>a,MinLengthLogitsProcessor:()=>f,MinNewTokensLengthLogitsProcessor:()=>b,NoBadWordsLogitsProcessor:()=>I,NoRepeatNGramLogitsProcessor:()=>c,RepetitionPenaltyLogitsProcessor:()=>_,SuppressTokensAtBeginLogitsProcessor:()=>h,TemperatureLogitsWarper:()=>M,TopKLogitsWarper:()=>v,TopPLogitsWarper:()=>k,WhisperTimeStampLogitsProcessor:()=>d});var r=t("./src/utils/generic.js");t("./src/utils/tensor.js");var n=t("./src/utils/maths.js");class i extends r.Callable{_call(T,x){throw Error("`_call` should be implemented in a subclass")}}class a extends r.Callable{_call(T,x){throw Error("`_call` should be implemented in a subclass")}}class o extends r.Callable{constructor(){super(),this.processors=[]}push(T){this.processors.push(T)}extend(T){this.processors.push(...T)}_call(T,x){let P=x;for(const O of this.processors)P=O(T,P);return P}[Symbol.iterator](){return this.processors.values()}}class l extends i{constructor(T){super(),this.bos_token_id=T}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length===1){const O=x[P].data;O.fill(-1/0),O[this.bos_token_id]=0}return x}}class u extends i{constructor(T,x){super(),this.max_length=T,this.eos_token_id=Array.isArray(x)?x:[x]}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length===this.max_length-1){const O=x[P].data;O.fill(-1/0);for(const L of this.eos_token_id)O[L]=0}return x}}class h extends i{constructor(T,x){super(),this.begin_suppress_tokens=T,this.begin_index=x}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length===this.begin_index){const O=x[P].data;for(const L of this.begin_suppress_tokens)O[L]=-1/0}return x}}class d extends i{constructor(T,x){super(),this.eos_token_id=Array.isArray(T.eos_token_id)?T.eos_token_id[0]:T.eos_token_id,this.no_timestamps_token_id=T.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=x.length,x.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=T.max_initial_timestamp_index}_call(T,x){for(let P=0;P<T.length;++P){const O=x[P].data;if(O[this.no_timestamps_token_id]=-1/0,T[P].length===this.begin_index-1){O.fill(-1/0),O[this.timestamp_begin]=0;continue}const L=T[P].slice(this.begin_index),G=L.length>=1&&L[L.length-1]>=this.timestamp_begin,K=L.length<2||L[L.length-2]>=this.timestamp_begin;if(G&&(K?O.subarray(this.timestamp_begin).fill(-1/0):O.subarray(0,this.eos_token_id).fill(-1/0)),T[P].length===this.begin_index&&this.max_initial_timestamp_index!==null){const ee=this.timestamp_begin+this.max_initial_timestamp_index;O.subarray(ee+1).fill(-1/0)}const R=(0,n.log_softmax)(O),te=Math.log(R.subarray(this.timestamp_begin).map(Math.exp).reduce((ee,Z)=>ee+Z)),H=(0,n.max)(R.subarray(0,this.timestamp_begin))[0];te>H&&O.subarray(0,this.timestamp_begin).fill(-1/0)}return x}}class c extends i{constructor(T){super(),this.no_repeat_ngram_size=T}getNgrams(T){const x=T.length,P=[];for(let L=0;L<x+1-this.no_repeat_ngram_size;++L){const G=[];for(let K=0;K<this.no_repeat_ngram_size;++K)G.push(T[L+K]);P.push(G.map(Number))}const O=new Map;for(const L of P){const G=L.slice(0,L.length-1),K=JSON.stringify(G),R=O.get(K)??[];R.push(L[L.length-1]),O.set(K,R)}return O}getGeneratedNgrams(T,x){const P=x.slice(x.length+1-this.no_repeat_ngram_size,x.length);return T.get(JSON.stringify(P.map(Number)))??[]}calcBannedNgramTokens(T){const x=[];if(T.length+1<this.no_repeat_ngram_size)return x;{const P=this.getNgrams(T);return this.getGeneratedNgrams(P,T)}}_call(T,x){for(let P=0;P<T.length;++P){const O=x[P].data,L=this.calcBannedNgramTokens(T[P]);for(const G of L)O[G]=-1/0}return x}}class _ extends i{constructor(T){super(),this.penalty=T}_call(T,x){for(let P=0;P<T.length;++P){const O=x[P].data;for(const L of new Set(T[P])){const G=Number(L);O[G]<0?O[G]*=this.penalty:O[G]/=this.penalty}}return x}}class f extends i{constructor(T,x){super(),this.min_length=T,this.eos_token_id=Array.isArray(x)?x:[x]}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length<this.min_length){const O=x[P].data;for(const L of this.eos_token_id)O[L]=-1/0}return x}}class b extends i{constructor(T,x,P){super(),this.prompt_length_to_skip=T,this.min_new_tokens=x,this.eos_token_id=Array.isArray(P)?P:[P]}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length-this.prompt_length_to_skip<this.min_new_tokens){const L=x[P].data;for(const G of this.eos_token_id)L[G]=-1/0}return x}}class I extends i{constructor(T,x){super(),this.bad_words_ids=T,this.eos_token_id=Array.isArray(x)?x:[x]}_call(T,x){for(let P=0;P<T.length;++P){const O=x[P].data,L=T[P];for(const G of this.bad_words_ids){if(L.length<G.length-1)continue;let K=!0;for(let R=1;R<=G.length-1;++R)if(G.at(-R-1)!=L.at(-R)){K=!1;break}K&&(O[G.at(-1)]=-1/0)}}return x}}class g extends i{constructor(T){if(super(),T<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${T}.`);this.guidance_scale=T}_call(T,x){if(x.dims[0]!==2*T.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${x.dims[0]} for the logits and ${T.length} for the input ids.`);const P=T.length,O=x.slice([0,P],null),L=x.slice([P,x.dims[0]],null);for(let G=0;G<L.data.length;++G)L.data[G]+=(O.data[G]-L.data[G])*this.guidance_scale;return L}}class M extends a{constructor(T){super(),this.temperature=T}_call(T,x){const P=x.data;for(let O=0;O<P.length;++O)P[O]/=this.temperature;return x}}class k extends a{constructor(T,{filter_value:x=-1/0,min_tokens_to_keep:P=1}={}){if(super(),T<0||T>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${T}`);if(!Number.isInteger(P)||P<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${P}`);this.top_p=T,this.filter_value=x,this.min_tokens_to_keep=P}}class v extends a{constructor(T,{filter_value:x=-1/0,min_tokens_to_keep:P=1}={}){if(super(),!Number.isInteger(T)||T<0)throw new Error(`\`top_k\` must be a positive integer, but is ${T}`);this.top_k=Math.max(T,P),this.filter_value=x}}},"./src/generation/logits_sampler.js":(s,e,t)=>{t.r(e),t.d(e,{LogitsSampler:()=>a});var r=t("./src/utils/generic.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/maths.js");t("./src/generation/configuration_utils.js");class a extends r.Callable{constructor(d){super(),this.generation_config=d}async _call(d){return this.sample(d)}async sample(d){throw Error("sample should be implemented in subclasses.")}getLogits(d,c){let _=d.dims.at(-1),f=d.data;if(c===-1)f=f.slice(-_);else{let b=c*_;f=f.slice(b,b+_)}return f}randomSelect(d){let c=0;for(let f=0;f<d.length;++f)c+=d[f];let _=Math.random()*c;for(let f=0;f<d.length;++f)if(_-=d[f],_<=0)return f;return 0}static getSampler(d){if(d.do_sample)return new l(d);if(d.num_beams>1)return new u(d);if(d.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${d.num_return_sequences}.`);return new o(d)}}class o extends a{async sample(d){const c=(0,i.max)(d.data)[1];return[[BigInt(c),0]]}}class l extends a{async sample(d){let c=d.dims.at(-1);this.generation_config.top_k>0&&(c=Math.min(this.generation_config.top_k,c));const[_,f]=await(0,n.topk)(d,c),b=(0,i.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},()=>{const I=this.randomSelect(b);return[f.data[I],Math.log(b[I])]})}}class u extends a{async sample(d){let c=d.dims.at(-1);this.generation_config.top_k>0&&(c=Math.min(this.generation_config.top_k,c));const[_,f]=await(0,n.topk)(d,c),b=(0,i.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},(I,g)=>[f.data[g],Math.log(b[g])])}}},"./src/generation/stopping_criteria.js":(s,e,t)=>{t.r(e),t.d(e,{EosTokenCriteria:()=>o,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>a,StoppingCriteria:()=>n,StoppingCriteriaList:()=>i});var r=t("./src/utils/generic.js");class n extends r.Callable{_call(h,d){throw Error("StoppingCriteria needs to be subclassed")}}class i extends r.Callable{constructor(){super(),this.criteria=[]}push(h){this.criteria.push(h)}extend(h){h instanceof i?h=h.criteria:h instanceof n&&(h=[h]),this.criteria.push(...h)}_call(h,d){const c=new Array(h.length).fill(!1);for(const _ of this.criteria){const f=_(h,d);for(let b=0;b<c.length;++b)c[b]||(c[b]=f[b])}return c}[Symbol.iterator](){return this.criteria.values()}}class a extends n{constructor(h,d=null){super(),this.max_length=h,this.max_position_embeddings=d}_call(h){return h.map(d=>d.length>=this.max_length)}}class o extends n{constructor(h){super(),Array.isArray(h)||(h=[h]),this.eos_token_id=h}_call(h,d){return h.map(c=>{const _=c.at(-1);return this.eos_token_id.some(f=>_==f)})}}class l extends n{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(h,d){return new Array(h.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(s,e,t)=>{t.r(e),t.d(e,{BaseStreamer:()=>a,TextStreamer:()=>l,WhisperTextStreamer:()=>u});var r=t("./src/utils/core.js"),n=t("./src/tokenizers.js"),i=t("./src/env.js");class a{put(d){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const o=i.apis.IS_PROCESS_AVAILABLE?h=>process.stdout.write(h):h=>console.log(h);class l extends a{constructor(d,{skip_prompt:c=!1,callback_function:_=null,token_callback_function:f=null,skip_special_tokens:b=!0,decode_kwargs:I={},...g}={}){super(),this.tokenizer=d,this.skip_prompt=c,this.callback_function=_??o,this.token_callback_function=f,this.decode_kwargs={skip_special_tokens:b,...I,...g},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(d){var I;if(d.length>1)throw Error("TextStreamer only supports batch size of 1");const c=this.next_tokens_are_prompt;if(c&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const _=d[0];(I=this.token_callback_function)==null||I.call(this,_),this.token_cache=(0,r.mergeArrays)(this.token_cache,_);const f=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let b;c||f.endsWith(`
`)?(b=f.slice(this.print_len),this.token_cache=[],this.print_len=0):f.length>0&&(0,n.is_chinese_char)(f.charCodeAt(f.length-1))?(b=f.slice(this.print_len),this.print_len+=b.length):(b=f.slice(this.print_len,f.lastIndexOf(" ")+1),this.print_len+=b.length),this.on_finalized_text(b,!1)}end(){let d;this.token_cache.length>0?(d=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):d="",this.next_tokens_are_prompt=!0,this.on_finalized_text(d,!0)}on_finalized_text(d,c){var _,f;d.length>0&&((_=this.callback_function)==null||_.call(this,d)),c&&this.callback_function===o&&i.apis.IS_PROCESS_AVAILABLE&&((f=this.callback_function)==null||f.call(this,`
`))}}class u extends l{constructor(d,{skip_prompt:c=!1,callback_function:_=null,token_callback_function:f=null,on_chunk_start:b=null,on_chunk_end:I=null,on_finalize:g=null,time_precision:M=.02,skip_special_tokens:k=!0,decode_kwargs:v={}}={}){super(d,{skip_prompt:c,skip_special_tokens:k,callback_function:_,token_callback_function:f,decode_kwargs:v}),this.timestamp_begin=d.timestamp_begin,this.on_chunk_start=b,this.on_chunk_end=I,this.on_finalize=g,this.time_precision=M,this.waiting_for_timestamp=!1}put(d){var _,f,b;if(d.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const c=d[0];if(c.length===1){const I=Number(c[0])-this.timestamp_begin;if(I>=0){const g=I*this.time_precision;this.waiting_for_timestamp?(_=this.on_chunk_end)==null||_.call(this,g):(f=this.on_chunk_start)==null||f.call(this,g),this.waiting_for_timestamp=!this.waiting_for_timestamp,(b=this.token_callback_function)==null||b.call(this,c);return}}return super.put(d)}end(){var d;super.end(),(d=this.on_finalize)==null||d.call(this)}}},"./src/models.js":(s,e,t)=>{t.r(e),t.d(e,{ASTForAudioClassification:()=>gi,ASTModel:()=>fa,ASTPreTrainedModel:()=>_i,AlbertForMaskedLM:()=>bt,AlbertForQuestionAnswering:()=>tt,AlbertForSequenceClassification:()=>We,AlbertModel:()=>qe,AlbertPreTrainedModel:()=>Ne,ArceeForCausalLM:()=>Tt,ArceeModel:()=>ot,ArceePreTrainedModel:()=>He,AutoModel:()=>Rl,AutoModelForAudioClassification:()=>Wf,AutoModelForAudioFrameClassification:()=>Kf,AutoModelForAudioTextToText:()=>t_,AutoModelForCTC:()=>Vf,AutoModelForCausalLM:()=>Af,AutoModelForDepthEstimation:()=>Qf,AutoModelForDocumentQuestionAnswering:()=>Hf,AutoModelForImageClassification:()=>Lf,AutoModelForImageFeatureExtraction:()=>Zf,AutoModelForImageMatting:()=>qf,AutoModelForImageSegmentation:()=>zf,AutoModelForImageTextToText:()=>e_,AutoModelForImageToImage:()=>Xf,AutoModelForMaskGeneration:()=>Uf,AutoModelForMaskedLM:()=>Ff,AutoModelForNormalEstimation:()=>Jf,AutoModelForObjectDetection:()=>jf,AutoModelForPoseEstimation:()=>Yf,AutoModelForQuestionAnswering:()=>Of,AutoModelForSemanticSegmentation:()=>Bf,AutoModelForSeq2SeqLM:()=>Sf,AutoModelForSequenceClassification:()=>Pf,AutoModelForSpeechSeq2Seq:()=>kf,AutoModelForTextToSpectrogram:()=>If,AutoModelForTextToWaveform:()=>$f,AutoModelForTokenClassification:()=>Cf,AutoModelForUniversalSegmentation:()=>Rf,AutoModelForVision2Seq:()=>Df,AutoModelForXVector:()=>Gf,AutoModelForZeroShotObjectDetection:()=>Nf,BartForConditionalGeneration:()=>ws,BartForSequenceClassification:()=>Hs,BartModel:()=>Zt,BartPretrainedModel:()=>Ys,BaseModelOutput:()=>Ie,BeitForImageClassification:()=>ih,BeitModel:()=>nh,BeitPreTrainedModel:()=>el,BertForMaskedLM:()=>Se,BertForQuestionAnswering:()=>Be,BertForSequenceClassification:()=>we,BertForTokenClassification:()=>Ae,BertModel:()=>Me,BertPreTrainedModel:()=>Ee,BlenderbotForConditionalGeneration:()=>is,BlenderbotModel:()=>ms,BlenderbotPreTrainedModel:()=>os,BlenderbotSmallForConditionalGeneration:()=>Nn,BlenderbotSmallModel:()=>Nr,BlenderbotSmallPreTrainedModel:()=>qs,BloomForCausalLM:()=>Cd,BloomModel:()=>Pd,BloomPreTrainedModel:()=>Uo,CLIPModel:()=>vi,CLIPPreTrainedModel:()=>Mr,CLIPSegForImageSegmentation:()=>Hn,CLIPSegModel:()=>wn,CLIPSegPreTrainedModel:()=>sr,CLIPTextModel:()=>Pa,CLIPTextModelWithProjection:()=>xi,CLIPVisionModel:()=>Ca,CLIPVisionModelWithProjection:()=>Ti,CamembertForMaskedLM:()=>mt,CamembertForQuestionAnswering:()=>Bt,CamembertForSequenceClassification:()=>xt,CamembertForTokenClassification:()=>rt,CamembertModel:()=>gt,CamembertPreTrainedModel:()=>st,CausalLMOutput:()=>vn,CausalLMOutputWithPast:()=>ix,ChineseCLIPModel:()=>ht,ChineseCLIPPreTrainedModel:()=>_n,ClapAudioModelWithProjection:()=>om,ClapModel:()=>im,ClapPreTrainedModel:()=>La,ClapTextModelWithProjection:()=>am,CodeGenForCausalLM:()=>U,CodeGenModel:()=>z,CodeGenPreTrainedModel:()=>A,CohereForCausalLM:()=>od,CohereModel:()=>ad,CoherePreTrainedModel:()=>Fo,ConvBertForMaskedLM:()=>Fr,ConvBertForQuestionAnswering:()=>S,ConvBertForSequenceClassification:()=>St,ConvBertForTokenClassification:()=>Qt,ConvBertModel:()=>Ar,ConvBertPreTrainedModel:()=>pt,ConvNextForImageClassification:()=>Zh,ConvNextModel:()=>Yh,ConvNextPreTrainedModel:()=>fl,ConvNextV2ForImageClassification:()=>tp,ConvNextV2Model:()=>ep,ConvNextV2PreTrainedModel:()=>_l,DFineForObjectDetection:()=>wh,DFineModel:()=>gh,DFinePreTrainedModel:()=>al,DPTForDepthEstimation:()=>Oh,DPTModel:()=>Fh,DPTPreTrainedModel:()=>hl,DacDecoderModel:()=>Xm,DacDecoderOutput:()=>Km,DacEncoderModel:()=>qm,DacEncoderOutput:()=>Gm,DacModel:()=>Hm,DacPreTrainedModel:()=>Va,DebertaForMaskedLM:()=>Qs,DebertaForQuestionAnswering:()=>ks,DebertaForSequenceClassification:()=>rs,DebertaForTokenClassification:()=>Ss,DebertaModel:()=>Us,DebertaPreTrainedModel:()=>Ut,DebertaV2ForMaskedLM:()=>Is,DebertaV2ForQuestionAnswering:()=>Ws,DebertaV2ForSequenceClassification:()=>Or,DebertaV2ForTokenClassification:()=>Dr,DebertaV2Model:()=>ur,DebertaV2PreTrainedModel:()=>Vs,DecisionTransformerModel:()=>Sm,DecisionTransformerPreTrainedModel:()=>Cm,DeiTForImageClassification:()=>xh,DeiTModel:()=>vh,DeiTPreTrainedModel:()=>ll,DepthAnythingForDepthEstimation:()=>Lh,DepthAnythingPreTrainedModel:()=>Dh,DepthProForDepthEstimation:()=>Nh,DepthProPreTrainedModel:()=>jh,DetrForObjectDetection:()=>oh,DetrForSegmentation:()=>tl,DetrModel:()=>ah,DetrObjectDetectionOutput:()=>sl,DetrPreTrainedModel:()=>Ia,DetrSegmentationOutput:()=>lh,Dinov2ForImageClassification:()=>rp,Dinov2Model:()=>sp,Dinov2PreTrainedModel:()=>gl,Dinov2WithRegistersForImageClassification:()=>ip,Dinov2WithRegistersModel:()=>np,Dinov2WithRegistersPreTrainedModel:()=>wl,DistilBertForMaskedLM:()=>fs,DistilBertForQuestionAnswering:()=>ps,DistilBertForSequenceClassification:()=>Ls,DistilBertForTokenClassification:()=>fr,DistilBertModel:()=>tr,DistilBertPreTrainedModel:()=>Gs,DonutSwinModel:()=>Jh,DonutSwinPreTrainedModel:()=>Qh,EfficientNetForImageClassification:()=>mm,EfficientNetModel:()=>pm,EfficientNetPreTrainedModel:()=>kl,ElectraForMaskedLM:()=>q,ElectraForQuestionAnswering:()=>Fe,ElectraForSequenceClassification:()=>se,ElectraForTokenClassification:()=>ge,ElectraModel:()=>B,ElectraPreTrainedModel:()=>X,Ernie4_5_ForCausalLM:()=>em,Ernie4_5_Model:()=>Zp,Ernie4_5_PretrainedModel:()=>Tl,EsmForMaskedLM:()=>Ks,EsmForSequenceClassification:()=>Re,EsmForTokenClassification:()=>je,EsmModel:()=>Br,EsmPreTrainedModel:()=>Js,ExaoneForCausalLM:()=>Jc,ExaoneModel:()=>Qc,ExaonePreTrainedModel:()=>So,FalconForCausalLM:()=>nm,FalconModel:()=>rm,FalconPreTrainedModel:()=>Pl,FastViTForImageClassification:()=>Hd,FastViTModel:()=>Kd,FastViTPreTrainedModel:()=>Xo,Florence2ForConditionalGeneration:()=>ba,Florence2PreTrainedModel:()=>Ma,GLPNForDepthEstimation:()=>Xh,GLPNModel:()=>qh,GLPNPreTrainedModel:()=>ml,GPT2LMHeadModel:()=>Ii,GPT2Model:()=>ki,GPT2PreTrainedModel:()=>qn,GPTBigCodeForCausalLM:()=>E,GPTBigCodeModel:()=>p,GPTBigCodePreTrainedModel:()=>Yn,GPTJForCausalLM:()=>Li,GPTJModel:()=>Di,GPTJPreTrainedModel:()=>Jn,GPTNeoForCausalLM:()=>Qn,GPTNeoModel:()=>bn,GPTNeoPreTrainedModel:()=>Xn,GPTNeoXForCausalLM:()=>Oi,GPTNeoXModel:()=>Fi,GPTNeoXPreTrainedModel:()=>yn,Gemma2ForCausalLM:()=>dd,Gemma2Model:()=>cd,Gemma2PreTrainedModel:()=>Do,Gemma3ForCausalLM:()=>pd,Gemma3Model:()=>hd,Gemma3PreTrainedModel:()=>Lo,Gemma3nForConditionalGeneration:()=>en,Gemma3nPreTrainedModel:()=>Ta,GemmaForCausalLM:()=>ud,GemmaModel:()=>ld,GemmaPreTrainedModel:()=>Oo,GlmForCausalLM:()=>Xc,GlmModel:()=>qc,GlmPreTrainedModel:()=>Co,GraniteForCausalLM:()=>id,GraniteModel:()=>nd,GranitePreTrainedModel:()=>Ao,GroundingDinoForObjectDetection:()=>op,GroundingDinoPreTrainedModel:()=>ap,GroupViTModel:()=>Gd,GroupViTPreTrainedModel:()=>Wd,HeliumForCausalLM:()=>Hc,HeliumModel:()=>Kc,HeliumPreTrainedModel:()=>Po,HieraForImageClassification:()=>Eh,HieraModel:()=>Th,HieraPreTrainedModel:()=>ul,HubertForCTC:()=>zp,HubertForSequenceClassification:()=>Bp,HubertModel:()=>Lp,HubertPreTrainedModel:()=>Gv,IJepaForImageClassification:()=>Dd,IJepaModel:()=>Od,IJepaPreTrainedModel:()=>Ko,Idefics3ForConditionalGeneration:()=>mn,Idefics3PreTrainedModel:()=>tn,ImageMattingOutput:()=>r_,JAISLMHeadModel:()=>Ai,JAISModel:()=>$i,JAISPreTrainedModel:()=>Mn,JinaCLIPModel:()=>Ci,JinaCLIPPreTrainedModel:()=>Kn,JinaCLIPTextModel:()=>Si,JinaCLIPVisionModel:()=>gn,Lfm2ForCausalLM:()=>vs,Lfm2Model:()=>Kt,Lfm2PreTrainedModel:()=>Dt,LiteWhisperForConditionalGeneration:()=>Mi,LlamaForCausalLM:()=>De,LlamaModel:()=>Pe,LlamaPreTrainedModel:()=>ue,LlavaForConditionalGeneration:()=>Wn,LlavaOnevisionForConditionalGeneration:()=>ga,LlavaPreTrainedModel:()=>Vn,LlavaQwen2ForCausalLM:()=>xa,LongT5ForConditionalGeneration:()=>ys,LongT5Model:()=>_s,LongT5PreTrainedModel:()=>Gt,M2M100ForConditionalGeneration:()=>gp,M2M100Model:()=>_p,M2M100PreTrainedModel:()=>yl,MBartForCausalLM:()=>cs,MBartForConditionalGeneration:()=>$s,MBartForSequenceClassification:()=>cr,MBartModel:()=>wr,MBartPreTrainedModel:()=>Rs,MPNetForMaskedLM:()=>dn,MPNetForQuestionAnswering:()=>$,MPNetForSequenceClassification:()=>hn,MPNetForTokenClassification:()=>he,MPNetModel:()=>cn,MPNetPreTrainedModel:()=>gr,MT5ForConditionalGeneration:()=>zs,MT5Model:()=>gs,MT5PreTrainedModel:()=>as,MarianMTModel:()=>fp,MarianModel:()=>mp,MarianPreTrainedModel:()=>bl,MaskFormerForInstanceSegmentation:()=>Hh,MaskFormerModel:()=>Kh,MaskFormerPreTrainedModel:()=>pl,MaskedLMOutput:()=>As,Metric3DForDepthEstimation:()=>Vh,Metric3DPreTrainedModel:()=>Uh,Metric3Dv2ForDepthEstimation:()=>Gh,Metric3Dv2PreTrainedModel:()=>Wh,MgpstrForSceneTextRecognition:()=>Fm,MgpstrModelOutput:()=>$m,MgpstrPreTrainedModel:()=>Am,MimiDecoderModel:()=>Wm,MimiDecoderOutput:()=>Nm,MimiEncoderModel:()=>Vm,MimiEncoderOutput:()=>jm,MimiModel:()=>Um,MimiPreTrainedModel:()=>Ua,MistralForCausalLM:()=>Yp,MistralModel:()=>Jp,MistralPreTrainedModel:()=>xl,MobileBertForMaskedLM:()=>Rr,MobileBertForQuestionAnswering:()=>jr,MobileBertForSequenceClassification:()=>_r,MobileBertModel:()=>Jt,MobileBertPreTrainedModel:()=>et,MobileLLMForCausalLM:()=>Zc,MobileLLMModel:()=>Yc,MobileLLMPreTrainedModel:()=>ko,MobileNetV1ForImageClassification:()=>_m,MobileNetV1ForSemanticSegmentation:()=>gm,MobileNetV1Model:()=>fm,MobileNetV1PreTrainedModel:()=>Ba,MobileNetV2ForImageClassification:()=>Mm,MobileNetV2ForSemanticSegmentation:()=>bm,MobileNetV2Model:()=>wm,MobileNetV2PreTrainedModel:()=>Ra,MobileNetV3ForImageClassification:()=>vm,MobileNetV3ForSemanticSegmentation:()=>xm,MobileNetV3Model:()=>ym,MobileNetV3PreTrainedModel:()=>ja,MobileNetV4ForImageClassification:()=>Em,MobileNetV4ForSemanticSegmentation:()=>Pm,MobileNetV4Model:()=>Tm,MobileNetV4PreTrainedModel:()=>Na,MobileViTForImageClassification:()=>Jd,MobileViTModel:()=>Qd,MobileViTPreTrainedModel:()=>Qo,MobileViTV2ForImageClassification:()=>Zd,MobileViTV2Model:()=>Yd,MobileViTV2PreTrainedModel:()=>Jo,ModelOutput:()=>be,ModernBertDecoderForCausalLM:()=>Ps,ModernBertDecoderModel:()=>bs,ModernBertDecoderPreTrainedModel:()=>Mt,ModernBertForMaskedLM:()=>at,ModernBertForSequenceClassification:()=>At,ModernBertForTokenClassification:()=>kt,ModernBertModel:()=>Ye,ModernBertPreTrainedModel:()=>Oe,Moondream1ForConditionalGeneration:()=>wa,MoonshineForConditionalGeneration:()=>_a,MoonshineModel:()=>Eo,MoonshinePreTrainedModel:()=>bi,MptForCausalLM:()=>kd,MptModel:()=>Sd,MptPreTrainedModel:()=>Vo,MultiModalityCausalLM:()=>Im,MultiModalityPreTrainedModel:()=>km,MusicgenForCausalLM:()=>Xv,MusicgenForConditionalGeneration:()=>$l,MusicgenModel:()=>qv,MusicgenPreTrainedModel:()=>Il,NeoBertForMaskedLM:()=>Ze,NeoBertForQuestionAnswering:()=>Je,NeoBertForSequenceClassification:()=>Ke,NeoBertForTokenClassification:()=>nt,NeoBertModel:()=>xe,NeoBertPreTrainedModel:()=>Xe,NomicBertModel:()=>lr,NomicBertPreTrainedModel:()=>Ns,OPTForCausalLM:()=>$d,OPTModel:()=>Id,OPTPreTrainedModel:()=>Wo,Olmo2ForCausalLM:()=>rd,Olmo2Model:()=>sd,Olmo2PreTrainedModel:()=>$o,OlmoForCausalLM:()=>td,OlmoModel:()=>ed,OlmoPreTrainedModel:()=>Io,OpenELMForCausalLM:()=>fd,OpenELMModel:()=>md,OpenELMPreTrainedModel:()=>zo,OwlViTForObjectDetection:()=>th,OwlViTModel:()=>eh,OwlViTPreTrainedModel:()=>Yo,Owlv2ForObjectDetection:()=>rh,Owlv2Model:()=>sh,Owlv2PreTrainedModel:()=>Zo,PaliGemmaForConditionalGeneration:()=>va,PaliGemmaPreTrainedModel:()=>ya,PatchTSMixerForPrediction:()=>zm,PatchTSMixerModel:()=>Lm,PatchTSMixerPreTrainedModel:()=>Fl,PatchTSTForPrediction:()=>Dm,PatchTSTModel:()=>Om,PatchTSTPreTrainedModel:()=>Al,Phi3ForCausalLM:()=>Ed,Phi3Model:()=>Td,Phi3PreTrainedModel:()=>No,Phi3VForCausalLM:()=>fn,Phi3VPreTrainedModel:()=>Ea,PhiForCausalLM:()=>xd,PhiModel:()=>vd,PhiPreTrainedModel:()=>jo,PreTrainedModel:()=>W,PretrainedMixin:()=>jt,PvtForImageClassification:()=>Rd,PvtModel:()=>Bd,PvtPreTrainedModel:()=>Ho,PyAnnoteForAudioFrameClassification:()=>xp,PyAnnoteModel:()=>vp,PyAnnotePreTrainedModel:()=>vl,QuestionAnsweringModelOutput:()=>js,Qwen2ForCausalLM:()=>gd,Qwen2Model:()=>_d,Qwen2PreTrainedModel:()=>Bo,Qwen2VLForConditionalGeneration:()=>yd,Qwen2VLPreTrainedModel:()=>bd,Qwen3ForCausalLM:()=>Md,Qwen3Model:()=>wd,Qwen3PreTrainedModel:()=>Ro,RFDetrForObjectDetection:()=>fh,RFDetrModel:()=>mh,RFDetrObjectDetectionOutput:()=>_h,RFDetrPreTrainedModel:()=>il,RTDetrForObjectDetection:()=>ch,RTDetrModel:()=>uh,RTDetrObjectDetectionOutput:()=>zi,RTDetrPreTrainedModel:()=>rl,RTDetrV2ForObjectDetection:()=>hh,RTDetrV2Model:()=>dh,RTDetrV2ObjectDetectionOutput:()=>ph,RTDetrV2PreTrainedModel:()=>nl,ResNetForImageClassification:()=>Ch,ResNetModel:()=>Ph,ResNetPreTrainedModel:()=>cl,RoFormerForMaskedLM:()=>Kr,RoFormerForQuestionAnswering:()=>Xr,RoFormerForSequenceClassification:()=>Hr,RoFormerForTokenClassification:()=>qr,RoFormerModel:()=>Cs,RoFormerPreTrainedModel:()=>Xt,RobertaForMaskedLM:()=>hi,RobertaForQuestionAnswering:()=>oa,RobertaForSequenceClassification:()=>ia,RobertaForTokenClassification:()=>aa,RobertaModel:()=>na,RobertaPreTrainedModel:()=>Qr,SamImageSegmentationOutput:()=>pp,SamModel:()=>hp,SamPreTrainedModel:()=>dp,SapiensForDepthEstimation:()=>Bh,SapiensForNormalEstimation:()=>Rh,SapiensForSemanticSegmentation:()=>zh,SapiensPreTrainedModel:()=>Aa,SegformerForImageClassification:()=>um,SegformerForSemanticSegmentation:()=>cm,SegformerModel:()=>Hv,SegformerPreTrainedModel:()=>za,Seq2SeqLMOutput:()=>nx,SequenceClassifierOutput:()=>Et,SiglipModel:()=>Sa,SiglipPreTrainedModel:()=>Gn,SiglipTextModel:()=>Ei,SiglipVisionModel:()=>Pi,SmolLM3ForCausalLM:()=>Gc,SmolLM3Model:()=>ka,SmolLM3PreTrainedModel:()=>Lr,SmolVLMForConditionalGeneration:()=>yi,SnacDecoderModel:()=>Ym,SnacEncoderModel:()=>Jm,SnacModel:()=>Qm,SnacPreTrainedModel:()=>Wa,SpeechT5ForSpeechToText:()=>Kp,SpeechT5ForTextToSpeech:()=>Hp,SpeechT5HifiGan:()=>qp,SpeechT5Model:()=>Kv,SpeechT5PreTrainedModel:()=>Da,SqueezeBertForMaskedLM:()=>le,SqueezeBertForQuestionAnswering:()=>Te,SqueezeBertForSequenceClassification:()=>de,SqueezeBertModel:()=>Y,SqueezeBertPreTrainedModel:()=>N,StableLmForCausalLM:()=>hm,StableLmModel:()=>dm,StableLmPreTrainedModel:()=>Sl,Starcoder2ForCausalLM:()=>sm,Starcoder2Model:()=>tm,Starcoder2PreTrainedModel:()=>El,StyleTextToSpeech2Model:()=>Gp,StyleTextToSpeech2PreTrainedModel:()=>Wp,Swin2SRForImageSuperResolution:()=>Ah,Swin2SRModel:()=>$h,Swin2SRPreTrainedModel:()=>dl,SwinForImageClassification:()=>kh,SwinForSemanticSegmentation:()=>Ih,SwinModel:()=>Sh,SwinPreTrainedModel:()=>$a,T5ForConditionalGeneration:()=>ns,T5Model:()=>Lt,T5PreTrainedModel:()=>Rt,TableTransformerForObjectDetection:()=>bh,TableTransformerModel:()=>Mh,TableTransformerObjectDetectionOutput:()=>yh,TableTransformerPreTrainedModel:()=>ol,TokenClassifierOutput:()=>xs,TrOCRForCausalLM:()=>Qp,TrOCRPreTrainedModel:()=>Xp,UltravoxModel:()=>Ol,UltravoxPreTrainedModel:()=>Bm,UniSpeechForCTC:()=>Cp,UniSpeechForSequenceClassification:()=>Sp,UniSpeechModel:()=>Pp,UniSpeechPreTrainedModel:()=>Fa,UniSpeechSatForAudioFrameClassification:()=>Ap,UniSpeechSatForCTC:()=>Ip,UniSpeechSatForSequenceClassification:()=>$p,UniSpeechSatModel:()=>kp,UniSpeechSatPreTrainedModel:()=>Bi,ViTForImageClassification:()=>Fd,ViTMAEModel:()=>Nd,ViTMAEPreTrainedModel:()=>jd,ViTMSNForImageClassification:()=>Vd,ViTMSNModel:()=>Ud,ViTMSNPreTrainedModel:()=>qo,ViTModel:()=>Ad,ViTPreTrainedModel:()=>Go,VisionEncoderDecoderModel:()=>pn,VitMatteForImageMatting:()=>Xd,VitMattePreTrainedModel:()=>qd,VitPoseForPoseEstimation:()=>zd,VitPosePreTrainedModel:()=>Ld,VitsModel:()=>Cl,VitsModelOutput:()=>n_,VitsPreTrainedModel:()=>lm,VoxtralForConditionalGeneration:()=>Rm,Wav2Vec2BertForCTC:()=>Op,Wav2Vec2BertForSequenceClassification:()=>Dp,Wav2Vec2BertModel:()=>Fp,Wav2Vec2BertPreTrainedModel:()=>Oa,Wav2Vec2ForAudioFrameClassification:()=>yp,Wav2Vec2ForCTC:()=>Mp,Wav2Vec2ForSequenceClassification:()=>bp,Wav2Vec2Model:()=>wp,Wav2Vec2PreTrainedModel:()=>sn,WavLMForAudioFrameClassification:()=>Vp,WavLMForCTC:()=>jp,WavLMForSequenceClassification:()=>Np,WavLMForXVector:()=>Up,WavLMModel:()=>Rp,WavLMPreTrainedModel:()=>Zn,WeSpeakerResNetModel:()=>Ep,WeSpeakerResNetPreTrainedModel:()=>Tp,WhisperForConditionalGeneration:()=>wi,WhisperModel:()=>Zr,WhisperPreTrainedModel:()=>Un,XLMForQuestionAnswering:()=>ha,XLMForSequenceClassification:()=>ca,XLMForTokenClassification:()=>da,XLMModel:()=>la,XLMPreTrainedModel:()=>Jr,XLMRobertaForMaskedLM:()=>ma,XLMRobertaForQuestionAnswering:()=>fi,XLMRobertaForSequenceClassification:()=>pi,XLMRobertaForTokenClassification:()=>mi,XLMRobertaModel:()=>pa,XLMRobertaPreTrainedModel:()=>Yr,XLMWithLMHeadModel:()=>ua,XVectorOutput:()=>s_,YolosForObjectDetection:()=>up,YolosModel:()=>lp,YolosObjectDetectionOutput:()=>cp,YolosPreTrainedModel:()=>Ml});var r=t("./src/configs.js"),n=t("./src/backends/onnx.js"),i=t("./src/utils/dtypes.js"),a=t("./src/utils/generic.js"),o=t("./src/utils/core.js"),l=t("./src/utils/hub.js"),u=t("./src/utils/constants.js"),h=t("./src/generation/logits_process.js"),d=t("./src/generation/configuration_utils.js"),c=t("./src/utils/tensor.js"),_=t("./src/utils/image.js"),f=t("./src/utils/maths.js"),b=t("./src/generation/stopping_criteria.js"),I=t("./src/generation/logits_sampler.js"),g=t("./src/env.js"),M=t("./src/models/whisper/generation_whisper.js"),k=t("./src/models/whisper/common_whisper.js");const v={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11,ImageAudioTextToText:12},y=new Map,T=new Map,x=new Map;async function P(w,C,D){var Fs;let ie=((Fs=D.config)==null?void 0:Fs["transformers.js_config"])??{},_e=D.device??ie.device;_e&&typeof _e!="string"&&(_e.hasOwnProperty(C)?_e=_e[C]:(console.warn(`device not specified for "${C}". Using the default device.`),_e=null));const pe=_e??(g.apis.IS_NODE_ENV?"cpu":"wasm"),Ce=(0,n.deviceToExecutionProviders)(pe),Le=ie.device_config??{};Le.hasOwnProperty(pe)&&(ie={...ie,...Le[pe]});let Ve=D.dtype??ie.dtype;if(typeof Ve!="string"&&(Ve&&Ve.hasOwnProperty(C)?Ve=Ve[C]:(Ve=i.DEFAULT_DEVICE_DTYPE_MAPPING[pe]??i.DATA_TYPES.fp32,console.warn(`dtype not specified for "${C}". Using the default dtype (${Ve}) for this device (${pe}).`))),Ve===i.DATA_TYPES.auto){let $t=ie.dtype;typeof $t!="string"&&($t=$t==null?void 0:$t[C]),$t&&$t!==i.DATA_TYPES.auto&&i.DATA_TYPES.hasOwnProperty($t)?Ve=$t:Ve=i.DEFAULT_DEVICE_DTYPE_MAPPING[pe]??i.DATA_TYPES.fp32}const Qe=Ve;if(i.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Qe)){if(Qe===i.DATA_TYPES.fp16&&pe==="webgpu"&&!await(0,i.isWebGpuFp16Supported)())throw new Error(`The device (${pe}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Qe}. Should be one of: ${Object.keys(i.DATA_TYPES).join(", ")}`);const ft=ie.kv_cache_dtype,yt=ft?typeof ft=="string"?ft:ft[Qe]??"float32":void 0;if(yt&&!["float32","float16"].includes(yt))throw new Error(`Invalid kv_cache_dtype: ${yt}. Should be one of: float32, float16`);const vt={dtype:Qe,kv_cache_dtype:yt,device:pe},Ot=i.DEFAULT_DTYPE_SUFFIX_MAPPING[Qe],_t=`${C}${Ot}.onnx`,It=`${D.subfolder??""}/${_t}`,dt={...D.session_options};dt.executionProviders??(dt.executionProviders=Ce);const Ft=ie.free_dimension_overrides;Ft?dt.freeDimensionOverrides??(dt.freeDimensionOverrides=Ft):pe.startsWith("webnn")&&!dt.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${pe}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);const Ht=g.apis.IS_NODE_ENV&&g.env.useFSCache,ts=(0,l.getModelFile)(w,It,!0,D,Ht),ds=D.use_external_data_format??ie.use_external_data_format;let ls=[];if(ds){let $t;typeof ds=="object"?ds.hasOwnProperty(_t)?$t=ds[_t]:ds.hasOwnProperty(C)?$t=ds[C]:$t=!1:$t=ds;const Ts=+$t;if(Ts>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${Ts}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let nr=0;nr<Ts;++nr){const xn=`${_t}_data${nr===0?"":"_"+nr}`,Zs=`${D.subfolder??""}/${xn}`;ls.push(new Promise(async(dr,Ga)=>{const Tn=await(0,l.getModelFile)(w,Zs,!0,D,Ht);dr(Tn instanceof Uint8Array?{path:xn,data:Tn}:xn)}))}}else dt.externalData!==void 0&&(ls=dt.externalData.map(async $t=>{if(typeof $t.data=="string"){const Ts=await(0,l.getModelFile)(w,$t.data,!0,D);return{...$t,data:Ts}}return $t}));if(ls.length>0){const $t=await Promise.all(ls);g.apis.IS_NODE_ENV||(dt.externalData=$t)}if(pe==="webgpu"){const $t=(0,r.getCacheShapes)(D.config,{prefix:"present"});if(Object.keys($t).length>0&&!(0,n.isONNXProxy)()){const Ts={};for(const nr in $t)Ts[nr]="gpu-buffer";dt.preferredOutputLocation=Ts}}return{buffer_or_path:await ts,session_options:dt,session_config:vt}}async function O(w,C,D){return Object.fromEntries(await Promise.all(Object.keys(C).map(async ie=>{const{buffer_or_path:_e,session_options:pe,session_config:Ce}=await P(w,C[ie],D),Le=await(0,n.createInferenceSession)(_e,pe,Ce);return[ie,Le]})))}async function L(w,C,D){return Object.fromEntries(await Promise.all(Object.keys(C).map(async ie=>{const _e=await(0,l.getModelJSON)(w,C[ie],!1,D);return[ie,_e]})))}function G(w,C){const D=Object.create(null),ie=[];for(const Ce of w.inputNames){const Le=C[Ce];if(!(Le instanceof c.Tensor)){ie.push(Ce);continue}D[Ce]=(0,n.isONNXProxy)()?Le.clone():Le}if(ie.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${ie.join(", ")}.`);const _e=Object.keys(C).length,pe=w.inputNames.length;if(_e>pe){let Ce=Object.keys(C).filter(Le=>!w.inputNames.includes(Le));console.warn(`WARNING: Too many inputs were provided (${_e} > ${pe}). The following inputs will be ignored: "${Ce.join(", ")}".`)}return D}let K=Promise.resolve();async function R(w,C){const D=G(w,C);try{const ie=Object.fromEntries(Object.entries(D).map(([Ce,Le])=>[Ce,Le.ort_tensor])),_e=()=>w.run(ie),pe=await(g.apis.IS_BROWSER_ENV||g.apis.IS_WEBWORKER_ENV?K=K.then(_e):_e());return te(pe)}catch(ie){const _e=Object.fromEntries(Object.entries(D).map(([pe,Ce])=>{const Le={type:Ce.type,dims:Ce.dims,location:Ce.location};return Le.location!=="gpu-buffer"&&(Le.data=Ce.data),[pe,Le]}));throw console.error(`An error occurred during model execution: "${ie}".`),console.error("Inputs given to model:",_e),ie}}function te(w){for(let C in w)(0,n.isONNXTensor)(w[C])?w[C]=new c.Tensor(w[C]):typeof w[C]=="object"&&te(w[C]);return w}function H(w){if(w instanceof c.Tensor)return w;if(w.length===0)throw Error("items must be non-empty");if(Array.isArray(w[0])){if(w.some(C=>C.length!==w[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new c.Tensor("int64",BigInt64Array.from(w.flat().map(C=>BigInt(C))),[w.length,w[0].length])}else return new c.Tensor("int64",BigInt64Array.from(w.map(C=>BigInt(C))),[1,w.length])}function ee(w){return new c.Tensor("bool",[w],[1])}async function Z(w,C){let{encoder_outputs:D,input_ids:ie,decoder_input_ids:_e,...pe}=C;if(!D){const Le=(0,o.pick)(C,w.sessions.model.inputNames);D=(await ne(w,Le)).last_hidden_state}return pe.input_ids=_e,pe.encoder_hidden_states=D,w.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(pe.encoder_attention_mask=C.attention_mask),await ce(w,pe,!0)}async function ne(w,C){const D=w.sessions.model,ie=(0,o.pick)(C,D.inputNames);if(D.inputNames.includes("inputs_embeds")&&!ie.inputs_embeds){if(!C.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");ie.inputs_embeds=await w.encode_text({input_ids:C.input_ids})}if(D.inputNames.includes("token_type_ids")&&!ie.token_type_ids){if(!ie.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");ie.token_type_ids=(0,c.zeros_like)(ie.input_ids)}if(D.inputNames.includes("pixel_mask")&&!ie.pixel_mask){if(!ie.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const _e=ie.pixel_values.dims;ie.pixel_mask=(0,c.ones)([_e[0],_e[2],_e[3]])}return await R(D,ie)}async function me(w,C){const D=await w.encode(C);return await w.decode(D)}async function ce(w,C,D=!1){const ie=w.sessions[D?"decoder_model_merged":"model"],{past_key_values:_e,...pe}=C;if(ie.inputNames.includes("use_cache_branch")&&(pe.use_cache_branch=ee(!!_e)),ie.inputNames.includes("position_ids")&&pe.attention_mask&&!pe.position_ids){const Le=["paligemma","gemma3_text","gemma3"].includes(w.config.model_type)?1:0;pe.position_ids=ze(pe,_e,Le)}w.addPastKeyValues(pe,_e);const Ce=(0,o.pick)(pe,ie.inputNames);return await R(ie,Ce)}function j({modality_token_id:w,inputs_embeds:C,modality_features:D,input_ids:ie,attention_mask:_e}){const pe=ie.tolist().map(Qe=>Qe.reduce((ft,yt,vt)=>(yt==w&&ft.push(vt),ft),[])),Ce=pe.reduce((Qe,ft)=>Qe+ft.length,0),Le=D.dims[0];if(Ce!==Le)throw new Error(`Number of tokens and features do not match: tokens: ${Ce}, features ${Le}`);let Ve=0;for(let Qe=0;Qe<pe.length;++Qe){const ft=pe[Qe],yt=C[Qe];for(let vt=0;vt<ft.length;++vt)yt[ft[vt]].data.set(D[Ve++].data)}return{inputs_embeds:C,attention_mask:_e}}function F({image_token_id:w,inputs_embeds:C,image_features:D,input_ids:ie,attention_mask:_e}){return j({modality_token_id:w,inputs_embeds:C,modality_features:D,input_ids:ie,attention_mask:_e})}function V({audio_token_id:w,inputs_embeds:C,audio_features:D,input_ids:ie,attention_mask:_e}){return j({modality_token_id:w,inputs_embeds:C,modality_features:D,input_ids:ie,attention_mask:_e})}async function re(w,{encode_function:C,merge_function:D,modality_input_name:ie,modality_output_name:_e,input_ids:pe=null,attention_mask:Ce=null,position_ids:Le=null,inputs_embeds:Ve=null,past_key_values:Qe=null,generation_config:ft=null,logits_processor:yt=null,...vt}){const Ot=vt[ie];if(!Ve){if(Ve=await w.encode_text({input_ids:pe,...vt}),Ot&&pe.dims[1]!==1){const It=await C({[ie]:Ot,...vt});({inputs_embeds:Ve,attention_mask:Ce}=D({[_e]:It,inputs_embeds:Ve,input_ids:pe,attention_mask:Ce}))}else if(Qe&&Ot&&pe.dims[1]===1){const It=pe.dims[1],dt=Object.values(Qe)[0].dims.at(-2);Ce=(0,c.cat)([(0,c.ones)([pe.dims[0],dt]),Ce.slice(null,[Ce.dims[1]-It,Ce.dims[1]])],1)}}if(!Le&&w.config.model_type==="qwen2_vl"){const{image_grid_thw:It,video_grid_thw:dt}=vt;[Le]=w.get_rope_index(pe,It,dt,Ce)}return await ce(w,{inputs_embeds:Ve,past_key_values:Qe,attention_mask:Ce,position_ids:Le,generation_config:ft,logits_processor:yt},!0)}async function fe(w,C){return await re(w,{...C,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:w.encode_audio.bind(w),merge_function:w._merge_input_ids_with_audio_features.bind(w)})}async function ae(w,C){return await re(w,{...C,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:w.encode_image.bind(w),merge_function:w._merge_input_ids_with_image_features.bind(w)})}function ve(w,C=0){const[D,ie]=w.dims,_e=w.data,pe=new BigInt64Array(_e.length);for(let Ce=0;Ce<D;++Ce){const Le=Ce*ie;let Ve=BigInt(C);for(let Qe=0;Qe<ie;++Qe){const ft=Le+Qe;_e[ft]===0n?pe[ft]=BigInt(1):(pe[ft]=Ve,Ve+=_e[ft])}}return{data:pe,dims:w.dims}}function ze(w,C=null,D=0){const{input_ids:ie,inputs_embeds:_e,attention_mask:pe}=w,{data:Ce,dims:Le}=ve(pe,D);let Ve=new c.Tensor("int64",Ce,Le);if(C){const Qe=-(ie??_e).dims.at(1);Ve=Ve.slice(null,[Qe,null])}return Ve}function Ge(w,C,D,ie){const _e=D.past_key_values?Object.values(D.past_key_values)[0].dims.at(-2):0;if(!D.attention_mask){let pe;for(const Ce of["input_ids","inputs_embeds","position_ids"])if(D[Ce]){pe=D[Ce].dims;break}if(!pe)throw new Error("attention_mask is not provided, and unable to infer its shape from model inputs.");D.attention_mask=(0,c.ones)([pe[0],_e+pe[1]])}if(D.past_key_values){const{input_ids:pe,attention_mask:Ce}=D;Ce&&Ce.dims[1]>pe.dims[1]||_e<pe.dims[1]&&(D.input_ids=pe.slice(null,[_e,null]))}return D}function $e(w,C,D,ie){return D.past_key_values&&(C=C.map(_e=>[_e.at(-1)])),{...D,decoder_input_ids:H(C)}}function Q(w,...C){return w.config.is_encoder_decoder?$e(w,...C):Ge(w,...C)}function oe(w,C,D,ie){const _e=!!D.past_key_values;return ie.guidance_scale!==null&&ie.guidance_scale>1&&(_e?D.input_ids=(0,c.cat)([D.input_ids,D.input_ids],0):(D.input_ids=(0,c.cat)([D.input_ids,(0,c.full_like)(D.input_ids,BigInt(ie.pad_token_id))],0),D.attention_mask=(0,c.cat)([D.attention_mask,(0,c.full_like)(D.attention_mask,0n)],0))),(_e||!D.pixel_values)&&(D.pixel_values=(0,c.full)([0,0,3,384,384],1)),_e&&(D.images_seq_mask=new c.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),D.images_emb_mask=new c.Tensor("bool",new Array(0).fill(!1),[1,1,0])),D}class W extends a.Callable{constructor(D,ie,_e){super();J(this,"main_input_name","input_ids");J(this,"forward_params",["input_ids","attention_mask"]);this.config=D,this.sessions=ie,this.configs=_e;const pe=x.get(this.constructor),Ce=y.get(pe);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,Ce){case v.DecoderOnly:this.can_generate=!0,this._forward=ce,this._prepare_inputs_for_generation=Ge;break;case v.Seq2Seq:case v.Vision2Seq:case v.Musicgen:this.can_generate=!0,this._forward=Z,this._prepare_inputs_for_generation=$e;break;case v.EncoderDecoder:this._forward=Z;break;case v.ImageTextToText:this.can_generate=!0,this._forward=ae,this._prepare_inputs_for_generation=Q;break;case v.AudioTextToText:this.can_generate=!0,this._forward=fe,this._prepare_inputs_for_generation=Q;break;case v.Phi3V:case v.ImageAudioTextToText:this.can_generate=!0,this._prepare_inputs_for_generation=Q;break;case v.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=oe;break;case v.AutoEncoder:this._forward=me;break;default:this._forward=ne;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var ie;const D=[];for(const _e of Object.values(this.sessions))(ie=_e==null?void 0:_e.handler)!=null&&ie.dispose&&D.push(_e.handler.dispose());return await Promise.all(D)}static async from_pretrained(D,{progress_callback:ie=null,config:_e=null,cache_dir:pe=null,local_files_only:Ce=!1,revision:Le="main",model_file_name:Ve=null,subfolder:Qe="onnx",device:ft=null,dtype:yt=null,use_external_data_format:vt=null,session_options:Ot={}}={}){let _t={progress_callback:ie,config:_e,cache_dir:pe,local_files_only:Ce,revision:Le,model_file_name:Ve,subfolder:Qe,device:ft,dtype:yt,use_external_data_format:vt,session_options:Ot};const It=x.get(this),dt=y.get(It);_e=_t.config=await r.AutoConfig.from_pretrained(D,_t);let Ft;if(dt===v.DecoderOnly)Ft=await Promise.all([O(D,{model:_t.model_file_name??"model"},_t),L(D,{generation_config:"generation_config.json"},_t)]);else if(dt===v.Seq2Seq||dt===v.Vision2Seq)Ft=await Promise.all([O(D,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},_t),L(D,{generation_config:"generation_config.json"},_t)]);else if(dt===v.MaskGeneration)Ft=await Promise.all([O(D,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},_t)]);else if(dt===v.EncoderDecoder)Ft=await Promise.all([O(D,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},_t)]);else if(dt===v.ImageTextToText){const Ht={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};_e.is_encoder_decoder&&(Ht.model="encoder_model"),Ft=await Promise.all([O(D,Ht,_t),L(D,{generation_config:"generation_config.json"},_t)])}else if(dt===v.AudioTextToText){const Ht={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};Ft=await Promise.all([O(D,Ht,_t),L(D,{generation_config:"generation_config.json"},_t)])}else if(dt===v.ImageAudioTextToText){const Ht={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Ft=await Promise.all([O(D,Ht,_t),L(D,{generation_config:"generation_config.json"},_t)])}else if(dt===v.Musicgen)Ft=await Promise.all([O(D,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},_t),L(D,{generation_config:"generation_config.json"},_t)]);else if(dt===v.MultiModality)Ft=await Promise.all([O(D,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},_t),L(D,{generation_config:"generation_config.json"},_t)]);else if(dt===v.Phi3V)Ft=await Promise.all([O(D,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},_t),L(D,{generation_config:"generation_config.json"},_t)]);else if(dt===v.AutoEncoder)Ft=await Promise.all([O(D,{encoder_model:"encoder_model",decoder_model:"decoder_model"},_t)]);else{if(dt!==v.EncoderOnly){const Ht=It??(_e==null?void 0:_e.model_type);Ht!=="custom"&&console.warn(`Model type for '${Ht}' not found, assuming encoder-only architecture. Please report this at ${u.GITHUB_ISSUE_URL}.`)}Ft=await Promise.all([O(D,{model:_t.model_file_name??"model"},_t)])}return new this(_e,...Ft)}async _call(D){return await this.forward(D)}async forward(D){return await this._forward(this,D)}get generation_config(){var D;return((D=this.configs)==null?void 0:D.generation_config)??null}_get_logits_warper(D){const ie=new h.LogitsProcessorList;return D.temperature!==null&&D.temperature!==1&&ie.push(new h.TemperatureLogitsWarper(D.temperature)),D.top_k!==null&&D.top_k!==0&&ie.push(new h.TopKLogitsWarper(D.top_k)),D.top_p!==null&&D.top_p<1&&ie.push(new h.TopPLogitsWarper(D.top_p)),ie}_get_logits_processor(D,ie,_e=null){const pe=new h.LogitsProcessorList;if(D.repetition_penalty!==null&&D.repetition_penalty!==1&&pe.push(new h.RepetitionPenaltyLogitsProcessor(D.repetition_penalty)),D.no_repeat_ngram_size!==null&&D.no_repeat_ngram_size>0&&pe.push(new h.NoRepeatNGramLogitsProcessor(D.no_repeat_ngram_size)),D.bad_words_ids!==null&&pe.push(new h.NoBadWordsLogitsProcessor(D.bad_words_ids,D.eos_token_id)),D.min_length!==null&&D.eos_token_id!==null&&D.min_length>0&&pe.push(new h.MinLengthLogitsProcessor(D.min_length,D.eos_token_id)),D.min_new_tokens!==null&&D.eos_token_id!==null&&D.min_new_tokens>0&&pe.push(new h.MinNewTokensLengthLogitsProcessor(ie,D.min_new_tokens,D.eos_token_id)),D.forced_bos_token_id!==null&&pe.push(new h.ForcedBOSTokenLogitsProcessor(D.forced_bos_token_id)),D.forced_eos_token_id!==null&&pe.push(new h.ForcedEOSTokenLogitsProcessor(D.max_length,D.forced_eos_token_id)),D.begin_suppress_tokens!==null){const Ce=ie>1||D.forced_bos_token_id===null?ie:ie+1;pe.push(new h.SuppressTokensAtBeginLogitsProcessor(D.begin_suppress_tokens,Ce))}return D.guidance_scale!==null&&D.guidance_scale>1&&pe.push(new h.ClassifierFreeGuidanceLogitsProcessor(D.guidance_scale)),_e!==null&&pe.extend(_e),pe}_prepare_generation_config(D,ie,_e=d.GenerationConfig){const pe={...this.config};for(const Le of["decoder","generator","text_config"])Le in pe&&Object.assign(pe,pe[Le]);const Ce=new _e(pe);return Object.assign(Ce,this.generation_config??{}),D&&Object.assign(Ce,D),ie&&Object.assign(Ce,(0,o.pick)(ie,Object.getOwnPropertyNames(Ce))),Ce}_get_stopping_criteria(D,ie=null){const _e=new b.StoppingCriteriaList;return D.max_length!==null&&_e.push(new b.MaxLengthCriteria(D.max_length,this.config.max_position_embeddings??null)),D.eos_token_id!==null&&_e.push(new b.EosTokenCriteria(D.eos_token_id)),ie&&_e.extend(ie),_e}_validate_model_class(){if(!this.can_generate){const D=[zl,Bl,Ll,Dl],ie=x.get(this.constructor),_e=new Set,pe=this.config.model_type;for(const Le of D){const Ve=Le.get(pe);Ve&&_e.add(Ve[0])}let Ce=`The current model class (${ie}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw _e.size>0&&(Ce+=` Please use the following class instead: ${[..._e].join(", ")}`),Error(Ce)}}prepare_inputs_for_generation(...D){return this._prepare_inputs_for_generation(this,...D)}_update_model_kwargs_for_generation({generated_input_ids:D,outputs:ie,model_inputs:_e,is_encoder_decoder:pe}){return _e.past_key_values=this.getPastKeyValues(ie,_e.past_key_values),_e.input_ids=new c.Tensor("int64",D.flat(),[D.length,1]),pe||(_e.attention_mask=(0,c.cat)([_e.attention_mask,(0,c.ones)([_e.attention_mask.dims[0],1])],1)),_e.position_ids=null,_e}_prepare_model_inputs({inputs:D,bos_token_id:ie,model_kwargs:_e}){const pe=(0,o.pick)(_e,this.forward_params),Ce=this.main_input_name;if(Ce in pe){if(D)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else pe[Ce]=D;return{inputs_tensor:pe[Ce],model_inputs:pe,model_input_name:Ce}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:D,model_inputs:ie,model_input_name:_e,generation_config:pe}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!ie.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:Le,pixel_values:Ve,attention_mask:Qe,...ft}=ie,yt=await this._prepare_inputs_embeds(ie);ie={...ft,...(0,o.pick)(yt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:Ce}=await ne(this,ie);if(pe.guidance_scale!==null&&pe.guidance_scale>1)Ce=(0,c.cat)([Ce,(0,c.full_like)(Ce,0)],0),"attention_mask"in ie&&(ie.attention_mask=(0,c.cat)([ie.attention_mask,(0,c.zeros_like)(ie.attention_mask)],0));else if(ie.decoder_input_ids){const Le=H(ie.decoder_input_ids).dims[0];if(Le!==Ce.dims[0]){if(Ce.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${Ce.dims[0]}) than the decoder inputs (${Le}).`);Ce=(0,c.cat)(Array.from({length:Le},()=>Ce),0)}}return ie.encoder_outputs=Ce,ie}_prepare_decoder_input_ids_for_generation({batch_size:D,model_input_name:ie,model_kwargs:_e,decoder_start_token_id:pe,bos_token_id:Ce,generation_config:Le}){let{decoder_input_ids:Ve,...Qe}=_e;if(!(Ve instanceof c.Tensor)){if(Ve)Array.isArray(Ve[0])||(Ve=Array.from({length:D},()=>Ve));else if(pe??(pe=Ce),this.config.model_type==="musicgen")Ve=Array.from({length:D*this.config.decoder.num_codebooks},()=>[pe]);else if(Array.isArray(pe)){if(pe.length!==D)throw new Error(`\`decoder_start_token_id\` expcted to have length ${D} but got ${pe.length}`);Ve=pe}else Ve=Array.from({length:D},()=>[pe]);Ve=H(Ve)}return _e.decoder_attention_mask=(0,c.ones_like)(Ve),{input_ids:Ve,model_inputs:Qe}}async generate({inputs:D=null,generation_config:ie=null,logits_processor:_e=null,stopping_criteria:pe=null,streamer:Ce=null,...Le}){this._validate_model_class(),ie=this._prepare_generation_config(ie,Le);let{inputs_tensor:Ve,model_inputs:Qe,model_input_name:ft}=this._prepare_model_inputs({inputs:D,model_kwargs:Le});const yt=this.config.is_encoder_decoder;yt&&("encoder_outputs"in Qe||(Qe=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ve,model_inputs:Qe,model_input_name:ft,generation_config:ie})));let vt;yt?{input_ids:vt,model_inputs:Qe}=this._prepare_decoder_input_ids_for_generation({batch_size:Qe[ft].dims.at(0),model_input_name:ft,model_kwargs:Qe,decoder_start_token_id:ie.decoder_start_token_id,bos_token_id:ie.bos_token_id,generation_config:ie}):vt=Qe[ft];let Ot=vt.dims.at(-1);ie.max_new_tokens!==null&&(ie.max_length=Ot+ie.max_new_tokens);const _t=this._get_logits_processor(ie,Ot,_e),It=this._get_stopping_criteria(ie,pe),dt=Qe[ft].dims.at(0),Ft=I.LogitsSampler.getSampler(ie),Ht=new Array(dt).fill(0),ts=vt.tolist();Ce&&Ce.put(ts);let ds,ls={};for(;;){if(Qe=this.prepare_inputs_for_generation(ts,Qe,ie),ds=await this.forward(Qe),ie.output_attentions&&ie.return_dict_in_generate){const Zs=this.getAttentions(ds);for(const dr in Zs)dr in ls||(ls[dr]=[]),ls[dr].push(Zs[dr])}const $t=ds.logits.slice(null,-1,null),Ts=_t(ts,$t),nr=[];for(let Zs=0;Zs<Ts.dims.at(0);++Zs){const dr=Ts[Zs],Ga=await Ft(dr);for(const[Tn,Ka]of Ga){const Ha=BigInt(Tn);Ht[Zs]+=Ka,ts[Zs].push(Ha),nr.push([Ha]);break}}if(Ce&&Ce.put(nr),It(ts).every(Zs=>Zs))break;Qe=this._update_model_kwargs_for_generation({generated_input_ids:nr,outputs:ds,model_inputs:Qe,is_encoder_decoder:yt})}Ce&&Ce.end();const Ms=this.getPastKeyValues(ds,Qe.past_key_values,!0),Fs=new c.Tensor("int64",ts.flat(),[ts.length,ts[0].length]);if(ie.return_dict_in_generate)return{sequences:Fs,past_key_values:Ms,...ls};for(const $t of Object.values(ds))$t.location==="gpu-buffer"&&$t.dispose();return Fs}getPastKeyValues(D,ie,_e=!1){const pe=Object.create(null);for(const Ce in D)if(Ce.startsWith("present")){const Le=Ce.replace("present_conv","past_conv").replace("present","past_key_values"),Ve=Ce.includes("encoder");if(Ve&&ie?pe[Le]=ie[Le]:pe[Le]=D[Ce],ie&&(!Ve||_e)){const Qe=ie[Le];Qe.location==="gpu-buffer"&&Qe.dispose()}}return pe}getAttentions(D){const ie={};for(const _e of["cross_attentions","encoder_attentions","decoder_attentions"])for(const pe in D)pe.startsWith(_e)&&(_e in ie||(ie[_e]=[]),ie[_e].push(D[pe]));return ie}addPastKeyValues(D,ie){var _e,pe,Ce;if(ie)Object.assign(D,ie);else{const Le=this.sessions.decoder_model_merged??this.sessions.model,Ve=((pe=(_e=D[this.main_input_name]??D.attention_mask)==null?void 0:_e.dims)==null?void 0:pe[0])??1,Qe=((Ce=Le==null?void 0:Le.config)==null?void 0:Ce.kv_cache_dtype)??"float32",ft=Qe==="float16"?c.DataTypeMap.float16:c.DataTypeMap.float32,yt=(0,r.getCacheShapes)(this.config,{batch_size:Ve});for(const vt in yt){const Ot=yt[vt].reduce((_t,It)=>_t*It,1);D[vt]=new c.Tensor(Qe,new ft(Ot),yt[vt])}}}async encode_image({pixel_values:D}){return(await R(this.sessions.vision_encoder,{pixel_values:D})).image_features}async encode_text({input_ids:D}){return(await R(this.sessions.embed_tokens,{input_ids:D})).inputs_embeds}async encode_audio({audio_values:D}){return(await R(this.sessions.audio_encoder,{audio_values:D})).audio_features}}class be{}class Ie extends be{constructor({last_hidden_state:C,hidden_states:D=null,attentions:ie=null}){super(),this.last_hidden_state=C,this.hidden_states=D,this.attentions=ie}}class Ee extends W{}class Me extends Ee{}class Se extends Ee{async _call(C){return new As(await super._call(C))}}class we extends Ee{async _call(C){return new Et(await super._call(C))}}class Ae extends Ee{async _call(C){return new xs(await super._call(C))}}class Be extends Ee{async _call(C){return new js(await super._call(C))}}class Xe extends W{}class xe extends Xe{}class Ze extends Xe{async _call(C){return new As(await super._call(C))}}class Ke extends Xe{async _call(C){return new Et(await super._call(C))}}class nt extends Xe{async _call(C){return new xs(await super._call(C))}}class Je extends Xe{async _call(C){return new js(await super._call(C))}}class Oe extends W{}class Ye extends Oe{}class at extends Oe{async _call(C){return new As(await super._call(C))}}class At extends Oe{async _call(C){return new Et(await super._call(C))}}class kt extends Oe{async _call(C){return new xs(await super._call(C))}}class Mt extends W{}class bs extends Mt{}class Ps extends Mt{}class Ns extends W{}class lr extends Ns{}class Xt extends W{}class Cs extends Xt{}class Kr extends Xt{async _call(C){return new As(await super._call(C))}}class Hr extends Xt{async _call(C){return new Et(await super._call(C))}}class qr extends Xt{async _call(C){return new xs(await super._call(C))}}class Xr extends Xt{async _call(C){return new js(await super._call(C))}}class pt extends W{}class Ar extends pt{}class Fr extends pt{async _call(C){return new As(await super._call(C))}}class St extends pt{async _call(C){return new Et(await super._call(C))}}class Qt extends pt{async _call(C){return new xs(await super._call(C))}}class S extends pt{async _call(C){return new js(await super._call(C))}}class X extends W{}class B extends X{}class q extends X{async _call(C){return new As(await super._call(C))}}class se extends X{async _call(C){return new Et(await super._call(C))}}class ge extends X{async _call(C){return new xs(await super._call(C))}}class Fe extends X{async _call(C){return new js(await super._call(C))}}class st extends W{}class gt extends st{}class mt extends st{async _call(C){return new As(await super._call(C))}}class xt extends st{async _call(C){return new Et(await super._call(C))}}class rt extends st{async _call(C){return new xs(await super._call(C))}}class Bt extends st{async _call(C){return new js(await super._call(C))}}class Ut extends W{}class Us extends Ut{}class Qs extends Ut{async _call(C){return new As(await super._call(C))}}class rs extends Ut{async _call(C){return new Et(await super._call(C))}}class Ss extends Ut{async _call(C){return new xs(await super._call(C))}}class ks extends Ut{async _call(C){return new js(await super._call(C))}}class Vs extends W{}class ur extends Vs{}class Is extends Vs{async _call(C){return new As(await super._call(C))}}class Or extends Vs{async _call(C){return new Et(await super._call(C))}}class Dr extends Vs{async _call(C){return new xs(await super._call(C))}}class Ws extends Vs{async _call(C){return new js(await super._call(C))}}class Gs extends W{}class tr extends Gs{}class Ls extends Gs{async _call(C){return new Et(await super._call(C))}}class fr extends Gs{async _call(C){return new xs(await super._call(C))}}class ps extends Gs{async _call(C){return new js(await super._call(C))}}class fs extends Gs{async _call(C){return new As(await super._call(C))}}class Js extends W{}class Br extends Js{}class Ks extends Js{async _call(C){return new As(await super._call(C))}}class Re extends Js{async _call(C){return new Et(await super._call(C))}}class je extends Js{async _call(C){return new xs(await super._call(C))}}class et extends W{}class Jt extends et{}class Rr extends et{async _call(C){return new As(await super._call(C))}}class _r extends et{async _call(C){return new Et(await super._call(C))}}class jr extends et{async _call(C){return new js(await super._call(C))}}class gr extends W{}class cn extends gr{}class dn extends gr{async _call(C){return new As(await super._call(C))}}class hn extends gr{async _call(C){return new Et(await super._call(C))}}class he extends gr{async _call(C){return new xs(await super._call(C))}}class $ extends gr{async _call(C){return new js(await super._call(C))}}class N extends W{}class Y extends N{}class le extends N{async _call(C){return new As(await super._call(C))}}class de extends N{async _call(C){return new Et(await super._call(C))}}class Te extends N{async _call(C){return new js(await super._call(C))}}class Ne extends W{}class qe extends Ne{}class We extends Ne{async _call(C){return new Et(await super._call(C))}}class tt extends Ne{async _call(C){return new js(await super._call(C))}}class bt extends Ne{async _call(C){return new As(await super._call(C))}}class Rt extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Lt extends Rt{}class ns extends Rt{}class Gt extends W{}class _s extends Gt{}class ys extends Gt{}class as extends W{}class gs extends as{}class zs extends as{}class Ys extends W{}class Zt extends Ys{}class ws extends Ys{}class Hs extends Ys{async _call(C){return new Et(await super._call(C))}}class Rs extends W{}class wr extends Rs{}class $s extends Rs{}class cr extends Rs{async _call(C){return new Et(await super._call(C))}}class cs extends Rs{}class os extends W{}class ms extends os{}class is extends os{}class qs extends W{}class Nr extends qs{}class Nn extends qs{}class Qr extends W{}class na extends Qr{}class hi extends Qr{async _call(C){return new As(await super._call(C))}}class ia extends Qr{async _call(C){return new Et(await super._call(C))}}class aa extends Qr{async _call(C){return new xs(await super._call(C))}}class oa extends Qr{async _call(C){return new js(await super._call(C))}}class Jr extends W{}class la extends Jr{}class ua extends Jr{async _call(C){return new As(await super._call(C))}}class ca extends Jr{async _call(C){return new Et(await super._call(C))}}class da extends Jr{async _call(C){return new xs(await super._call(C))}}class ha extends Jr{async _call(C){return new js(await super._call(C))}}class Yr extends W{}class pa extends Yr{}class ma extends Yr{async _call(C){return new As(await super._call(C))}}class pi extends Yr{async _call(C){return new Et(await super._call(C))}}class mi extends Yr{async _call(C){return new xs(await super._call(C))}}class fi extends Yr{async _call(C){return new js(await super._call(C))}}class _i extends W{}class fa extends _i{}class gi extends _i{}class Un extends W{constructor(){super(...arguments);J(this,"requires_attention_mask",!1);J(this,"main_input_name","input_features");J(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Zr extends Un{}class wi extends Un{_prepare_generation_config(C,D){return super._prepare_generation_config(C,D,M.WhisperGenerationConfig)}_retrieve_init_tokens(C){const D=[C.decoder_start_token_id];let ie=C.language;const _e=C.task;if(C.is_multilingual){ie||(console.warn("No language specified - defaulting to English (en)."),ie="en");const Ce=`<|${(0,k.whisper_language_to_code)(ie)}|>`;D.push(C.lang_to_id[Ce]),D.push(C.task_to_id[_e??"transcribe"])}else if(ie||_e)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!C.return_timestamps&&C.no_timestamps_token_id&&D.at(-1)!==C.no_timestamps_token_id?D.push(C.no_timestamps_token_id):C.return_timestamps&&D.at(-1)===C.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),D.pop()),D.filter(pe=>pe!=null)}async generate({inputs:C=null,generation_config:D=null,logits_processor:ie=null,stopping_criteria:_e=null,...pe}){D=this._prepare_generation_config(D,pe);const Ce=pe.decoder_input_ids??this._retrieve_init_tokens(D);if(D.return_timestamps&&(ie??(ie=new h.LogitsProcessorList),ie.push(new h.WhisperTimeStampLogitsProcessor(D,Ce))),D.begin_suppress_tokens&&(ie??(ie=new h.LogitsProcessorList),ie.push(new h.SuppressTokensAtBeginLogitsProcessor(D.begin_suppress_tokens,Ce.length))),D.return_token_timestamps){if(!D.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");D.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),D.output_attentions=!0,D.return_dict_in_generate=!0}const Le=await super.generate({inputs:C,generation_config:D,logits_processor:ie,decoder_input_ids:Ce,...pe});return D.return_token_timestamps&&(Le.token_timestamps=this._extract_token_timestamps(Le,D.alignment_heads,D.num_frames)),Le}_extract_token_timestamps(C,D,ie=null,_e=.02){if(!C.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");ie==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let pe=this.config.median_filter_width;pe===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),pe=7);const Ce=C.cross_attentions,Le=Array.from({length:this.config.decoder_layers},(It,dt)=>(0,c.cat)(Ce.map(Ft=>Ft[dt]),2)),Ve=(0,c.stack)(D.map(([It,dt])=>{if(It>=Le.length)throw new Error(`Layer index ${It} is out of bounds for cross attentions (length ${Le.length}).`);return ie?Le[It].slice(null,dt,null,[0,ie]):Le[It].slice(null,dt)})).transpose(1,0,2,3),[Qe,ft]=(0,c.std_mean)(Ve,-2,0,!0),yt=Ve.clone();for(let It=0;It<yt.dims[0];++It){const dt=yt[It];for(let Ft=0;Ft<dt.dims[0];++Ft){const Ht=dt[Ft],ts=Qe[It][Ft][0].data,ds=ft[It][Ft][0].data;for(let ls=0;ls<Ht.dims[0];++ls){let Ms=Ht[ls].data;for(let Fs=0;Fs<Ms.length;++Fs)Ms[Fs]=(Ms[Fs]-ds[Fs])/ts[Fs];Ms.set((0,f.medianFilter)(Ms,pe))}}}const vt=[(0,c.mean)(yt,1)],Ot=C.sequences.dims,_t=new c.Tensor("float32",new Float32Array(Ot[0]*Ot[1]),Ot);for(let It=0;It<Ot[0];++It){const dt=vt[It].neg().squeeze_(0),[Ft,Ht]=(0,f.dynamic_time_warping)(dt.tolist()),ts=Array.from({length:Ft.length-1},(Ms,Fs)=>Ft[Fs+1]-Ft[Fs]),ds=(0,o.mergeArrays)([1],ts).map(Ms=>!!Ms),ls=[];for(let Ms=0;Ms<ds.length;++Ms)ds[Ms]&&ls.push(Ht[Ms]*_e);_t[It].data.set(ls,1)}return _t}}class Mi extends wi{}class bi extends W{constructor(){super(...arguments);J(this,"requires_attention_mask",!1);J(this,"main_input_name","input_values");J(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class Eo extends bi{}class _a extends bi{}class pn extends W{constructor(){super(...arguments);J(this,"main_input_name","pixel_values");J(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class Vn extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Wn extends Vn{_merge_input_ids_with_image_features(C){const D=C.image_features.dims.at(-1),ie=C.image_features.view(-1,D);return F({image_token_id:this.config.image_token_index,...C,image_features:ie})}}class ga extends Wn{}class wa extends Wn{}class Ma extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);J(this,"main_input_name","inputs_embeds")}}class ba extends Ma{_merge_input_ids_with_image_features({inputs_embeds:C,image_features:D,input_ids:ie,attention_mask:_e}){return{inputs_embeds:(0,c.cat)([D,C],1),attention_mask:(0,c.cat)([(0,c.ones)(D.dims.slice(0,2)),_e],1)}}async _prepare_inputs_embeds({input_ids:C,pixel_values:D,inputs_embeds:ie,attention_mask:_e}){if(!C&&!D)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let pe,Ce;return C&&(pe=await this.encode_text({input_ids:C})),D&&(Ce=await this.encode_image({pixel_values:D})),pe&&Ce?{inputs_embeds:ie,attention_mask:_e}=this._merge_input_ids_with_image_features({inputs_embeds:pe,image_features:Ce,input_ids:C,attention_mask:_e}):ie=pe||Ce,{inputs_embeds:ie,attention_mask:_e}}async forward({input_ids:C,pixel_values:D,attention_mask:ie,decoder_input_ids:_e,decoder_attention_mask:pe,encoder_outputs:Ce,past_key_values:Le,inputs_embeds:Ve,decoder_inputs_embeds:Qe}){if(Ve||({inputs_embeds:Ve,attention_mask:ie}=await this._prepare_inputs_embeds({input_ids:C,pixel_values:D,inputs_embeds:Ve,attention_mask:ie})),!Ce){let{last_hidden_state:vt}=await ne(this,{inputs_embeds:Ve,attention_mask:ie});Ce=vt}if(!Qe){if(!_e)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Qe=await this.encode_text({input_ids:_e})}return await ce(this,{inputs_embeds:Qe,attention_mask:pe,encoder_attention_mask:ie,encoder_hidden_states:Ce,past_key_values:Le},!0)}}class ya extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class va extends ya{_merge_input_ids_with_image_features(C){const D=C.image_features.dims.at(-1),ie=C.image_features.view(-1,D);return F({image_token_id:this.config.image_token_index,...C,image_features:ie})}}class xa extends Vn{_merge_input_ids_with_image_features(C){const D=C.image_features.dims.at(-1),ie=C.image_features.view(-1,D);return F({image_token_id:this.config.image_token_index,...C,image_features:ie})}}class Ta extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","inputs_embeds","per_layer_inputs","position_ids","pixel_values","input_features","input_features_mask","past_key_values"])}}class en extends Ta{async forward({input_ids:C=null,attention_mask:D=null,pixel_values:ie=null,input_features:_e=null,input_features_mask:pe=null,position_ids:Ce=null,inputs_embeds:Le=null,per_layer_inputs:Ve=null,past_key_values:Qe=null,generation_config:ft=null,logits_processor:yt=null,...vt}){if((!Le||!Ve)&&({inputs_embeds:Le,per_layer_inputs:Ve}=await R(this.sessions.embed_tokens,{input_ids:C}),C.dims[1]!==1)){if(ie){const{image_features:_t}=await R(this.sessions.vision_encoder,{pixel_values:ie});({inputs_embeds:Le,attention_mask:D}=this._merge_input_ids_with_image_features({image_features:_t,inputs_embeds:Le,input_ids:C,attention_mask:D}))}if(_e){const{audio_features:_t}=await R(this.sessions.audio_encoder,{input_features:_e,input_features_mask:pe});({inputs_embeds:Le,attention_mask:D}=this._merge_input_ids_with_audio_features({audio_features:_t,inputs_embeds:Le,input_ids:C,attention_mask:D}))}}return await ce(this,{inputs_embeds:Le,per_layer_inputs:Ve,past_key_values:Qe,attention_mask:D,position_ids:Ce,generation_config:ft,logits_processor:yt},!0)}_merge_input_ids_with_image_features(C){const D=C.image_features.dims.at(-1),ie=C.image_features.view(-1,D);return F({image_token_id:this.config.image_token_id,...C,image_features:ie})}_merge_input_ids_with_audio_features(C){const D=C.audio_features.dims.at(-1),ie=C.audio_features.view(-1,D);return V({audio_token_id:this.config.audio_token_id,...C,audio_features:ie})}}class tn extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class mn extends tn{async encode_image({pixel_values:C,pixel_attention_mask:D}){return(await R(this.sessions.vision_encoder,{pixel_values:C,pixel_attention_mask:D})).image_features}_merge_input_ids_with_image_features(C){const D=C.image_features.dims.at(-1),ie=C.image_features.view(-1,D);return F({image_token_id:this.config.image_token_id,...C,image_features:ie})}}class yi extends mn{}class Ea extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class fn extends Ea{async forward({input_ids:C=null,attention_mask:D=null,pixel_values:ie=null,image_sizes:_e=null,position_ids:pe=null,inputs_embeds:Ce=null,past_key_values:Le=null,generation_config:Ve=null,logits_processor:Qe=null,...ft}){if(!Ce){let vt;if(ie&&C.dims[1]!==1){if(!_e)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:vt}=await R(this.sessions.vision_encoder,{pixel_values:ie,image_sizes:_e}))}else{const Ot=this.config.normalized_config.hidden_size;vt=new c.Tensor("float32",[],[0,Ot])}({inputs_embeds:Ce}=await R(this.sessions.prepare_inputs_embeds,{input_ids:C,image_features:vt}))}return await ce(this,{inputs_embeds:Ce,past_key_values:Le,attention_mask:D,position_ids:pe,generation_config:Ve,logits_processor:Qe},!1)}}class Mr extends W{}class vi extends Mr{}class Pa extends Mr{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"text_model"})}}class xi extends Mr{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"text_model"})}}class Ca extends Mr{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"vision_model"})}}class Ti extends Mr{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"vision_model"})}}class Gn extends W{}class Sa extends Gn{}class Ei extends Gn{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"text_model"})}}class Pi extends Mr{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"vision_model"})}}class _n extends W{}class ht extends _n{}class Kn extends W{}class Ci extends Kn{async forward(C){const D=!C.input_ids,ie=!C.pixel_values;if(D&&ie)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(D&&(C.input_ids=(0,c.ones)([C.pixel_values.dims[0],1])),ie){const{image_size:Qe}=this.config.vision_config;C.pixel_values=(0,c.full)([0,3,Qe,Qe],0)}const{text_embeddings:_e,image_embeddings:pe,l2norm_text_embeddings:Ce,l2norm_image_embeddings:Le}=await super.forward(C),Ve={};return D||(Ve.text_embeddings=_e,Ve.l2norm_text_embeddings=Ce),ie||(Ve.image_embeddings=pe,Ve.l2norm_image_embeddings=Le),Ve}}class Si extends Kn{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"text_model"})}}class gn extends Kn{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"vision_model"})}}class sr extends W{}class wn extends sr{}class Hn extends sr{}class qn extends W{}class ki extends qn{}class Ii extends qn{}class Mn extends W{}class $i extends Mn{}class Ai extends Mn{}class Xn extends W{}class bn extends Xn{}class Qn extends Xn{}class yn extends W{}class Fi extends yn{}class Oi extends yn{}class Jn extends W{}class Di extends Jn{}class Li extends Jn{}class Yn extends W{}class p extends Yn{}class E extends Yn{}class A extends W{}class z extends A{}class U extends A{}class ue extends W{}class Pe extends ue{}class De extends ue{}class He extends W{}class ot extends He{}class Tt extends He{}class Dt extends W{}class Kt extends Dt{}class vs extends Dt{}class Lr extends W{}class ka extends Lr{}class Gc extends Lr{}class Po extends W{}class Kc extends Po{}class Hc extends Po{}class Co extends W{}class qc extends Co{}class Xc extends Co{}class So extends W{}class Qc extends So{}class Jc extends So{}class ko extends W{}class Yc extends ko{}class Zc extends ko{}class Io extends W{}class ed extends Io{}class td extends Io{}class $o extends W{}class sd extends $o{}class rd extends $o{}class Ao extends W{}class nd extends Ao{}class id extends Ao{}class Fo extends W{}class ad extends Fo{}class od extends Fo{}class Oo extends W{}class ld extends Oo{}class ud extends Oo{}class Do extends W{}class cd extends Do{}class dd extends Do{}class Lo extends W{}class hd extends Lo{}class pd extends Lo{}class zo extends W{}class md extends zo{}class fd extends zo{}class Bo extends W{}class _d extends Bo{}class gd extends Bo{}class Ro extends W{}class wd extends Ro{}class Md extends Ro{}class bd extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class yd extends bd{get_rope_index(C,D,ie,_e){const{vision_config:pe,image_token_id:Ce,video_token_id:Le,vision_start_token_id:Ve}=this.config,Qe=pe.spatial_merge_size??2,ft=[];if(D||ie){let yt=C.tolist();_e||(_e=(0,c.ones_like)(C));const vt=_e.tolist(),Ot=Array.from({length:3},Ht=>Array.from({length:C.dims[0]},ts=>Array.from({length:C.dims[1]},ds=>1))),_t=D?D.tolist():[],It=ie?ie.tolist():[];let dt=0,Ft=0;for(let Ht=0;Ht<yt.length;++Ht){const ts=yt[Ht].filter((ss,Es)=>vt[Ht][Es]==1),ls=ts.reduce((ss,Es,rn)=>(Es==Ve&&ss.push(rn),ss),[]).map(ss=>ts[ss+1]),Ms=ls.filter(ss=>ss==Ce).length,Fs=ls.filter(ss=>ss==Le).length;let $t=[],Ts=0,nr=Ms,xn=Fs;for(let ss=0;ss<ls.length;++ss){const Es=ts.findIndex((Pn,br)=>br>Ts&&Pn==Ce),rn=ts.findIndex((Pn,br)=>br>Ts&&Pn==Le),En=nr>0&&Es!==-1?Es:ts.length+1,ti=xn>0&&rn!==-1?rn:ts.length+1;let qa,jl,Nl,Ul;En<ti?([jl,Nl,Ul]=_t[dt],++dt,--nr,qa=En):([jl,Nl,Ul]=It[Ft],++Ft,--xn,qa=ti);const[ax,Vl,Xa]=[Number(jl),Math.floor(Number(Nl)/Qe),Math.floor(Number(Ul)/Qe)],Wl=qa-Ts,i_=$t.length>0?(0,f.max)($t.at(-1))[0]+1:0;$t.push(Array.from({length:3*Wl},(Pn,br)=>i_+br%Wl));const Gl=Wl+i_,Qa=ax*Vl*Xa,ox=Array.from({length:Qa},(Pn,br)=>Gl+Math.floor(br/(Vl*Xa))),lx=Array.from({length:Qa},(Pn,br)=>Gl+Math.floor(br/Xa)%Vl),ux=Array.from({length:Qa},(Pn,br)=>Gl+br%Xa);$t.push([ox,lx,ux].flat()),Ts=qa+Qa}if(Ts<ts.length){const ss=$t.length>0?(0,f.max)($t.at(-1))[0]+1:0,Es=ts.length-Ts;$t.push(Array.from({length:3*Es},(rn,En)=>ss+En%Es))}const Zs=$t.reduce((ss,Es)=>ss+Es.length,0),dr=new Array(Zs);let Ga=0;for(let ss=0;ss<3;++ss)for(let Es=0;Es<$t.length;++Es){const rn=$t[Es],En=rn.length/3;for(let ti=ss*En;ti<(ss+1)*En;++ti)dr[Ga++]=rn[ti]}let Tn=0;const Ka=vt[Ht];for(let ss=0;ss<Ka.length;++ss)if(Ka[ss]==1){for(let Es=0;Es<3;++Es)Ot[Es][Ht][ss]=dr[Es*Zs/3+Tn];++Tn}const Ha=(0,f.max)(dr)[0];ft.push(Ha+1-yt[Ht].length)}return[new c.Tensor("int64",Ot.flat(1/0),[3,C.dims[0],C.dims[1]]),new c.Tensor("int64",ft,[ft.length,1])]}else if(_e){const{data:yt,dims:vt}=ve(_e),Ot=BigInt64Array.from({length:3*yt.length},(It,dt)=>yt[dt%yt.length]),_t=Array.from({length:vt[0]},(It,dt)=>(0,f.max)(yt.subarray(vt[1]*dt,vt[1]*(dt+1)))[0]+1n+BigInt(vt[1]));return[new c.Tensor("int64",Ot,[3,...vt]),new c.Tensor("int64",_t,[_t.length,1])]}else{const[yt,vt]=C.dims,Ot=BigInt64Array.from({length:3*yt*vt},(_t,It)=>BigInt(Math.floor(It%vt/yt)));return[new c.Tensor("int64",Ot,[3,...C.dims]),(0,c.zeros)([yt,1])]}}async encode_image({pixel_values:C,image_grid_thw:D}){return(await R(this.sessions.vision_encoder,{pixel_values:C,grid_thw:D})).image_features}_merge_input_ids_with_image_features(C){return F({image_token_id:this.config.image_token_id,...C})}prepare_inputs_for_generation(C,D,ie){if(D.attention_mask&&!D.position_ids)if(!D.past_key_values)[D.position_ids,D.rope_deltas]=this.get_rope_index(D.input_ids,D.image_grid_thw,D.video_grid_thw,D.attention_mask);else{D.pixel_values=null;const _e=BigInt(Object.values(D.past_key_values)[0].dims.at(-2)),pe=D.rope_deltas.map(Ce=>_e+Ce);D.position_ids=(0,c.stack)([pe,pe,pe],0)}return D}}class jo extends W{}class vd extends jo{}class xd extends jo{}class No extends W{}class Td extends No{}class Ed extends No{}class Uo extends W{}class Pd extends Uo{}class Cd extends Uo{}class Vo extends W{}class Sd extends Vo{}class kd extends Vo{}class Wo extends W{}class Id extends Wo{}class $d extends Wo{}class Go extends W{}class Ad extends Go{}class Fd extends Go{async _call(C){return new Et(await super._call(C))}}class Ko extends W{}class Od extends Ko{}class Dd extends Ko{async _call(C){return new Et(await super._call(C))}}class Ld extends W{}class zd extends Ld{}class Ho extends W{}class Bd extends Ho{}class Rd extends Ho{async _call(C){return new Et(await super._call(C))}}class jd extends W{}class Nd extends jd{}class qo extends W{}class Ud extends qo{}class Vd extends qo{async _call(C){return new Et(await super._call(C))}}class Wd extends W{}class Gd extends Wd{}class Xo extends W{}class Kd extends Xo{}class Hd extends Xo{async _call(C){return new Et(await super._call(C))}}class qd extends W{}class Xd extends qd{async _call(C){return new r_(await super._call(C))}}class Qo extends W{}class Qd extends Qo{}class Jd extends Qo{async _call(C){return new Et(await super._call(C))}}class Jo extends W{}class Yd extends Jo{}class Zd extends Jo{async _call(C){return new Et(await super._call(C))}}class Yo extends W{}class eh extends Yo{}class th extends Yo{}class Zo extends W{}class sh extends Zo{}class rh extends Zo{}class el extends W{}class nh extends el{}class ih extends el{async _call(C){return new Et(await super._call(C))}}class Ia extends W{}class ah extends Ia{}class oh extends Ia{async _call(C){return new sl(await super._call(C))}}class tl extends Ia{async _call(C){return new lh(await super._call(C))}}class sl extends be{constructor({logits:C,pred_boxes:D}){super(),this.logits=C,this.pred_boxes=D}}class lh extends be{constructor({logits:C,pred_boxes:D,pred_masks:ie}){super(),this.logits=C,this.pred_boxes=D,this.pred_masks=ie}}class rl extends W{}class uh extends rl{}class ch extends rl{async _call(C){return new zi(await super._call(C))}}class zi extends be{constructor({logits:C,pred_boxes:D}){super(),this.logits=C,this.pred_boxes=D}}class nl extends W{}class dh extends nl{}class hh extends nl{async _call(C){return new ph(await super._call(C))}}class ph extends zi{}class il extends W{}class mh extends il{}class fh extends il{async _call(C){return new _h(await super._call(C))}}class _h extends zi{}class al extends W{}class gh extends al{}class wh extends al{async _call(C){return new zi(await super._call(C))}}class ol extends W{}class Mh extends ol{}class bh extends ol{async _call(C){return new yh(await super._call(C))}}class yh extends sl{}class ll extends W{}class vh extends ll{}class xh extends ll{async _call(C){return new Et(await super._call(C))}}class ul extends W{}class Th extends ul{}class Eh extends ul{async _call(C){return new Et(await super._call(C))}}class cl extends W{}class Ph extends cl{}class Ch extends cl{async _call(C){return new Et(await super._call(C))}}class $a extends W{}class Sh extends $a{}class kh extends $a{async _call(C){return new Et(await super._call(C))}}class Ih extends $a{}class dl extends W{}class $h extends dl{}class Ah extends dl{}class hl extends W{}class Fh extends hl{}class Oh extends hl{}class Dh extends W{}class Lh extends Dh{}class Aa extends W{}class zh extends Aa{}class Bh extends Aa{}class Rh extends Aa{}class jh extends W{}class Nh extends jh{}class Uh extends W{}class Vh extends Uh{}class Wh extends W{}class Gh extends Wh{}class pl extends W{}class Kh extends pl{}class Hh extends pl{}class ml extends W{}class qh extends ml{}class Xh extends ml{}class Qh extends W{}class Jh extends Qh{}class fl extends W{}class Yh extends fl{}class Zh extends fl{async _call(C){return new Et(await super._call(C))}}class _l extends W{}class ep extends _l{}class tp extends _l{async _call(C){return new Et(await super._call(C))}}class gl extends W{}class sp extends gl{}class rp extends gl{async _call(C){return new Et(await super._call(C))}}class wl extends W{}class np extends wl{}class ip extends wl{async _call(C){return new Et(await super._call(C))}}class ap extends W{}class op extends ap{}class Ml extends W{}class lp extends Ml{}class up extends Ml{async _call(C){return new cp(await super._call(C))}}class cp extends be{constructor({logits:C,pred_boxes:D}){super(),this.logits=C,this.pred_boxes=D}}class dp extends W{}class hp extends dp{async get_image_embeddings({pixel_values:C}){return await ne(this,{pixel_values:C})}async forward(C){if((!C.image_embeddings||!C.image_positional_embeddings)&&(C={...C,...await this.get_image_embeddings(C)}),!C.input_labels&&C.input_points){const ie=C.input_points.dims.slice(0,-1),_e=ie.reduce((pe,Ce)=>pe*Ce,1);C.input_labels=new c.Tensor("int64",new BigInt64Array(_e).fill(1n),ie)}const D={image_embeddings:C.image_embeddings,image_positional_embeddings:C.image_positional_embeddings};return C.input_points&&(D.input_points=C.input_points),C.input_labels&&(D.input_labels=C.input_labels),C.input_boxes&&(D.input_boxes=C.input_boxes),await R(this.sessions.prompt_encoder_mask_decoder,D)}async _call(C){return new pp(await super._call(C))}}class pp extends be{constructor({iou_scores:C,pred_masks:D}){super(),this.iou_scores=C,this.pred_masks=D}}class bl extends W{}class mp extends bl{}class fp extends bl{}class yl extends W{}class _p extends yl{}class gp extends yl{}class sn extends W{}class wp extends sn{}class Mp extends sn{async _call(C){return new vn(await super._call(C))}}class bp extends sn{async _call(C){return new Et(await super._call(C))}}class yp extends sn{async _call(C){return new xs(await super._call(C))}}class vl extends W{}class vp extends vl{}class xp extends vl{async _call(C){return new xs(await super._call(C))}}class Tp extends W{}class Ep extends Tp{}class Fa extends W{}class Pp extends Fa{}class Cp extends Fa{async _call(C){return new vn(await super._call(C))}}class Sp extends Fa{async _call(C){return new Et(await super._call(C))}}class Bi extends W{}class kp extends Bi{}class Ip extends Bi{async _call(C){return new vn(await super._call(C))}}class $p extends Bi{async _call(C){return new Et(await super._call(C))}}class Ap extends Bi{async _call(C){return new xs(await super._call(C))}}class Oa extends W{}class Fp extends Oa{}class Op extends Oa{async _call(C){return new vn(await super._call(C))}}class Dp extends Oa{async _call(C){return new Et(await super._call(C))}}class Gv extends W{}class Lp extends sn{}class zp extends sn{async _call(C){return new vn(await super._call(C))}}class Bp extends sn{async _call(C){return new Et(await super._call(C))}}class Zn extends W{}class Rp extends Zn{}class jp extends Zn{async _call(C){return new vn(await super._call(C))}}class Np extends Zn{async _call(C){return new Et(await super._call(C))}}class Up extends Zn{async _call(C){return new s_(await super._call(C))}}class Vp extends Zn{async _call(C){return new xs(await super._call(C))}}class Wp extends W{}class Gp extends Wp{}class Da extends W{}class Kv extends Da{}class Kp extends Da{}class Hp extends Da{async generate_speech(C,D,{threshold:ie=.5,minlenratio:_e=0,maxlenratio:pe=20,vocoder:Ce=null}={}){const Le={input_ids:C},{encoder_outputs:Ve,encoder_attention_mask:Qe}=await ne(this,Le),ft=Ve.dims[1]/this.config.reduction_factor,yt=Math.floor(ft*pe),vt=Math.floor(ft*_e),Ot=this.config.num_mel_bins;let _t=[],It=null,dt=null,Ft=0;for(;;){++Ft;const ds=ee(!!dt);let ls;dt?ls=dt.output_sequence_out:ls=new c.Tensor("float32",new Float32Array(Ot),[1,1,Ot]);let Ms={use_cache_branch:ds,output_sequence:ls,encoder_attention_mask:Qe,speaker_embeddings:D,encoder_hidden_states:Ve};this.addPastKeyValues(Ms,It),dt=await R(this.sessions.decoder_model_merged,Ms),It=this.getPastKeyValues(dt,It);const{prob:Fs,spectrum:$t}=dt;if(_t.push($t),Ft>=vt&&(Array.from(Fs.data).filter(Ts=>Ts>=ie).length>0||Ft>=yt))break}const Ht=(0,c.cat)(_t),{waveform:ts}=await R(Ce.sessions.model,{spectrogram:Ht});return{spectrogram:Ht,waveform:ts}}}class qp extends W{constructor(){super(...arguments);J(this,"main_input_name","spectrogram")}}class Xp extends W{}class Qp extends Xp{}class xl extends W{}class Jp extends xl{}class Yp extends xl{}class Tl extends W{}class Zp extends Tl{}class em extends Tl{}class El extends W{}class tm extends El{}class sm extends El{}class Pl extends W{}class rm extends Pl{}class nm extends Pl{}class La extends W{}class im extends La{}class am extends La{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"text_model"})}}class om extends La{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"audio_model"})}}class lm extends W{}class Cl extends lm{async _call(C){return new n_(await super._call(C))}}class za extends W{}class Hv extends za{}class um extends za{}class cm extends za{}class Sl extends W{}class dm extends Sl{}class hm extends Sl{}class kl extends W{}class pm extends kl{}class mm extends kl{async _call(C){return new Et(await super._call(C))}}class Il extends W{}class qv extends Il{}class Xv extends Il{}class $l extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(D){const[ie,_e]=D.dims,pe=this.config.decoder.num_codebooks,Ce=_e-pe;let Le=0;for(let ft=0;ft<D.size;++ft){if(D.data[ft]===this.config.decoder.pad_token_id)continue;const yt=ft%_e,vt=Math.floor(ft/_e)%pe,Ot=yt-vt;Ot>0&&Ot<=Ce&&(D.data[Le++]=D.data[ft])}const Ve=Math.floor(ie/pe),Qe=Le/(Ve*pe);return new c.Tensor(D.type,D.data.slice(0,Le),[Ve,pe,Qe])}prepare_inputs_for_generation(D,ie,_e){let pe=structuredClone(D);for(let Le=0;Le<pe.length;++Le)for(let Ve=0;Ve<pe[Le].length;++Ve)Le%this.config.decoder.num_codebooks>=Ve&&(pe[Le][Ve]=BigInt(this.config.decoder.pad_token_id));return _e.guidance_scale!==null&&_e.guidance_scale>1&&(pe=pe.concat(pe)),super.prepare_inputs_for_generation(pe,ie,_e)}async generate(D){const ie=await super.generate(D),_e=this._apply_and_filter_by_delay_pattern_mask(ie).unsqueeze_(0),{audio_values:pe}=await R(this.sessions.encodec_decode,{audio_codes:_e});return pe}}class Ba extends W{}class fm extends Ba{}class _m extends Ba{async _call(C){return new Et(await super._call(C))}}class gm extends Ba{}class Ra extends W{}class wm extends Ra{}class Mm extends Ra{async _call(C){return new Et(await super._call(C))}}class bm extends Ra{}class ja extends W{}class ym extends ja{}class vm extends ja{async _call(C){return new Et(await super._call(C))}}class xm extends ja{}class Na extends W{}class Tm extends Na{}class Em extends Na{async _call(C){return new Et(await super._call(C))}}class Pm extends Na{}class Cm extends W{}class Sm extends Cm{}class km extends W{}class Im extends km{constructor(...D){super(...D);J(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(D){const ie=this._generation_mode??"text";let _e;if(ie==="text"||!D.past_key_values){const Qe=this.sessions.prepare_inputs_embeds,ft=(0,o.pick)(D,Qe.inputNames);_e=await R(Qe,ft)}else{const Qe=this.sessions.gen_img_embeds,ft=(0,o.pick)({image_ids:D.input_ids},Qe.inputNames);_e=await R(Qe,ft)}const pe={...D,..._e},Ce=await ce(this,pe),Le=this.sessions[ie==="text"?"lm_head":"gen_head"];if(!Le)throw new Error(`Unable to find "${Le}" generation head`);const Ve=await R(Le,(0,o.pick)(Ce,Le.inputNames));return{..._e,...Ce,...Ve}}async generate(D){return this._generation_mode="text",super.generate(D)}async generate_images(D){this._generation_mode="image";const ie=(D.inputs??D[this.main_input_name]).dims[1],pe=(await super.generate(D)).slice(null,[ie,null]),Ce=this.sessions.image_decode,{decoded_image:Le}=await R(Ce,{generated_tokens:pe}),Ve=Le.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Qe=[];for(const ft of Ve){const yt=_.RawImage.fromTensor(ft);Qe.push(yt)}return Qe}}class $m extends be{constructor({char_logits:C,bpe_logits:D,wp_logits:ie}){super(),this.char_logits=C,this.bpe_logits=D,this.wp_logits=ie}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Am extends W{}class Fm extends Am{async _call(C){return new $m(await super._call(C))}}class Al extends W{}class Om extends Al{}class Dm extends Al{}class Fl extends W{}class Lm extends Fl{}class zm extends Fl{}class Bm extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","position_ids","audio_values","past_key_values"])}}class Ol extends Bm{_merge_input_ids_with_audio_features(C){const D=C.audio_features.dims.at(-1),ie=C.audio_features.view(-1,D);return V({audio_token_id:this.config.ignore_index??this.config.audio_token_id,...C,audio_features:ie})}}class Rm extends Ol{}class Ua extends W{constructor(){super(...arguments);J(this,"main_input_name","input_values");J(this,"forward_params",["input_values"])}}class jm extends be{constructor({audio_codes:C}){super(),this.audio_codes=C}}class Nm extends be{constructor({audio_values:C}){super(),this.audio_values=C}}class Um extends Ua{async encode(C){return new jm(await R(this.sessions.encoder_model,C))}async decode(C){return new Nm(await R(this.sessions.decoder_model,C))}}class Vm extends Ua{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"encoder_model"})}}class Wm extends Ua{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"decoder_model"})}}class Va extends W{constructor(){super(...arguments);J(this,"main_input_name","input_values");J(this,"forward_params",["input_values"])}}class Gm extends be{constructor({audio_codes:C}){super(),this.audio_codes=C}}class Km extends be{constructor({audio_values:C}){super(),this.audio_values=C}}class Hm extends Va{async encode(C){return new Gm(await R(this.sessions.encoder_model,C))}async decode(C){return new Km(await R(this.sessions.decoder_model,C))}}class qm extends Va{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"encoder_model"})}}class Xm extends Va{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"decoder_model"})}}class Wa extends W{constructor(){super(...arguments);J(this,"main_input_name","input_values");J(this,"forward_params",["input_values"])}}class Qm extends Wa{async encode(C){return await R(this.sessions.encoder_model,C)}async decode(C){return await R(this.sessions.decoder_model,C)}}class Jm extends Wa{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"encoder_model"})}}class Ym extends Wa{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"decoder_model"})}}class jt{static async from_pretrained(C,{progress_callback:D=null,config:ie=null,cache_dir:_e=null,local_files_only:pe=!1,revision:Ce="main",model_file_name:Le=null,subfolder:Ve="onnx",device:Qe=null,dtype:ft=null,use_external_data_format:yt=null,session_options:vt={}}={}){const Ot={progress_callback:D,config:ie,cache_dir:_e,local_files_only:pe,revision:Ce,model_file_name:Le,subfolder:Ve,device:Qe,dtype:ft,use_external_data_format:yt,session_options:vt};if(Ot.config=await r.AutoConfig.from_pretrained(C,Ot),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const _t=Ot.config.model_type;for(const It of this.MODEL_CLASS_MAPPINGS){let dt=It.get(_t);if(!dt){for(const Ft of It.values())if(Ft[0]===_t){dt=Ft;break}if(!dt)continue}return await dt[1].from_pretrained(C,Ot)}if(this.BASE_IF_FAIL)return Ef.has(_t)||console.warn(`Unknown model class "${_t}", attempting to construct from base class.`),await W.from_pretrained(C,Ot);throw Error(`Unsupported model type: ${_t}`)}}J(jt,"MODEL_CLASS_MAPPINGS",null),J(jt,"BASE_IF_FAIL",!1);const Qv=new Map([["bert",["BertModel",Me]],["neobert",["NeoBertModel",xe]],["modernbert",["ModernBertModel",Ye]],["nomic_bert",["NomicBertModel",lr]],["roformer",["RoFormerModel",Cs]],["electra",["ElectraModel",B]],["esm",["EsmModel",Br]],["convbert",["ConvBertModel",Ar]],["camembert",["CamembertModel",gt]],["deberta",["DebertaModel",Us]],["deberta-v2",["DebertaV2Model",ur]],["mpnet",["MPNetModel",cn]],["albert",["AlbertModel",qe]],["distilbert",["DistilBertModel",tr]],["roberta",["RobertaModel",na]],["xlm",["XLMModel",la]],["xlm-roberta",["XLMRobertaModel",pa]],["clap",["ClapModel",im]],["clip",["CLIPModel",vi]],["clipseg",["CLIPSegModel",wn]],["chinese_clip",["ChineseCLIPModel",ht]],["siglip",["SiglipModel",Sa]],["jina_clip",["JinaCLIPModel",Ci]],["mobilebert",["MobileBertModel",Jt]],["squeezebert",["SqueezeBertModel",Y]],["wav2vec2",["Wav2Vec2Model",wp]],["wav2vec2-bert",["Wav2Vec2BertModel",Fp]],["unispeech",["UniSpeechModel",Pp]],["unispeech-sat",["UniSpeechSatModel",kp]],["hubert",["HubertModel",Lp]],["wavlm",["WavLMModel",Rp]],["audio-spectrogram-transformer",["ASTModel",fa]],["vits",["VitsModel",Cl]],["pyannote",["PyAnnoteModel",vp]],["wespeaker-resnet",["WeSpeakerResNetModel",Ep]],["detr",["DetrModel",ah]],["rt_detr",["RTDetrModel",uh]],["rt_detr_v2",["RTDetrV2Model",dh]],["rf_detr",["RFDetrModel",mh]],["d_fine",["DFineModel",gh]],["table-transformer",["TableTransformerModel",Mh]],["vit",["ViTModel",Ad]],["ijepa",["IJepaModel",Od]],["pvt",["PvtModel",Bd]],["vit_msn",["ViTMSNModel",Ud]],["vit_mae",["ViTMAEModel",Nd]],["groupvit",["GroupViTModel",Gd]],["fastvit",["FastViTModel",Kd]],["mobilevit",["MobileViTModel",Qd]],["mobilevitv2",["MobileViTV2Model",Yd]],["owlvit",["OwlViTModel",eh]],["owlv2",["Owlv2Model",sh]],["beit",["BeitModel",nh]],["deit",["DeiTModel",vh]],["hiera",["HieraModel",Th]],["convnext",["ConvNextModel",Yh]],["convnextv2",["ConvNextV2Model",ep]],["dinov2",["Dinov2Model",sp]],["dinov2_with_registers",["Dinov2WithRegistersModel",np]],["resnet",["ResNetModel",Ph]],["swin",["SwinModel",Sh]],["swin2sr",["Swin2SRModel",$h]],["donut-swin",["DonutSwinModel",Jh]],["yolos",["YolosModel",lp]],["dpt",["DPTModel",Fh]],["glpn",["GLPNModel",qh]],["hifigan",["SpeechT5HifiGan",qp]],["efficientnet",["EfficientNetModel",pm]],["decision_transformer",["DecisionTransformerModel",Sm]],["patchtst",["PatchTSTForPrediction",Om]],["patchtsmixer",["PatchTSMixerForPrediction",Lm]],["mobilenet_v1",["MobileNetV1Model",fm]],["mobilenet_v2",["MobileNetV2Model",wm]],["mobilenet_v3",["MobileNetV3Model",ym]],["mobilenet_v4",["MobileNetV4Model",Tm]],["maskformer",["MaskFormerModel",Kh]],["mgp-str",["MgpstrForSceneTextRecognition",Fm]],["style_text_to_speech_2",["StyleTextToSpeech2Model",Gp]]]),Jv=new Map([["t5",["T5Model",Lt]],["longt5",["LongT5Model",_s]],["mt5",["MT5Model",gs]],["bart",["BartModel",Zt]],["mbart",["MBartModel",wr]],["marian",["MarianModel",mp]],["whisper",["WhisperModel",Zr]],["m2m_100",["M2M100Model",_p]],["blenderbot",["BlenderbotModel",ms]],["blenderbot-small",["BlenderbotSmallModel",Nr]]]),Yv=new Map([["mimi",["MimiModel",Um]],["dac",["DacModel",Hm]],["snac",["SnacModel",Qm]]]),Zv=new Map([["bloom",["BloomModel",Pd]],["jais",["JAISModel",$i]],["gpt2",["GPT2Model",ki]],["gptj",["GPTJModel",Di]],["gpt_bigcode",["GPTBigCodeModel",p]],["gpt_neo",["GPTNeoModel",bn]],["gpt_neox",["GPTNeoXModel",Fi]],["codegen",["CodeGenModel",z]],["llama",["LlamaModel",Pe]],["arcee",["ArceeModel",ot]],["lfm2",["Lfm2Model",Kt]],["smollm3",["SmolLM3Model",ka]],["exaone",["ExaoneModel",Qc]],["olmo",["OlmoModel",ed]],["olmo2",["Olmo2Model",sd]],["mobilellm",["MobileLLMModel",Yc]],["granite",["GraniteModel",nd]],["cohere",["CohereModel",ad]],["gemma",["GemmaModel",ld]],["gemma2",["Gemma2Model",cd]],["gemma3_text",["Gemma3Model",hd]],["helium",["HeliumModel",Kc]],["glm",["GlmModel",qc]],["openelm",["OpenELMModel",md]],["qwen2",["Qwen2Model",_d]],["qwen3",["Qwen3Model",wd]],["phi",["PhiModel",vd]],["phi3",["Phi3Model",Td]],["mpt",["MptModel",Sd]],["opt",["OPTModel",Id]],["mistral",["MistralModel",Jp]],["ernie4_5",["Ernie4_5_Model",Zp]],["starcoder2",["Starcoder2Model",tm]],["falcon",["FalconModel",rm]],["stablelm",["StableLmModel",dm]],["modernbert-decoder",["ModernBertDecoderModel",bs]]]),Dl=new Map([["speecht5",["SpeechT5ForSpeechToText",Kp]],["whisper",["WhisperForConditionalGeneration",wi]],["lite-whisper",["LiteWhisperForConditionalGeneration",Mi]],["moonshine",["MoonshineForConditionalGeneration",_a]]]),Zm=new Map([["speecht5",["SpeechT5ForTextToSpeech",Hp]]]),ef=new Map([["vits",["VitsModel",Cl]],["musicgen",["MusicgenForConditionalGeneration",$l]]]),tf=new Map([["bert",["BertForSequenceClassification",we]],["neobert",["NeoBertForSequenceClassification",Ke]],["modernbert",["ModernBertForSequenceClassification",At]],["roformer",["RoFormerForSequenceClassification",Hr]],["electra",["ElectraForSequenceClassification",se]],["esm",["EsmForSequenceClassification",Re]],["convbert",["ConvBertForSequenceClassification",St]],["camembert",["CamembertForSequenceClassification",xt]],["deberta",["DebertaForSequenceClassification",rs]],["deberta-v2",["DebertaV2ForSequenceClassification",Or]],["mpnet",["MPNetForSequenceClassification",hn]],["albert",["AlbertForSequenceClassification",We]],["distilbert",["DistilBertForSequenceClassification",Ls]],["roberta",["RobertaForSequenceClassification",ia]],["xlm",["XLMForSequenceClassification",ca]],["xlm-roberta",["XLMRobertaForSequenceClassification",pi]],["bart",["BartForSequenceClassification",Hs]],["mbart",["MBartForSequenceClassification",cr]],["mobilebert",["MobileBertForSequenceClassification",_r]],["squeezebert",["SqueezeBertForSequenceClassification",de]]]),sf=new Map([["bert",["BertForTokenClassification",Ae]],["neobert",["NeoBertForTokenClassification",nt]],["modernbert",["ModernBertForTokenClassification",kt]],["roformer",["RoFormerForTokenClassification",qr]],["electra",["ElectraForTokenClassification",ge]],["esm",["EsmForTokenClassification",je]],["convbert",["ConvBertForTokenClassification",Qt]],["camembert",["CamembertForTokenClassification",rt]],["deberta",["DebertaForTokenClassification",Ss]],["deberta-v2",["DebertaV2ForTokenClassification",Dr]],["mpnet",["MPNetForTokenClassification",he]],["distilbert",["DistilBertForTokenClassification",fr]],["roberta",["RobertaForTokenClassification",aa]],["xlm",["XLMForTokenClassification",da]],["xlm-roberta",["XLMRobertaForTokenClassification",mi]]]),Ll=new Map([["t5",["T5ForConditionalGeneration",ns]],["longt5",["LongT5ForConditionalGeneration",ys]],["mt5",["MT5ForConditionalGeneration",zs]],["bart",["BartForConditionalGeneration",ws]],["mbart",["MBartForConditionalGeneration",$s]],["marian",["MarianMTModel",fp]],["m2m_100",["M2M100ForConditionalGeneration",gp]],["blenderbot",["BlenderbotForConditionalGeneration",is]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Nn]]]),zl=new Map([["bloom",["BloomForCausalLM",Cd]],["gpt2",["GPT2LMHeadModel",Ii]],["jais",["JAISLMHeadModel",Ai]],["gptj",["GPTJForCausalLM",Li]],["gpt_bigcode",["GPTBigCodeForCausalLM",E]],["gpt_neo",["GPTNeoForCausalLM",Qn]],["gpt_neox",["GPTNeoXForCausalLM",Oi]],["codegen",["CodeGenForCausalLM",U]],["llama",["LlamaForCausalLM",De]],["arcee",["ArceeForCausalLM",Tt]],["lfm2",["Lfm2ForCausalLM",vs]],["smollm3",["SmolLM3ForCausalLM",Gc]],["exaone",["ExaoneForCausalLM",Jc]],["olmo",["OlmoForCausalLM",td]],["olmo2",["Olmo2ForCausalLM",rd]],["mobilellm",["MobileLLMForCausalLM",Zc]],["granite",["GraniteForCausalLM",id]],["cohere",["CohereForCausalLM",od]],["gemma",["GemmaForCausalLM",ud]],["gemma2",["Gemma2ForCausalLM",dd]],["gemma3_text",["Gemma3ForCausalLM",pd]],["helium",["HeliumForCausalLM",Hc]],["glm",["GlmForCausalLM",Xc]],["openelm",["OpenELMForCausalLM",fd]],["qwen2",["Qwen2ForCausalLM",gd]],["qwen3",["Qwen3ForCausalLM",Md]],["phi",["PhiForCausalLM",xd]],["phi3",["Phi3ForCausalLM",Ed]],["mpt",["MptForCausalLM",kd]],["opt",["OPTForCausalLM",$d]],["mbart",["MBartForCausalLM",cs]],["mistral",["MistralForCausalLM",Yp]],["ernie4_5",["Ernie4_5_ForCausalLM",em]],["starcoder2",["Starcoder2ForCausalLM",sm]],["falcon",["FalconForCausalLM",nm]],["trocr",["TrOCRForCausalLM",Qp]],["stablelm",["StableLmForCausalLM",hm]],["modernbert-decoder",["ModernBertDecoderForCausalLM",Ps]],["phi3_v",["Phi3VForCausalLM",fn]]]),ex=new Map([["multi_modality",["MultiModalityCausalLM",Im]]]),rf=new Map([["bert",["BertForMaskedLM",Se]],["neobert",["NeoBertForMaskedLM",Ze]],["modernbert",["ModernBertForMaskedLM",at]],["roformer",["RoFormerForMaskedLM",Kr]],["electra",["ElectraForMaskedLM",q]],["esm",["EsmForMaskedLM",Ks]],["convbert",["ConvBertForMaskedLM",Fr]],["camembert",["CamembertForMaskedLM",mt]],["deberta",["DebertaForMaskedLM",Qs]],["deberta-v2",["DebertaV2ForMaskedLM",Is]],["mpnet",["MPNetForMaskedLM",dn]],["albert",["AlbertForMaskedLM",bt]],["distilbert",["DistilBertForMaskedLM",fs]],["roberta",["RobertaForMaskedLM",hi]],["xlm",["XLMWithLMHeadModel",ua]],["xlm-roberta",["XLMRobertaForMaskedLM",ma]],["mobilebert",["MobileBertForMaskedLM",Rr]],["squeezebert",["SqueezeBertForMaskedLM",le]]]),nf=new Map([["bert",["BertForQuestionAnswering",Be]],["neobert",["NeoBertForQuestionAnswering",Je]],["roformer",["RoFormerForQuestionAnswering",Xr]],["electra",["ElectraForQuestionAnswering",Fe]],["convbert",["ConvBertForQuestionAnswering",S]],["camembert",["CamembertForQuestionAnswering",Bt]],["deberta",["DebertaForQuestionAnswering",ks]],["deberta-v2",["DebertaV2ForQuestionAnswering",Ws]],["mpnet",["MPNetForQuestionAnswering",$]],["albert",["AlbertForQuestionAnswering",tt]],["distilbert",["DistilBertForQuestionAnswering",ps]],["roberta",["RobertaForQuestionAnswering",oa]],["xlm",["XLMForQuestionAnswering",ha]],["xlm-roberta",["XLMRobertaForQuestionAnswering",fi]],["mobilebert",["MobileBertForQuestionAnswering",jr]],["squeezebert",["SqueezeBertForQuestionAnswering",Te]]]),Bl=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",pn]],["idefics3",["Idefics3ForConditionalGeneration",mn]],["smolvlm",["SmolVLMForConditionalGeneration",yi]]]),af=new Map([["llava",["LlavaForConditionalGeneration",Wn]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",ga]],["moondream1",["Moondream1ForConditionalGeneration",wa]],["florence2",["Florence2ForConditionalGeneration",ba]],["qwen2-vl",["Qwen2VLForConditionalGeneration",yd]],["idefics3",["Idefics3ForConditionalGeneration",mn]],["smolvlm",["SmolVLMForConditionalGeneration",yi]],["paligemma",["PaliGemmaForConditionalGeneration",va]],["llava_qwen2",["LlavaQwen2ForCausalLM",xa]],["gemma3n",["Gemma3nForConditionalGeneration",en]]]),of=new Map([["ultravox",["UltravoxModel",Ol]],["voxtral",["VoxtralForConditionalGeneration",Rm]]]),tx=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",pn]]]),lf=new Map([["vit",["ViTForImageClassification",Fd]],["ijepa",["IJepaForImageClassification",Dd]],["pvt",["PvtForImageClassification",Rd]],["vit_msn",["ViTMSNForImageClassification",Vd]],["fastvit",["FastViTForImageClassification",Hd]],["mobilevit",["MobileViTForImageClassification",Jd]],["mobilevitv2",["MobileViTV2ForImageClassification",Zd]],["beit",["BeitForImageClassification",ih]],["deit",["DeiTForImageClassification",xh]],["hiera",["HieraForImageClassification",Eh]],["convnext",["ConvNextForImageClassification",Zh]],["convnextv2",["ConvNextV2ForImageClassification",tp]],["dinov2",["Dinov2ForImageClassification",rp]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",ip]],["resnet",["ResNetForImageClassification",Ch]],["swin",["SwinForImageClassification",kh]],["segformer",["SegformerForImageClassification",um]],["efficientnet",["EfficientNetForImageClassification",mm]],["mobilenet_v1",["MobileNetV1ForImageClassification",_m]],["mobilenet_v2",["MobileNetV2ForImageClassification",Mm]],["mobilenet_v3",["MobileNetV3ForImageClassification",vm]],["mobilenet_v4",["MobileNetV4ForImageClassification",Em]]]),uf=new Map([["detr",["DetrForObjectDetection",oh]],["rt_detr",["RTDetrForObjectDetection",ch]],["rt_detr_v2",["RTDetrV2ForObjectDetection",hh]],["rf_detr",["RFDetrForObjectDetection",fh]],["d_fine",["DFineForObjectDetection",wh]],["table-transformer",["TableTransformerForObjectDetection",bh]],["yolos",["YolosForObjectDetection",up]]]),cf=new Map([["owlvit",["OwlViTForObjectDetection",th]],["owlv2",["Owlv2ForObjectDetection",rh]],["grounding-dino",["GroundingDinoForObjectDetection",op]]]),ei=new Map([["detr",["DetrForSegmentation",tl]],["clipseg",["CLIPSegForImageSegmentation",Hn]]]),df=new Map([["segformer",["SegformerForSemanticSegmentation",cm]],["sapiens",["SapiensForSemanticSegmentation",zh]],["swin",["SwinForSemanticSegmentation",Ih]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",gm]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",bm]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",xm]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",Pm]]]),hf=new Map([["detr",["DetrForSegmentation",tl]],["maskformer",["MaskFormerForInstanceSegmentation",Hh]]]),pf=new Map([["sam",["SamModel",hp]]]),mf=new Map([["wav2vec2",["Wav2Vec2ForCTC",Mp]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Op]],["unispeech",["UniSpeechForCTC",Cp]],["unispeech-sat",["UniSpeechSatForCTC",Ip]],["wavlm",["WavLMForCTC",jp]],["hubert",["HubertForCTC",zp]]]),ff=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",bp]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Dp]],["unispeech",["UniSpeechForSequenceClassification",Sp]],["unispeech-sat",["UniSpeechSatForSequenceClassification",$p]],["wavlm",["WavLMForSequenceClassification",Np]],["hubert",["HubertForSequenceClassification",Bp]],["audio-spectrogram-transformer",["ASTForAudioClassification",gi]]]),_f=new Map([["wavlm",["WavLMForXVector",Up]]]),gf=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",Ap]],["wavlm",["WavLMForAudioFrameClassification",Vp]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",yp]],["pyannote",["PyAnnoteForAudioFrameClassification",xp]]]),wf=new Map([["vitmatte",["VitMatteForImageMatting",Xd]]]),sx=new Map([["patchtst",["PatchTSTForPrediction",Dm]],["patchtsmixer",["PatchTSMixerForPrediction",zm]]]),Mf=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Ah]]]),bf=new Map([["dpt",["DPTForDepthEstimation",Oh]],["depth_anything",["DepthAnythingForDepthEstimation",Lh]],["glpn",["GLPNForDepthEstimation",Xh]],["sapiens",["SapiensForDepthEstimation",Bh]],["depth_pro",["DepthProForDepthEstimation",Nh]],["metric3d",["Metric3DForDepthEstimation",Vh]],["metric3dv2",["Metric3Dv2ForDepthEstimation",Gh]]]),yf=new Map([["sapiens",["SapiensForNormalEstimation",Rh]]]),vf=new Map([["vitpose",["VitPoseForPoseEstimation",zd]]]),xf=new Map([["clip",["CLIPVisionModelWithProjection",Ti]],["siglip",["SiglipVisionModel",Pi]],["jina_clip",["JinaCLIPVisionModel",gn]]]),Tf=[[Qv,v.EncoderOnly],[Jv,v.EncoderDecoder],[Zv,v.DecoderOnly],[Yv,v.AutoEncoder],[tf,v.EncoderOnly],[sf,v.EncoderOnly],[Ll,v.Seq2Seq],[Dl,v.Seq2Seq],[zl,v.DecoderOnly],[ex,v.MultiModality],[rf,v.EncoderOnly],[nf,v.EncoderOnly],[Bl,v.Vision2Seq],[af,v.ImageTextToText],[of,v.AudioTextToText],[lf,v.EncoderOnly],[ei,v.EncoderOnly],[hf,v.EncoderOnly],[df,v.EncoderOnly],[wf,v.EncoderOnly],[sx,v.EncoderOnly],[Mf,v.EncoderOnly],[bf,v.EncoderOnly],[yf,v.EncoderOnly],[vf,v.EncoderOnly],[uf,v.EncoderOnly],[cf,v.EncoderOnly],[pf,v.MaskGeneration],[mf,v.EncoderOnly],[ff,v.EncoderOnly],[Zm,v.Seq2Seq],[ef,v.EncoderOnly],[_f,v.EncoderOnly],[gf,v.EncoderOnly],[xf,v.EncoderOnly]];for(const[w,C]of Tf)for(const[D,ie]of w.values())y.set(D,C),x.set(ie,D),T.set(D,ie);const rx=[["MusicgenForConditionalGeneration",$l,v.Musicgen],["Phi3VForCausalLM",fn,v.Phi3V],["CLIPTextModelWithProjection",xi,v.EncoderOnly],["SiglipTextModel",Ei,v.EncoderOnly],["JinaCLIPTextModel",Si,v.EncoderOnly],["ClapTextModelWithProjection",am,v.EncoderOnly],["ClapAudioModelWithProjection",om,v.EncoderOnly],["DacEncoderModel",qm,v.EncoderOnly],["DacDecoderModel",Xm,v.EncoderOnly],["MimiEncoderModel",Vm,v.EncoderOnly],["MimiDecoderModel",Wm,v.EncoderOnly],["SnacEncoderModel",Jm,v.EncoderOnly],["SnacDecoderModel",Ym,v.EncoderOnly],["Gemma3nForConditionalGeneration",en,v.ImageAudioTextToText]];for(const[w,C,D]of rx)y.set(w,D),x.set(C,w),T.set(w,C);const Ef=new Map([["modnet",ei],["birefnet",ei],["isnet",ei],["ben",ei]]);for(const[w,C]of Ef.entries())C.set(w,["PreTrainedModel",W]),y.set(w,v.EncoderOnly),x.set(W,w),T.set(w,W);class Rl extends jt{}J(Rl,"MODEL_CLASS_MAPPINGS",Tf.map(C=>C[0])),J(Rl,"BASE_IF_FAIL",!0);class Pf extends jt{}J(Pf,"MODEL_CLASS_MAPPINGS",[tf]);class Cf extends jt{}J(Cf,"MODEL_CLASS_MAPPINGS",[sf]);class Sf extends jt{}J(Sf,"MODEL_CLASS_MAPPINGS",[Ll]);class kf extends jt{}J(kf,"MODEL_CLASS_MAPPINGS",[Dl]);class If extends jt{}J(If,"MODEL_CLASS_MAPPINGS",[Zm]);class $f extends jt{}J($f,"MODEL_CLASS_MAPPINGS",[ef]);class Af extends jt{}J(Af,"MODEL_CLASS_MAPPINGS",[zl]);class Ff extends jt{}J(Ff,"MODEL_CLASS_MAPPINGS",[rf]);class Of extends jt{}J(Of,"MODEL_CLASS_MAPPINGS",[nf]);class Df extends jt{}J(Df,"MODEL_CLASS_MAPPINGS",[Bl]);class Lf extends jt{}J(Lf,"MODEL_CLASS_MAPPINGS",[lf]);class zf extends jt{}J(zf,"MODEL_CLASS_MAPPINGS",[ei]);class Bf extends jt{}J(Bf,"MODEL_CLASS_MAPPINGS",[df]);class Rf extends jt{}J(Rf,"MODEL_CLASS_MAPPINGS",[hf]);class jf extends jt{}J(jf,"MODEL_CLASS_MAPPINGS",[uf]);class Nf extends jt{}J(Nf,"MODEL_CLASS_MAPPINGS",[cf]);class Uf extends jt{}J(Uf,"MODEL_CLASS_MAPPINGS",[pf]);class Vf extends jt{}J(Vf,"MODEL_CLASS_MAPPINGS",[mf]);class Wf extends jt{}J(Wf,"MODEL_CLASS_MAPPINGS",[ff]);class Gf extends jt{}J(Gf,"MODEL_CLASS_MAPPINGS",[_f]);class Kf extends jt{}J(Kf,"MODEL_CLASS_MAPPINGS",[gf]);class Hf extends jt{}J(Hf,"MODEL_CLASS_MAPPINGS",[tx]);class qf extends jt{}J(qf,"MODEL_CLASS_MAPPINGS",[wf]);class Xf extends jt{}J(Xf,"MODEL_CLASS_MAPPINGS",[Mf]);class Qf extends jt{}J(Qf,"MODEL_CLASS_MAPPINGS",[bf]);class Jf extends jt{}J(Jf,"MODEL_CLASS_MAPPINGS",[yf]);class Yf extends jt{}J(Yf,"MODEL_CLASS_MAPPINGS",[vf]);class Zf extends jt{}J(Zf,"MODEL_CLASS_MAPPINGS",[xf]);class e_ extends jt{}J(e_,"MODEL_CLASS_MAPPINGS",[af]);class t_ extends jt{}J(t_,"MODEL_CLASS_MAPPINGS",[of]);class nx extends be{constructor({logits:C,past_key_values:D,encoder_outputs:ie,decoder_attentions:_e=null,cross_attentions:pe=null}){super(),this.logits=C,this.past_key_values=D,this.encoder_outputs=ie,this.decoder_attentions=_e,this.cross_attentions=pe}}class Et extends be{constructor({logits:C,...D}){super(),this.logits=C;const ie=Object.values(D);ie.length>0&&(this.attentions=ie)}}class s_ extends be{constructor({logits:C,embeddings:D}){super(),this.logits=C,this.embeddings=D}}class xs extends be{constructor({logits:C}){super(),this.logits=C}}class As extends be{constructor({logits:C}){super(),this.logits=C}}class js extends be{constructor({start_logits:C,end_logits:D}){super(),this.start_logits=C,this.end_logits=D}}class vn extends be{constructor({logits:C}){super(),this.logits=C}}class ix extends be{constructor({logits:C,past_key_values:D}){super(),this.logits=C,this.past_key_values=D}}class r_ extends be{constructor({alphas:C}){super(),this.alphas=C}}class n_ extends be{constructor({waveform:C,spectrogram:D}){super(),this.waveform=C,this.spectrogram=D}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(s,e,t)=>{t.r(e),t.d(e,{ASTFeatureExtractor:()=>i});var r=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class i extends r.FeatureExtractor{constructor(o){super(o);const l=this.config.sampling_rate,u=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=u,this.window=(0,n.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(o,l){return(0,n.spectrogram)(o,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:l,transpose:!0})}async _call(o){(0,r.validate_audio_inputs)(o,"ASTFeatureExtractor");const l=await this._extract_fbank_features(o,this.config.max_length);if(this.config.do_normalize){const u=this.std*2,h=l.data;for(let d=0;d<h.length;++d)h[d]=(h[d]-this.mean)/u}return{input_values:l.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(s,e,t)=>{t.r(e),t.d(e,{AutoFeatureExtractor:()=>a});var r=t("./src/utils/constants.js"),n=t("./src/utils/hub.js");t("./src/base/feature_extraction_utils.js");var i=t("./src/models/feature_extractors.js");class a{static async from_pretrained(l,u={}){const h=await(0,n.getModelJSON)(l,r.FEATURE_EXTRACTOR_NAME,!0,u),d=h.feature_extractor_type,c=i[d];if(!c)throw new Error(`Unknown feature_extractor_type: '${d}'. Please report this at ${r.GITHUB_ISSUE_URL}.`);return new c(h)}}},"./src/models/auto/image_processing_auto.js":(s,e,t)=>{t.r(e),t.d(e,{AutoImageProcessor:()=>o});var r=t("./src/utils/constants.js"),n=t("./src/utils/hub.js"),i=t("./src/base/image_processors_utils.js"),a=t("./src/models/image_processors.js");class o{static async from_pretrained(u,h={}){const d=await(0,n.getModelJSON)(u,r.IMAGE_PROCESSOR_NAME,!0,h),c=d.image_processor_type??d.feature_extractor_type;let _=a[c==null?void 0:c.replace(/Fast$/,"")];return _||(c!==void 0&&console.warn(`Image processor type '${c}' not found, assuming base ImageProcessor. Please report this at ${r.GITHUB_ISSUE_URL}.`),_=i.ImageProcessor),new _(d)}}},"./src/models/auto/processing_auto.js":(s,e,t)=>{t.r(e),t.d(e,{AutoProcessor:()=>u});var r=t("./src/utils/constants.js"),n=t("./src/utils/hub.js"),i=t("./src/base/processing_utils.js"),a=t("./src/models/processors.js"),o=t("./src/models/image_processors.js"),l=t("./src/models/feature_extractors.js");class u{static async from_pretrained(d,c={}){const _=await(0,n.getModelJSON)(d,r.IMAGE_PROCESSOR_NAME,!0,c),{image_processor_type:f,feature_extractor_type:b,processor_class:I}=_;if(I&&a[I])return a[I].from_pretrained(d,c);if(!f&&!b)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const g={};if(f){const k=o[f.replace(/Fast$/,"")];if(!k)throw new Error(`Unknown image_processor_type: '${f}'.`);g.image_processor=new k(_)}if(b){const k=o[b];if(k)g.image_processor=new k(_);else{const v=l[b];if(!v)throw new Error(`Unknown feature_extractor_type: '${b}'.`);g.feature_extractor=new v(_)}}const M={};return new i.Processor(M,g,null)}}},"./src/models/beit/image_processing_beit.js":(s,e,t)=>{t.r(e),t.d(e,{BeitFeatureExtractor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(s,e,t)=>{t.r(e),t.d(e,{BitImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(s,e,t)=>{t.r(e),t.d(e,{ChineseCLIPFeatureExtractor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(s,e,t)=>{t.r(e),t.d(e,{ClapFeatureExtractor:()=>i});var r=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class i extends r.FeatureExtractor{constructor(o){super(o),this.mel_filters=(0,n.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,n.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,n.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(o,l,u,h){let d;const c=o.length-l;if(c>0)if(u==="rand_trunc"){const _=Math.floor(Math.random()*(c+1));o=o.subarray(_,_+l),d=await this._extract_fbank_features(o,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${u}" not implemented`);else{if(c<0){let _=new Float64Array(l);if(_.set(o),h==="repeat")for(let f=o.length;f<l;f+=o.length)_.set(o.subarray(0,Math.min(o.length,l-f)),f);else if(h==="repeatpad")for(let f=o.length;f<-c;f+=o.length)_.set(o,f);o=_}if(u==="fusion")throw new Error(`Truncation strategy "${u}" not implemented`);d=await this._extract_fbank_features(o,this.mel_filters_slaney,this.config.nb_max_samples)}return d.unsqueeze_(0)}async _extract_fbank_features(o,l,u=null){return(0,n.spectrogram)(o,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:l,log_mel:"dB",max_num_frames:u,do_pad:!1,transpose:!0})}async _call(o,{max_length:l=null}={}){return(0,r.validate_audio_inputs)(o,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(o,l??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(s,e,t)=>{t.r(e),t.d(e,{CLIPFeatureExtractor:()=>i,CLIPImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}class i extends n{}},"./src/models/convnext/image_processing_convnext.js":(s,e,t)=>{t.r(e),t.d(e,{ConvNextFeatureExtractor:()=>i,ConvNextImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{constructor(o){super(o),this.crop_pct=this.config.crop_pct??224/256}async resize(o){var u;const l=(u=this.size)==null?void 0:u.shortest_edge;if(l===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(l<384){const h=Math.floor(l/this.crop_pct),[d,c]=this.get_resize_output_image_size(o,{shortest_edge:h});o=await o.resize(d,c,{resample:this.resample}),o=await o.center_crop(l,l)}else o=await o.resize(l,l,{resample:this.resample});return o}}class i extends n{}},"./src/models/dac/feature_extraction_dac.js":(s,e,t)=>{t.r(e),t.d(e,{DacFeatureExtractor:()=>n});var r=t("./src/models/encodec/feature_extraction_encodec.js");class n extends r.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(s,e,t)=>{t.r(e),t.d(e,{DeiTFeatureExtractor:()=>i,DeiTImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}class i extends n{}},"./src/models/detr/image_processing_detr.js":(s,e,t)=>{t.r(e),t.d(e,{DetrFeatureExtractor:()=>a,DetrImageProcessor:()=>i});var r=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends r.ImageProcessor{async _call(l){const u=await super._call(l),h=[u.pixel_values.dims[0],64,64],d=(0,n.full)(h,1n);return{...u,pixel_mask:d}}post_process_object_detection(...l){return(0,r.post_process_object_detection)(...l)}post_process_panoptic_segmentation(...l){return(0,r.post_process_panoptic_segmentation)(...l)}post_process_instance_segmentation(...l){return(0,r.post_process_instance_segmentation)(...l)}}class a extends i{}},"./src/models/donut/image_processing_donut.js":(s,e,t)=>{t.r(e),t.d(e,{DonutFeatureExtractor:()=>i,DonutImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{pad_image(o,l,u,h={}){const[d,c,_]=l;let f=this.image_mean;Array.isArray(this.image_mean)||(f=new Array(_).fill(f));let b=this.image_std;Array.isArray(b)||(b=new Array(_).fill(f));const I=f.map((g,M)=>-g/b[M]);return super.pad_image(o,l,u,{center:!0,constant_values:I,...h})}}class i extends n{}},"./src/models/dpt/image_processing_dpt.js":(s,e,t)=>{t.r(e),t.d(e,{DPTFeatureExtractor:()=>i,DPTImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}class i extends n{}},"./src/models/efficientnet/image_processing_efficientnet.js":(s,e,t)=>{t.r(e),t.d(e,{EfficientNetImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{constructor(a){super(a),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(o=>o*o))}}},"./src/models/encodec/feature_extraction_encodec.js":(s,e,t)=>{t.r(e),t.d(e,{EncodecFeatureExtractor:()=>i});var r=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class i extends r.FeatureExtractor{async _call(o){(0,r.validate_audio_inputs)(o,"EncodecFeatureExtractor"),o instanceof Float64Array&&(o=new Float32Array(o));const l=this.config.feature_size;if(o.length%l!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${l}).`);const u=[1,l,o.length/l];return{input_values:new n.Tensor("float32",o,u)}}}},"./src/models/feature_extractors.js":(s,e,t)=>{t.r(e),t.d(e,{ASTFeatureExtractor:()=>r.ASTFeatureExtractor,ClapFeatureExtractor:()=>i.ClapFeatureExtractor,DacFeatureExtractor:()=>a.DacFeatureExtractor,EncodecFeatureExtractor:()=>n.EncodecFeatureExtractor,Gemma3nAudioFeatureExtractor:()=>o.Gemma3nAudioFeatureExtractor,ImageFeatureExtractor:()=>I.ImageProcessor,MoonshineFeatureExtractor:()=>l.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>u.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>h.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>d.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>c.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>_.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>f.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>b.WhisperFeatureExtractor});var r=t("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),n=t("./src/models/encodec/feature_extraction_encodec.js"),i=t("./src/models/clap/feature_extraction_clap.js"),a=t("./src/models/dac/feature_extraction_dac.js"),o=t("./src/models/gemma3n/feature_extraction_gemma3n.js"),l=t("./src/models/moonshine/feature_extraction_moonshine.js"),u=t("./src/models/pyannote/feature_extraction_pyannote.js"),h=t("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),d=t("./src/models/snac/feature_extraction_snac.js"),c=t("./src/models/speecht5/feature_extraction_speecht5.js"),_=t("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),f=t("./src/models/wespeaker/feature_extraction_wespeaker.js"),b=t("./src/models/whisper/feature_extraction_whisper.js"),I=t("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(s,e,t)=>{t.r(e),t.d(e,{Florence2Processor:()=>a});var r=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");class a extends r.Processor{constructor(l,u,h){super(l,u,h);const{tasks_answer_post_processing_type:d,task_prompts_without_inputs:c,task_prompts_with_input:_}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(d??{})),this.task_prompts_without_inputs=new Map(Object.entries(c??{})),this.task_prompts_with_input=new Map(Object.entries(_??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(l){typeof l=="string"&&(l=[l]);const u=[];for(const h of l)if(this.task_prompts_without_inputs.has(h))u.push(this.task_prompts_without_inputs.get(h));else{for(const[d,c]of this.task_prompts_with_input)if(h.includes(d)){u.push(c.replaceAll("{input}",h).replaceAll(d,""));break}u.length!==l.length&&u.push(h)}return u}post_process_generation(l,u,h){const d=this.tasks_answer_post_processing_type.get(u)??"pure_text";l=l.replaceAll("<s>","").replaceAll("</s>","");let c;switch(d){case"pure_text":c=l;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const _=d==="ocr"?"quad_boxes":"bboxes",f=l.matchAll(this.regexes[_]),b=[],I=[];for(const[g,M,...k]of f)b.push(M?M.trim():b.at(-1)??""),I.push(k.map((v,y)=>(Number(v)+.5)/this.size_per_bin*h[y%2]));c={labels:b,[_]:I};break;default:throw new Error(`Task "${u}" (of type "${d}") not yet implemented.`)}return{[u]:c}}async _call(l,u=null,h={}){if(!l&&!u)throw new Error("Either text or images must be provided");const d=await this.image_processor(l,h),c=u?this.tokenizer(this.construct_prompts(u),h):{};return{...d,...c}}}J(a,"tokenizer_class",i.AutoTokenizer),J(a,"image_processor_class",n.AutoImageProcessor)},"./src/models/gemma3n/feature_extraction_gemma3n.js":(s,e,t)=>{t.r(e),t.d(e,{Gemma3nAudioFeatureExtractor:()=>a});var r=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/audio.js");class a extends r.FeatureExtractor{constructor(l){super(l);const{fft_length:u,feature_size:h,min_frequency:d,max_frequency:c,sampling_rate:_,frame_length:f}=this.config,b=(0,i.mel_filter_bank)(Math.floor(1+u/2),h,d,c,_,null,"htk",!1);this.mel_filters=b,this.window=(0,i.window_function)(f,"hann")}async _extract_fbank_features(l,u){return(0,i.spectrogram)(l,this.window,this.config.frame_length,this.config.hop_length,{fft_length:this.config.fft_length,center:!1,onesided:!0,preemphasis:this.config.preemphasis,preemphasis_htk_flavor:this.config.preemphasis_htk_flavor,mel_filters:this.mel_filters,log_mel:"log",mel_floor:this.config.mel_floor,remove_dc_offset:!1,transpose:!0})}async _call(l,{max_length:u=48e4,truncation:h=!0,padding:d=!0,pad_to_multiple_of:c=128}={}){if((0,r.validate_audio_inputs)(l,"Gemma3nAudioFeatureExtractor"),h&&l.length>u&&(l=l.slice(0,u)),d&&l.length%c!==0){const b=c-l.length%c,I=new Float64Array(l.length+b);I.set(l),this.config.padding_value!==0&&I.fill(this.config.padding_value,l.length),l=I}const _=await this._extract_fbank_features(l,this.config.max_length),f=(0,n.full)([1,_.dims[0]],!0);return{input_features:_.unsqueeze_(0),input_features_mask:f}}}},"./src/models/gemma3n/processing_gemma3n.js":(s,e,t)=>{t.r(e),t.d(e,{Gemma3nProcessor:()=>o});var r=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/models/auto/feature_extraction_auto.js"),a=t("./src/tokenizers.js");t("./src/utils/image.js"),t("./src/utils/audio.js");class o extends r.Processor{constructor(u,h,d){super(u,h,d),this.audio_seq_length=this.config.audio_seq_length,this.image_seq_length=this.config.image_seq_length;const{audio_token_id:c,boa_token:_,audio_token:f,eoa_token:b,image_token_id:I,boi_token:g,image_token:M,eoi_token:k}=this.tokenizer.config;this.audio_token_id=c,this.boa_token=_,this.audio_token=f;const v=f.repeat(this.audio_seq_length);this.full_audio_sequence=`

${_}${v}${b}

`,this.image_token_id=I,this.boi_token=g,this.image_token=M;const y=M.repeat(this.image_seq_length);this.full_image_sequence=`

${g}${y}${k}

`}async _call(u,h=null,d=null,c={}){typeof u=="string"&&(u=[u]);let _;d&&(_=await this.feature_extractor(d,c),u=u.map(I=>I.replaceAll(this.audio_token,this.full_audio_sequence)));let f;return h&&(f=await this.image_processor(h,c),u=u.map(I=>I.replaceAll(this.image_token,this.full_image_sequence))),{...this.tokenizer(u,c),...f,..._}}}J(o,"image_processor_class",n.AutoImageProcessor),J(o,"feature_extractor_class",i.AutoFeatureExtractor),J(o,"tokenizer_class",a.AutoTokenizer),J(o,"uses_processor_config",!0),J(o,"uses_chat_template_file",!0)},"./src/models/glpn/image_processing_glpn.js":(s,e,t)=>{t.r(e),t.d(e,{GLPNFeatureExtractor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(s,e,t)=>{t.r(e),t.d(e,{GroundingDinoImageProcessor:()=>i});var r=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends r.ImageProcessor{async _call(o){const l=await super._call(o),u=l.pixel_values.dims,h=(0,n.ones)([u[0],u[2],u[3]]);return{...l,pixel_mask:h}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(s,e,t)=>{t.r(e),t.d(e,{GroundingDinoProcessor:()=>l});var r=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js"),a=t("./src/base/image_processors_utils.js");function o(u,h){const c=u.dims.at(-1)-1,_=u.tolist();_.fill(!1,0,1),_.fill(!1,c);const f=h.tolist();return _.map((b,I)=>b?I:null).filter(b=>b!==null).map(b=>f[b])}class l extends r.Processor{async _call(h,d,c={}){const _=h?await this.image_processor(h,c):{};return{...d?this.tokenizer(d,c):{},..._}}post_process_grounded_object_detection(h,d,{box_threshold:c=.25,text_threshold:_=.25,target_sizes:f=null}={}){const{logits:b,pred_boxes:I}=h,g=b.dims[0];if(f!==null&&f.length!==g)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const M=b.dims.at(1),k=b.sigmoid(),v=k.max(-1).tolist(),y=I.tolist().map(x=>x.map(P=>(0,a.center_to_corners_format)(P))),T=[];for(let x=0;x<g;++x){const P=f!==null?f[x]:null;P!==null&&(y[x]=y[x].map(R=>R.map((te,H)=>te*P[(H+1)%2])));const O=v[x],L=[],G=[],K=[];for(let R=0;R<M;++R){const te=O[R];if(te<=c)continue;const H=y[x][R],ee=k[x][R];L.push(te),K.push(H);const Z=o(ee.gt(_),d[x]);G.push(Z)}T.push({scores:L,boxes:K,labels:this.batch_decode(G)})}return T}}J(l,"tokenizer_class",i.AutoTokenizer),J(l,"image_processor_class",n.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(s,e,t)=>{t.r(e),t.d(e,{Idefics3ImageProcessor:()=>i});var r=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends r.ImageProcessor{constructor(o){super(o),this.do_image_splitting=o.do_image_splitting??!0,this.max_image_size=o.max_image_size}get_resize_for_vision_encoder(o,l){let[u,h]=o.dims.slice(-2);const d=h/u;return h>=u?(h=Math.ceil(h/l)*l,u=Math.floor(h/d),u=Math.ceil(u/l)*l):(u=Math.ceil(u/l)*l,h=Math.floor(u*d),h=Math.ceil(h/l)*l),{height:u,width:h}}async _call(o,{do_image_splitting:l=null,return_row_col_info:u=!1}={}){let h;if(!Array.isArray(o))h=[[o]];else{if(o.length===0||!o[0])throw new Error("No images provided.");Array.isArray(o[0])?h=o:h=[o]}let d=[],c=[],_=[];const f=[],b=[];for(const x of h){let P=await Promise.all(x.map(G=>this.preprocess(G)));f.push(...P.map(G=>G.original_size)),b.push(...P.map(G=>G.reshaped_input_size)),P.forEach(G=>G.pixel_values.unsqueeze_(0));const{longest_edge:O}=this.max_image_size;let L;if(l??this.do_image_splitting){let G=new Array(P.length),K=new Array(P.length);L=await Promise.all(P.map(async(R,te)=>{const H=this.get_resize_for_vision_encoder(R.pixel_values,O),ee=await(0,n.interpolate_4d)(R.pixel_values,{size:[H.height,H.width]}),{frames:Z,num_splits_h:ne,num_splits_w:me}=await this.split_image(ee,this.max_image_size);return G[te]=ne,K[te]=me,(0,n.cat)(Z,0)})),c.push(G),_.push(K)}else{const G=[O,O];L=await Promise.all(P.map(K=>(0,n.interpolate_4d)(K.pixel_values,{size:G}))),c.push(new Array(P.length).fill(0)),_.push(new Array(P.length).fill(0))}d.push((0,n.cat)(L,0))}const I=d.length,[g,M,k,v]=d[0].dims;let y,T;if(I===1)y=d[0].unsqueeze_(0),T=(0,n.full)([I,g,k,v],!0);else{const x=Math.max(...d.map(L=>L.dims.at(0)));T=(0,n.full)([I,x,k,v],!0);const P=T.data,O=x*k*v;for(let L=0;L<I;++L){const G=d[L].dims[0];if(G<x){d[L]=(0,n.cat)([d[L],(0,n.full)([x-G,M,k,v],0)],0);const K=L*O+G*k*v,R=(L+1)*O;P.fill(!1,K,R)}}y=(0,n.stack)(d,0)}return{pixel_values:y,pixel_attention_mask:T,original_sizes:f,reshaped_input_sizes:b,...u?{rows:c,cols:_}:{}}}async split_image(o,{longest_edge:l}){const u=l,h=l,d=[],[c,_]=o.dims.slice(-2);let f=0,b=0;if(c>u||_>h){f=Math.ceil(c/u),b=Math.ceil(_/h);const I=Math.ceil(c/f),g=Math.ceil(_/b);for(let v=0;v<f;++v)for(let y=0;y<b;++y){let T,x,P,O;v===f-1?(x=c-I,O=c):(x=v*I,O=(v+1)*I),y===b-1?(T=_-g,P=_):(T=y*g,P=(y+1)*g);const L=[x,T],G=[O,P],K=await(0,n.slice)(o,L,G,[2,3]);d.push(K)}const M=u,k=h;(c!==M||_!==k)&&(o=await(0,n.interpolate_4d)(o,{size:[M,k]}))}return d.push(o),{frames:d,num_splits_h:f,num_splits_w:b}}}},"./src/models/idefics3/processing_idefics3.js":(s,e,t)=>{t.r(e),t.d(e,{Idefics3Processor:()=>h});var r=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");t("./src/utils/image.js");var a=t("./src/utils/core.js");function o(d,c,_,f,b,I){let g="";for(let M=0;M<c;++M){for(let k=0;k<_;++k)g+=f+`<row_${M+1}_col_${k+1}>`+b.repeat(d);g+=`
`}return g+=`
${f}${I}`+b.repeat(d)+`${f}`,g}function l(d,c,_,f){return`${c}${f}`+_.repeat(d)+`${c}`}function u(d,c,_,f,b,I){return d===0&&c===0?l(_,f,b,I):o(_,d,c,f,b,I)}class h extends r.Processor{constructor(){super(...arguments);J(this,"fake_image_token","<fake_token_around_image>");J(this,"image_token","<image>");J(this,"global_img_token","<global-img>")}async _call(_,f=null,b={}){b.return_row_col_info??(b.return_row_col_info=!0);let I;f&&(I=await this.image_processor(f,b)),Array.isArray(_)||(_=[_]);const g=I.rows??[new Array(_.length).fill(0)],M=I.cols??[new Array(_.length).fill(0)],k=this.config.image_seq_len,v=[],y=[];for(let x=0;x<_.length;++x){const P=_[x],O=g[x],L=M[x];v.push((0,a.count)(P,this.image_token));const G=O.map((te,H)=>u(te,L[H],k,this.fake_image_token,this.image_token,this.global_img_token)),K=P.split(this.image_token);if(K.length===0)throw new Error("The image token should be present in the text.");let R=K[0];for(let te=0;te<G.length;++te)R+=G[te]+K[te+1];y.push(R)}return{...this.tokenizer(y),...I}}}J(h,"image_processor_class",n.AutoImageProcessor),J(h,"tokenizer_class",i.AutoTokenizer),J(h,"uses_processor_config",!0)},"./src/models/image_processors.js":(s,e,t)=>{t.r(e),t.d(e,{BeitFeatureExtractor:()=>r.BeitFeatureExtractor,BitImageProcessor:()=>n.BitImageProcessor,CLIPFeatureExtractor:()=>a.CLIPFeatureExtractor,CLIPImageProcessor:()=>a.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>i.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>o.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>o.ConvNextImageProcessor,DPTFeatureExtractor:()=>d.DPTFeatureExtractor,DPTImageProcessor:()=>d.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>u.DetrFeatureExtractor,DetrImageProcessor:()=>u.DetrImageProcessor,DonutFeatureExtractor:()=>h.DonutFeatureExtractor,DonutImageProcessor:()=>h.DonutImageProcessor,EfficientNetImageProcessor:()=>c.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>_.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>b.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>g.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>M.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>k.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>v.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>v.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>y.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>y.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>T.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>T.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>x.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>x.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>P.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>P.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>O.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>O.MobileViTImageProcessor,NougatImageProcessor:()=>L.NougatImageProcessor,OwlViTFeatureExtractor:()=>K.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>K.OwlViTImageProcessor,Owlv2ImageProcessor:()=>G.Owlv2ImageProcessor,Phi3VImageProcessor:()=>R.Phi3VImageProcessor,PvtImageProcessor:()=>te.PvtImageProcessor,Qwen2VLImageProcessor:()=>H.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>ee.RTDetrImageProcessor,SamImageProcessor:()=>Z.SamImageProcessor,SegformerFeatureExtractor:()=>ne.SegformerFeatureExtractor,SegformerImageProcessor:()=>ne.SegformerImageProcessor,SiglipImageProcessor:()=>me.SiglipImageProcessor,SmolVLMImageProcessor:()=>ce.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>j.Swin2SRImageProcessor,VLMImageProcessor:()=>I.VLMImageProcessor,ViTFeatureExtractor:()=>F.ViTFeatureExtractor,ViTImageProcessor:()=>F.ViTImageProcessor,VitMatteImageProcessor:()=>V.VitMatteImageProcessor,VitPoseImageProcessor:()=>re.VitPoseImageProcessor,YolosFeatureExtractor:()=>fe.YolosFeatureExtractor,YolosImageProcessor:()=>fe.YolosImageProcessor});var r=t("./src/models/beit/image_processing_beit.js"),n=t("./src/models/bit/image_processing_bit.js"),i=t("./src/models/chinese_clip/image_processing_chinese_clip.js"),a=t("./src/models/clip/image_processing_clip.js"),o=t("./src/models/convnext/image_processing_convnext.js"),l=t("./src/models/deit/image_processing_deit.js"),u=t("./src/models/detr/image_processing_detr.js"),h=t("./src/models/donut/image_processing_donut.js"),d=t("./src/models/dpt/image_processing_dpt.js"),c=t("./src/models/efficientnet/image_processing_efficientnet.js"),_=t("./src/models/glpn/image_processing_glpn.js"),f=t("./src/models/grounding_dino/image_processing_grounding_dino.js"),b=t("./src/models/idefics3/image_processing_idefics3.js"),I=t("./src/models/janus/image_processing_janus.js"),g=t("./src/models/jina_clip/image_processing_jina_clip.js"),M=t("./src/models/llava_onevision/image_processing_llava_onevision.js"),k=t("./src/models/mask2former/image_processing_mask2former.js"),v=t("./src/models/maskformer/image_processing_maskformer.js"),y=t("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),T=t("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),x=t("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),P=t("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),O=t("./src/models/mobilevit/image_processing_mobilevit.js"),L=t("./src/models/nougat/image_processing_nougat.js"),G=t("./src/models/owlv2/image_processing_owlv2.js"),K=t("./src/models/owlvit/image_processing_owlvit.js"),R=t("./src/models/phi3_v/image_processing_phi3_v.js"),te=t("./src/models/pvt/image_processing_pvt.js"),H=t("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),ee=t("./src/models/rt_detr/image_processing_rt_detr.js"),Z=t("./src/models/sam/image_processing_sam.js"),ne=t("./src/models/segformer/image_processing_segformer.js"),me=t("./src/models/siglip/image_processing_siglip.js"),ce=t("./src/models/smolvlm/image_processing_smolvlm.js"),j=t("./src/models/swin2sr/image_processing_swin2sr.js"),F=t("./src/models/vit/image_processing_vit.js"),V=t("./src/models/vitmatte/image_processing_vitmatte.js"),re=t("./src/models/vitpose/image_processing_vitpose.js"),fe=t("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(s,e,t)=>{t.r(e),t.d(e,{VLMImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{constructor(a){super({do_pad:!0,pad_size:{width:a.image_size,height:a.image_size},...a}),this.constant_values=this.config.background_color.map(o=>o*this.rescale_factor)}pad_image(a,o,l,u){return super.pad_image(a,o,l,{constant_values:this.constant_values,center:!0,...u})}}},"./src/models/janus/processing_janus.js":(s,e,t)=>{t.r(e),t.d(e,{VLChatProcessor:()=>u});var r=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js"),a=t("./src/utils/core.js"),o=t("./src/utils/tensor.js"),l=t("./src/utils/image.js");class u extends r.Processor{constructor(d,c,_){super(d,c,_),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(d,{images:c=null,chat_template:_="default"}={}){c?Array.isArray(c)||(c=[c]):c=await Promise.all(d.filter(L=>L.images).flatMap(L=>L.images).map(L=>l.RawImage.read(L)));const f=this.tokenizer,b=f.apply_chat_template(d,{tokenize:!1,add_generation_prompt:!0,chat_template:_}),I=L=>f.encode(L,{add_special_tokens:!1}),g=b.split(this.image_tag),M=g.length-1;if(c.length!==M)throw new Error(`Number of images provided (${c.length}) does not match number of "${this.image_tag}" image tags (${M})`);const[k,v,y]=f.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let T=I(g[0]),x=new Array(T.length).fill(!1);for(let L=1;L<g.length;++L){const G=new Array(this.num_image_tokens).fill(k),K=I(g[L]);T=(0,a.mergeArrays)(T,[v],G,[y],K);const R=new Array(this.num_image_tokens).fill(!0);x=(0,a.mergeArrays)(x,[!1],R,[!1],new Array(K.length).fill(!1))}const P=[1,T.length],O={input_ids:new o.Tensor("int64",T,P),attention_mask:new o.Tensor("int64",new Array(T.length).fill(1),P),images_seq_mask:new o.Tensor("bool",x,P),images_emb_mask:new o.Tensor("bool",new Array(M*this.num_image_tokens).fill(!0),[1,M,this.num_image_tokens])};if(c&&c.length>0){const L=await this.image_processor(c);return L.pixel_values.unsqueeze_(0),{...O,...L}}return O}}J(u,"image_processor_class",n.AutoImageProcessor),J(u,"tokenizer_class",i.AutoTokenizer),J(u,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(s,e,t)=>{t.r(e),t.d(e,{JinaCLIPImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{constructor(a){const{resize_mode:o,fill_color:l,interpolation:u,size:h,...d}=a,c=o==="squash"?{width:h,height:h}:o==="shortest"?{shortest_edge:h}:{longest_edge:h},_=u==="bicubic"?3:2;super({...d,size:c,resample:_,do_center_crop:!0,crop_size:h,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(s,e,t)=>{t.r(e),t.d(e,{JinaCLIPProcessor:()=>a});var r=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");class a extends r.Processor{async _call(l=null,u=null,h={}){if(!l&&!u)throw new Error("Either text or images must be provided");const d=l?this.tokenizer(l,h):{},c=u?await this.image_processor(u,h):{};return{...d,...c}}}J(a,"tokenizer_class",i.AutoTokenizer),J(a,"image_processor_class",n.AutoImageProcessor)},"./src/models/llava/processing_llava.js":(s,e,t)=>{t.r(e),t.d(e,{LlavaProcessor:()=>a});var r=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");class a extends r.Processor{async _call(l,u=null,h={}){const d=await this.image_processor(l,h);if(u){const[_,f]=d.pixel_values.dims.slice(-2),{image_token:b,patch_size:I,num_additional_image_tokens:g}=this.config,M=Math.floor(_/I)*Math.floor(f/I)+g;u=structuredClone(u),Array.isArray(u)||(u=[u]);for(let k=0;k<u.length;++k)u[k]=u[k].replace(b,b.repeat(M))}const c=u?this.tokenizer(u,h):{};return{...d,...c}}}J(a,"tokenizer_class",i.AutoTokenizer),J(a,"image_processor_class",n.AutoImageProcessor),J(a,"uses_processor_config",!0)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(s,e,t)=>{t.r(e),t.d(e,{LlavaOnevisionImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(s,e,t)=>{t.r(e),t.d(e,{Mask2FormerImageProcessor:()=>n});var r=t("./src/models/maskformer/image_processing_maskformer.js");class n extends r.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(s,e,t)=>{t.r(e),t.d(e,{MaskFormerFeatureExtractor:()=>i,MaskFormerImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{post_process_panoptic_segmentation(...o){return(0,r.post_process_panoptic_segmentation)(...o)}post_process_instance_segmentation(...o){return(0,r.post_process_instance_segmentation)(...o)}}class i extends n{}},"./src/models/mgp_str/processing_mgp_str.js":(s,e,t)=>{t.r(e),t.d(e,{MgpstrProcessor:()=>l});var r=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js"),a=t("./src/utils/maths.js");const o={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends r.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(h,d){if(!o.hasOwnProperty(d))throw new Error(`Format ${d} is not supported.`);const[c,_]=o[d],f=this[c].bind(this),[b,I]=h.dims,g=[],M=[],k=h.tolist();for(let y=0;y<b;++y){const T=k[y],x=[],P=[];for(let L=1;L<I;++L){const[G,K]=(0,a.max)((0,a.softmax)(T[L]));if(P.push(G),K==_)break;x.push(K)}const O=P.length>0?P.reduce((L,G)=>L*G,1):0;M.push(x),g.push(O)}return[f(M),g]}char_decode(h){return this.char_tokenizer.batch_decode(h).map(d=>d.replaceAll(" ",""))}bpe_decode(h){return this.bpe_tokenizer.batch_decode(h)}wp_decode(h){return this.wp_tokenizer.batch_decode(h).map(d=>d.replaceAll(" ",""))}batch_decode([h,d,c]){const[_,f]=this._decode_helper(h,"char"),[b,I]=this._decode_helper(d,"bpe"),[g,M]=this._decode_helper(c,"wp"),k=[],v=[];for(let y=0;y<_.length;++y){const[T,x]=(0,a.max)([f[y],I[y],M[y]]);k.push([_[y],b[y],g[y]][x]),v.push(T)}return{generated_text:k,scores:v,char_preds:_,bpe_preds:b,wp_preds:g}}static async from_pretrained(...h){const d=await super.from_pretrained(...h),c=await i.AutoTokenizer.from_pretrained("Xenova/gpt2"),_=await i.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return d.components={image_processor:d.image_processor,char_tokenizer:d.tokenizer,bpe_tokenizer:c,wp_tokenizer:_},d}async _call(h,d=null){const c=await this.image_processor(h);return d&&(c.labels=this.tokenizer(d).input_ids),c}}J(l,"tokenizer_class",i.AutoTokenizer),J(l,"image_processor_class",n.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(s,e,t)=>{t.r(e),t.d(e,{MobileNetV1FeatureExtractor:()=>i,MobileNetV1ImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}class i extends n{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(s,e,t)=>{t.r(e),t.d(e,{MobileNetV2FeatureExtractor:()=>i,MobileNetV2ImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}class i extends n{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(s,e,t)=>{t.r(e),t.d(e,{MobileNetV3FeatureExtractor:()=>i,MobileNetV3ImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}class i extends n{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(s,e,t)=>{t.r(e),t.d(e,{MobileNetV4FeatureExtractor:()=>i,MobileNetV4ImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}class i extends n{}},"./src/models/mobilevit/image_processing_mobilevit.js":(s,e,t)=>{t.r(e),t.d(e,{MobileViTFeatureExtractor:()=>i,MobileViTImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}class i extends n{}},"./src/models/moonshine/feature_extraction_moonshine.js":(s,e,t)=>{t.r(e),t.d(e,{MoonshineFeatureExtractor:()=>i});var r=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class i extends r.FeatureExtractor{async _call(o){(0,r.validate_audio_inputs)(o,"MoonshineFeatureExtractor"),o instanceof Float64Array&&(o=new Float32Array(o));const l=[1,o.length];return{input_values:new n.Tensor("float32",o,l)}}}},"./src/models/moonshine/processing_moonshine.js":(s,e,t)=>{t.r(e),t.d(e,{MoonshineProcessor:()=>a});var r=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/processing_utils.js");class a extends i.Processor{async _call(l){return await this.feature_extractor(l)}}J(a,"tokenizer_class",n.AutoTokenizer),J(a,"feature_extractor_class",r.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(s,e,t)=>{t.r(e),t.d(e,{NougatImageProcessor:()=>n});var r=t("./src/models/donut/image_processing_donut.js");class n extends r.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(s,e,t)=>{t.r(e),t.d(e,{Owlv2ImageProcessor:()=>n});var r=t("./src/models/owlvit/image_processing_owlvit.js");class n extends r.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(s,e,t)=>{t.r(e),t.d(e,{OwlViTFeatureExtractor:()=>i,OwlViTImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{post_process_object_detection(...o){return(0,r.post_process_object_detection)(...o)}}class i extends n{}},"./src/models/owlvit/processing_owlvit.js":(s,e,t)=>{t.r(e),t.d(e,{OwlViTProcessor:()=>a});var r=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");class a extends r.Processor{}J(a,"tokenizer_class",i.AutoTokenizer),J(a,"image_processor_class",n.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(s,e,t)=>{t.r(e),t.d(e,{PaliGemmaProcessor:()=>l});var r=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");const a="<image>";function o(u,h,d,c,_){return`${c.repeat(d*_)}${h}${u}
`}class l extends r.Processor{async _call(h,d=null,c={}){d||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),d=""),Array.isArray(h)||(h=[h]),Array.isArray(d)||(d=[d]);const _=this.tokenizer.bos_token,f=this.image_processor.config.image_seq_length;let b;d.some(M=>M.includes(a))?b=d.map(M=>{const k=M.replaceAll(a,a.repeat(f)),v=k.lastIndexOf(a),y=v===-1?0:v+a.length;return k.slice(0,y)+_+k.slice(y)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),b=d.map(M=>o(M,_,f,a,h.length)));const I=this.tokenizer(b,c);return{...await this.image_processor(h,c),...I}}}J(l,"tokenizer_class",i.AutoTokenizer),J(l,"image_processor_class",n.AutoImageProcessor),J(l,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(s,e,t)=>{t.r(e),t.d(e,{Phi3VImageProcessor:()=>h});var r=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");const i=336,a=[2,3],{ceil:o,floor:l,sqrt:u}=Math;class h extends r.ImageProcessor{constructor(c){super({...c,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=c.num_crops}calc_num_image_tokens_from_image_size(c,_){const{num_img_tokens:f}=this.config;return l((l(_/i)*l(c/i)+1)*f+1+(l(_/i)+1)*u(f))}get_resize_output_image_size(c,_){const f=this._num_crops,[b,I]=c.size;let g=b/I,M=1;for(;M*Math.ceil(M/g)<=f;)M+=1;M-=1;const k=Math.floor(M*336),v=Math.floor(k/g);return[k,v]}pad_image(c,_,f,b={}){const[I,g]=_,M=i*o(I/i),k=i*o(g/i),v=[1,1,1].map((y,T)=>(y-this.image_mean[T])/this.image_std[T]);return super.pad_image(c,_,{width:k,height:M},{center:!0,constant_values:v,...b})}async _call(c,{num_crops:_=null}={}){if(this._num_crops=_??(_=this.config.num_crops),_<4||u(_)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(c)||(c=[c]);const f=c.length,b=await Promise.all(c.map(x=>this.preprocess(x))),I=b.map(x=>x.original_size),g=b.map(x=>x.reshaped_input_size),M=[];for(const{pixel_values:x}of b){x.unsqueeze_(0);const[P,O]=x.dims.slice(-2),L=await(0,n.interpolate_4d)(x,{size:[i,i],mode:"bicubic"});if(_>0){const G=[],K=u(_),R=l(O/K),te=l(P/K);for(let ee=0;ee<K;++ee)for(let Z=0;Z<K;++Z){let ne,me,ce,j;ee===K-1?(me=P-te,j=P):(me=ee*te,j=(ee+1)*te),Z===K-1?(ne=O-R,ce=O):(ne=Z*R,ce=(Z+1)*R);const F=[me,ne],V=[j,ce],re=await(0,n.slice)(x,F,V,a);G.push(re)}const H=await(0,n.interpolate_4d)((0,n.cat)(G,0),{size:[i,i],mode:"bicubic"});M.push((0,n.cat)([L,H],0))}else M.push(L)}const k=(0,n.stack)(M,0),v=g.map(x=>x.map(P=>i*o(P/i))),y=new n.Tensor("int64",v.flat(),[f,2]),T=v.map(([x,P])=>this.calc_num_image_tokens_from_image_size(P,x));return{pixel_values:k,original_sizes:I,reshaped_input_sizes:g,image_sizes:y,num_img_tokens:T}}}},"./src/models/phi3_v/processing_phi3_v.js":(s,e,t)=>{t.r(e),t.d(e,{Phi3VProcessor:()=>l});var r=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");t("./src/utils/image.js");const a="<|image|>",o=/<\|image_\d+\|>/g;class l extends r.Processor{async _call(h,d=null,{padding:c=!0,truncation:_=!0,num_crops:f=null}={}){Array.isArray(h)||(h=[h]);let b,I;if(d){I=await this.image_processor(d,{num_crops:f});const{num_img_tokens:g}=I,M=h.map((v,y)=>v.split(o).join(a.repeat(g[y])));b=this.tokenizer(M,{padding:c,truncation:_});const k=this.tokenizer.model.convert_tokens_to_ids([a])[0];b.input_ids.map_(v=>v==k?-v:v)}else b=this.tokenizer(h);return{...b,...I}}}J(l,"image_processor_class",n.AutoImageProcessor),J(l,"tokenizer_class",i.AutoTokenizer)},"./src/models/processors.js":(s,e,t)=>{t.r(e),t.d(e,{Florence2Processor:()=>r.Florence2Processor,Gemma3nProcessor:()=>n.Gemma3nProcessor,GroundingDinoProcessor:()=>i.GroundingDinoProcessor,Idefics3Processor:()=>a.Idefics3Processor,JinaCLIPProcessor:()=>l.JinaCLIPProcessor,LlavaProcessor:()=>u.LlavaProcessor,MgpstrProcessor:()=>h.MgpstrProcessor,MoonshineProcessor:()=>d.MoonshineProcessor,OwlViTProcessor:()=>c.OwlViTProcessor,PaliGemmaProcessor:()=>f.PaliGemmaProcessor,Phi3VProcessor:()=>_.Phi3VProcessor,PyAnnoteProcessor:()=>b.PyAnnoteProcessor,Qwen2VLProcessor:()=>I.Qwen2VLProcessor,SamProcessor:()=>g.SamProcessor,SmolVLMProcessor:()=>M.SmolVLMProcessor,SpeechT5Processor:()=>k.SpeechT5Processor,UltravoxProcessor:()=>v.UltravoxProcessor,VLChatProcessor:()=>o.VLChatProcessor,VoxtralProcessor:()=>y.VoxtralProcessor,Wav2Vec2Processor:()=>T.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>x.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>P.WhisperProcessor});var r=t("./src/models/florence2/processing_florence2.js"),n=t("./src/models/gemma3n/processing_gemma3n.js"),i=t("./src/models/grounding_dino/processing_grounding_dino.js"),a=t("./src/models/idefics3/processing_idefics3.js"),o=t("./src/models/janus/processing_janus.js"),l=t("./src/models/jina_clip/processing_jina_clip.js"),u=t("./src/models/llava/processing_llava.js"),h=t("./src/models/mgp_str/processing_mgp_str.js"),d=t("./src/models/moonshine/processing_moonshine.js"),c=t("./src/models/owlvit/processing_owlvit.js"),_=t("./src/models/phi3_v/processing_phi3_v.js"),f=t("./src/models/paligemma/processing_paligemma.js"),b=t("./src/models/pyannote/processing_pyannote.js"),I=t("./src/models/qwen2_vl/processing_qwen2_vl.js"),g=t("./src/models/sam/processing_sam.js"),M=t("./src/models/smolvlm/processing_smolvlm.js"),k=t("./src/models/speecht5/processing_speecht5.js"),v=t("./src/models/ultravox/processing_ultravox.js"),y=t("./src/models/voxtral/processing_voxtral.js"),T=t("./src/models/wav2vec2/processing_wav2vec2.js"),x=t("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),P=t("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(s,e,t)=>{t.r(e),t.d(e,{PvtImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(s,e,t)=>{t.r(e),t.d(e,{PyAnnoteFeatureExtractor:()=>a});var r=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/maths.js");class a extends r.FeatureExtractor{async _call(l){(0,r.validate_audio_inputs)(l,"PyAnnoteFeatureExtractor"),l instanceof Float64Array&&(l=new Float32Array(l));const u=[1,1,l.length];return{input_values:new n.Tensor("float32",l,u)}}samples_to_frames(l){return(l-this.config.offset)/this.config.step}post_process_speaker_diarization(l,u){const h=u/this.samples_to_frames(u)/this.config.sampling_rate,d=[];for(const c of l.tolist()){const _=[];let f=-1;for(let b=0;b<c.length;++b){const I=(0,i.softmax)(c[b]),[g,M]=(0,i.max)(I),[k,v]=[b,b+1];M!==f?(f=M,_.push({id:M,start:k,end:v,score:g})):(_.at(-1).end=v,_.at(-1).score+=g)}d.push(_.map(({id:b,start:I,end:g,score:M})=>({id:b,start:I*h,end:g*h,confidence:M/(g-I)})))}return d}}},"./src/models/pyannote/processing_pyannote.js":(s,e,t)=>{t.r(e),t.d(e,{PyAnnoteProcessor:()=>i});var r=t("./src/base/processing_utils.js"),n=t("./src/models/pyannote/feature_extraction_pyannote.js");class i extends r.Processor{async _call(o){return await this.feature_extractor(o)}post_process_speaker_diarization(...o){return this.feature_extractor.post_process_speaker_diarization(...o)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}J(i,"feature_extractor_class",n.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(s,e,t)=>{t.r(e),t.d(e,{Qwen2VLImageProcessor:()=>i});var r=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends r.ImageProcessor{async _call(o,...l){const{pixel_values:u,original_sizes:h,reshaped_input_sizes:d}=await super._call(o,...l);let c=u;const{temporal_patch_size:_,merge_size:f,patch_size:b}=this.config;c.dims[0]===1&&(c=(0,n.cat)(Array.from({length:_},()=>c),0));const I=c.dims[0]/_,g=c.dims[1],M=Math.floor(c.dims[2]/b),k=Math.floor(c.dims[3]/b),v=c.view(I,_,g,Math.floor(M/f),f,b,Math.floor(k/f),f,b).permute(0,3,6,4,7,2,1,5,8).view(I*M*k,g*_*b*b),y=new n.Tensor("int64",[I,M,k],[1,3]);return{pixel_values:v,image_grid_thw:y,original_sizes:h,reshaped_input_sizes:d}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(s,e,t)=>{t.r(e),t.d(e,{Qwen2VLProcessor:()=>a});var r=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");t("./src/utils/image.js");class a extends r.Processor{async _call(l,u=null,...h){Array.isArray(l)||(l=[l]);let d,c;if(u&&(d=await this.image_processor(u),c=d.image_grid_thw),c){let f=this.image_processor.config.merge_size**2,b=0;const I=c.tolist();l=l.map(g=>{for(;g.includes("<|image_pad|>");){const M=Number(I[b++].reduce((k,v)=>k*v,1n));g=g.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(M/f)))}return g.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(l),...d}}}J(a,"image_processor_class",n.AutoImageProcessor),J(a,"tokenizer_class",i.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(s,e,t)=>{t.r(e),t.d(e,{RTDetrImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{post_process_object_detection(...a){return(0,r.post_process_object_detection)(...a)}}},"./src/models/sam/image_processing_sam.js":(s,e,t)=>{t.r(e),t.d(e,{SamImageProcessor:()=>a});var r=t("./src/base/image_processors_utils.js"),n=t("./src/utils/core.js"),i=t("./src/utils/tensor.js");class a extends r.ImageProcessor{reshape_input_points(l,u,h,d=!1){l=structuredClone(l);let c=(0,n.calculateDimensions)(l);if(c.length===3)d||(c=[1,...c]),l=[l];else if(c.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let _=0;_<l.length;++_){let f=u[_],b=h[_],I=[b[0]/f[0],b[1]/f[1]];for(let g=0;g<l[_].length;++g)for(let M=0;M<l[_][g].length;++M)for(let k=0;k<l[_][g][M].length;++k)l[_][g][M][k]*=I[k%2]}return new i.Tensor("float32",Float32Array.from(l.flat(1/0)),c)}add_input_labels(l,u){let h=(0,n.calculateDimensions)(l);if(h.length===2)h=[1,...h],l=[l];else if(h.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(h.some((d,c)=>d!==u.dims[c]))throw Error(`The first ${h.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new i.Tensor("int64",l.flat(1/0).map(BigInt),h)}async _call(l,{input_points:u=null,input_labels:h=null,input_boxes:d=null}={}){const c=await super._call(l);if(u&&(c.input_points=this.reshape_input_points(u,c.original_sizes,c.reshaped_input_sizes)),h){if(!c.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");c.input_labels=this.add_input_labels(h,c.input_points)}return d&&(c.input_boxes=this.reshape_input_points(d,c.original_sizes,c.reshaped_input_sizes,!0)),c}async post_process_masks(l,u,h,{mask_threshold:d=0,binarize:c=!0,pad_size:_=null}={}){const f=[];_=_??this.pad_size;const b=[_.height,_.width];for(let I=0;I<u.length;++I){const g=u[I],M=h[I];let k=await(0,i.interpolate_4d)(l[I],{mode:"bilinear",size:b});if(k=k.slice(null,null,[0,M[0]],[0,M[1]]),k=await(0,i.interpolate_4d)(k,{mode:"bilinear",size:g}),c){const v=k.data,y=new Uint8Array(v.length);for(let T=0;T<v.length;++T)v[T]>d&&(y[T]=1);k=new i.Tensor("bool",y,k.dims)}f.push(k)}return f}generate_crop_boxes(l,u,{crop_n_layers:h=0,overlap_ratio:d=512/1500,points_per_crop:c=32,crop_n_points_downscale_factor:_=1}={}){}}},"./src/models/sam/processing_sam.js":(s,e,t)=>{t.r(e),t.d(e,{SamProcessor:()=>i});var r=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js");class i extends r.Processor{async _call(...o){return await this.image_processor(...o)}post_process_masks(...o){return this.image_processor.post_process_masks(...o)}reshape_input_points(...o){return this.image_processor.reshape_input_points(...o)}}J(i,"image_processor_class",n.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(s,e,t)=>{t.r(e),t.d(e,{SeamlessM4TFeatureExtractor:()=>a});var r=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/audio.js");class a extends r.FeatureExtractor{constructor(l){super(l);const u=this.config.sampling_rate,h=(0,i.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(u/2),u,null,"kaldi",!0);this.mel_filters=h,this.window=(0,i.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(l,u){return l=l.map(h=>h*32768),(0,i.spectrogram)(l,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:u,transpose:!0})}async _call(l,{padding:u=!0,pad_to_multiple_of:h=2,do_normalize_per_mel_bins:d=!0,return_attention_mask:c=!0}={}){(0,r.validate_audio_inputs)(l,"SeamlessM4TFeatureExtractor");let _=await this._extract_fbank_features(l,this.config.max_length);if(d){const[y,T]=_.dims,x=_.data;for(let P=0;P<T;++P){let O=0;for(let R=0;R<y;++R)O+=x[R*T+P];const L=O/y;let G=0;for(let R=0;R<y;++R)G+=(x[R*T+P]-L)**2;G/=y-1;const K=Math.sqrt(G+1e-7);for(let R=0;R<y;++R){const te=R*T+P;x[te]=(x[te]-L)/K}}}let f;if(u){const[y,T]=_.dims,x=_.data,P=y%h;if(P>0){const O=new Float32Array(T*(y+P));O.set(x),O.fill(this.config.padding_value,x.length);const L=y+P;_=new n.Tensor(_.type,O,[L,T]),c&&(f=new n.Tensor("int64",new BigInt64Array(L),[1,L]),f.data.fill(1n,0,y))}}const[b,I]=_.dims,g=this.config.stride;if(b%g!==0)throw new Error(`The number of frames (${b}) must be a multiple of the stride (${g}).`);const k=_.view(1,Math.floor(b/g),I*g),v={input_features:k};if(c){const y=k.dims[1],T=new BigInt64Array(y);if(f){const x=f.data;for(let P=1,O=0;P<b;P+=g,++O)T[O]=x[P]}else T.fill(1n);v.attention_mask=new n.Tensor("int64",T,[1,y])}return v}}},"./src/models/segformer/image_processing_segformer.js":(s,e,t)=>{t.r(e),t.d(e,{SegformerFeatureExtractor:()=>i,SegformerImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{post_process_semantic_segmentation(...o){return(0,r.post_process_semantic_segmentation)(...o)}}class i extends n{}},"./src/models/siglip/image_processing_siglip.js":(s,e,t)=>{t.r(e),t.d(e,{SiglipImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(s,e,t)=>{t.r(e),t.d(e,{SmolVLMImageProcessor:()=>r.Idefics3ImageProcessor});var r=t("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(s,e,t)=>{t.r(e),t.d(e,{SmolVLMProcessor:()=>r.Idefics3Processor});var r=t("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(s,e,t)=>{t.r(e),t.d(e,{SnacFeatureExtractor:()=>n});var r=t("./src/models/dac/feature_extraction_dac.js");class n extends r.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(s,e,t)=>{t.r(e),t.d(e,{SpeechT5FeatureExtractor:()=>n});var r=t("./src/base/feature_extraction_utils.js");class n extends r.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(s,e,t)=>{t.r(e),t.d(e,{SpeechT5Processor:()=>a});var r=t("./src/base/processing_utils.js"),n=t("./src/tokenizers.js"),i=t("./src/models/auto/feature_extraction_auto.js");class a extends r.Processor{async _call(l){return await this.feature_extractor(l)}}J(a,"tokenizer_class",n.AutoTokenizer),J(a,"feature_extractor_class",i.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(s,e,t)=>{t.r(e),t.d(e,{Swin2SRImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{pad_image(a,o,l,u={}){const[h,d,c]=o;return super.pad_image(a,o,{width:d+(l-d%l)%l,height:h+(l-h%l)%l},{mode:"symmetric",center:!1,constant_values:-1,...u})}}},"./src/models/ultravox/processing_ultravox.js":(s,e,t)=>{t.r(e),t.d(e,{UltravoxProcessor:()=>a});var r=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/processing_utils.js");class a extends i.Processor{async _call(l,u=null,h={}){if(Array.isArray(l))throw new Error("Batched inputs are not supported yet.");let d={};if(u){const _=u.length,{input_features:f}=await this.feature_extractor(u,{...h,max_length:_}),b=Math.round(_/this.config.encoder_ds_factor+1e-4),I=1+Math.ceil(b/this.config.stack_factor);d.audio_token_len=[I],d.audio_values=f;const g=this.config.audio_placeholder;if(!l.includes(g))throw new Error(`The input text does not contain the image token ${g}.`);l=l.replaceAll(g,g.repeat(I))}return{...this.tokenizer(l,{add_special_tokens:!1,...h}),...d}}}J(a,"tokenizer_class",n.AutoTokenizer),J(a,"feature_extractor_class",r.AutoFeatureExtractor),J(a,"uses_processor_config",!0)},"./src/models/vit/image_processing_vit.js":(s,e,t)=>{t.r(e),t.d(e,{ViTFeatureExtractor:()=>i,ViTImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{}class i extends n{}},"./src/models/vitmatte/image_processing_vitmatte.js":(s,e,t)=>{t.r(e),t.d(e,{VitMatteImageProcessor:()=>i});var r=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends r.ImageProcessor{async _call(o,l){Array.isArray(o)||(o=[o]),Array.isArray(l)||(l=[l]);const u=await Promise.all(o.map(c=>this.preprocess(c))),h=await Promise.all(l.map(c=>this.preprocess(c,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,n.stack)(u.map((c,_)=>(0,n.cat)([c.pixel_values,h[_].pixel_values],0)),0),original_sizes:u.map(c=>c.original_size),reshaped_input_sizes:u.map(c=>c.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(s,e,t)=>{t.r(e),t.d(e,{VitPoseImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{post_process_pose_estimation(a,o,{threshold:l=null}={}){const u=a.tolist(),[h,d,c,_]=a.dims,f=[];for(let b=0;b<h;++b){const I=u[b],g=o[b],M=[];for(let k=0;k<g.length;++k){const v=g[k],y=[],T=[],x=[],P=v.at(-2)/_,O=v.at(-1)/c;for(let L=0;L<I.length;++L){let[G,K]=[0,0],R=0,te=-1/0;const H=I[L];for(let Z=0;Z<H.length;++Z){const ne=H[Z];for(let me=0;me<ne.length;++me){const ce=ne[me];R+=ce,te=Math.max(te,ce),G+=(me+.5)*ce,K+=Z*ce}}if(l!=null&&te<l)continue;const ee=[P*G/R,O*K/R];y.push(ee),x.push(L),T.push(te)}M.push({bbox:v,scores:T,labels:x,keypoints:y})}f.push(M)}return f}}},"./src/models/voxtral/processing_voxtral.js":(s,e,t)=>{t.r(e),t.d(e,{VoxtralProcessor:()=>d});var r=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/processing_utils.js"),a=t("./src/utils/tensor.js");const o="[AUDIO]",l="[BEGIN_AUDIO]",u=375;function h(c,_){const f=[];for(let b=0;b<c.length;b+=_)f.push(c.subarray(b,Math.min(b+_,c.length)));return f}class d extends i.Processor{async _call(_,f=null,b={}){if(Array.isArray(_))throw new Error("Batched inputs are not supported yet.");const I={};if(f){if(!_.includes(o))throw new Error(`The input text does not contain the audio token ${o}.`);Array.isArray(f)||(f=[f]);const M=_.split(o),k=M.length-1;if(k!==f.length)throw new Error(`The number of audio inputs (${f.length}) does not match the number of audio tokens in the text (${k}).`);const v=this.feature_extractor.config.n_samples,y=f.map(L=>h(L,v)),T=y.map(L=>L.length),x=y.flat(),P=(await Promise.all(x.map(L=>this.feature_extractor(L,b)))).map(L=>L.input_features);I.audio_values=P.length>1?(0,a.cat)(P,0):P[0];let O=M[0];for(let L=0;L<T.length;++L){O+=l;for(let G=0;G<T[L];++G)O+=o.repeat(u);O+=M[L+1]}_=O}return{...this.tokenizer(_,{add_special_tokens:!1,...b}),...I}}}J(d,"tokenizer_class",n.AutoTokenizer),J(d,"feature_extractor_class",r.AutoFeatureExtractor),J(d,"uses_processor_config",!1)},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(s,e,t)=>{t.r(e),t.d(e,{Wav2Vec2FeatureExtractor:()=>i});var r=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class i extends r.FeatureExtractor{_zero_mean_unit_var_norm(o){const u=o.reduce((d,c)=>d+c,0)/o.length,h=o.reduce((d,c)=>d+(c-u)**2,0)/o.length;return o.map(d=>(d-u)/Math.sqrt(h+1e-7))}async _call(o){(0,r.validate_audio_inputs)(o,"Wav2Vec2FeatureExtractor"),o instanceof Float64Array&&(o=new Float32Array(o));let l=o;this.config.do_normalize&&(l=this._zero_mean_unit_var_norm(l));const u=[1,l.length];return{input_values:new n.Tensor("float32",l,u),attention_mask:new n.Tensor("int64",new BigInt64Array(l.length).fill(1n),u)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(s,e,t)=>{t.r(e),t.d(e,{Wav2Vec2Processor:()=>a});var r=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/base/processing_utils.js");class a extends i.Processor{async _call(l){return await this.feature_extractor(l)}}J(a,"tokenizer_class",r.AutoTokenizer),J(a,"feature_extractor_class",n.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(s,e,t)=>{t.r(e),t.d(e,{Wav2Vec2ProcessorWithLM:()=>a});var r=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/base/processing_utils.js");class a extends i.Processor{async _call(l){return await this.feature_extractor(l)}}J(a,"tokenizer_class",r.AutoTokenizer),J(a,"feature_extractor_class",n.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(s,e,t)=>{t.r(e),t.d(e,{WeSpeakerFeatureExtractor:()=>i});var r=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class i extends r.FeatureExtractor{constructor(o){super(o);const l=this.config.sampling_rate,u=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=u,this.window=(0,n.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(o){return o=o.map(l=>l*32768),(0,n.spectrogram)(o,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(o){(0,r.validate_audio_inputs)(o,"WeSpeakerFeatureExtractor");const l=(await this._extract_fbank_features(o)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const u=l.mean(1).data,h=l.data,[d,c,_]=l.dims;for(let f=0;f<d;++f){const b=f*c*_,I=f*_;for(let g=0;g<c;++g){const M=b+g*_;for(let k=0;k<_;++k)h[M+k]-=u[I+k]}}}return{input_features:l}}}},"./src/models/whisper/common_whisper.js":(s,e,t)=>{t.r(e),t.d(e,{WHISPER_LANGUAGE_MAPPING:()=>n,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>i,whisper_language_to_code:()=>a});const r=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],n=new Map(r),i=new Map([...r.map(([o,l])=>[l,o]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function a(o){o=o.toLowerCase();let l=i.get(o);if(l===void 0){const u=o.match(/^<\|([a-z]{2})\|>$/);if(u&&(o=u[1]),n.has(o))l=o;else{const d=o.length===2?n.keys():n.values();throw new Error(`Language "${o}" is not supported. Must be one of: ${JSON.stringify(Array.from(d))}`)}}return l}},"./src/models/whisper/feature_extraction_whisper.js":(s,e,t)=>{t.r(e),t.d(e,{WhisperFeatureExtractor:()=>a});var r=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js"),i=t("./src/utils/maths.js");class a extends r.FeatureExtractor{constructor(l){var u;super(l),(u=this.config).mel_filters??(u.mel_filters=(0,n.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,n.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(l){const u=await(0,n.spectrogram)(l,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(l.length/this.config.hop_length),this.config.nb_max_frames)}),h=u.data,d=(0,i.max)(h)[0];for(let c=0;c<h.length;++c)h[c]=(Math.max(h[c],d-8)+4)/4;return u}async _call(l,{max_length:u=null}={}){(0,r.validate_audio_inputs)(l,"WhisperFeatureExtractor");let h;const d=u??this.config.n_samples;return l.length>d?(l.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),h=l.slice(0,d)):(h=new Float32Array(d),h.set(l)),{input_features:(await this._extract_fbank_features(h)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(s,e,t)=>{t.r(e),t.d(e,{WhisperGenerationConfig:()=>n});var r=t("./src/generation/configuration_utils.js");class n extends r.GenerationConfig{constructor(){super(...arguments);J(this,"return_timestamps",null);J(this,"return_token_timestamps",null);J(this,"num_frames",null);J(this,"alignment_heads",null);J(this,"task",null);J(this,"language",null);J(this,"no_timestamps_token_id",null);J(this,"prompt_ids",null);J(this,"is_multilingual",null);J(this,"lang_to_id",null);J(this,"task_to_id",null);J(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(s,e,t)=>{t.r(e),t.d(e,{WhisperProcessor:()=>a});var r=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/processing_utils.js");class a extends i.Processor{async _call(l){return await this.feature_extractor(l)}}J(a,"tokenizer_class",n.AutoTokenizer),J(a,"feature_extractor_class",r.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(s,e,t)=>{t.r(e),t.d(e,{YolosFeatureExtractor:()=>i,YolosImageProcessor:()=>n});var r=t("./src/base/image_processors_utils.js");class n extends r.ImageProcessor{post_process_object_detection(...o){return(0,r.post_process_object_detection)(...o)}}class i extends n{}},"./src/ops/registry.js":(s,e,t)=>{t.r(e),t.d(e,{TensorOpRegistry:()=>l});var r=t("./src/backends/onnx.js"),n=t("./src/utils/tensor.js"),i=t("./src/env.js");const a=i.apis.IS_BROWSER_ENV||i.apis.IS_WEBWORKER_ENV,o=async(u,h,d)=>{const c=await(0,r.createInferenceSession)(new Uint8Array(u),h);let _=Promise.resolve();return async f=>{const b=(0,r.isONNXProxy)(),I=Object.fromEntries(Object.entries(f).map(([M,k])=>[M,(b?k.clone():k).ort_tensor])),g=await(_=a?_.then(()=>c.run(I)):c.run(I));return Array.isArray(d)?d.map(M=>new n.Tensor(g[M])):new n.Tensor(g[d])}};class l{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=o([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=o([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=o([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=o([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=o([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=o([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=o([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=o([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}J(l,"session_options",{})},"./src/pipelines.js":(s,e,t)=>{t.r(e),t.d(e,{AudioClassificationPipeline:()=>K,AutomaticSpeechRecognitionPipeline:()=>te,BackgroundRemovalPipeline:()=>ne,DepthEstimationPipeline:()=>fe,DocumentQuestionAnsweringPipeline:()=>F,FeatureExtractionPipeline:()=>L,FillMaskPipeline:()=>k,ImageClassificationPipeline:()=>ee,ImageFeatureExtractionPipeline:()=>G,ImageSegmentationPipeline:()=>Z,ImageToImagePipeline:()=>re,ImageToTextPipeline:()=>H,ObjectDetectionPipeline:()=>ce,Pipeline:()=>b,QuestionAnsweringPipeline:()=>M,SummarizationPipeline:()=>y,Text2TextGenerationPipeline:()=>v,TextClassificationPipeline:()=>I,TextGenerationPipeline:()=>P,TextToAudioPipeline:()=>V,TokenClassificationPipeline:()=>g,TranslationPipeline:()=>T,ZeroShotAudioClassificationPipeline:()=>R,ZeroShotClassificationPipeline:()=>O,ZeroShotImageClassificationPipeline:()=>me,ZeroShotObjectDetectionPipeline:()=>j,pipeline:()=>ze});var r=t("./src/tokenizers.js"),n=t("./src/models.js"),i=t("./src/models/auto/processing_auto.js");t("./src/base/processing_utils.js");var a=t("./src/utils/generic.js"),o=t("./src/utils/core.js"),l=t("./src/utils/maths.js"),u=t("./src/utils/audio.js"),h=t("./src/utils/tensor.js"),d=t("./src/utils/image.js");async function c($e){return Array.isArray($e)||($e=[$e]),await Promise.all($e.map(Q=>d.RawImage.read(Q)))}async function _($e,Q){return Array.isArray($e)||($e=[$e]),await Promise.all($e.map(oe=>typeof oe=="string"||oe instanceof URL?(0,u.read_audio)(oe,Q):oe instanceof Float64Array?new Float32Array(oe):oe))}function f($e,Q){Q&&($e=$e.map(Ee=>Ee|0));const[oe,W,be,Ie]=$e;return{xmin:oe,ymin:W,xmax:be,ymax:Ie}}class b extends a.Callable{constructor({task:Q,model:oe,tokenizer:W=null,processor:be=null}){super(),this.task=Q,this.model=oe,this.tokenizer=W,this.processor=be}async dispose(){await this.model.dispose()}}class I extends b{constructor(Q){super(Q)}async _call(Q,{top_k:oe=1}={}){const W=this.tokenizer(Q,{padding:!0,truncation:!0}),be=await this.model(W),Ie=this.model.config.problem_type==="multi_label_classification"?Se=>Se.sigmoid():Se=>new h.Tensor("float32",(0,l.softmax)(Se.data),Se.dims),Ee=this.model.config.id2label,Me=[];for(const Se of be.logits){const we=Ie(Se),Ae=await(0,h.topk)(we,oe),Be=Ae[0].tolist(),xe=Ae[1].tolist().map((Ze,Ke)=>({label:Ee?Ee[Ze]:`LABEL_${Ze}`,score:Be[Ke]}));oe===1?Me.push(...xe):Me.push(xe)}return Array.isArray(Q)||oe===1?Me:Me[0]}}class g extends b{constructor(Q){super(Q)}async _call(Q,{ignore_labels:oe=["O"]}={}){const W=Array.isArray(Q),be=this.tokenizer(W?Q:[Q],{padding:!0,truncation:!0}),Ee=(await this.model(be)).logits,Me=this.model.config.id2label,Se=[];for(let we=0;we<Ee.dims[0];++we){const Ae=be.input_ids[we],Be=Ee[we],Xe=[];for(let xe=0;xe<Be.dims[0];++xe){const Ze=Be[xe],Ke=(0,l.max)(Ze.data)[1],nt=Me?Me[Ke]:`LABEL_${Ke}`;if(oe.includes(nt))continue;const Je=this.tokenizer.decode([Ae[xe].item()],{skip_special_tokens:!0});if(Je==="")continue;const Oe=(0,l.softmax)(Ze.data);Xe.push({entity:nt,score:Oe[Ke],index:xe,word:Je})}Se.push(Xe)}return W?Se:Se[0]}}class M extends b{constructor(Q){super(Q)}async _call(Q,oe,{top_k:W=1}={}){const be=this.tokenizer(Q,{text_pair:oe,padding:!0,truncation:!0}),{start_logits:Ie,end_logits:Ee}=await this.model(be),Me=be.input_ids.tolist(),Se=be.attention_mask.tolist(),we=this.tokenizer.all_special_ids,Ae=[];for(let Be=0;Be<Ie.dims[0];++Be){const Xe=Me[Be],xe=Xe.findIndex(Ye=>Ye==this.tokenizer.sep_token_id);Se[Be].map((Ye,at)=>Ye==1&&(at===0||at>xe&&we.findIndex(At=>At==Xe[at])===-1));const Ze=Ie[Be].tolist(),Ke=Ee[Be].tolist();for(let Ye=1;Ye<Ze.length;++Ye)(Se[Be]==0||Ye<=xe||we.findIndex(at=>at==Xe[Ye])!==-1)&&(Ze[Ye]=-1/0,Ke[Ye]=-1/0);const nt=(0,l.softmax)(Ze).map((Ye,at)=>[Ye,at]),Je=(0,l.softmax)(Ke).map((Ye,at)=>[Ye,at]);nt[0][0]=0,Je[0][0]=0;const Oe=(0,o.product)(nt,Je).filter(Ye=>Ye[0][1]<=Ye[1][1]).map(Ye=>[Ye[0][1],Ye[1][1],Ye[0][0]*Ye[1][0]]).sort((Ye,at)=>at[2]-Ye[2]);for(let Ye=0;Ye<Math.min(Oe.length,W);++Ye){const[at,At,kt]=Oe[Ye],Mt=Xe.slice(at,At+1),bs=this.tokenizer.decode(Mt,{skip_special_tokens:!0});Ae.push({answer:bs,score:kt})}}return W===1?Ae[0]:Ae}}class k extends b{constructor(Q){super(Q)}async _call(Q,{top_k:oe=5}={}){const W=this.tokenizer(Q,{padding:!0,truncation:!0}),{logits:be}=await this.model(W),Ie=[],Ee=W.input_ids.tolist();for(let Me=0;Me<Ee.length;++Me){const Se=Ee[Me],we=Se.findIndex(Ze=>Ze==this.tokenizer.mask_token_id);if(we===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Ae=be[Me][we],Be=await(0,h.topk)(new h.Tensor("float32",(0,l.softmax)(Ae.data),Ae.dims),oe),Xe=Be[0].tolist(),xe=Be[1].tolist();Ie.push(xe.map((Ze,Ke)=>{const nt=Se.slice();return nt[we]=Ze,{score:Xe[Ke],token:Number(Ze),token_str:this.tokenizer.decode([Ze]),sequence:this.tokenizer.decode(nt,{skip_special_tokens:!0})}}))}return Array.isArray(Q)?Ie:Ie[0]}}class v extends b{constructor(oe){super(oe);J(this,"_key","generated_text")}async _call(oe,W={}){Array.isArray(oe)||(oe=[oe]),this.model.config.prefix&&(oe=oe.map(we=>this.model.config.prefix+we));const be=this.model.config.task_specific_params;be&&be[this.task]&&be[this.task].prefix&&(oe=oe.map(we=>be[this.task].prefix+we));const Ie=this.tokenizer,Ee={padding:!0,truncation:!0};let Me;this instanceof T&&"_build_translation_inputs"in Ie?Me=Ie._build_translation_inputs(oe,Ee,W):Me=Ie(oe,Ee);const Se=await this.model.generate({...Me,...W});return Ie.batch_decode(Se,{skip_special_tokens:!0}).map(we=>({[this._key]:we}))}}class y extends v{constructor(oe){super(oe);J(this,"_key","summary_text")}}class T extends v{constructor(oe){super(oe);J(this,"_key","translation_text")}}function x($e){return Array.isArray($e)&&$e.every(Q=>"role"in Q&&"content"in Q)}class P extends b{constructor(Q){super(Q)}async _call(Q,oe={}){let W=!1,be=!1,Ie=oe.add_special_tokens??(this.tokenizer.add_bos_token||this.tokenizer.add_eos_token)??!1,Ee;if(typeof Q=="string")Ee=Q=[Q];else if(Array.isArray(Q)&&Q.every(xe=>typeof xe=="string"))W=!0,Ee=Q;else{if(x(Q))Q=[Q];else if(Array.isArray(Q)&&Q.every(x))W=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");be=!0,Ee=Q.map(xe=>this.tokenizer.apply_chat_template(xe,{tokenize:!1,add_generation_prompt:!0})),Ie=!1}const Me=be?!1:oe.return_full_text??!0;this.tokenizer.padding_side="left";const Se=this.tokenizer(Ee,{add_special_tokens:Ie,padding:!0,truncation:!0}),we=await this.model.generate({...Se,...oe}),Ae=this.tokenizer.batch_decode(we,{skip_special_tokens:!0});let Be;!Me&&Se.input_ids.dims.at(-1)>0&&(Be=this.tokenizer.batch_decode(Se.input_ids,{skip_special_tokens:!0}).map(xe=>xe.length));const Xe=Array.from({length:Q.length},xe=>[]);for(let xe=0;xe<Ae.length;++xe){const Ze=Math.floor(xe/we.dims[0]*Q.length);Be&&(Ae[xe]=Ae[xe].slice(Be[Ze])),Xe[Ze].push({generated_text:be?[...Q[Ze],{role:"assistant",content:Ae[xe]}]:Ae[xe]})}return!W&&Xe.length===1?Xe[0]:Xe}}class O extends b{constructor(Q){super(Q),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([oe,W])=>[oe.toLowerCase(),W])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(Q,oe,{hypothesis_template:W="This example is {}.",multi_label:be=!1}={}){const Ie=Array.isArray(Q);Ie||(Q=[Q]),Array.isArray(oe)||(oe=[oe]);const Ee=oe.map(we=>W.replace("{}",we)),Me=be||oe.length===1,Se=[];for(const we of Q){const Ae=[];for(const xe of Ee){const Ze=this.tokenizer(we,{text_pair:xe,padding:!0,truncation:!0}),Ke=await this.model(Ze);Me?Ae.push([Ke.logits.data[this.contradiction_id],Ke.logits.data[this.entailment_id]]):Ae.push(Ke.logits.data[this.entailment_id])}const Xe=(Me?Ae.map(xe=>(0,l.softmax)(xe)[1]):(0,l.softmax)(Ae)).map((xe,Ze)=>[xe,Ze]).sort((xe,Ze)=>Ze[0]-xe[0]);Se.push({sequence:we,labels:Xe.map(xe=>oe[xe[1]]),scores:Xe.map(xe=>xe[0])})}return Ie?Se:Se[0]}}class L extends b{constructor(Q){super(Q)}async _call(Q,{pooling:oe="none",normalize:W=!1,quantize:be=!1,precision:Ie="binary"}={}){const Ee=this.tokenizer(Q,{padding:!0,truncation:!0}),Me=await this.model(Ee);let Se=Me.last_hidden_state??Me.logits??Me.token_embeddings;switch(oe){case"none":break;case"mean":Se=(0,h.mean_pooling)(Se,Ee.attention_mask);break;case"first_token":case"cls":Se=Se.slice(null,0);break;case"last_token":case"eos":Se=Se.slice(null,-1);break;default:throw Error(`Pooling method '${oe}' not supported.`)}return W&&(Se=Se.normalize(2,-1)),be&&(Se=(0,h.quantize_embeddings)(Se,Ie)),Se}}class G extends b{constructor(Q){super(Q)}async _call(Q,{pool:oe=null}={}){const W=await c(Q),{pixel_values:be}=await this.processor(W),Ie=await this.model({pixel_values:be});let Ee;if(oe){if(!("pooler_output"in Ie))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Ee=Ie.pooler_output}else Ee=Ie.last_hidden_state??Ie.logits??Ie.image_embeds;return Ee}}class K extends b{constructor(Q){super(Q)}async _call(Q,{top_k:oe=5}={}){const W=this.processor.feature_extractor.config.sampling_rate,be=await _(Q,W),Ie=this.model.config.id2label,Ee=[];for(const Me of be){const Se=await this.processor(Me),Ae=(await this.model(Se)).logits[0],Be=await(0,h.topk)(new h.Tensor("float32",(0,l.softmax)(Ae.data),Ae.dims),oe),Xe=Be[0].tolist(),Ze=Be[1].tolist().map((Ke,nt)=>({label:Ie?Ie[Ke]:`LABEL_${Ke}`,score:Xe[nt]}));Ee.push(Ze)}return Array.isArray(Q)?Ee:Ee[0]}}class R extends b{constructor(Q){super(Q)}async _call(Q,oe,{hypothesis_template:W="This is a sound of {}."}={}){const be=!Array.isArray(Q);be&&(Q=[Q]);const Ie=oe.map(Ae=>W.replace("{}",Ae)),Ee=this.tokenizer(Ie,{padding:!0,truncation:!0}),Me=this.processor.feature_extractor.config.sampling_rate,Se=await _(Q,Me),we=[];for(const Ae of Se){const Be=await this.processor(Ae),Xe=await this.model({...Ee,...Be}),xe=(0,l.softmax)(Xe.logits_per_audio.data);we.push([...xe].map((Ze,Ke)=>({score:Ze,label:oe[Ke]})))}return be?we[0]:we}}class te extends b{constructor(Q){super(Q)}async _call(Q,oe={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(Q,oe);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(Q,oe);case"moonshine":return this._call_moonshine(Q,oe);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(Q,oe){oe.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),oe.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const W=!Array.isArray(Q);W&&(Q=[Q]);const be=this.processor.feature_extractor.config.sampling_rate,Ie=await _(Q,be),Ee=[];for(const Me of Ie){const Se=await this.processor(Me),Ae=(await this.model(Se)).logits[0],Be=[];for(const xe of Ae)Be.push((0,l.max)(xe.data)[1]);const Xe=this.tokenizer.decode(Be);Ee.push({text:Xe})}return W?Ee[0]:Ee}async _call_whisper(Q,oe){const W=oe.return_timestamps??!1,be=oe.chunk_length_s??0,Ie=oe.force_full_sequences??!1;let Ee=oe.stride_length_s??null;const Me={...oe};W==="word"&&(Me.return_token_timestamps=!0,Me.return_timestamps=!1);const Se=!Array.isArray(Q);Se&&(Q=[Q]);const we=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Ae=this.processor.feature_extractor.config.hop_length,Be=this.processor.feature_extractor.config.sampling_rate,Xe=await _(Q,Be),xe=[];for(const Ze of Xe){let Ke=[];if(be>0){if(Ee===null)Ee=be/6;else if(be<=Ee)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const Oe=Be*be,Ye=Be*Ee,at=Oe-2*Ye;let At=0;for(;;){const kt=At+Oe,Mt=Ze.subarray(At,kt),bs=await this.processor(Mt),Ps=At===0,Ns=kt>=Ze.length;if(Ke.push({stride:[Mt.length,Ps?0:Ye,Ns?0:Ye],input_features:bs.input_features,is_last:Ns}),Ns)break;At+=at}}else Ke=[{stride:[Ze.length,0,0],input_features:(await this.processor(Ze)).input_features,is_last:!0}];for(const Oe of Ke){Me.num_frames=Math.floor(Oe.stride[0]/Ae);const Ye=await this.model.generate({inputs:Oe.input_features,...Me});W==="word"?(Oe.tokens=Ye.sequences.tolist()[0],Oe.token_timestamps=Ye.token_timestamps.tolist()[0].map(at=>(0,l.round)(at,2))):Oe.tokens=Ye[0].tolist(),Oe.stride=Oe.stride.map(at=>at/Be)}const[nt,Je]=this.tokenizer._decode_asr(Ke,{time_precision:we,return_timestamps:W,force_full_sequences:Ie});xe.push({text:nt,...Je})}return Se?xe[0]:xe}async _call_moonshine(Q,oe){const W=!Array.isArray(Q);W&&(Q=[Q]);const be=this.processor.feature_extractor.config.sampling_rate,Ie=await _(Q,be),Ee=[];for(const Me of Ie){const Se=await this.processor(Me),we=Math.floor(Me.length/be)*6,Ae=await this.model.generate({max_new_tokens:we,...oe,...Se}),Be=this.processor.batch_decode(Ae,{skip_special_tokens:!0})[0];Ee.push({text:Be})}return W?Ee[0]:Ee}}class H extends b{constructor(Q){super(Q)}async _call(Q,oe={}){const W=Array.isArray(Q),be=await c(Q),{pixel_values:Ie}=await this.processor(be),Ee=[];for(const Me of Ie){Me.dims=[1,...Me.dims];const Se=await this.model.generate({inputs:Me,...oe}),we=this.tokenizer.batch_decode(Se,{skip_special_tokens:!0}).map(Ae=>({generated_text:Ae.trim()}));Ee.push(we)}return W?Ee:Ee[0]}}class ee extends b{constructor(Q){super(Q)}async _call(Q,{top_k:oe=5}={}){const W=await c(Q),{pixel_values:be}=await this.processor(W),Ie=await this.model({pixel_values:be}),Ee=this.model.config.id2label,Me=[];for(const Se of Ie.logits){const we=await(0,h.topk)(new h.Tensor("float32",(0,l.softmax)(Se.data),Se.dims),oe),Ae=we[0].tolist(),Xe=we[1].tolist().map((xe,Ze)=>({label:Ee?Ee[xe]:`LABEL_${xe}`,score:Ae[Ze]}));Me.push(Xe)}return Array.isArray(Q)?Me:Me[0]}}class Z extends b{constructor(Q){super(Q),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(Q,{threshold:oe=.5,mask_threshold:W=.5,overlap_mask_area_threshold:be=.8,label_ids_to_fuse:Ie=null,target_sizes:Ee=null,subtask:Me=null}={}){if(Array.isArray(Q)&&Q.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const we=await c(Q),Ae=we.map(Oe=>[Oe.height,Oe.width]),Be=await this.processor(we),{inputNames:Xe,outputNames:xe}=this.model.sessions.model;if(!Xe.includes("pixel_values")){if(Xe.length!==1)throw Error(`Expected a single input name, but got ${Xe.length} inputs: ${Xe}.`);const Oe=Xe[0];if(Oe in Be)throw Error(`Input name ${Oe} already exists in the inputs.`);Be[Oe]=Be.pixel_values}const Ze=await this.model(Be);let Ke=null;if(Me!==null)Ke=this.subtasks_mapping[Me];else if(this.processor.image_processor){for(const[Oe,Ye]of Object.entries(this.subtasks_mapping))if(Ye in this.processor.image_processor){Ke=this.processor.image_processor[Ye].bind(this.processor.image_processor),Me=Oe;break}}const nt=this.model.config.id2label,Je=[];if(Me)if(Me==="panoptic"||Me==="instance"){const Oe=Ke(Ze,oe,W,be,Ie,Ee??Ae)[0],Ye=Oe.segmentation;for(const at of Oe.segments_info){const At=new Uint8ClampedArray(Ye.data.length);for(let Mt=0;Mt<Ye.data.length;++Mt)Ye.data[Mt]===at.id&&(At[Mt]=255);const kt=new d.RawImage(At,Ye.dims[1],Ye.dims[0],1);Je.push({score:at.score,label:nt[at.label_id],mask:kt})}}else if(Me==="semantic"){const{segmentation:Oe,labels:Ye}=Ke(Ze,Ee??Ae)[0];for(const at of Ye){const At=new Uint8ClampedArray(Oe.data.length);for(let Mt=0;Mt<Oe.data.length;++Mt)Oe.data[Mt]===at&&(At[Mt]=255);const kt=new d.RawImage(At,Oe.dims[1],Oe.dims[0],1);Je.push({score:null,label:nt[at],mask:kt})}}else throw Error(`Subtask ${Me} not supported.`);else{const Ye=Ze[xe[0]];for(let at=0;at<Ae.length;++at){const At=Ae[at],kt=Ye[at];kt.data.some(bs=>bs<-1e-5||bs>1+1e-5)&&kt.sigmoid_();const Mt=await d.RawImage.fromTensor(kt.mul_(255).to("uint8")).resize(At[1],At[0]);Je.push({label:null,score:null,mask:Mt})}}return Je}}class ne extends Z{constructor(Q){super(Q)}async _call(Q,oe={}){if(Array.isArray(Q)&&Q.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const be=await c(Q),Ie=await super._call(Q,oe);return be.map((Me,Se)=>{const we=Me.clone();return we.putAlpha(Ie[Se].mask),we})}}class me extends b{constructor(Q){super(Q)}async _call(Q,oe,{hypothesis_template:W="This is a photo of {}"}={}){const be=Array.isArray(Q),Ie=await c(Q),Ee=oe.map(Xe=>W.replace("{}",Xe)),Me=this.tokenizer(Ee,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:Se}=await this.processor(Ie),we=await this.model({...Me,pixel_values:Se}),Ae=this.model.config.model_type==="siglip"?Xe=>Xe.sigmoid().data:Xe=>(0,l.softmax)(Xe.data),Be=[];for(const Xe of we.logits_per_image){const Ze=[...Ae(Xe)].map((Ke,nt)=>({score:Ke,label:oe[nt]}));Ze.sort((Ke,nt)=>nt.score-Ke.score),Be.push(Ze)}return be?Be:Be[0]}}class ce extends b{constructor(Q){super(Q)}async _call(Q,{threshold:oe=.9,percentage:W=!1}={}){const be=Array.isArray(Q);if(be&&Q.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Ie=await c(Q),Ee=W?null:Ie.map(xe=>[xe.height,xe.width]),{pixel_values:Me,pixel_mask:Se}=await this.processor(Ie),we=await this.model({pixel_values:Me,pixel_mask:Se}),Ae=this.processor.image_processor.post_process_object_detection(we,oe,Ee),Be=this.model.config.id2label,Xe=Ae.map(xe=>xe.boxes.map((Ze,Ke)=>({score:xe.scores[Ke],label:Be[xe.classes[Ke]],box:f(Ze,!W)})));return be?Xe:Xe[0]}}class j extends b{constructor(Q){super(Q)}async _call(Q,oe,{threshold:W=.1,top_k:be=null,percentage:Ie=!1}={}){const Ee=Array.isArray(Q),Me=await c(Q),Se=this.tokenizer(oe,{padding:!0,truncation:!0}),we=await this.processor(Me),Ae=[];for(let Be=0;Be<Me.length;++Be){const Xe=Me[Be],xe=Ie?null:[[Xe.height,Xe.width]],Ze=we.pixel_values[Be].unsqueeze_(0),Ke=await this.model({...Se,pixel_values:Ze});let nt;if("post_process_grounded_object_detection"in this.processor){const Je=this.processor.post_process_grounded_object_detection(Ke,Se.input_ids,{box_threshold:W,text_threshold:W,target_sizes:xe})[0];nt=Je.boxes.map((Oe,Ye)=>({score:Je.scores[Ye],label:Je.labels[Ye],box:f(Oe,!Ie)}))}else{const Je=this.processor.image_processor.post_process_object_detection(Ke,W,xe,!0)[0];nt=Je.boxes.map((Oe,Ye)=>({score:Je.scores[Ye],label:oe[Je.classes[Ye]],box:f(Oe,!Ie)}))}nt.sort((Je,Oe)=>Oe.score-Je.score),be!==null&&(nt=nt.slice(0,be)),Ae.push(nt)}return Ee?Ae:Ae[0]}}class F extends b{constructor(Q){super(Q)}async _call(Q,oe,W={}){const be=(await c(Q))[0],{pixel_values:Ie}=await this.processor(be),Ee=`<s_docvqa><s_question>${oe}</s_question><s_answer>`,Me=this.tokenizer(Ee,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,Se=await this.model.generate({inputs:Ie,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:Me,...W}),Ae=this.tokenizer.batch_decode(Se)[0].match(/<s_answer>(.*?)<\/s_answer>/);let Be=null;return Ae&&Ae.length>=2&&(Be=Ae[1].trim()),[{answer:Be}]}}class V extends b{constructor(oe){super(oe);J(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=oe.vocoder??null}async _call(oe,{speaker_embeddings:W=null}={}){return this.processor?this._call_text_to_spectrogram(oe,{speaker_embeddings:W}):this._call_text_to_waveform(oe)}async _call_text_to_waveform(oe){const W=this.tokenizer(oe,{padding:!0,truncation:!0}),{waveform:be}=await this.model(W),Ie=this.model.config.sampling_rate;return new u.RawAudio(be.data,Ie)}async _call_text_to_spectrogram(oe,{speaker_embeddings:W}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await n.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof W=="string"||W instanceof URL)&&(W=new Float32Array(await(await fetch(W)).arrayBuffer())),W instanceof Float32Array)W=new h.Tensor("float32",W,[1,W.length]);else if(!(W instanceof h.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:be}=this.tokenizer(oe,{padding:!0,truncation:!0}),{waveform:Ie}=await this.model.generate_speech(be,W,{vocoder:this.vocoder}),Ee=this.processor.feature_extractor.config.sampling_rate;return new u.RawAudio(Ie.data,Ee)}}class re extends b{constructor(Q){super(Q)}async _call(Q){const oe=await c(Q),W=await this.processor(oe),be=await this.model(W),Ie=[];for(const Ee of be.reconstruction){const Me=Ee.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Ie.push(d.RawImage.fromTensor(Me))}return Ie.length>1?Ie:Ie[0]}}class fe extends b{constructor(Q){super(Q)}async _call(Q){const oe=await c(Q),W=await this.processor(oe),{predicted_depth:be}=await this.model(W),Ie=[];for(let Ee=0;Ee<oe.length;++Ee){const Me=be[Ee],[Se,we]=Me.dims.slice(-2),[Ae,Be]=oe[Ee].size,Xe=(await(0,h.interpolate_4d)(Me.view(1,1,Se,we),{size:[Be,Ae],mode:"bilinear"})).view(Be,Ae),xe=Xe.min().item(),Ze=Xe.max().item(),Ke=Xe.sub(xe).div_(Ze-xe).mul_(255).to("uint8").unsqueeze(0),nt=d.RawImage.fromTensor(Ke);Ie.push({predicted_depth:Xe,depth:nt})}return Ie.length>1?Ie:Ie[0]}}const ae=Object.freeze({"text-classification":{tokenizer:r.AutoTokenizer,pipeline:I,model:n.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:r.AutoTokenizer,pipeline:g,model:n.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:r.AutoTokenizer,pipeline:M,model:n.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:r.AutoTokenizer,pipeline:k,model:n.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:r.AutoTokenizer,pipeline:y,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:r.AutoTokenizer,pipeline:T,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:r.AutoTokenizer,pipeline:v,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:r.AutoTokenizer,pipeline:P,model:n.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:r.AutoTokenizer,pipeline:O,model:n.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:K,model:n.AutoModelForAudioClassification,processor:i.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:r.AutoTokenizer,pipeline:R,model:n.AutoModel,processor:i.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:r.AutoTokenizer,pipeline:te,model:[n.AutoModelForSpeechSeq2Seq,n.AutoModelForCTC],processor:i.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:r.AutoTokenizer,pipeline:V,model:[n.AutoModelForTextToWaveform,n.AutoModelForTextToSpectrogram],processor:[i.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:r.AutoTokenizer,pipeline:H,model:n.AutoModelForVision2Seq,processor:i.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:ee,model:n.AutoModelForImageClassification,processor:i.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Z,model:[n.AutoModelForImageSegmentation,n.AutoModelForSemanticSegmentation,n.AutoModelForUniversalSegmentation],processor:i.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:ne,model:[n.AutoModelForImageSegmentation,n.AutoModelForSemanticSegmentation,n.AutoModelForUniversalSegmentation],processor:i.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:r.AutoTokenizer,pipeline:me,model:n.AutoModel,processor:i.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:ce,model:n.AutoModelForObjectDetection,processor:i.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:r.AutoTokenizer,pipeline:j,model:n.AutoModelForZeroShotObjectDetection,processor:i.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:r.AutoTokenizer,pipeline:F,model:n.AutoModelForDocumentQuestionAnswering,processor:i.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:re,model:n.AutoModelForImageToImage,processor:i.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:fe,model:n.AutoModelForDepthEstimation,processor:i.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:r.AutoTokenizer,pipeline:L,model:n.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:i.AutoProcessor,pipeline:G,model:[n.AutoModelForImageFeatureExtraction,n.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),ve=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function ze($e,Q=null,{progress_callback:oe=null,config:W=null,cache_dir:be=null,local_files_only:Ie=!1,revision:Ee="main",device:Me=null,dtype:Se=null,subfolder:we="onnx",use_external_data_format:Ae=null,model_file_name:Be=null,session_options:Xe={}}={}){$e=ve[$e]??$e;const xe=ae[$e.split("_",1)[0]];if(!xe)throw Error(`Unsupported pipeline: ${$e}. Must be one of [${Object.keys(ae)}]`);Q||(Q=xe.default.model,console.log(`No model specified. Using default model: "${Q}".`));const Ze={progress_callback:oe,config:W,cache_dir:be,local_files_only:Ie,revision:Ee,device:Me,dtype:Se,subfolder:we,use_external_data_format:Ae,model_file_name:Be,session_options:Xe},Ke=new Map([["tokenizer",xe.tokenizer],["model",xe.model],["processor",xe.processor]]),nt=await Ge(Ke,Q,Ze);nt.task=$e,(0,o.dispatchCallback)(oe,{status:"ready",task:$e,model:Q});const Je=xe.pipeline;return new Je(nt)}async function Ge($e,Q,oe){const W=Object.create(null),be=[];for(const[Ie,Ee]of $e.entries()){if(!Ee)continue;let Me;Array.isArray(Ee)?Me=new Promise(async(Se,we)=>{var Be,Xe;let Ae;for(const xe of Ee){if(xe===null){Se(null);return}try{Se(await xe.from_pretrained(Q,oe));return}catch(Ze){if((Be=Ze.message)!=null&&Be.includes("Unsupported model type"))Ae=Ze;else if((Xe=Ze.message)!=null&&Xe.includes("Could not locate file"))Ae=Ze;else{we(Ze);return}}}we(Ae)}):Me=Ee.from_pretrained(Q,oe),W[Ie]=Me,be.push(Me)}await Promise.all(be);for(const[Ie,Ee]of Object.entries(W))W[Ie]=await Ee;return W}},"./src/tokenizers.js":(s,e,t)=>{t.r(e),t.d(e,{AlbertTokenizer:()=>Fr,AutoTokenizer:()=>hn,BartTokenizer:()=>rt,BertTokenizer:()=>Ar,BlenderbotSmallTokenizer:()=>Jt,BlenderbotTokenizer:()=>et,BloomTokenizer:()=>Qs,CLIPTokenizer:()=>Br,CamembertTokenizer:()=>Fe,CodeGenTokenizer:()=>Js,CodeLlamaTokenizer:()=>ks,CohereTokenizer:()=>gr,ConvBertTokenizer:()=>q,DebertaTokenizer:()=>S,DebertaV2Tokenizer:()=>X,DistilBertTokenizer:()=>ge,ElectraTokenizer:()=>gt,Ernie4_5_Tokenizer:()=>dn,EsmTokenizer:()=>Dr,FalconTokenizer:()=>Is,GPT2Tokenizer:()=>xt,GPTNeoXTokenizer:()=>Or,GemmaTokenizer:()=>Gs,Grok1Tokenizer:()=>tr,HerbertTokenizer:()=>B,LlamaTokenizer:()=>Ss,M2M100Tokenizer:()=>ps,MBart50Tokenizer:()=>Ut,MBartTokenizer:()=>Bt,MPNetTokenizer:()=>ur,MarianTokenizer:()=>Re,MgpstrTokenizer:()=>cn,MobileBertTokenizer:()=>St,NllbTokenizer:()=>fr,NougatTokenizer:()=>_r,PreTrainedTokenizer:()=>pt,Qwen2Tokenizer:()=>Ws,RoFormerTokenizer:()=>se,RobertaTokenizer:()=>Us,SiglipTokenizer:()=>Ks,SpeechT5Tokenizer:()=>Rr,SqueezeBertTokenizer:()=>Qt,T5Tokenizer:()=>mt,TokenizerModel:()=>G,VitsTokenizer:()=>jr,Wav2Vec2CTCTokenizer:()=>je,WhisperTokenizer:()=>fs,XLMRobertaTokenizer:()=>Vs,XLMTokenizer:()=>st,is_chinese_char:()=>k});var r=t("./src/utils/generic.js"),n=t("./src/utils/core.js"),i=t("./src/utils/hub.js"),a=t("./src/utils/maths.js"),o=t("./src/utils/tensor.js"),l=t("./src/utils/data-structures.js"),u=t("./node_modules/@huggingface/jinja/dist/index.js"),h=t("./src/models/whisper/common_whisper.js");async function d(he,$){const N=await Promise.all([(0,i.getModelJSON)(he,"tokenizer.json",!0,$),(0,i.getModelJSON)(he,"tokenizer_config.json",!0,$)]);return $.legacy!==null&&(N[1].legacy=$.legacy),N}function c(he,$){const N=[];let Y=0;for(const le of he.matchAll($)){const de=le[0];Y<le.index&&N.push(he.slice(Y,le.index)),de.length>0&&N.push(de),Y=le.index+de.length}return Y<he.length&&N.push(he.slice(Y)),N}function _(he,$=!0){if(he.Regex!==void 0){let N=he.Regex.replace(/\\([#&~])/g,"$1");for(const[Y,le]of O)N=N.replaceAll(Y,le);return new RegExp(N,"gu")}else if(he.String!==void 0){const N=(0,n.escapeRegExp)(he.String);return new RegExp($?N:`(${N})`,"gu")}else return console.warn("Unknown pattern type:",he),null}function f(he){return new Map(Object.entries(he))}function b(he){const $=he.dims;switch($.length){case 1:return he.tolist();case 2:if($[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return he.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${$.length}.`)}}function I(he){return he.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function g(he){return he.replace(new RegExp("\\p{M}","gu"),"")}function M(he){return g(he.toLowerCase())}function k(he){return he>=19968&&he<=40959||he>=13312&&he<=19903||he>=131072&&he<=173791||he>=173824&&he<=177983||he>=177984&&he<=178207||he>=178208&&he<=183983||he>=63744&&he<=64255||he>=194560&&he<=195103}function v(he,$,N){const Y=[];let le=0;for(;le<he.length;){if(Y.push(he[le]),($.get(he[le])??N)!==N){++le;continue}for(;++le<he.length&&($.get(he[le])??N)===N;)$.get(Y.at(-1))!==N&&(Y[Y.length-1]+=he[le])}return Y}function y(he){return he.match(/\S+/g)||[]}const T="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",x=new RegExp(`^[${T}]+$`,"gu"),P=".,!?…。，、।۔،",O=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${P}])]+`,` ?[^\\s${P}]+`]]);class L{constructor($){this.content=$.content,this.id=$.id,this.single_word=$.single_word??!1,this.lstrip=$.lstrip??!1,this.rstrip=$.rstrip??!1,this.special=$.special??!1,this.normalized=$.normalized??null}}class G extends r.Callable{constructor($){super(),this.config=$,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig($,...N){switch($.type){case"WordPiece":return new K($);case"Unigram":return new R($,...N);case"BPE":return new ee($);default:if($.vocab)return Array.isArray($.vocab)?new R($,...N):Object.hasOwn($,"continuing_subword_prefix")&&Object.hasOwn($,"unk_token")?Object.hasOwn($,"merges")?new ee($):new K($):new Z($,...N);throw new Error(`Unknown TokenizerModel type: ${$.type}`)}}_call($){return $=this.encode($),this.fuse_unk&&($=v($,this.tokens_to_ids,this.unk_token_id)),$}encode($){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids($){return $.map(N=>this.tokens_to_ids.get(N)??this.unk_token_id)}convert_ids_to_tokens($){return $.map(N=>this.vocab[N]??this.unk_token)}}class K extends G{constructor($){super($),this.tokens_to_ids=f($.vocab),this.unk_token_id=this.tokens_to_ids.get($.unk_token),this.unk_token=$.unk_token,this.max_input_chars_per_word=$.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[N,Y]of this.tokens_to_ids)this.vocab[Y]=N}encode($){const N=[];for(const Y of $){const le=[...Y];if(le.length>this.max_input_chars_per_word){N.push(this.unk_token);continue}let de=!1,Te=0;const Ne=[];for(;Te<le.length;){let qe=le.length,We=null;for(;Te<qe;){let tt=le.slice(Te,qe).join("");if(Te>0&&(tt=this.config.continuing_subword_prefix+tt),this.tokens_to_ids.has(tt)){We=tt;break}--qe}if(We===null){de=!0;break}Ne.push(We),Te=qe}de?N.push(this.unk_token):N.push(...Ne)}return N}}class R extends G{constructor($,N){super($);const Y=$.vocab.length;this.vocab=new Array(Y),this.scores=new Array(Y);for(let le=0;le<Y;++le)[this.vocab[le],this.scores[le]]=$.vocab[le];this.unk_token_id=$.unk_id,this.unk_token=this.vocab[$.unk_id],this.tokens_to_ids=new Map(this.vocab.map((le,de)=>[le,de])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=N.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,a.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes($){const N=$.chars,Y=1;let le=0;for(;le<N.length;){let de=!1;const Te=N.slice(le).join(""),Ne=this.trie.commonPrefixSearch(Te);for(const qe of Ne){const We=this.tokens_to_ids.get(qe),tt=this.scores[We],bt=(0,n.len)(qe);$.insert(le,bt,tt,We),!de&&bt===Y&&(de=!0)}de||$.insert(le,Y,this.unk_score,this.unk_token_id),le+=Y}}tokenize($){const N=new l.TokenLattice($,this.bos_token_id,this.eos_token_id);return this.populateNodes(N),N.tokens()}encode($){const N=[];for(const Y of $){const le=this.tokenize(Y);N.push(...le)}return N}}const te=(()=>{const he=[...Array.from({length:94},(le,de)=>de+33),...Array.from({length:12},(le,de)=>de+161),...Array.from({length:82},(le,de)=>de+174)],$=he.slice();let N=0;for(let le=0;le<256;++le)he.includes(le)||(he.push(le),$.push(256+N),N+=1);const Y=$.map(le=>String.fromCharCode(le));return Object.fromEntries(he.map((le,de)=>[le,Y[de]]))})(),H=(0,n.reverseDictionary)(te);class ee extends G{constructor($){super($),this.tokens_to_ids=f($.vocab),this.unk_token_id=this.tokens_to_ids.get($.unk_token),this.unk_token=$.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[Y,le]of this.tokens_to_ids)this.vocab[le]=Y;const N=Array.isArray($.merges[0]);this.merges=N?$.merges:$.merges.map(Y=>Y.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((Y,le)=>[JSON.stringify(Y),le])),this.end_of_word_suffix=$.end_of_word_suffix,this.continuing_subword_suffix=$.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new l.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe($){if($.length===0)return[];const N=this.cache.get($);if(N!==void 0)return N;const Y=Array.from($);this.end_of_word_suffix&&(Y[Y.length-1]+=this.end_of_word_suffix);let le=[];if(Y.length>1){const de=new l.PriorityQueue((qe,We)=>qe.score<We.score);let Te={token:Y[0],bias:0,prev:null,next:null},Ne=Te;for(let qe=1;qe<Y.length;++qe){const We={bias:qe/Y.length,token:Y[qe],prev:Ne,next:null};Ne.next=We,this._add_node(de,Ne),Ne=We}for(;!de.isEmpty();){const qe=de.pop();if(qe.deleted||!qe.next||qe.next.deleted)continue;if(qe.deleted=!0,qe.next.deleted=!0,qe.prev){const tt={...qe.prev};qe.prev.deleted=!0,qe.prev=tt,tt.prev?tt.prev.next=tt:Te=tt}const We={token:qe.token+qe.next.token,bias:qe.bias,prev:qe.prev,next:qe.next.next};We.prev?(We.prev.next=We,this._add_node(de,We.prev)):Te=We,We.next&&(We.next.prev=We,this._add_node(de,We))}for(let qe=Te;qe!==null;qe=qe.next)le.push(qe.token)}else le=Y;if(this.continuing_subword_suffix)for(let de=0;de<le.length-1;++de)le[de]+=this.continuing_subword_suffix;return $.length<this.max_length_to_cache&&this.cache.put($,le),le}_add_node($,N){const Y=this.bpe_ranks.get(JSON.stringify([N.token,N.next.token]));Y!==void 0&&(N.score=Y+N.bias,$.push(N))}encode($){const N=[];for(const Y of $){if(this.ignore_merges&&this.tokens_to_ids.has(Y)){N.push(Y);continue}const le=this.bpe(Y);for(const de of le)if(this.tokens_to_ids.has(de))N.push(de);else if(this.byte_fallback){const Te=Array.from(this.text_encoder.encode(de)).map(Ne=>`<0x${Ne.toString(16).toUpperCase().padStart(2,"0")}>`);Te.every(Ne=>this.tokens_to_ids.has(Ne))?N.push(...Te):N.push(this.unk_token)}else N.push(this.unk_token)}return N}}class Z extends G{constructor($,N){super($),this.tokens_to_ids=f(N.target_lang?$.vocab[N.target_lang]:$.vocab),this.bos_token=N.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=N.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=N.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=N.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[Y,le]of this.tokens_to_ids)this.vocab[le]=Y}encode($){return $}}class ne extends r.Callable{constructor($){super(),this.config=$}static fromConfig($){if($===null)return null;switch($.type){case"BertNormalizer":return new $e($);case"Precompiled":return new Ns($);case"Sequence":return new Ge($);case"Replace":return new me($);case"NFC":return new j($);case"NFD":return new F($);case"NFKC":return new V($);case"NFKD":return new re($);case"Strip":return new fe($);case"StripAccents":return new ae($);case"Lowercase":return new ve($);case"Prepend":return new ze($);default:throw new Error(`Unknown Normalizer type: ${$.type}`)}}normalize($){throw Error("normalize should be implemented in subclass.")}_call($){return this.normalize($)}}class me extends ne{normalize($){const N=_(this.config.pattern);return N===null?$:$.replaceAll(N,this.config.content)}}class ce extends ne{constructor(){super(...arguments);J(this,"form")}normalize(N){return N=N.normalize(this.form),N}}class j extends ce{constructor(){super(...arguments);J(this,"form","NFC")}}class F extends ce{constructor(){super(...arguments);J(this,"form","NFD")}}class V extends ce{constructor(){super(...arguments);J(this,"form","NFKC")}}class re extends ce{constructor(){super(...arguments);J(this,"form","NFKD")}}class fe extends ne{normalize($){return this.config.strip_left&&this.config.strip_right?$=$.trim():(this.config.strip_left&&($=$.trimStart()),this.config.strip_right&&($=$.trimEnd())),$}}class ae extends ne{normalize($){return $=g($),$}}class ve extends ne{normalize($){return $=$.toLowerCase(),$}}class ze extends ne{normalize($){return $=this.config.prepend+$,$}}class Ge extends ne{constructor($){super($),this.normalizers=$.normalizers.map(N=>ne.fromConfig(N))}normalize($){return this.normalizers.reduce((N,Y)=>Y.normalize(N),$)}}class $e extends ne{_tokenize_chinese_chars($){const N=[];for(let Y=0;Y<$.length;++Y){const le=$[Y],de=le.charCodeAt(0);k(de)?(N.push(" "),N.push(le),N.push(" ")):N.push(le)}return N.join("")}stripAccents($){return $.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control($){switch($){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test($)}}_clean_text($){const N=[];for(const Y of $){const le=Y.charCodeAt(0);le===0||le===65533||this._is_control(Y)||(/^\s$/.test(Y)?N.push(" "):N.push(Y))}return N.join("")}normalize($){return this.config.clean_text&&($=this._clean_text($)),this.config.handle_chinese_chars&&($=this._tokenize_chinese_chars($)),this.config.lowercase?($=$.toLowerCase(),this.config.strip_accents!==!1&&($=this.stripAccents($))):this.config.strip_accents&&($=this.stripAccents($)),$}}class Q extends r.Callable{static fromConfig($){if($===null)return null;switch($.type){case"BertPreTokenizer":return new oe($);case"Sequence":return new lr($);case"Whitespace":return new Xt($);case"WhitespaceSplit":return new Cs($);case"Metaspace":return new bs($);case"ByteLevel":return new W($);case"Split":return new be($);case"Punctuation":return new Ie($);case"Digits":return new Ee($);case"Replace":return new Kr($);default:throw new Error(`Unknown PreTokenizer type: ${$.type}`)}}pre_tokenize_text($,N){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize($,N){return(Array.isArray($)?$.map(Y=>this.pre_tokenize_text(Y,N)):this.pre_tokenize_text($,N)).flat()}_call($,N){return this.pre_tokenize($,N)}}class oe extends Q{constructor($){super(),this.pattern=new RegExp(`[^\\s${T}]+|[${T}]`,"gu")}pre_tokenize_text($,N){return $.trim().match(this.pattern)||[]}}class W extends Q{constructor($){super(),this.config=$,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=te,this.text_encoder=new TextEncoder}pre_tokenize_text($,N){return this.add_prefix_space&&!$.startsWith(" ")&&($=" "+$),(this.use_regex?$.match(this.pattern)||[]:[$]).map(le=>Array.from(this.text_encoder.encode(le),de=>this.byte_encoder[de]).join(""))}}class be extends Q{constructor($){super(),this.config=$,this.pattern=_(this.config.pattern,this.config.invert)}pre_tokenize_text($,N){var Y;return this.pattern===null?[]:this.config.invert?$.match(this.pattern)||[]:((Y=this.config.behavior)==null?void 0:Y.toLowerCase())==="removed"?$.split(this.pattern).filter(le=>le):c($,this.pattern)}}class Ie extends Q{constructor($){super(),this.config=$,this.pattern=new RegExp(`[^${T}]+|[${T}]+`,"gu")}pre_tokenize_text($,N){return $.match(this.pattern)||[]}}class Ee extends Q{constructor($){super(),this.config=$;const N=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(N,"gu")}pre_tokenize_text($,N){return $.match(this.pattern)||[]}}class Me extends r.Callable{constructor($){super(),this.config=$}static fromConfig($){if($===null)return null;switch($.type){case"TemplateProcessing":return new Ae($);case"ByteLevel":return new Be($);case"RobertaProcessing":return new we($);case"BertProcessing":return new Se($);case"Sequence":return new Xe($);default:throw new Error(`Unknown PostProcessor type: ${$.type}`)}}post_process($,...N){throw Error("post_process should be implemented in subclass.")}_call($,...N){return this.post_process($,...N)}}class Se extends Me{constructor($){super($),this.cls=$.cls[0],this.sep=$.sep[0]}post_process($,N=null,{add_special_tokens:Y=!0}={}){Y&&($=(0,n.mergeArrays)([this.cls],$,[this.sep]));let le=new Array($.length).fill(0);if(N!==null){const de=Y&&this instanceof we?[this.sep]:[],Te=Y?[this.sep]:[];$=(0,n.mergeArrays)($,de,N,Te),le=(0,n.mergeArrays)(le,new Array(N.length+de.length+Te.length).fill(1))}return{tokens:$,token_type_ids:le}}}class we extends Se{}class Ae extends Me{constructor($){super($),this.single=$.single,this.pair=$.pair}post_process($,N=null,{add_special_tokens:Y=!0}={}){const le=N===null?this.single:this.pair;let de=[],Te=[];for(const Ne of le)"SpecialToken"in Ne?Y&&(de.push(Ne.SpecialToken.id),Te.push(Ne.SpecialToken.type_id)):"Sequence"in Ne&&(Ne.Sequence.id==="A"?(de=(0,n.mergeArrays)(de,$),Te=(0,n.mergeArrays)(Te,new Array($.length).fill(Ne.Sequence.type_id))):Ne.Sequence.id==="B"&&(de=(0,n.mergeArrays)(de,N),Te=(0,n.mergeArrays)(Te,new Array(N.length).fill(Ne.Sequence.type_id))));return{tokens:de,token_type_ids:Te}}}class Be extends Me{post_process($,N=null){return N&&($=(0,n.mergeArrays)($,N)),{tokens:$}}}class Xe extends Me{constructor($){super($),this.processors=$.processors.map(N=>Me.fromConfig(N))}post_process($,N=null,Y={}){let le;for(const de of this.processors)if(de instanceof Be)$=de.post_process($).tokens,N&&(N=de.post_process(N).tokens);else{const Te=de.post_process($,N,Y);$=Te.tokens,le=Te.token_type_ids}return{tokens:$,token_type_ids:le}}}class xe extends r.Callable{constructor($){super(),this.config=$,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=$.trim_offsets}static fromConfig($){if($===null)return null;switch($.type){case"WordPiece":return new Oe($);case"Metaspace":return new Ps($);case"ByteLevel":return new Ye($);case"Replace":return new Ze($);case"ByteFallback":return new Ke($);case"Fuse":return new nt($);case"Strip":return new Je($);case"Sequence":return new At($);case"CTC":return new at($);case"BPEDecoder":return new kt($);default:throw new Error(`Unknown Decoder type: ${$.type}`)}}_call($){return this.decode($)}decode($){return this.decode_chain($).join("")}decode_chain($){throw Error("`decode_chain` should be implemented in subclass.")}}class Ze extends xe{decode_chain($){const N=_(this.config.pattern);return N===null?$:$.map(Y=>Y.replaceAll(N,this.config.content))}}class Ke extends xe{constructor($){super($),this.text_decoder=new TextDecoder}decode_chain($){const N=[];let Y=[];for(const le of $){let de=null;if(le.length===6&&le.startsWith("<0x")&&le.endsWith(">")){const Te=parseInt(le.slice(3,5),16);isNaN(Te)||(de=Te)}if(de!==null)Y.push(de);else{if(Y.length>0){const Te=this.text_decoder.decode(Uint8Array.from(Y));N.push(Te),Y=[]}N.push(le)}}if(Y.length>0){const le=this.text_decoder.decode(Uint8Array.from(Y));N.push(le),Y=[]}return N}}class nt extends xe{decode_chain($){return[$.join("")]}}class Je extends xe{constructor($){super($),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain($){return $.map(N=>{let Y=0;for(let de=0;de<this.start&&N[de]===this.content;++de){Y=de+1;continue}let le=N.length;for(let de=0;de<this.stop;++de){const Te=N.length-de-1;if(N[Te]===this.content){le=Te;continue}else break}return N.slice(Y,le)})}}class Oe extends xe{constructor($){super($),this.cleanup=$.cleanup}decode_chain($){return $.map((N,Y)=>(Y!==0&&(N.startsWith(this.config.prefix)?N=N.replace(this.config.prefix,""):N=" "+N),this.cleanup&&(N=I(N)),N))}}class Ye extends xe{constructor($){super($),this.byte_decoder=H,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string($){const N=$.join(""),Y=new Uint8Array([...N].map(de=>this.byte_decoder[de]));return this.text_decoder.decode(Y)}decode_chain($){const N=[];let Y=[];for(const le of $)this.added_tokens.find(de=>de.content===le)!==void 0?(Y.length>0&&(N.push(this.convert_tokens_to_string(Y)),Y=[]),N.push(le)):Y.push(le);return Y.length>0&&N.push(this.convert_tokens_to_string(Y)),N}}class at extends xe{constructor($){super($),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string($){if($.length===0)return"";const N=[$[0]];for(let de=1;de<$.length;++de)$[de]!==N.at(-1)&&N.push($[de]);let le=N.filter(de=>de!==this.pad_token).join("");return this.cleanup&&(le=I(le).replaceAll(this.word_delimiter_token," ").trim()),le}decode_chain($){return[this.convert_tokens_to_string($)]}}class At extends xe{constructor($){super($),this.decoders=$.decoders.map(N=>xe.fromConfig(N))}decode_chain($){return this.decoders.reduce((N,Y)=>Y.decode_chain(N),$)}}class kt extends xe{constructor($){super($),this.suffix=this.config.suffix}decode_chain($){return $.map((N,Y)=>N.replaceAll(this.suffix,Y===$.length-1?"":" "))}}class Mt extends xe{decode_chain($){let N="";for(let Y=1;Y<$.length;Y+=2)N+=$[Y];return[N]}}class bs extends Q{constructor($){super(),this.addPrefixSpace=$.add_prefix_space,this.replacement=$.replacement,this.strRep=$.str_rep||this.replacement,this.prepend_scheme=$.prepend_scheme??"always"}pre_tokenize_text($,{section_index:N=void 0}={}){let Y=$.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!Y.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&N===0)&&(Y=this.strRep+Y),[Y]}}class Ps extends xe{constructor($){super($),this.addPrefixSpace=$.add_prefix_space,this.replacement=$.replacement}decode_chain($){const N=[];for(let Y=0;Y<$.length;++Y){let le=$[Y].replaceAll(this.replacement," ");this.addPrefixSpace&&Y==0&&le.startsWith(" ")&&(le=le.substring(1)),N.push(le)}return N}}class Ns extends ne{constructor($){super($),this.charsmap=$.precompiled_charsmap}normalize($){return $=$.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),$=$.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),$.includes("～")?$=$.split("～").map(Y=>Y.normalize("NFKC")).join("～"):$=$.normalize("NFKC"),$}}class lr extends Q{constructor($){super(),this.tokenizers=$.pretokenizers.map(N=>Q.fromConfig(N))}pre_tokenize_text($,N){return this.tokenizers.reduce((Y,le)=>le.pre_tokenize(Y,N),[$])}}class Xt extends Q{constructor($){super()}pre_tokenize_text($,N){return $.match(/\w+|[^\w\s]+/g)||[]}}class Cs extends Q{constructor($){super()}pre_tokenize_text($,N){return y($)}}class Kr extends Q{constructor($){super(),this.config=$,this.pattern=_(this.config.pattern),this.content=this.config.content}pre_tokenize_text($,N){return this.pattern===null?[$]:[$.replaceAll(this.pattern,this.config.content)]}}const Hr=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function qr(he,$,N,Y){for(const le of Object.keys(he)){const de=$-he[le].length,Te=N(le),Ne=new Array(de).fill(Te);he[le]=Y==="right"?(0,n.mergeArrays)(he[le],Ne):(0,n.mergeArrays)(Ne,he[le])}}function Xr(he,$){for(const N of Object.keys(he))he[N].length=$}class pt extends r.Callable{constructor(N,Y){super();J(this,"return_token_type_ids",!1);J(this,"padding_side","right");this.config=Y,this.normalizer=ne.fromConfig(N.normalizer),this.pre_tokenizer=Q.fromConfig(N.pre_tokenizer),this.model=G.fromConfig(N.model,Y),this.post_processor=Me.fromConfig(N.post_processor),this.decoder=xe.fromConfig(N.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const le of N.added_tokens){const de=new L(le);this.added_tokens.push(de),this.model.tokens_to_ids.set(de.content,de.id),this.model.vocab[de.id]=de.content,de.special&&(this.special_tokens.push(de.content),this.all_special_ids.push(de.id))}if(this.additional_special_tokens=Y.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map(le=>le.content)),this.added_tokens_map=new Map(this.added_tokens.map(le=>[le.content,le])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=Y.model_max_length,this.remove_space=Y.remove_space,this.clean_up_tokenization_spaces=Y.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=Y.do_lowercase_and_remove_accent??!1,Y.padding_side&&(this.padding_side=Y.padding_side),this.add_bos_token=Y.add_bos_token,this.add_eos_token=Y.add_eos_token,this.legacy=!1,this.chat_template=Y.chat_template??null,Array.isArray(this.chat_template)){const le=Object.create(null);for(const{name:de,template:Te}of this.chat_template){if(typeof de!="string"||typeof Te!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');le[de]=Te}this.chat_template=le}this._compiled_template_cache=new Map}getToken(...N){for(const Y of N){const le=this.config[Y];if(le)if(typeof le=="object"){if(le.__type==="AddedToken")return le.content;throw Error(`Unknown token: ${le}`)}else return le}return null}static async from_pretrained(N,{progress_callback:Y=null,config:le=null,cache_dir:de=null,local_files_only:Te=!1,revision:Ne="main",legacy:qe=null}={}){const We=await d(N,{progress_callback:Y,config:le,cache_dir:de,local_files_only:Te,revision:Ne,legacy:qe});return new this(...We)}_call(N,{text_pair:Y=null,add_special_tokens:le=!0,padding:de=!1,truncation:Te=null,max_length:Ne=null,return_tensor:qe=!0,return_token_type_ids:We=null}={}){const tt=Array.isArray(N);let bt;if(tt){if(N.length===0)throw Error("text array must be non-empty");if(Y!==null){if(Array.isArray(Y)){if(N.length!==Y.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");bt=N.map((Lt,ns)=>this._encode_plus(Lt,{text_pair:Y[ns],add_special_tokens:le,return_token_type_ids:We}))}else bt=N.map(Lt=>this._encode_plus(Lt,{add_special_tokens:le,return_token_type_ids:We}))}else{if(N==null)throw Error("text may not be null or undefined");if(Array.isArray(Y))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");bt=[this._encode_plus(N,{text_pair:Y,add_special_tokens:le,return_token_type_ids:We})]}if(Ne===null?Ne=this.model_max_length:Te===null&&(de===!0?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),Ne=this.model_max_length):de===!1&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),Te=!0)),de===!0&&(Ne=Math.min((0,a.max)(bt.map(Lt=>Lt.input_ids.length))[0],Ne??1/0)),Ne=Math.min(Ne,this.model_max_length??1/0),de||Te)for(let Lt=0;Lt<bt.length;++Lt)bt[Lt].input_ids.length!==Ne&&(bt[Lt].input_ids.length>Ne?Te&&Xr(bt[Lt],Ne):de&&qr(bt[Lt],Ne,ns=>ns==="input_ids"?this.pad_token_id:0,this.padding_side));const Rt={};if(qe){if(!(de&&Te)&&bt.some(ns=>{var Gt;for(const _s of Object.keys(ns))if(ns[_s].length!==((Gt=bt[0][_s])==null?void 0:Gt.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const Lt=[bt.length,bt[0].input_ids.length];for(const ns of Object.keys(bt[0]))Rt[ns]=new o.Tensor("int64",BigInt64Array.from(bt.flatMap(Gt=>Gt[ns]).map(BigInt)),Lt)}else{for(const Lt of Object.keys(bt[0]))Rt[Lt]=bt.map(ns=>ns[Lt]);if(!tt)for(const Lt of Object.keys(Rt))Rt[Lt]=Rt[Lt][0]}return Rt}_encode_text(N){if(N===null)return null;const Y=this.added_tokens_splitter.split(N);for(let de=0;de<Y.length;++de){const Te=this.added_tokens_map.get(Y[de]);Te&&(Te.lstrip&&de>0&&(Y[de-1]=Y[de-1].trimEnd()),Te.rstrip&&de<Y.length-1&&(Y[de+1]=Y[de+1].trimStart()))}return Y.flatMap((de,Te)=>{if(de.length===0)return[];if(this.added_tokens_map.has(de))return[de];if(this.remove_space===!0&&(de=de.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(de=M(de)),this.normalizer!==null&&(de=this.normalizer(de)),de.length===0)return[];const Ne=this.pre_tokenizer!==null?this.pre_tokenizer(de,{section_index:Te}):[de];return this.model(Ne)})}_encode_plus(N,{text_pair:Y=null,add_special_tokens:le=!0,return_token_type_ids:de=null}={}){const{tokens:Te,token_type_ids:Ne}=this._tokenize_helper(N,{pair:Y,add_special_tokens:le}),qe=this.model.convert_tokens_to_ids(Te),We={input_ids:qe,attention_mask:new Array(qe.length).fill(1)};return(de??this.return_token_type_ids)&&Ne&&(We.token_type_ids=Ne),We}_tokenize_helper(N,{pair:Y=null,add_special_tokens:le=!1}={}){const de=this._encode_text(N),Te=this._encode_text(Y);return this.post_processor?this.post_processor(de,Te,{add_special_tokens:le}):{tokens:(0,n.mergeArrays)(de??[],Te??[])}}tokenize(N,{pair:Y=null,add_special_tokens:le=!1}={}){return this._tokenize_helper(N,{pair:Y,add_special_tokens:le}).tokens}encode(N,{text_pair:Y=null,add_special_tokens:le=!0,return_token_type_ids:de=null}={}){return this._encode_plus(N,{text_pair:Y,add_special_tokens:le,return_token_type_ids:de}).input_ids}batch_decode(N,Y={}){return N instanceof o.Tensor&&(N=N.tolist()),N.map(le=>this.decode(le,Y))}decode(N,Y={}){if(N instanceof o.Tensor&&(N=b(N)),!Array.isArray(N)||N.length===0||!(0,n.isIntegralNumber)(N[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(N,Y)}decode_single(N,{skip_special_tokens:Y=!1,clean_up_tokenization_spaces:le=null}){let de=this.model.convert_ids_to_tokens(N);Y&&(de=de.filter(Ne=>!this.special_tokens.includes(Ne)));let Te=this.decoder?this.decoder(de):de.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Te=Te.replaceAll(this.decoder.end_of_word_suffix," "),Y&&(Te=Te.trim())),(le??this.clean_up_tokenization_spaces)&&(Te=I(Te)),Te}get_chat_template({chat_template:N=null,tools:Y=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const le=this.chat_template;if(N!==null&&Object.hasOwn(le,N))N=le[N];else if(N===null)if(Y!==null&&"tool_use"in le)N=le.tool_use;else if("default"in le)N=le.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(le).sort()}.`)}else if(N===null)if(this.chat_template)N=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return N}apply_chat_template(N,{tools:Y=null,documents:le=null,chat_template:de=null,add_generation_prompt:Te=!1,tokenize:Ne=!0,padding:qe=!1,truncation:We=!1,max_length:tt=null,return_tensor:bt=!0,return_dict:Rt=!1,tokenizer_kwargs:Lt={},...ns}={}){if(de=this.get_chat_template({chat_template:de,tools:Y}),typeof de!="string")throw Error(`chat_template must be a string, but got ${typeof de}`);let Gt=this._compiled_template_cache.get(de);Gt===void 0&&(Gt=new u.Template(de),this._compiled_template_cache.set(de,Gt));const _s=Object.create(null);for(const as of Hr){const gs=this.getToken(as);gs&&(_s[as]=gs)}const ys=Gt.render({messages:N,add_generation_prompt:Te,tools:Y,documents:le,..._s,...ns});if(Ne){const as=this._call(ys,{add_special_tokens:!1,padding:qe,truncation:We,max_length:tt,return_tensor:bt,...Lt});return Rt?as:as.input_ids}return ys}}class Ar extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class Fr extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class St extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class Qt extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class S extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class X extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class B extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class q extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class se extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class ge extends pt{}class Fe extends pt{}class st extends pt{constructor(N,Y){super(N,Y);J(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class gt extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class mt extends pt{}class xt extends pt{}class rt extends pt{}class Bt extends pt{constructor($,N){super($,N),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(Y=>this.languageRegex.test(Y)),this.lang_to_token=Y=>Y}_build_translation_inputs($,N,Y){return Ls(this,$,N,Y)}}class Ut extends Bt{}class Us extends pt{}class Qs extends pt{}const rs="▁";class Ss extends pt{constructor(N,Y){super(N,Y);J(this,"padding_side","left");this.legacy=Y.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new bs({replacement:rs,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(N){if(N===null)return null;if(this.legacy||N.length===0)return super._encode_text(N);let Y=super._encode_text(rs+N.replaceAll(rs," "));return Y.length>1&&Y[0]===rs&&this.special_tokens.includes(Y[1])&&(Y=Y.slice(1)),Y}}class ks extends pt{}class Vs extends pt{}class ur extends pt{}class Is extends pt{}class Or extends pt{}class Dr extends pt{}class Ws extends pt{}class Gs extends pt{}class tr extends pt{}function Ls(he,$,N,Y){if(!("language_codes"in he)||!Array.isArray(he.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in he)||!(he.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in he)||typeof he.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const le=Y.src_lang,de=Y.tgt_lang;if(!he.language_codes.includes(de))throw new Error(`Target language code "${de}" is not valid. Must be one of: {${he.language_codes.join(", ")}}`);if(le!==void 0){if(!he.language_codes.includes(le))throw new Error(`Source language code "${le}" is not valid. Must be one of: {${he.language_codes.join(", ")}}`);for(const Te of he.post_processor.config.single)if("SpecialToken"in Te&&he.languageRegex.test(Te.SpecialToken.id)){Te.SpecialToken.id=he.lang_to_token(le);break}}return Y.forced_bos_token_id=he.model.convert_tokens_to_ids([he.lang_to_token(de)])[0],he._call($,N)}class fr extends pt{constructor($,N){super($,N),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(Y=>this.languageRegex.test(Y)),this.lang_to_token=Y=>Y}_build_translation_inputs($,N,Y){return Ls(this,$,N,Y)}}class ps extends pt{constructor($,N){super($,N),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(Y=>this.languageRegex.test(Y)).map(Y=>Y.slice(2,-2)),this.lang_to_token=Y=>`__${Y}__`}_build_translation_inputs($,N,Y){return Ls(this,$,N,Y)}}class fs extends pt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr($,{return_timestamps:N=!1,return_language:Y=!1,time_precision:le=null,force_full_sequences:de=!0}={}){if(le===null)throw Error("Must specify time_precision");let Te=null;const Ne=N==="word";function qe(){return{language:Te,timestamp:[null,null],text:""}}const We=[];let tt=qe(),bt=0;const Rt=this.timestamp_begin,ns=Rt+1500;let Gt=[],_s=[],ys=!1,as=null;const gs=new Set(this.all_special_ids);for(const Zt of $){const ws=Zt.tokens,Hs=Ne?Zt.token_timestamps:null;let Rs=null,wr=Rt;if("stride"in Zt){const[cs,os,ms]=Zt.stride;if(bt-=os,as=cs-ms,os&&(wr=os/le+Rt),ms)for(let is=ws.length-1;is>=0;--is){const qs=Number(ws[is]);if(qs>=Rt){if(Rs!==null&&(qs-Rt)*le<as)break;Rs=qs}}}let $s=[],cr=[];for(let cs=0;cs<ws.length;++cs){const os=Number(ws[cs]);if(gs.has(os)){const ms=this.decode([os]),is=h.WHISPER_LANGUAGE_MAPPING.get(ms.slice(2,-2));if(is!==void 0){if(Te!==null&&is!==Te&&!N){Gt.push($s);const qs=this.findLongestCommonSequence(Gt)[0],Nr=this.decode(qs);tt.text=Nr,We.push(tt),Gt=[],$s=[],tt=qe()}Te=tt.language=is}}else if(os>=Rt&&os<=ns){const ms=(os-Rt)*le+bt,is=(0,a.round)(ms,2);if(Rs!==null&&os>=Rs)ys=!0;else if(ys||Gt.length>0&&os<wr)ys=!1;else if(tt.timestamp[0]===null)tt.timestamp[0]=is;else if(is!==tt.timestamp[0]){tt.timestamp[1]=is,Gt.push($s),Ne&&_s.push(cr);const[qs,Nr]=this.findLongestCommonSequence(Gt,_s),Nn=this.decode(qs);tt.text=Nn,Ne&&(tt.words=this.collateWordTimestamps(qs,Nr,Te)),We.push(tt),Gt=[],$s=[],_s=[],cr=[],tt=qe()}}else if($s.push(os),Ne){let ms=(0,a.round)(Hs[cs]+bt,2),is;if(cs+1<Hs.length){is=(0,a.round)(Hs[cs+1]+bt,2);const qs=this.decode([os]);x.test(qs)&&(is=(0,a.round)(Math.min(ms+le,is),2))}else is=null;cr.push([ms,is])}}if("stride"in Zt){const[cs,os,ms]=Zt.stride;bt+=cs-ms}$s.length>0?(Gt.push($s),Ne&&_s.push(cr)):Gt.every(cs=>cs.length===0)&&(tt=qe(),Gt=[],$s=[],_s=[],cr=[])}if(Gt.length>0){if(de&&N)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Zt,ws]=this.findLongestCommonSequence(Gt,_s),Hs=this.decode(Zt);tt.text=Hs,Ne&&(tt.words=this.collateWordTimestamps(Zt,ws,Te)),We.push(tt)}let zs=Object.create(null);const Ys=We.map(Zt=>Zt.text).join("");if(N||Y){for(let Zt=0;Zt<We.length;++Zt){const ws=We[Zt];N||delete ws.timestamp,Y||delete ws.language}if(Ne){const Zt=[];for(const ws of We)for(const Hs of ws.words)Zt.push(Hs);zs={chunks:Zt}}else zs={chunks:We}}return[Ys,zs]}findLongestCommonSequence($,N=null){let Y=$[0],le=Y.length,de=[];const Te=Array.isArray(N)&&N.length>0;let Ne=Te?[]:null,qe=Te?N[0]:null;for(let We=1;We<$.length;++We){const tt=$[We];let bt=0,Rt=[le,le,0,0];const Lt=tt.length;for(let zs=1;zs<le+Lt;++zs){const Ys=Math.max(0,le-zs),Zt=Math.min(le,le+Lt-zs),ws=Y.slice(Ys,Zt),Hs=Math.max(0,zs-le),Rs=Math.min(Lt,zs),wr=tt.slice(Hs,Rs);if(ws.length!==wr.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let $s;Te?$s=ws.filter((os,ms)=>os===wr[ms]&&qe[Ys+ms]<=N[We][Hs+ms]).length:$s=ws.filter((os,ms)=>os===wr[ms]).length;const cr=zs/1e4,cs=$s/zs+cr;$s>1&&cs>bt&&(bt=cs,Rt=[Ys,Zt,Hs,Rs])}const[ns,Gt,_s,ys]=Rt,as=Math.floor((Gt+ns)/2),gs=Math.floor((ys+_s)/2);de.push(...Y.slice(0,as)),Y=tt.slice(gs),le=Y.length,Te&&(Ne.push(...qe.slice(0,as)),qe=N[We].slice(gs))}return de.push(...Y),Te?(Ne.push(...qe),[de,Ne]):[de,[]]}collateWordTimestamps($,N,Y){const[le,de,Te]=this.combineTokensIntoWords($,Y),Ne=[];for(let qe=0;qe<le.length;++qe){const We=Te[qe];Ne.push({text:le[qe],timestamp:[N[We.at(0)][0],N[We.at(-1)][1]]})}return Ne}combineTokensIntoWords($,N,Y=`"'“¡¿([{-`,le=`"'.。,，!！?？:：”)]}、`){N=N??"english";let de,Te,Ne;return["chinese","japanese","thai","lao","myanmar"].includes(N)?[de,Te,Ne]=this.splitTokensOnUnicode($):[de,Te,Ne]=this.splitTokensOnSpaces($),this.mergePunctuations(de,Te,Ne,Y,le)}decode($,N){let Y;return N!=null&&N.decode_with_timestamps?($ instanceof o.Tensor&&($=b($)),Y=this.decodeWithTimestamps($,N)):Y=super.decode($,N),Y}decodeWithTimestamps($,N){const Y=(N==null?void 0:N.time_precision)??.02,le=Array.from(this.all_special_ids).at(-1)+1;let de=[[]];for(let Te of $)if(Te=Number(Te),Te>=le){const Ne=((Te-le)*Y).toFixed(2);de.push(`<|${Ne}|>`),de.push([])}else de[de.length-1].push(Te);return de=de.map(Te=>typeof Te=="string"?Te:super.decode(Te,N)),de.join("")}splitTokensOnUnicode($){const N=this.decode($,{decode_with_timestamps:!0}),Y="�",le=[],de=[],Te=[];let Ne=[],qe=[],We=0;for(let tt=0;tt<$.length;++tt){const bt=$[tt];Ne.push(bt),qe.push(tt);const Rt=this.decode(Ne,{decode_with_timestamps:!0});(!Rt.includes(Y)||N[We+Rt.indexOf(Y)]===Y)&&(le.push(Rt),de.push(Ne),Te.push(qe),Ne=[],qe=[],We+=Rt.length)}return[le,de,Te]}splitTokensOnSpaces($){const[N,Y,le]=this.splitTokensOnUnicode($),de=[],Te=[],Ne=[],qe=new RegExp(`^[${T}]$`,"gu");for(let We=0;We<N.length;++We){const tt=N[We],bt=Y[We],Rt=le[We],Lt=bt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),ns=tt.startsWith(" "),Gt=tt.trim(),_s=qe.test(Gt);if(Lt||ns||_s||de.length===0)de.push(tt),Te.push(bt),Ne.push(Rt);else{const ys=de.length-1;de[ys]+=tt,Te[ys].push(...bt),Ne[ys].push(...Rt)}}return[de,Te,Ne]}mergePunctuations($,N,Y,le,de){const Te=structuredClone($),Ne=structuredClone(N),qe=structuredClone(Y);let We=Te.length-2,tt=Te.length-1;for(;We>=0;)Te[We].startsWith(" ")&&le.includes(Te[We].trim())?(Te[tt]=Te[We]+Te[tt],Ne[tt]=(0,n.mergeArrays)(Ne[We],Ne[tt]),qe[tt]=(0,n.mergeArrays)(qe[We],qe[tt]),Te[We]="",Ne[We]=[],qe[We]=[]):tt=We,--We;for(We=0,tt=1;tt<Te.length;)!Te[We].endsWith(" ")&&de.includes(Te[tt])?(Te[We]+=Te[tt],Ne[We]=(0,n.mergeArrays)(Ne[We],Ne[tt]),qe[We]=(0,n.mergeArrays)(qe[We],qe[tt]),Te[tt]="",Ne[tt]=[],qe[tt]=[]):We=tt,++tt;return[Te.filter(bt=>bt),Ne.filter(bt=>bt.length>0),qe.filter(bt=>bt.length>0)]}}class Js extends pt{}class Br extends pt{}class Ks extends pt{}class Re extends pt{constructor($,N){super($,N),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(Y=>this.languageRegex.test(Y)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text($){if($===null)return null;const[N,...Y]=$.trim().split(this.languageRegex);if(Y.length===0)return super._encode_text(N);if(Y.length===2){const[le,de]=Y;return this.supported_language_codes.includes(le)||console.warn(`Unsupported language code "${le}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,n.mergeArrays)([le],super._encode_text(de))}}}class je extends pt{}class et extends pt{}class Jt extends pt{}class Rr extends pt{}class _r extends pt{}class jr extends pt{constructor($,N){super($,N),this.decoder=new Mt({})}}class gr extends pt{}class cn extends pt{}class dn extends pt{}class hn{static async from_pretrained($,{progress_callback:N=null,config:Y=null,cache_dir:le=null,local_files_only:de=!1,revision:Te="main",legacy:Ne=null}={}){var Rt;const[qe,We]=await d($,{progress_callback:N,config:Y,cache_dir:le,local_files_only:de,revision:Te,legacy:Ne}),tt=((Rt=We.tokenizer_class)==null?void 0:Rt.replace(/Fast$/,""))??"PreTrainedTokenizer";let bt=this.TOKENIZER_CLASS_MAPPING[tt];return bt||(console.warn(`Unknown tokenizer class "${tt}", attempting to construct from base class.`),bt=pt),new bt(qe,We)}}J(hn,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:mt,DistilBertTokenizer:ge,CamembertTokenizer:Fe,DebertaTokenizer:S,DebertaV2Tokenizer:X,BertTokenizer:Ar,HerbertTokenizer:B,ConvBertTokenizer:q,RoFormerTokenizer:se,XLMTokenizer:st,ElectraTokenizer:gt,MobileBertTokenizer:St,SqueezeBertTokenizer:Qt,AlbertTokenizer:Fr,GPT2Tokenizer:xt,BartTokenizer:rt,MBartTokenizer:Bt,MBart50Tokenizer:Ut,RobertaTokenizer:Us,WhisperTokenizer:fs,CodeGenTokenizer:Js,CLIPTokenizer:Br,SiglipTokenizer:Ks,MarianTokenizer:Re,BloomTokenizer:Qs,NllbTokenizer:fr,M2M100Tokenizer:ps,LlamaTokenizer:Ss,CodeLlamaTokenizer:ks,XLMRobertaTokenizer:Vs,MPNetTokenizer:ur,FalconTokenizer:Is,GPTNeoXTokenizer:Or,EsmTokenizer:Dr,Wav2Vec2CTCTokenizer:je,BlenderbotTokenizer:et,BlenderbotSmallTokenizer:Jt,SpeechT5Tokenizer:Rr,NougatTokenizer:_r,VitsTokenizer:jr,Qwen2Tokenizer:Ws,GemmaTokenizer:Gs,Grok1Tokenizer:tr,CohereTokenizer:gr,MgpstrTokenizer:cn,Ernie4_5_Tokenizer:dn,PreTrainedTokenizer:pt})},"./src/utils/audio.js":(s,e,t)=>{t.r(e),t.d(e,{RawAudio:()=>K,hamming:()=>c,hanning:()=>d,mel_filter_bank:()=>k,read_audio:()=>u,spectrogram:()=>P,window_function:()=>O});var r=t("./src/utils/hub.js"),n=t("./src/utils/maths.js"),i=t("./src/utils/core.js"),a=t("./src/env.js"),o=t("./src/utils/tensor.js"),l=t("?7992");async function u(R,te){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const H=await(await(0,r.getFile)(R)).arrayBuffer(),ee=new AudioContext({sampleRate:te});typeof te>"u"&&console.warn(`No sampling rate provided, using default of ${ee.sampleRate}Hz.`);const Z=await ee.decodeAudioData(H);let ne;if(Z.numberOfChannels===2){const me=Math.sqrt(2),ce=Z.getChannelData(0),j=Z.getChannelData(1);ne=new Float32Array(ce.length);for(let F=0;F<Z.length;++F)ne[F]=me*(ce[F]+j[F])/2}else ne=Z.getChannelData(0);return ne}function h(R,te){if(R<1)return new Float64Array;if(R===1)return new Float64Array([1]);const H=1-te,ee=2*Math.PI/(R-1),Z=new Float64Array(R);for(let ne=0;ne<R;++ne)Z[ne]=te-H*Math.cos(ne*ee);return Z}function d(R){return h(R,.5)}function c(R){return h(R,.54)}const _={htk:R=>2595*Math.log10(1+R/700),kaldi:R=>1127*Math.log(1+R/700),slaney:(R,te=1e3,H=15,ee=27/Math.log(6.4))=>R>=te?H+Math.log(R/te)*ee:3*R/200};function f(R,te="htk"){const H=_[te];if(!H)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof R=="number"?H(R):R.map(ee=>H(ee))}const b={htk:R=>700*(10**(R/2595)-1),kaldi:R=>700*(Math.exp(R/1127)-1),slaney:(R,te=1e3,H=15,ee=Math.log(6.4)/27)=>R>=H?te*Math.exp(ee*(R-H)):200*R/3};function I(R,te="htk"){const H=b[te];if(!H)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof R=="number"?H(R):R.map(ee=>H(ee))}function g(R,te){const H=Float64Array.from({length:te.length-1},(me,ce)=>te[ce+1]-te[ce]),ee=Array.from({length:R.length},()=>new Array(te.length));for(let me=0;me<R.length;++me){const ce=ee[me];for(let j=0;j<te.length;++j)ce[j]=te[j]-R[me]}const Z=te.length-2,ne=Array.from({length:Z},()=>new Array(R.length));for(let me=0;me<R.length;++me){const ce=ee[me];for(let j=0;j<Z;++j){const F=-ce[j]/H[j],V=ce[j+2]/H[j+1];ne[j][me]=Math.max(0,Math.min(F,V))}}return ne}function M(R,te,H){const ee=(te-R)/(H-1);return Float64Array.from({length:H},(Z,ne)=>R+ee*ne)}function k(R,te,H,ee,Z,ne=null,me="htk",ce=!1){if(ne!==null&&ne!=="slaney")throw new Error('norm must be one of null or "slaney"');if(R<2)throw new Error(`Require num_frequency_bins: ${R} >= 2`);if(H>ee)throw new Error(`Require min_frequency: ${H} <= max_frequency: ${ee}`);const j=f(H,me),F=f(ee,me),V=M(j,F,te+2);let re=I(V,me),fe;if(ce){const ve=Z/((R-1)*2);fe=f(Float64Array.from({length:R},(ze,Ge)=>Ge*ve),me),re=V}else fe=M(0,Math.floor(Z/2),R);const ae=g(fe,re);if(ne!==null&&ne==="slaney")for(let ve=0;ve<te;++ve){const ze=ae[ve],Ge=2/(re[ve+2]-re[ve]);for(let $e=0;$e<R;++$e)ze[$e]*=Ge}return ae}function v(R,te,H){const ee=new R.constructor(R.length+te+H),Z=R.length-1;for(let ne=0;ne<R.length;++ne)ee[te+ne]=R[ne];for(let ne=1;ne<=te;++ne)ee[te-ne]=R[(0,i.calculateReflectOffset)(ne,Z)];for(let ne=1;ne<=H;++ne)ee[Z+te+ne]=R[(0,i.calculateReflectOffset)(Z-ne,Z)];return ee}function y(R,te,H,ee,Z){if(H<=0)throw new Error("reference must be greater than zero");if(ee<=0)throw new Error("min_value must be greater than zero");H=Math.max(ee,H);const ne=Math.log10(H);for(let me=0;me<R.length;++me)R[me]=te*Math.log10(Math.max(ee,R[me])-ne);if(Z!==null){if(Z<=0)throw new Error("db_range must be greater than zero");const me=(0,n.max)(R)[0]-Z;for(let ce=0;ce<R.length;++ce)R[ce]=Math.max(R[ce],me)}return R}function T(R,te=1,H=1e-5,ee=null){return y(R,20,te,H,ee)}function x(R,te=1,H=1e-10,ee=null){return y(R,10,te,H,ee)}async function P(R,te,H,ee,{fft_length:Z=null,power:ne=1,center:me=!0,pad_mode:ce="reflect",onesided:j=!0,preemphasis:F=null,preemphasis_htk_flavor:V=!0,mel_filters:re=null,mel_floor:fe=1e-10,log_mel:ae=null,reference:ve=1,min_value:ze=1e-10,db_range:Ge=null,remove_dc_offset:$e=null,min_num_frames:Q=null,max_num_frames:oe=null,do_pad:W=!0,transpose:be=!1}={}){const Ie=te.length;if(Z===null&&(Z=H),H>Z)throw Error(`frame_length (${H}) may not be larger than fft_length (${Z})`);if(Ie!==H)throw new Error(`Length of the window (${Ie}) must equal frame_length (${H})`);if(ee<=0)throw new Error("hop_length must be greater than zero");if(ne===null&&re!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(!V)throw new Error("`preemphasis_htk_flavor=false` is not currently supported.");if(me){if(ce!=="reflect")throw new Error(`pad_mode="${ce}" not implemented yet.`);const Je=Math.floor((Z-1)/2)+1;R=v(R,Je,Je)}let Ee=Math.floor(1+Math.floor((R.length-H)/ee));Q!==null&&Ee<Q&&(Ee=Q);const Me=j?Math.floor(Z/2)+1:Z;let Se=Ee,we=Ee;oe!==null&&(oe>Ee?W&&(we=oe):we=Se=oe);const Ae=new n.FFT(Z),Be=new Float64Array(Z),Xe=new Float64Array(Ae.outputBufferSize),xe=new Float32Array(Me*we);for(let Je=0;Je<Se;++Je){const Oe=Je*ee,Ye=Math.min(R.length-Oe,H);Ye!==H&&Be.fill(0,0,H);for(let at=0;at<Ye;++at)Be[at]=R[Oe+at];if($e){let at=0;for(let kt=0;kt<Ye;++kt)at+=Be[kt];const At=at/Ye;for(let kt=0;kt<Ye;++kt)Be[kt]-=At}if(F!==null){for(let at=Ye-1;at>=1;--at)Be[at]-=F*Be[at-1];Be[0]*=1-F}for(let at=0;at<te.length;++at)Be[at]*=te[at];Ae.realTransform(Xe,Be);for(let at=0;at<Me;++at){const At=at<<1;xe[at*we+Je]=Xe[At]**2+Xe[At+1]**2}}if(ne!==null&&ne!==2){const Je=ne/2;for(let Oe=0;Oe<xe.length;++Oe)xe[Oe]**=Je}const Ze=re.length;let Ke=await(0,o.matmul)(new o.Tensor("float32",re.flat(),[Ze,Me]),new o.Tensor("float32",xe,[Me,we]));be&&(Ke=Ke.transpose(1,0));const nt=Ke.data;for(let Je=0;Je<nt.length;++Je)nt[Je]=Math.max(fe,nt[Je]);if(ne!==null&&ae!==null){const Je=Math.min(nt.length,Se*Ze);switch(ae){case"log":for(let Oe=0;Oe<Je;++Oe)nt[Oe]=Math.log(nt[Oe]);break;case"log10":for(let Oe=0;Oe<Je;++Oe)nt[Oe]=Math.log10(nt[Oe]);break;case"dB":if(ne===1)T(nt,ve,ze,Ge);else if(ne===2)x(nt,ve,ze,Ge);else throw new Error(`Cannot use log_mel option '${ae}' with power ${ne}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${ae}'`)}}return Ke}function O(R,te,{periodic:H=!0,frame_length:ee=null,center:Z=!0}={}){const ne=H?R+1:R;let me;switch(te){case"boxcar":me=new Float64Array(ne).fill(1);break;case"hann":case"hann_window":me=d(ne);break;case"hamming":me=c(ne);break;case"povey":me=d(ne).map(ce=>Math.pow(ce,.85));break;default:throw new Error(`Unknown window type ${te}.`)}if(H&&(me=me.subarray(0,R)),ee===null)return me;if(R>ee)throw new Error(`Length of the window (${R}) may not be larger than frame_length (${ee})`);return me}function L(R,te){let H=44;const ee=new ArrayBuffer(H+R.length*4),Z=new DataView(ee);G(Z,0,"RIFF"),Z.setUint32(4,36+R.length*4,!0),G(Z,8,"WAVE"),G(Z,12,"fmt "),Z.setUint32(16,16,!0),Z.setUint16(20,3,!0),Z.setUint16(22,1,!0),Z.setUint32(24,te,!0),Z.setUint32(28,te*4,!0),Z.setUint16(32,4,!0),Z.setUint16(34,32,!0),G(Z,36,"data"),Z.setUint32(40,R.length*4,!0);for(let ne=0;ne<R.length;++ne,H+=4)Z.setFloat32(H,R[ne],!0);return ee}function G(R,te,H){for(let ee=0;ee<H.length;++ee)R.setUint8(te+ee,H.charCodeAt(ee))}class K{constructor(te,H){this.audio=te,this.sampling_rate=H}toWav(){return L(this.audio,this.sampling_rate)}toBlob(){const te=this.toWav();return new Blob([te],{type:"audio/wav"})}async save(te){let H;if(a.apis.IS_BROWSER_ENV){if(a.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");H=i.saveBlob}else if(a.apis.IS_FS_AVAILABLE)H=async(ee,Z)=>{let ne=await Z.arrayBuffer();l.writeFileSync(ee,Buffer.from(ne))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await H(te,this.toBlob())}}},"./src/utils/constants.js":(s,e,t)=>{t.r(e),t.d(e,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>n,FEATURE_EXTRACTOR_NAME:()=>i,GENERATION_CONFIG_NAME:()=>u,GITHUB_ISSUE_URL:()=>r,IMAGE_PROCESSOR_NAME:()=>a,PROCESSOR_NAME:()=>o});const r="https://github.com/huggingface/transformers.js/issues/new/choose",n="config.json",i="preprocessor_config.json",a=i,o="processor_config.json",l="chat_template.jinja",u="generation_config.json"},"./src/utils/core.js":(s,e,t)=>{t.r(e),t.d(e,{calculateDimensions:()=>u,calculateReflectOffset:()=>_,count:()=>g,dispatchCallback:()=>r,escapeRegExp:()=>i,isIntegralNumber:()=>o,isNullishDimension:()=>l,isTypedArray:()=>a,len:()=>I,mergeArrays:()=>d,pick:()=>b,pop:()=>h,product:()=>c,reverseDictionary:()=>n,saveBlob:()=>f});function r(M,k){M&&M(k)}function n(M){return Object.fromEntries(Object.entries(M).map(([k,v])=>[v,k]))}function i(M){return M.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function a(M){var k,v,y;return((y=(v=(k=M==null?void 0:M.prototype)==null?void 0:k.__proto__)==null?void 0:v.constructor)==null?void 0:y.name)==="TypedArray"}function o(M){return Number.isInteger(M)||typeof M=="bigint"}function l(M){return M==null||M===-1}function u(M){const k=[];let v=M;for(;Array.isArray(v);)k.push(v.length),v=v[0];return k}function h(M,k,v=void 0){const y=M[k];if(y!==void 0)return delete M[k],y;if(v===void 0)throw Error(`Key ${k} does not exist in object.`);return v}function d(...M){return Array.prototype.concat.apply([],M)}function c(...M){return M.reduce((k,v)=>k.flatMap(y=>v.map(T=>[y,T])))}function _(M,k){return Math.abs((M+k)%(2*k)-k)}function f(M,k){const v=URL.createObjectURL(k),y=document.createElement("a");y.href=v,y.download=M,y.click(),y.remove(),URL.revokeObjectURL(v)}function b(M,k){return Object.assign({},...k.map(v=>{if(M[v]!==void 0)return{[v]:M[v]}}))}function I(M){let k=0;for(const v of M)++k;return k}function g(M,k){let v=0;for(const y of M)y===k&&++v;return v}},"./src/utils/data-structures.js":(s,e,t)=>{t.r(e),t.d(e,{CharTrie:()=>n,DictionarySplitter:()=>l,LRUCache:()=>u,PriorityQueue:()=>r,TokenLattice:()=>a});class r{constructor(d=(_,f)=>_>f,c=1/0){this._heap=[],this._comparator=d,this._maxSize=c}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...d){return this.extend(d)}extend(d){for(const c of d)if(this.size<this._maxSize)this._heap.push(c),this._siftUp();else{const _=this._smallest();this._comparator(c,this._heap[_])&&(this._heap[_]=c,this._siftUpFrom(_))}return this.size}pop(){const d=this.peek(),c=this.size-1;return c>0&&this._swap(0,c),this._heap.pop(),this._siftDown(),d}replace(d){const c=this.peek();return this._heap[0]=d,this._siftDown(),c}_parent(d){return(d+1>>>1)-1}_left(d){return(d<<1)+1}_right(d){return d+1<<1}_greater(d,c){return this._comparator(this._heap[d],this._heap[c])}_swap(d,c){const _=this._heap[d];this._heap[d]=this._heap[c],this._heap[c]=_}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(d){for(;d>0&&this._greater(d,this._parent(d));)this._swap(d,this._parent(d)),d=this._parent(d)}_siftDown(){let d=0;for(;this._left(d)<this.size&&this._greater(this._left(d),d)||this._right(d)<this.size&&this._greater(this._right(d),d);){const c=this._right(d)<this.size&&this._greater(this._right(d),this._left(d))?this._right(d):this._left(d);this._swap(d,c),d=c}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class n{constructor(){this.root=i.default()}extend(d){for(const c of d)this.push(c)}push(d){let c=this.root;for(const _ of d){let f=c.children.get(_);f===void 0&&(f=i.default(),c.children.set(_,f)),c=f}c.isLeaf=!0}*commonPrefixSearch(d){let c=this.root;if(c===void 0)return;let _="";for(const f of d){if(_+=f,c=c.children.get(f),c===void 0)return;c.isLeaf&&(yield _)}}}class i{constructor(d,c){this.isLeaf=d,this.children=c}static default(){return new i(!1,new Map)}}class a{constructor(d,c,_){this.chars=Array.from(d),this.len=this.chars.length,this.bosTokenId=c,this.eosTokenId=_,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const f=new o(this.bosTokenId,0,0,0,0),b=new o(this.eosTokenId,1,this.len,0,0);this.nodes.push(f.clone()),this.nodes.push(b.clone()),this.beginNodes[this.len].push(b),this.endNodes[0].push(f)}insert(d,c,_,f){const b=this.nodes.length,I=new o(f,b,d,c,_);this.beginNodes[d].push(I),this.endNodes[d+c].push(I),this.nodes.push(I)}viterbi(){const d=this.len;let c=0;for(;c<=d;){if(this.beginNodes[c].length==0)return[];for(let g of this.beginNodes[c]){g.prev=null;let M=0,k=null;for(let v of this.endNodes[c]){const y=v.backtraceScore+g.score;(k===null||y>M)&&(k=v.clone(),M=y)}if(k!==null)g.prev=k,g.backtraceScore=M;else return[]}++c}const _=[],b=this.beginNodes[d][0].prev;if(b===null)return[];let I=b.clone();for(;I.prev!==null;)_.push(I.clone()),I=I.clone().prev.clone();return _.reverse(),_}piece(d){return this.chars.slice(d.pos,d.pos+d.length).join("")}tokens(){return this.viterbi().map(c=>this.piece(c))}tokenIds(){return this.viterbi().map(c=>c.tokenId)}}class o{constructor(d,c,_,f,b){this.tokenId=d,this.nodeId=c,this.pos=_,this.length=f,this.score=b,this.prev=null,this.backtraceScore=0}clone(){const d=new o(this.tokenId,this.nodeId,this.pos,this.length,this.score);return d.prev=this.prev,d.backtraceScore=this.backtraceScore,d}}class l{constructor(d){this.trie=this._buildTrie(d)}_buildTrie(d){var _;const c=Object.create(null);for(const f of d){let b=c;for(let I=0;I<f.length;++I)b=b[_=f[I]]??(b[_]=Object.create(null));b.end=f}return c}split(d){const c=[],_=d.length;let f=0,b=0;for(;b<_;){let I=this.trie,g=null,M=b;for(;M<_&&(I=I[d[M]]);)I.end&&(g=I.end),++M;g?(b>f&&c.push(d.slice(f,b)),c.push(g),b+=g.length,f=b):++b}return f<_&&c.push(d.slice(f)),c}}class u{constructor(d){this.capacity=d,this.cache=new Map}get(d){if(!this.cache.has(d))return;const c=this.cache.get(d);return this.cache.delete(d),this.cache.set(d,c),c}put(d,c){this.cache.has(d)&&this.cache.delete(d),this.cache.set(d,c),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":(s,e,t)=>{t.r(e),t.d(e,{DEVICE_TYPES:()=>r});const r=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(s,e,t)=>{t.r(e),t.d(e,{DATA_TYPES:()=>a,DEFAULT_DEVICE_DTYPE_MAPPING:()=>o,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>i});var r=t("./src/env.js"),n=t("./src/utils/devices.js");const i=function(){let u;return async function(){if(u===void 0)if(!r.apis.IS_WEBGPU_AVAILABLE)u=!1;else try{u=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{u=!1}return u}}(),a=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),o=Object.freeze({[n.DEVICE_TYPES.wasm]:a.q8}),l=Object.freeze({[a.fp32]:"",[a.fp16]:"_fp16",[a.int8]:"_int8",[a.uint8]:"_uint8",[a.q8]:"_quantized",[a.q4]:"_q4",[a.q4f16]:"_q4f16",[a.bnb4]:"_bnb4"})},"./src/utils/generic.js":(s,e,t)=>{t.r(e),t.d(e,{Callable:()=>r});const r=class{constructor(){let n=function(...i){return n._call(...i)};return Object.setPrototypeOf(n,new.target.prototype)}_call(...n){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(s,e,t)=>{t.r(e),t.d(e,{MAX_EXTERNAL_DATA_CHUNKS:()=>o,getFile:()=>_,getModelFile:()=>M,getModelJSON:()=>v,getModelText:()=>k});var r=t("?7992"),n=t("?5af5"),i=t("./src/env.js"),a=t("./src/utils/core.js");const o=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class u{constructor(P){if(this.filePath=P,this.headers=new Headers,this.exists=r.existsSync(P),this.exists){this.status=200,this.statusText="OK";let O=r.statSync(P);this.headers.set("content-length",O.size.toString()),this.updateContentType();const L=r.createReadStream(P);this.body=new ReadableStream({start(G){L.on("data",K=>G.enqueue(K)),L.on("end",()=>G.close()),L.on("error",K=>G.error(K))},cancel(){L.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const P=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[P]??"application/octet-stream")}clone(){let P=new u(this.filePath);return P.exists=this.exists,P.status=this.status,P.statusText=this.statusText,P.headers=new Headers(this.headers),P}async arrayBuffer(){return(await r.promises.readFile(this.filePath)).buffer}async blob(){const P=await r.promises.readFile(this.filePath);return new Blob([P],{type:this.headers.get("content-type")})}async text(){return await r.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function h(x,P=null,O=null){let L;try{L=new URL(x)}catch{return!1}return!(P&&!P.includes(L.protocol)||O&&!O.includes(L.hostname))}const d=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;function c(x){return!(!d.test(x)||x.includes("..")||x.includes("--")||x.endsWith(".git")||x.endsWith(".ipynb"))}async function _(x){var P;if(i.env.useFS&&!h(x,["http:","https:","blob:"]))return new u(x instanceof URL?x.protocol==="file:"?x.pathname:x.toString():x);if(typeof process<"u"&&((P=process==null?void 0:process.release)==null?void 0:P.name)==="node"){const O=!!(Vr!=null&&Vr.TESTING_REMOTELY),L=i.env.version,G=new Headers;if(G.set("User-Agent",`transformers.js/${L}; is_ci/${O};`),h(x,["http:","https:"],["huggingface.co","hf.co"])){const R=(Vr==null?void 0:Vr.HF_TOKEN)??(Vr==null?void 0:Vr.HF_ACCESS_TOKEN);R&&G.set("Authorization",`Bearer ${R}`)}return fetch(x,{headers:G})}else return fetch(x)}const f={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function b(x,P,O){if(!O)return null;const L=f[x]??`Error (${x}) occurred while trying to load file`;throw Error(`${L}: "${P}".`)}class I{constructor(P){this.path=P}async match(P){let O=n.join(this.path,P),L=new u(O);if(L.exists)return L}async put(P,O,L=void 0){let G=n.join(this.path,P);try{const K=O.headers.get("Content-Length"),R=parseInt(K??"0");let te=0;await r.promises.mkdir(n.dirname(G),{recursive:!0});const H=r.createWriteStream(G),ee=O.body.getReader();for(;;){const{done:Z,value:ne}=await ee.read();if(Z)break;await new Promise((ce,j)=>{H.write(ne,F=>{if(F){j(F);return}ce()})}),te+=ne.length;const me=R?te/R*100:0;L==null||L({progress:me,loaded:te,total:R})}H.close()}catch(K){try{await r.promises.unlink(G)}catch{}throw K}}}async function g(x,...P){for(let O of P)try{let L=await x.match(O);if(L)return L}catch{continue}}async function M(x,P,O=!0,L={},G=!1){if(!i.env.allowLocalModels){if(L.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!i.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,a.dispatchCallback)(L.progress_callback,{status:"initiate",name:x,file:P});let K;if(!K&&i.env.useCustomCache){if(!i.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!i.env.customCache.match||!i.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");K=i.env.customCache}if(!K&&i.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{K=await caches.open("transformers-cache")}catch(fe){console.warn("An error occurred while opening the browser cache:",fe)}}if(!K&&i.env.useFSCache){if(!i.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");K=new I(L.cache_dir??i.env.cacheDir)}const R=L.revision??"main",te=T(x,P),H=c(x),ee=H?T(i.env.localModelPath,te):te,Z=T(i.env.remoteHost,i.env.remotePathTemplate.replaceAll("{model}",x).replaceAll("{revision}",encodeURIComponent(R)),P);let ne;const me=K instanceof I?R==="main"?te:T(x,R,P):Z;let ce=!1,j;K&&(j=await g(K,ee,me));const F=j!==void 0;if(j===void 0){if(i.env.allowLocalModels)if(h(te,["http:","https:"])){if(L.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${te}.`);if(!i.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${te}.`)}else try{j=await _(ee),ne=ee}catch(ae){console.warn(`Unable to load from local path "${ee}": "${ae}"`)}if(j===void 0||j.status===404){if(L.local_files_only||!i.env.allowRemoteModels){if(O)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${ee}".`);return null}if(!H)throw Error(`Local file missing at "${ee}" and download aborted due to invalid model ID "${x}".`);if(j=await _(Z),j.status!==200)return b(j.status,Z,O);ne=me}ce=K&&typeof Response<"u"&&j instanceof Response&&j.status===200}(0,a.dispatchCallback)(L.progress_callback,{status:"download",name:x,file:P});let V;if(!(i.apis.IS_NODE_ENV&&G)){let fe;L.progress_callback?F&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(fe=new Uint8Array(await j.arrayBuffer()),(0,a.dispatchCallback)(L.progress_callback,{status:"progress",name:x,file:P,progress:100,loaded:fe.length,total:fe.length})):fe=await y(j,ae=>{(0,a.dispatchCallback)(L.progress_callback,{status:"progress",name:x,file:P,...ae})}):fe=new Uint8Array(await j.arrayBuffer()),V=fe}if(ce&&ne&&await K.match(ne)===void 0&&(V?await K.put(ne,new Response(V,{headers:j.headers})).catch(fe=>{console.warn(`Unable to add response to browser cache: ${fe}.`)}):await K.put(ne,j,L.progress_callback)),(0,a.dispatchCallback)(L.progress_callback,{status:"done",name:x,file:P}),V){if(!i.apis.IS_NODE_ENV&&G)throw new Error("Cannot return path in a browser environment.");return V}if(j instanceof u)return j.filePath;const re=await(K==null?void 0:K.match(ne));if(re instanceof u)return re.filePath;if(re instanceof Response)return new Uint8Array(await re.arrayBuffer());if(typeof re=="string")return re;throw new Error("Unable to get model file path or buffer.")}async function k(x,P,O=!0,L={}){const G=await M(x,P,O,L,!1);return G===null?null:new TextDecoder("utf-8").decode(G)}async function v(x,P,O=!0,L={}){const G=await k(x,P,O,L);return G===null?{}:JSON.parse(G)}async function y(x,P){const O=x.headers.get("Content-Length");O===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let L=parseInt(O??"0"),G=new Uint8Array(L),K=0;const R=x.body.getReader();async function te(){const{done:H,value:ee}=await R.read();if(H)return;const Z=K+ee.length;if(Z>L){L=Z;const me=new Uint8Array(L);me.set(G),G=me}G.set(ee,K),K=Z;const ne=K/L*100;return P({progress:ne,loaded:K,total:L}),te()}return await te(),G}function T(...x){return x=x.map((P,O)=>(O&&(P=P.replace(new RegExp("^/"),"")),O!==x.length-1&&(P=P.replace(new RegExp("/$"),"")),P)),x.join("/")}},"./src/utils/image.js":(s,e,t)=>{t.r(e),t.d(e,{RawImage:()=>f,load_image:()=>b});var r=t("./src/utils/core.js"),n=t("./src/utils/hub.js"),i=t("./src/env.js"),a=t("./src/utils/tensor.js"),o=t("?2b25");let l,u,h;const d=i.apis.IS_BROWSER_ENV||i.apis.IS_WEBWORKER_ENV;if(d)l=(I,g)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(I,g)},h=self.createImageBitmap,u=self.ImageData;else if(o)h=async I=>{const M=(await I.metadata()).channels,{data:k,info:v}=await I.rotate().raw().toBuffer({resolveWithObject:!0}),y=new f(new Uint8ClampedArray(k),v.width,v.height,v.channels);return M!==void 0&&M!==v.channels&&y.convert(M),y};else throw new Error("Unable to load image processing library.");const c={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},_=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class f{constructor(g,M,k,v){this.data=g,this.width=M,this.height=k,this.channels=v}get size(){return[this.width,this.height]}static async read(g){if(g instanceof f)return g;if(typeof g=="string"||g instanceof URL)return await this.fromURL(g);if(g instanceof Blob)return await this.fromBlob(g);if(typeof HTMLCanvasElement<"u"&&g instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&g instanceof OffscreenCanvas)return this.fromCanvas(g);throw new Error(`Unsupported input type: ${typeof g}`)}static fromCanvas(g){if(!d)throw new Error("fromCanvas() is only supported in browser environments.");const k=g.getContext("2d").getImageData(0,0,g.width,g.height).data;return new f(k,g.width,g.height,4)}static async fromURL(g){const M=await(0,n.getFile)(g);if(M.status!==200)throw new Error(`Unable to read image from "${g}" (${M.status} ${M.statusText})`);const k=await M.blob();return this.fromBlob(k)}static async fromBlob(g){if(d){const M=await h(g),k=l(M.width,M.height).getContext("2d");return k.drawImage(M,0,0),new this(k.getImageData(0,0,M.width,M.height).data,M.width,M.height,4)}else{const M=o(await g.arrayBuffer());return await h(M)}}static fromTensor(g,M="CHW"){if(g.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${g.dims.length} dimensions.`);if(M==="CHW")g=g.transpose(1,2,0);else if(M!=="HWC")throw new Error(`Unsupported channel format: ${M}`);if(!(g.data instanceof Uint8ClampedArray||g.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${g.type}`);switch(g.dims[2]){case 1:case 2:case 3:case 4:return new f(g.data,g.dims[1],g.dims[0],g.dims[2]);default:throw new Error(`Unsupported number of channels: ${g.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const g=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let M=0,k=0;M<this.data.length;M+=this.channels){const v=this.data[M],y=this.data[M+1],T=this.data[M+2];g[k++]=Math.round(.2989*v+.587*y+.114*T)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(g,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const g=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let M=0,k=0;M<this.data.length;++M)g[k++]=this.data[M],g[k++]=this.data[M],g[k++]=this.data[M];break;case 4:for(let M=0,k=0;M<this.data.length;M+=4)g[k++]=this.data[M],g[k++]=this.data[M+1],g[k++]=this.data[M+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(g,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const g=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let M=0,k=0;M<this.data.length;++M)g[k++]=this.data[M],g[k++]=this.data[M],g[k++]=this.data[M],g[k++]=255;break;case 3:for(let M=0,k=0;M<this.data.length;M+=3)g[k++]=this.data[M],g[k++]=this.data[M+1],g[k++]=this.data[M+2],g[k++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(g,this.width,this.height,4)}putAlpha(g){if(g.width!==this.width||g.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${g.width}x${g.height}`);if(g.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${g.channels}`);const M=this.data,k=g.data,v=this.width*this.height;if(this.channels===3){const y=new Uint8ClampedArray(v*4);for(let T=0,x=0,P=0;T<v;++T)y[P++]=M[x++],y[P++]=M[x++],y[P++]=M[x++],y[P++]=k[T];return this._update(y,this.width,this.height,4)}else if(this.channels===4){for(let y=0;y<v;++y)M[4*y+3]=k[y];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(g,M,{resample:k=2}={}){if(this.width===g&&this.height===M)return this;let v=c[k]??k;const y=(0,r.isNullishDimension)(g),T=(0,r.isNullishDimension)(M);if(y&&T)return this;if(y?g=M/this.height*this.width:T&&(M=g/this.width*this.height),d){const x=this.channels,P=this.toCanvas(),O=l(g,M).getContext("2d");return O.drawImage(P,0,0,g,M),new f(O.getImageData(0,0,g,M).data,g,M,4).convert(x)}else{let x=this.toSharp();switch(v){case"box":case"hamming":(v==="box"||v==="hamming")&&(console.warn(`Resampling method ${v} is not yet supported. Using bilinear instead.`),v="bilinear");case"nearest":case"bilinear":case"bicubic":x=x.affine([g/this.width,0,0,M/this.height],{interpolator:v});break;case"lanczos":x=x.resize({width:g,height:M,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${v} is not supported.`)}return await h(x)}}async pad([g,M,k,v]){if(g=Math.max(g,0),M=Math.max(M,0),k=Math.max(k,0),v=Math.max(v,0),g===0&&M===0&&k===0&&v===0)return this;if(d){const y=this.channels,T=this.toCanvas(),x=this.width+g+M,P=this.height+k+v,O=l(x,P).getContext("2d");return O.drawImage(T,0,0,this.width,this.height,g,k,this.width,this.height),new f(O.getImageData(0,0,x,P).data,x,P,4).convert(y)}else{const y=this.toSharp().extend({left:g,right:M,top:k,bottom:v});return await h(y)}}async crop([g,M,k,v]){if(g=Math.max(g,0),M=Math.max(M,0),k=Math.min(k,this.width-1),v=Math.min(v,this.height-1),g===0&&M===0&&k===this.width-1&&v===this.height-1)return this;const y=k-g+1,T=v-M+1;if(d){const x=this.channels,P=this.toCanvas(),O=l(y,T).getContext("2d");return O.drawImage(P,g,M,y,T,0,0,y,T),new f(O.getImageData(0,0,y,T).data,y,T,4).convert(x)}else{const x=this.toSharp().extract({left:g,top:M,width:y,height:T});return await h(x)}}async center_crop(g,M){if(this.width===g&&this.height===M)return this;const k=(this.width-g)/2,v=(this.height-M)/2;if(d){const y=this.channels,T=this.toCanvas(),x=l(g,M).getContext("2d");let P=0,O=0,L=0,G=0;return k>=0?P=k:L=-k,v>=0?O=v:G=-v,x.drawImage(T,P,O,g,M,L,G,g,M),new f(x.getImageData(0,0,g,M).data,g,M,4).convert(y)}else{let y=this.toSharp();if(k>=0&&v>=0)y=y.extract({left:Math.floor(k),top:Math.floor(v),width:g,height:M});else if(k<=0&&v<=0){const T=Math.floor(-v),x=Math.floor(-k);y=y.extend({top:T,left:x,right:g-this.width-x,bottom:M-this.height-T})}else{let T=[0,0],x=0;v<0?(T[0]=Math.floor(-v),T[1]=M-this.height-T[0]):x=Math.floor(v);let P=[0,0],O=0;k<0?(P[0]=Math.floor(-k),P[1]=g-this.width-P[0]):O=Math.floor(k),y=y.extend({top:T[0],bottom:T[1],left:P[0],right:P[1]}).extract({left:O,top:x,width:g,height:M})}return await h(y)}}async toBlob(g="image/png",M=1){if(!d)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:g,quality:M})}toTensor(g="CHW"){let M=new a.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(g!=="HWC")if(g==="CHW")M=M.permute(2,0,1);else throw new Error(`Unsupported channel format: ${g}`);return M}toCanvas(){if(!d)throw new Error("toCanvas() is only supported in browser environments.");const g=this.clone().rgba(),M=l(g.width,g.height),k=new u(g.data,g.width,g.height);return M.getContext("2d").putImageData(k,0,0),M}split(){const{data:g,width:M,height:k,channels:v}=this,y=g.constructor,T=g.length/v,x=Array.from({length:v},()=>new y(T));for(let P=0;P<T;++P){const O=v*P;for(let L=0;L<v;++L)x[L][P]=g[O+L]}return x.map(P=>new f(P,M,k,1))}_update(g,M,k,v=null){return this.data=g,this.width=M,this.height=k,v!==null&&(this.channels=v),this}clone(){return new f(this.data.slice(),this.width,this.height,this.channels)}convert(g){if(this.channels===g)return this;switch(g){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(g){if(d){if(i.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const M=g.split(".").pop().toLowerCase(),k=_.get(M)??"image/png",v=await this.toBlob(k);(0,r.saveBlob)(g,v)}else{if(i.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(g);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(d)throw new Error("toSharp() is only supported in server-side environments.");return o(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const b=f.read.bind(f)},"./src/utils/maths.js":(s,e,t)=>{t.r(e),t.d(e,{FFT:()=>b,bankers_round:()=>M,cos_sim:()=>l,dot:()=>o,dynamic_time_warping:()=>k,interpolate_data:()=>r,log_softmax:()=>a,magnitude:()=>u,max:()=>d,medianFilter:()=>I,min:()=>h,permute_data:()=>n,round:()=>g,softmax:()=>i});function r(v,[y,T,x],[P,O],L="bilinear",G=!1){const K=O/x,R=P/T,te=new v.constructor(P*O*y),H=T*x,ee=P*O;for(let Z=0;Z<P;++Z)for(let ne=0;ne<O;++ne){const me=Z*O+ne,ce=(ne+.5)/K-.5,j=(Z+.5)/R-.5;let F=Math.floor(ce),V=Math.floor(j);const re=Math.min(F+1,x-1),fe=Math.min(V+1,T-1);F=Math.max(F,0),V=Math.max(V,0);const ae=ce-F,ve=j-V,ze=(1-ae)*(1-ve),Ge=ae*(1-ve),$e=(1-ae)*ve,Q=ae*ve,oe=V*x,W=fe*x,be=oe+F,Ie=oe+re,Ee=W+F,Me=W+re;for(let Se=0;Se<y;++Se){const we=Se*H;te[Se*ee+me]=ze*v[we+be]+Ge*v[we+Ie]+$e*v[we+Ee]+Q*v[we+Me]}}return te}function n(v,y,T){const x=new Array(T.length),P=new Array(T.length);for(let G=T.length-1,K=1;G>=0;--G)P[G]=K,x[G]=y[T[G]],K*=x[G];const O=T.map((G,K)=>P[T.indexOf(K)]),L=new v.constructor(v.length);for(let G=0;G<v.length;++G){let K=0;for(let R=y.length-1,te=G;R>=0;--R)K+=te%y[R]*O[R],te=Math.floor(te/y[R]);L[K]=v[G]}return[L,x]}function i(v){const y=d(v)[0],T=v.map(O=>Math.exp(O-y)),x=T.reduce((O,L)=>O+L,0);return T.map(O=>O/x)}function a(v){const y=d(v)[0];let T=0;for(let O=0;O<v.length;++O)T+=Math.exp(v[O]-y);const x=Math.log(T);return v.map(O=>O-y-x)}function o(v,y){let T=0;for(let x=0;x<v.length;++x)T+=v[x]*y[x];return T}function l(v,y){const T=o(v,y),x=u(v),P=u(y);return T/(x*P)}function u(v){return Math.sqrt(v.reduce((y,T)=>y+T*T,0))}function h(v){if(v.length===0)throw Error("Array must not be empty");let y=v[0],T=0;for(let x=1;x<v.length;++x)v[x]<y&&(y=v[x],T=x);return[y,T]}function d(v){if(v.length===0)throw Error("Array must not be empty");let y=v[0],T=0;for(let x=1;x<v.length;++x)v[x]>y&&(y=v[x],T=x);return[y,T]}function c(v){return v>0&&(v&v-1)===0}class _{constructor(y){if(this.size=y|0,this.size<=1||!c(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=y<<1,this.table=new Float64Array(this.size*2);for(let x=0;x<this.table.length;x+=2){const P=Math.PI*x/this.size;this.table[x]=Math.cos(P),this.table[x+1]=-Math.sin(P)}let T=0;for(let x=1;this.size>x;x<<=1)++T;this._width=T%2===0?T-1:T,this._bitrev=new Int32Array(1<<this._width);for(let x=0;x<this._bitrev.length;++x){this._bitrev[x]=0;for(let P=0;P<this._width;P+=2){const O=this._width-P-2;this._bitrev[x]|=(x>>>P&3)<<O}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(y,T){const x=T||new Array(y.length>>>1);for(let P=0;P<y.length;P+=2)x[P>>>1]=y[P];return x}toComplexArray(y,T){const x=T||this.createComplexArray();for(let P=0;P<x.length;P+=2)x[P]=y[P>>>1],x[P+1]=0;return x}transform(y,T){if(y===T)throw new Error("Input and output buffers must be different");this._transform4(y,T,1)}realTransform(y,T){if(y===T)throw new Error("Input and output buffers must be different");this._realTransform4(y,T,1)}inverseTransform(y,T){if(y===T)throw new Error("Input and output buffers must be different");this._transform4(y,T,-1);for(let x=0;x<y.length;++x)y[x]/=this.size}_transform4(y,T,x){const P=this._csize;let L=1<<this._width,G=P/L<<1,K,R;const te=this._bitrev;if(G===4)for(K=0,R=0;K<P;K+=G,++R){const ee=te[R];this._singleTransform2(T,y,K,ee,L)}else for(K=0,R=0;K<P;K+=G,++R){const ee=te[R];this._singleTransform4(T,y,K,ee,L,x)}const H=this.table;for(L>>=2;L>=2;L>>=2){G=P/L<<1;const ee=G>>>2;for(K=0;K<P;K+=G){const Z=K+ee-1;for(let ne=K,me=0;ne<Z;ne+=2,me+=L){const ce=ne,j=ce+ee,F=j+ee,V=F+ee,re=y[ce],fe=y[ce+1],ae=y[j],ve=y[j+1],ze=y[F],Ge=y[F+1],$e=y[V],Q=y[V+1],oe=H[me],W=x*H[me+1],be=ae*oe-ve*W,Ie=ae*W+ve*oe,Ee=H[2*me],Me=x*H[2*me+1],Se=ze*Ee-Ge*Me,we=ze*Me+Ge*Ee,Ae=H[3*me],Be=x*H[3*me+1],Xe=$e*Ae-Q*Be,xe=$e*Be+Q*Ae,Ze=re+Se,Ke=fe+we,nt=re-Se,Je=fe-we,Oe=be+Xe,Ye=Ie+xe,at=x*(be-Xe),At=x*(Ie-xe);y[ce]=Ze+Oe,y[ce+1]=Ke+Ye,y[j]=nt+At,y[j+1]=Je-at,y[F]=Ze-Oe,y[F+1]=Ke-Ye,y[V]=nt-At,y[V+1]=Je+at}}}}_singleTransform2(y,T,x,P,O){const L=y[P],G=y[P+1],K=y[P+O],R=y[P+O+1];T[x]=L+K,T[x+1]=G+R,T[x+2]=L-K,T[x+3]=G-R}_singleTransform4(y,T,x,P,O,L){const G=O*2,K=O*3,R=y[P],te=y[P+1],H=y[P+O],ee=y[P+O+1],Z=y[P+G],ne=y[P+G+1],me=y[P+K],ce=y[P+K+1],j=R+Z,F=te+ne,V=R-Z,re=te-ne,fe=H+me,ae=ee+ce,ve=L*(H-me),ze=L*(ee-ce);T[x]=j+fe,T[x+1]=F+ae,T[x+2]=V+ze,T[x+3]=re-ve,T[x+4]=j-fe,T[x+5]=F-ae,T[x+6]=V-ze,T[x+7]=re+ve}_realTransform4(y,T,x){const P=this._csize;let L=1<<this._width,G=P/L<<1,K,R;const te=this._bitrev;if(G===4)for(K=0,R=0;K<P;K+=G,++R){const Z=te[R];this._singleRealTransform2(T,y,K,Z>>>1,L>>>1)}else for(K=0,R=0;K<P;K+=G,++R){const Z=te[R];this._singleRealTransform4(T,y,K,Z>>>1,L>>>1,x)}const H=this.table;for(L>>=2;L>=2;L>>=2){G=P/L<<1;const Z=G>>>1,ne=Z>>>1,me=ne>>>1;for(K=0;K<P;K+=G)for(let ce=0,j=0;ce<=me;ce+=2,j+=L){const F=K+ce,V=F+ne,re=V+ne,fe=re+ne,ae=y[F],ve=y[F+1],ze=y[V],Ge=y[V+1],$e=y[re],Q=y[re+1],oe=y[fe],W=y[fe+1],be=ae,Ie=ve,Ee=H[j],Me=x*H[j+1],Se=ze*Ee-Ge*Me,we=ze*Me+Ge*Ee,Ae=H[2*j],Be=x*H[2*j+1],Xe=$e*Ae-Q*Be,xe=$e*Be+Q*Ae,Ze=H[3*j],Ke=x*H[3*j+1],nt=oe*Ze-W*Ke,Je=oe*Ke+W*Ze,Oe=be+Xe,Ye=Ie+xe,at=be-Xe,At=Ie-xe,kt=Se+nt,Mt=we+Je,bs=x*(Se-nt),Ps=x*(we-Je);if(y[F]=Oe+kt,y[F+1]=Ye+Mt,y[V]=at+Ps,y[V+1]=At-bs,ce===0){y[re]=Oe-kt,y[re+1]=Ye-Mt;continue}if(ce===me)continue;const Ns=K+ne-ce,lr=K+Z-ce;y[Ns]=at-x*Ps,y[Ns+1]=-At-x*bs,y[lr]=Oe-x*kt,y[lr+1]=-Ye+x*Mt}}const ee=P>>>1;for(let Z=2;Z<ee;Z+=2)y[P-Z]=y[Z],y[P-Z+1]=-y[Z+1]}_singleRealTransform2(y,T,x,P,O){const L=y[P],G=y[P+O];T[x]=L+G,T[x+1]=0,T[x+2]=L-G,T[x+3]=0}_singleRealTransform4(y,T,x,P,O,L){const G=O*2,K=O*3,R=y[P],te=y[P+O],H=y[P+G],ee=y[P+K],Z=R+H,ne=R-H,me=te+ee,ce=L*(te-ee);T[x]=Z+me,T[x+1]=0,T[x+2]=ne,T[x+3]=-ce,T[x+4]=Z-me,T[x+5]=0,T[x+6]=ne,T[x+7]=ce}}class f{constructor(y){const T=2*(y-1),x=2*(2*y-1),P=2**Math.ceil(Math.log2(x));this.bufferSize=P,this._a=T;const O=new Float64Array(x),L=new Float64Array(P);this._chirpBuffer=new Float64Array(P),this._buffer1=new Float64Array(P),this._buffer2=new Float64Array(P),this._outBuffer1=new Float64Array(P),this._outBuffer2=new Float64Array(P);const G=-2*Math.PI/y,K=Math.cos(G),R=Math.sin(G);for(let te=0;te<x>>1;++te){const H=(te+1-y)**2/2,ee=Math.sqrt(K**2+R**2)**H,Z=H*Math.atan2(R,K),ne=2*te;O[ne]=ee*Math.cos(Z),O[ne+1]=ee*Math.sin(Z),L[ne]=O[ne],L[ne+1]=-O[ne+1]}this._slicedChirpBuffer=O.subarray(T,x),this._f=new _(P>>1),this._f.transform(this._chirpBuffer,L)}_transform(y,T,x){const P=this._buffer1,O=this._buffer2,L=this._outBuffer1,G=this._outBuffer2,K=this._chirpBuffer,R=this._slicedChirpBuffer,te=this._a;if(x)for(let H=0;H<R.length;H+=2){const ee=H+1,Z=H>>1,ne=T[Z];P[H]=ne*R[H],P[ee]=ne*R[ee]}else for(let H=0;H<R.length;H+=2){const ee=H+1;P[H]=T[H]*R[H]-T[ee]*R[ee],P[ee]=T[H]*R[ee]+T[ee]*R[H]}this._f.transform(L,P);for(let H=0;H<K.length;H+=2){const ee=H+1;O[H]=L[H]*K[H]-L[ee]*K[ee],O[ee]=L[H]*K[ee]+L[ee]*K[H]}this._f.inverseTransform(G,O);for(let H=0;H<G.length;H+=2){const ee=G[H+te],Z=G[H+te+1],ne=R[H],me=R[H+1];y[H]=ee*ne-Z*me,y[H+1]=ee*me+Z*ne}}transform(y,T){this._transform(y,T,!1)}realTransform(y,T){this._transform(y,T,!0)}}class b{constructor(y){this.fft_length=y,this.isPowerOfTwo=c(y),this.isPowerOfTwo?(this.fft=new _(y),this.outputBufferSize=2*y):(this.fft=new f(y),this.outputBufferSize=this.fft.bufferSize)}realTransform(y,T){this.fft.realTransform(y,T)}transform(y,T){this.fft.transform(y,T)}}function I(v,y){if(y%2===0||y<=0)throw new Error("Window size must be a positive odd number");const T=new v.constructor(v.length),x=new v.constructor(y),P=Math.floor(y/2);for(let O=0;O<v.length;++O){let L=0;for(let G=-P;G<=P;++G){let K=O+G;K<0?K=Math.abs(K):K>=v.length&&(K=2*(v.length-1)-K),x[L++]=v[K]}x.sort(),T[O]=x[P]}return T}function g(v,y){const T=Math.pow(10,y);return Math.round(v*T)/T}function M(v){const y=Math.round(v);return Math.abs(v)%1===.5?y%2===0?y:y-1:y}function k(v){const y=v.length,T=v[0].length,x=[y+1,T+1],P=Array.from({length:x[0]},()=>Array(x[1]).fill(1/0));P[0][0]=0;const O=Array.from({length:x[0]},()=>Array(x[1]).fill(-1));for(let te=1;te<x[1];++te)for(let H=1;H<x[0];++H){const ee=P[H-1][te-1],Z=P[H-1][te],ne=P[H][te-1];let me,ce;ee<Z&&ee<ne?(me=ee,ce=0):Z<ee&&Z<ne?(me=Z,ce=1):(me=ne,ce=2),P[H][te]=v[H-1][te-1]+me,O[H][te]=ce}for(let te=0;te<x[1];++te)O[0][te]=2;for(let te=0;te<x[0];++te)O[te][0]=1;let L=y,G=T,K=[],R=[];for(;L>0||G>0;)switch(K.push(L-1),R.push(G-1),O[L][G]){case 0:--L,--G;break;case 1:--L;break;case 2:--G;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${L}, ${G}]. Please file a bug report.`)}return K.reverse(),R.reverse(),[K,R]}},"./src/utils/tensor.js":(s,e,t)=>{t.r(e),t.d(e,{DataTypeMap:()=>a,Tensor:()=>o,cat:()=>T,full:()=>R,full_like:()=>te,interpolate:()=>h,interpolate_4d:()=>d,layer_norm:()=>M,matmul:()=>c,mean:()=>L,mean_pooling:()=>g,ones:()=>H,ones_like:()=>ee,permute:()=>u,quantize_embeddings:()=>ce,rand:()=>me,rfft:()=>_,slice:()=>I,stack:()=>x,std_mean:()=>O,topk:()=>f,zeros:()=>Z,zeros_like:()=>ne});var r=t("./src/utils/maths.js"),n=t("./src/backends/onnx.js"),i=t("./src/ops/registry.js");const a=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class o{constructor(...F){J(this,"ort_tensor");return(0,n.isONNXTensor)(F[0])?this.ort_tensor=F[0]:this.ort_tensor=new n.Tensor(F[0],F[1],F[2]),new Proxy(this,{get:(V,re)=>{if(typeof re=="string"){let fe=Number(re);if(Number.isInteger(fe))return V._getitem(fe)}return V[re]},set:(V,re,fe)=>V[re]=fe})}get dims(){return this.ort_tensor.dims}set dims(F){this.ort_tensor.dims=F}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[F,...V]=this.dims;if(V.length>0){const re=V.reduce((fe,ae)=>fe*ae);for(let fe=0;fe<F;++fe)yield this._subarray(fe,re,V)}else yield*this.data}_getitem(F){const[V,...re]=this.dims;if(F=y(F,V),re.length>0){const fe=re.reduce((ae,ve)=>ae*ve);return this._subarray(F,fe,re)}else return new o(this.type,[this.data[F]],re)}indexOf(F){const V=this.data;for(let re=0;re<V.length;++re)if(V[re]==F)return re;return-1}_subarray(F,V,re){const fe=F*V,ae=(F+1)*V,ve="subarray"in this.data?this.data.subarray(fe,ae):this.data.slice(fe,ae);return new o(this.type,ve,re)}item(){const F=this.data;if(F.length!==1)throw new Error(`a Tensor with ${F.length} elements cannot be converted to Scalar`);return F[0]}tolist(){return l(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const F=this.data;for(let V=0;V<F.length;++V)F[V]=1/(1+Math.exp(-F[V]));return this}map(F){return this.clone().map_(F)}map_(F){const V=this.data;for(let re=0;re<V.length;++re)V[re]=F(V[re],re,V);return this}mul(F){return this.clone().mul_(F)}mul_(F){const V=this.data;for(let re=0;re<V.length;++re)V[re]*=F;return this}div(F){return this.clone().div_(F)}div_(F){const V=this.data;for(let re=0;re<V.length;++re)V[re]/=F;return this}add(F){return this.clone().add_(F)}add_(F){const V=this.data;for(let re=0;re<V.length;++re)V[re]+=F;return this}sub(F){return this.clone().sub_(F)}sub_(F){const V=this.data;for(let re=0;re<V.length;++re)V[re]-=F;return this}clone(){return new o(this.type,this.data.slice(),this.dims.slice())}slice(...F){const V=[],re=[];for(let Q=0;Q<this.dims.length;++Q){let oe=F[Q];if(oe==null)re.push([0,this.dims[Q]]),V.push(this.dims[Q]);else if(typeof oe=="number")oe=y(oe,this.dims[Q],Q),re.push([oe,oe+1]);else if(Array.isArray(oe)&&oe.length===2){let[W,be]=oe;if(W=W===null?0:y(W,this.dims[Q],Q,!1),be=be===null?this.dims[Q]:y(be,this.dims[Q],Q,!1),W>be)throw new Error(`Invalid slice: ${oe}`);const Ie=[Math.max(W,0),Math.min(be,this.dims[Q])];re.push(Ie),V.push(Ie[1]-Ie[0])}else throw new Error(`Invalid slice: ${oe}`)}const fe=re.map(([Q,oe])=>oe-Q),ae=fe.reduce((Q,oe)=>Q*oe),ve=this.data,ze=new ve.constructor(ae),Ge=this.stride();let $e=!0;for(let Q=1;Q<fe.length;++Q)if(re[Q][0]!==0||re[Q][1]!==this.dims[Q]){$e=!1;break}if($e){const Q=re[0][0]*Ge[0],oe=re[0][1]*Ge[0];if(ArrayBuffer.isView(ve))ze.set(ve.subarray(Q,oe));else if(Array.isArray(ve)){const W=ve.slice(Q,oe);for(let be=0;be<W.length;++be)ze[be]=W[be]}else throw new Error("Unsupported data type for slicing")}else for(let Q=0;Q<ae;++Q){let oe=0;for(let W=fe.length-1,be=Q;W>=0;--W){const Ie=fe[W];oe+=(be%Ie+re[W][0])*Ge[W],be=Math.floor(be/Ie)}ze[Q]=ve[oe]}return new o(this.type,ze,V)}permute(...F){return u(this,F)}transpose(...F){return this.permute(...F)}sum(F=null,V=!1){return this.norm(1,F,V)}norm(F="fro",V=null,re=!1){if(F==="fro")F=2;else if(typeof F=="string")throw Error(`Unsupported norm: ${F}`);const fe=this.data,ae=($e,Q)=>$e+Q**F;if(V===null){const $e=fe.reduce(ae,0)**(1/F);return new o(this.type,[$e],[])}const[ve,ze,Ge]=P(ae,this,V,re);if(F!==1)for(let $e=0;$e<ze.length;++$e)ze[$e]=ze[$e]**(1/F);return new o(ve,ze,Ge)}normalize_(F=2,V=1){V=y(V,this.dims.length);const re=this.norm(F,V,!0),fe=this.data,ae=re.data;for(let ve=0;ve<fe.length;++ve){let ze=0;for(let Ge=this.dims.length-1,$e=ve,Q=1;Ge>=0;--Ge){const oe=this.dims[Ge];if(Ge!==V){const W=$e%oe;ze+=W*Q,Q*=this.dims[Ge]}$e=Math.floor($e/oe)}fe[ve]/=ae[ze]}return this}normalize(F=2,V=1){return this.clone().normalize_(F,V)}stride(){return G(this.dims)}squeeze(F=null){return new o(this.type,this.data,k(this.dims,F))}squeeze_(F=null){return this.dims=k(this.dims,F),this}unsqueeze(F=null){return new o(this.type,this.data,v(this.dims,F))}unsqueeze_(F=null){return this.dims=v(this.dims,F),this}flatten_(F=0,V=-1){V=(V+this.dims.length)%this.dims.length;let re=this.dims.slice(0,F),fe=this.dims.slice(F,V+1),ae=this.dims.slice(V+1);return this.dims=[...re,fe.reduce((ve,ze)=>ve*ze,1),...ae],this}flatten(F=0,V=-1){return this.clone().flatten_(F,V)}view(...F){let V=-1;for(let fe=0;fe<F.length;++fe)if(F[fe]===-1){if(V!==-1)throw new Error("Only one dimension can be inferred");V=fe}const re=this.data;if(V!==-1){const fe=F.reduce((ae,ve,ze)=>ze!==V?ae*ve:ae,1);F[V]=re.length/fe}return new o(this.type,re,F)}neg_(){const F=this.data;for(let V=0;V<F.length;++V)F[V]=-F[V];return this}neg(){return this.clone().neg_()}gt(F){const V=new Uint8Array(this.data.length),re=this.data;for(let fe=0;fe<re.length;++fe)V[fe]=re[fe]>F?1:0;return new o("bool",V,this.dims)}lt(F){const V=new Uint8Array(this.data.length),re=this.data;for(let fe=0;fe<re.length;++fe)V[fe]=re[fe]<F?1:0;return new o("bool",V,this.dims)}clamp_(F,V){const re=this.data;for(let fe=0;fe<re.length;++fe)re[fe]=Math.min(Math.max(re[fe],F),V);return this}clamp(F,V){return this.clone().clamp_(F,V)}round_(){const F=this.data;for(let V=0;V<F.length;++V)F[V]=Math.round(F[V]);return this}round(){return this.clone().round_()}mean(F=null,V=!1){return L(this,F,V)}min(F=null,V=!1){if(F===null){const ve=(0,r.min)(this.data)[0];return new o(this.type,[ve],[])}const[re,fe,ae]=P((ve,ze)=>Math.min(ve,ze),this,F,V,1/0);return new o(re,fe,ae)}max(F=null,V=!1){if(F===null){const ve=(0,r.max)(this.data)[0];return new o(this.type,[ve],[])}const[re,fe,ae]=P((ve,ze)=>Math.max(ve,ze),this,F,V,-1/0);return new o(re,fe,ae)}argmin(F=null,V=!1){if(F!==null)throw new Error("`dim !== null` not yet implemented.");const re=(0,r.min)(this.data)[1];return new o("int64",[BigInt(re)],[])}argmax(F=null,V=!1){if(F!==null)throw new Error("`dim !== null` not yet implemented.");const re=(0,r.max)(this.data)[1];return new o("int64",[BigInt(re)],[])}to(F){if(this.type===F)return this;if(!a.hasOwnProperty(F))throw new Error(`Unsupported type: ${F}`);let V;const re=["int64","uint64"].includes(this.type),fe=["int64","uint64"].includes(F);return re&&!fe?V=Number:!re&&fe&&(V=BigInt),new o(F,a[F].from(this.data,V),this.dims)}}function l(j,F){const V=j.length,re=F.reduce((ae,ve)=>ae*ve);if(V!==re)throw Error(`cannot reshape array of size ${V} into shape (${F})`);let fe=j;for(let ae=F.length-1;ae>=0;ae--)fe=fe.reduce((ve,ze)=>{let Ge=ve[ve.length-1];return Ge.length<F[ae]?Ge.push(ze):ve.push([ze]),ve},[[]]);return fe[0]}function u(j,F){const[V,re]=(0,r.permute_data)(j.data,j.dims,F);return new o(j.type,V,re)}function h(j,[F,V],re="bilinear",fe=!1){const ae=j.dims.at(-3)??1,ve=j.dims.at(-2),ze=j.dims.at(-1);let Ge=(0,r.interpolate_data)(j.data,[ae,ve,ze],[F,V],re,fe);return new o(j.type,Ge,[ae,F,V])}async function d(j,{size:F=null,mode:V="bilinear"}={}){if(j.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!F)throw new Error("`interpolate_4d` requires a `size` argument.");let re;if(F.length===2)re=[...j.dims.slice(0,2),...F];else if(F.length===3)re=[j.dims[0],...F];else if(F.length===4)re=F;else throw new Error("`size` must be of length 2, 3, or 4.");let fe;if(V==="nearest")fe=await i.TensorOpRegistry.nearest_interpolate_4d;else if(V==="bilinear")fe=await i.TensorOpRegistry.bilinear_interpolate_4d;else if(V==="bicubic")fe=await i.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${V}`);const ae=new o("int64",new BigInt64Array(re.map(BigInt)),[re.length]);return await fe({x:j,s:ae})}async function c(j,F){return await(await i.TensorOpRegistry.matmul)({a:j,b:F})}async function _(j,F){return await(await i.TensorOpRegistry.rfft)({x:j,a:F})}async function f(j,F){const V=await i.TensorOpRegistry.top_k;return F==null?F=j.dims.at(-1):F=Math.min(F,j.dims.at(-1)),await V({x:j,k:new o("int64",[BigInt(F)],[1])})}const b=j=>new o("int64",j,[j.length]);async function I(j,F,V,re,fe){return await(await i.TensorOpRegistry.slice)({x:j,s:b(F),e:b(V),a:b(re),t:b(fe??new Array(re.length).fill(1))})}function g(j,F){const V=j.data,re=F.data,fe=[j.dims[0],j.dims[2]],ae=new V.constructor(fe[0]*fe[1]),[ve,ze,Ge]=j.dims;let $e=0;for(let Q=0;Q<ve;++Q){const oe=Q*Ge*ze;for(let W=0;W<Ge;++W){let be=0,Ie=0;const Ee=Q*ze,Me=oe+W;for(let we=0;we<ze;++we){const Ae=Number(re[Ee+we]);Ie+=Ae,be+=V[Me+we*Ge]*Ae}const Se=be/Ie;ae[$e++]=Se}}return new o(j.type,ae,fe)}function M(j,F,{eps:V=1e-5}={}){if(j.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[re,fe]=j.dims;if(F.length!==1&&F[0]!==fe)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[ae,ve]=O(j,1,0,!0),ze=ae.data,Ge=ve.data,$e=j.data,Q=new $e.constructor($e.length);for(let oe=0;oe<re;++oe){const W=oe*fe;for(let be=0;be<fe;++be){const Ie=W+be;Q[Ie]=($e[Ie]-Ge[oe])/(ze[oe]+V)}}return new o(j.type,Q,j.dims)}function k(j,F){return j=j.slice(),F===null?j=j.filter(V=>V!==1):typeof F=="number"?j[F]===1&&j.splice(F,1):Array.isArray(F)&&(j=j.filter((V,re)=>V!==1||!F.includes(re))),j}function v(j,F){return F=y(F,j.length+1),j=j.slice(),j.splice(F,0,1),j}function y(j,F,V=null,re=!0){if(j<-F||j>=F){if(re)throw new Error(`IndexError: index ${j} is out of bounds for dimension${V===null?"":" "+V} with size ${F}`);return j<-F?0:F}return j<0&&(j=(j%F+F)%F),j}function T(j,F=0){F=y(F,j[0].dims.length);const V=j[0].dims.slice();V[F]=j.reduce((ve,ze)=>ve+ze.dims[F],0);const re=V.reduce((ve,ze)=>ve*ze,1),fe=new j[0].data.constructor(re),ae=j[0].type;if(F===0){let ve=0;for(const ze of j){const Ge=ze.data;fe.set(Ge,ve),ve+=Ge.length}}else{let ve=0;for(let ze=0;ze<j.length;++ze){const{data:Ge,dims:$e}=j[ze];for(let Q=0;Q<Ge.length;++Q){let oe=0;for(let W=$e.length-1,be=Q,Ie=1;W>=0;--W){const Ee=$e[W];let Me=be%Ee;W===F&&(Me+=ve),oe+=Me*Ie,Ie*=V[W],be=Math.floor(be/Ee)}fe[oe]=Ge[Q]}ve+=$e[F]}}return new o(ae,fe,V)}function x(j,F=0){return T(j.map(V=>V.unsqueeze(F)),F)}function P(j,F,V=null,re=!1,fe=null){const ae=F.data,ve=F.dims;V=y(V,ve.length);const ze=ve.slice();ze[V]=1;const Ge=new ae.constructor(ae.length/ve[V]);fe!==null&&Ge.fill(fe);for(let $e=0;$e<ae.length;++$e){let Q=0;for(let oe=ve.length-1,W=$e,be=1;oe>=0;--oe){const Ie=ve[oe];if(oe!==V){const Ee=W%Ie;Q+=Ee*be,be*=ze[oe]}W=Math.floor(W/Ie)}Ge[Q]=j(Ge[Q],ae[$e],$e,Q)}return re||ze.splice(V,1),[F.type,Ge,ze]}function O(j,F=null,V=1,re=!1){const fe=j.data,ae=j.dims;if(F===null){const be=fe.reduce((Se,we)=>Se+we,0)/fe.length,Ie=Math.sqrt(fe.reduce((Se,we)=>Se+(we-be)**2,0)/(fe.length-V)),Ee=new o(j.type,[be],[]);return[new o(j.type,[Ie],[]),Ee]}F=y(F,ae.length);const ve=L(j,F,re),ze=ve.data,[Ge,$e,Q]=P((W,be,Ie,Ee)=>W+(be-ze[Ee])**2,j,F,re);for(let W=0;W<$e.length;++W)$e[W]=Math.sqrt($e[W]/(ae[F]-V));return[new o(Ge,$e,Q),ve]}function L(j,F=null,V=!1){const re=j.dims,fe=j.data;if(F===null){const Ge=fe.reduce(($e,Q)=>$e+Q,0);return new o(j.type,[Ge/fe.length],[])}F=y(F,re.length);const[ae,ve,ze]=P((Ge,$e)=>Ge+$e,j,F,V);if(re[F]!==1)for(let Ge=0;Ge<ve.length;++Ge)ve[Ge]/=re[F];return new o(ae,ve,ze)}function G(j){const F=new Array(j.length);for(let V=j.length-1,re=1;V>=0;--V)F[V]=re,re*=j[V];return F}function K(j,F,V,re){const fe=j.reduce((ae,ve)=>ae*ve,1);return new o(V,new re(fe).fill(F),j)}function R(j,F){let V,re;if(typeof F=="number")V="float32",re=Float32Array;else if(typeof F=="bigint")V="int64",re=BigInt64Array;else if(typeof F=="boolean")V="bool",re=Uint8Array;else throw new Error(`Unsupported data type: ${typeof F}`);return K(j,F,V,re)}function te(j,F){return R(j.dims,F)}function H(j){return K(j,1n,"int64",BigInt64Array)}function ee(j){return H(j.dims)}function Z(j){return K(j,0n,"int64",BigInt64Array)}function ne(j){return Z(j.dims)}function me(j){const F=j.reduce((V,re)=>V*re,1);return new o("float32",Float32Array.from({length:F},()=>Math.random()),j)}function ce(j,F){if(j.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(j.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(F))throw new Error("The precision must be either 'binary' or 'ubinary'");const V=F==="binary",re=V?"int8":"uint8",fe=V?Int8Array:Uint8Array,ae=j.data,ve=new fe(ae.length/8);for(let ze=0;ze<ae.length;++ze){const Ge=ae[ze]>0?1:0,$e=Math.floor(ze/8),Q=ze%8;ve[$e]|=Ge<<7-Q,V&&Q===0&&(ve[$e]-=128)}return new o(re,ve,[j.dims[0],j.dims[1]/8])}},"./src/utils/video.js":(s,e,t)=>{t.r(e),t.d(e,{RawVideo:()=>a,RawVideoFrame:()=>i,load_video:()=>o});var r=t("./src/utils/image.js"),n=t("./src/env.js");class i{constructor(u,h){this.image=u,this.timestamp=h}}class a{constructor(u,h){u.length>0&&u[0]instanceof r.RawImage&&(u=u.map((d,c)=>new i(d,(c+1)/(u.length+1)*h))),this.frames=u,this.duration=h}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function o(l,{num_frames:u=null,fps:h=null}={}){if(!n.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(u==null&&h==null)throw new Error("Either num_frames or fps must be provided.");const d=[],c=document.createElement("video");if(c.crossOrigin="anonymous",c.muted=!0,typeof l=="string")c.src=l;else if(l instanceof Blob)c.src=URL.createObjectURL(l);else if(l instanceof HTMLVideoElement)c.src=l.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise(k=>c.onloadedmetadata=k),c.seekable.start(0)===c.seekable.end(0)){const v=await(await fetch(c.src)).blob();c.src=URL.createObjectURL(v),await new Promise(y=>c.onloadedmetadata=y)}const _=c.duration;let f,b;u!=null?(f=u,b=u===1?0:_/(u-1)):(b=1/h,f=Math.floor(_/b));let I=[];for(let k=0;k<f;++k)I.push(u===1?_/2:k*b);const g=document.createElement("canvas");g.width=c.videoWidth,g.height=c.videoHeight;const M=g.getContext("2d",{willReadFrequently:!0});for(const k of I){c.currentTime=k,await new Promise(x=>{c.onseeked=x}),M.drawImage(c,0,0,g.width,g.height);const v=M.getImageData(0,0,g.width,g.height),y=new r.RawImage(v.data,g.width,g.height,4),T=new i(y,k);d.push(T)}return c.remove(),new a(d,_)}}},jM={};function Vt(s){var e=jM[s];if(e!==void 0)return e.exports;var t=jM[s]={exports:{}};return JT[s](t,t.exports,Vt),t.exports}(()=>{var s=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,e;Vt.t=function(t,r){if(r&1&&(t=this(t)),r&8||typeof t=="object"&&t&&(r&4&&t.__esModule||r&16&&typeof t.then=="function"))return t;var n=Object.create(null);Vt.r(n);var i={};e=e||[null,s({}),s([]),s(s)];for(var a=r&2&&t;typeof a=="object"&&!~e.indexOf(a);a=s(a))Object.getOwnPropertyNames(a).forEach(o=>i[o]=()=>t[o]);return i.default=()=>t,Vt.d(n,i),n}})();Vt.d=(s,e)=>{for(var t in e)Vt.o(e,t)&&!Vt.o(s,t)&&Object.defineProperty(s,t,{enumerable:!0,get:e[t]})};Vt.o=(s,e)=>Object.prototype.hasOwnProperty.call(s,e);Vt.r=s=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(s,"__esModule",{value:!0})};var m={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Vt.r(m),Vt.d(m,{ASTFeatureExtractor:()=>d.ASTFeatureExtractor,ASTForAudioClassification:()=>t.ASTForAudioClassification,ASTModel:()=>t.ASTModel,ASTPreTrainedModel:()=>t.ASTPreTrainedModel,AlbertForMaskedLM:()=>t.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>t.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>t.AlbertForSequenceClassification,AlbertModel:()=>t.AlbertModel,AlbertPreTrainedModel:()=>t.AlbertPreTrainedModel,AlbertTokenizer:()=>r.AlbertTokenizer,ArceeForCausalLM:()=>t.ArceeForCausalLM,ArceeModel:()=>t.ArceeModel,ArceePreTrainedModel:()=>t.ArceePreTrainedModel,AudioClassificationPipeline:()=>e.AudioClassificationPipeline,AutoConfig:()=>n.AutoConfig,AutoFeatureExtractor:()=>c.AutoFeatureExtractor,AutoImageProcessor:()=>b.AutoImageProcessor,AutoModel:()=>t.AutoModel,AutoModelForAudioClassification:()=>t.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>t.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>t.AutoModelForAudioTextToText,AutoModelForCTC:()=>t.AutoModelForCTC,AutoModelForCausalLM:()=>t.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>t.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>t.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>t.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>t.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>t.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>t.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>t.AutoModelForImageTextToText,AutoModelForImageToImage:()=>t.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>t.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>t.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>t.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>t.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>t.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>t.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>t.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>t.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>t.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>t.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>t.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>t.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>t.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>t.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>t.AutoModelForVision2Seq,AutoModelForXVector:()=>t.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>t.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>M.AutoProcessor,AutoTokenizer:()=>r.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>e.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>e.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>t.BartForConditionalGeneration,BartForSequenceClassification:()=>t.BartForSequenceClassification,BartModel:()=>t.BartModel,BartPretrainedModel:()=>t.BartPretrainedModel,BartTokenizer:()=>r.BartTokenizer,BaseModelOutput:()=>t.BaseModelOutput,BaseStreamer:()=>k.BaseStreamer,BeitFeatureExtractor:()=>f.BeitFeatureExtractor,BeitForImageClassification:()=>t.BeitForImageClassification,BeitModel:()=>t.BeitModel,BeitPreTrainedModel:()=>t.BeitPreTrainedModel,BertForMaskedLM:()=>t.BertForMaskedLM,BertForQuestionAnswering:()=>t.BertForQuestionAnswering,BertForSequenceClassification:()=>t.BertForSequenceClassification,BertForTokenClassification:()=>t.BertForTokenClassification,BertModel:()=>t.BertModel,BertPreTrainedModel:()=>t.BertPreTrainedModel,BertTokenizer:()=>r.BertTokenizer,BitImageProcessor:()=>f.BitImageProcessor,BlenderbotForConditionalGeneration:()=>t.BlenderbotForConditionalGeneration,BlenderbotModel:()=>t.BlenderbotModel,BlenderbotPreTrainedModel:()=>t.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>t.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>t.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>t.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>r.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>r.BlenderbotTokenizer,BloomForCausalLM:()=>t.BloomForCausalLM,BloomModel:()=>t.BloomModel,BloomPreTrainedModel:()=>t.BloomPreTrainedModel,BloomTokenizer:()=>r.BloomTokenizer,CLIPFeatureExtractor:()=>f.CLIPFeatureExtractor,CLIPImageProcessor:()=>f.CLIPImageProcessor,CLIPModel:()=>t.CLIPModel,CLIPPreTrainedModel:()=>t.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>t.CLIPSegForImageSegmentation,CLIPSegModel:()=>t.CLIPSegModel,CLIPSegPreTrainedModel:()=>t.CLIPSegPreTrainedModel,CLIPTextModel:()=>t.CLIPTextModel,CLIPTextModelWithProjection:()=>t.CLIPTextModelWithProjection,CLIPTokenizer:()=>r.CLIPTokenizer,CLIPVisionModel:()=>t.CLIPVisionModel,CLIPVisionModelWithProjection:()=>t.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>t.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>t.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>t.CamembertForSequenceClassification,CamembertForTokenClassification:()=>t.CamembertForTokenClassification,CamembertModel:()=>t.CamembertModel,CamembertPreTrainedModel:()=>t.CamembertPreTrainedModel,CamembertTokenizer:()=>r.CamembertTokenizer,CausalLMOutput:()=>t.CausalLMOutput,CausalLMOutputWithPast:()=>t.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>f.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>t.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>t.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>t.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>d.ClapFeatureExtractor,ClapModel:()=>t.ClapModel,ClapPreTrainedModel:()=>t.ClapPreTrainedModel,ClapTextModelWithProjection:()=>t.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>y.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>t.CodeGenForCausalLM,CodeGenModel:()=>t.CodeGenModel,CodeGenPreTrainedModel:()=>t.CodeGenPreTrainedModel,CodeGenTokenizer:()=>r.CodeGenTokenizer,CodeLlamaTokenizer:()=>r.CodeLlamaTokenizer,CohereForCausalLM:()=>t.CohereForCausalLM,CohereModel:()=>t.CohereModel,CoherePreTrainedModel:()=>t.CoherePreTrainedModel,CohereTokenizer:()=>r.CohereTokenizer,ConvBertForMaskedLM:()=>t.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>t.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>t.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>t.ConvBertForTokenClassification,ConvBertModel:()=>t.ConvBertModel,ConvBertPreTrainedModel:()=>t.ConvBertPreTrainedModel,ConvBertTokenizer:()=>r.ConvBertTokenizer,ConvNextFeatureExtractor:()=>f.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>t.ConvNextForImageClassification,ConvNextImageProcessor:()=>f.ConvNextImageProcessor,ConvNextModel:()=>t.ConvNextModel,ConvNextPreTrainedModel:()=>t.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>t.ConvNextV2ForImageClassification,ConvNextV2Model:()=>t.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>t.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>t.DFineForObjectDetection,DFineModel:()=>t.DFineModel,DFinePreTrainedModel:()=>t.DFinePreTrainedModel,DPTFeatureExtractor:()=>f.DPTFeatureExtractor,DPTForDepthEstimation:()=>t.DPTForDepthEstimation,DPTImageProcessor:()=>f.DPTImageProcessor,DPTModel:()=>t.DPTModel,DPTPreTrainedModel:()=>t.DPTPreTrainedModel,DacDecoderModel:()=>t.DacDecoderModel,DacDecoderOutput:()=>t.DacDecoderOutput,DacEncoderModel:()=>t.DacEncoderModel,DacEncoderOutput:()=>t.DacEncoderOutput,DacFeatureExtractor:()=>d.DacFeatureExtractor,DacModel:()=>t.DacModel,DacPreTrainedModel:()=>t.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>t.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>t.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>t.DebertaForSequenceClassification,DebertaForTokenClassification:()=>t.DebertaForTokenClassification,DebertaModel:()=>t.DebertaModel,DebertaPreTrainedModel:()=>t.DebertaPreTrainedModel,DebertaTokenizer:()=>r.DebertaTokenizer,DebertaV2ForMaskedLM:()=>t.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>t.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>t.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>t.DebertaV2ForTokenClassification,DebertaV2Model:()=>t.DebertaV2Model,DebertaV2PreTrainedModel:()=>t.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>r.DebertaV2Tokenizer,DecisionTransformerModel:()=>t.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>t.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>f.DeiTFeatureExtractor,DeiTForImageClassification:()=>t.DeiTForImageClassification,DeiTImageProcessor:()=>f.DeiTImageProcessor,DeiTModel:()=>t.DeiTModel,DeiTPreTrainedModel:()=>t.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>t.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>t.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>e.DepthEstimationPipeline,DepthProForDepthEstimation:()=>t.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>t.DepthProPreTrainedModel,DetrFeatureExtractor:()=>f.DetrFeatureExtractor,DetrForObjectDetection:()=>t.DetrForObjectDetection,DetrForSegmentation:()=>t.DetrForSegmentation,DetrImageProcessor:()=>f.DetrImageProcessor,DetrModel:()=>t.DetrModel,DetrObjectDetectionOutput:()=>t.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>t.DetrPreTrainedModel,DetrSegmentationOutput:()=>t.DetrSegmentationOutput,Dinov2ForImageClassification:()=>t.Dinov2ForImageClassification,Dinov2Model:()=>t.Dinov2Model,Dinov2PreTrainedModel:()=>t.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>t.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>t.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>t.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>t.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>t.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>t.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>t.DistilBertForTokenClassification,DistilBertModel:()=>t.DistilBertModel,DistilBertPreTrainedModel:()=>t.DistilBertPreTrainedModel,DistilBertTokenizer:()=>r.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>e.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>f.DonutFeatureExtractor,DonutImageProcessor:()=>f.DonutImageProcessor,DonutSwinModel:()=>t.DonutSwinModel,DonutSwinPreTrainedModel:()=>t.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>t.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>f.EfficientNetImageProcessor,EfficientNetModel:()=>t.EfficientNetModel,EfficientNetPreTrainedModel:()=>t.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>t.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>t.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>t.ElectraForSequenceClassification,ElectraForTokenClassification:()=>t.ElectraForTokenClassification,ElectraModel:()=>t.ElectraModel,ElectraPreTrainedModel:()=>t.ElectraPreTrainedModel,ElectraTokenizer:()=>r.ElectraTokenizer,EncodecFeatureExtractor:()=>d.EncodecFeatureExtractor,EosTokenCriteria:()=>v.EosTokenCriteria,Ernie4_5_ForCausalLM:()=>t.Ernie4_5_ForCausalLM,Ernie4_5_Model:()=>t.Ernie4_5_Model,Ernie4_5_PretrainedModel:()=>t.Ernie4_5_PretrainedModel,Ernie4_5_Tokenizer:()=>r.Ernie4_5_Tokenizer,EsmForMaskedLM:()=>t.EsmForMaskedLM,EsmForSequenceClassification:()=>t.EsmForSequenceClassification,EsmForTokenClassification:()=>t.EsmForTokenClassification,EsmModel:()=>t.EsmModel,EsmPreTrainedModel:()=>t.EsmPreTrainedModel,EsmTokenizer:()=>r.EsmTokenizer,ExaoneForCausalLM:()=>t.ExaoneForCausalLM,ExaoneModel:()=>t.ExaoneModel,ExaonePreTrainedModel:()=>t.ExaonePreTrainedModel,FFT:()=>u.FFT,FalconForCausalLM:()=>t.FalconForCausalLM,FalconModel:()=>t.FalconModel,FalconPreTrainedModel:()=>t.FalconPreTrainedModel,FalconTokenizer:()=>r.FalconTokenizer,FastViTForImageClassification:()=>t.FastViTForImageClassification,FastViTModel:()=>t.FastViTModel,FastViTPreTrainedModel:()=>t.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>e.FeatureExtractionPipeline,FeatureExtractor:()=>h.FeatureExtractor,FillMaskPipeline:()=>e.FillMaskPipeline,Florence2ForConditionalGeneration:()=>t.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>t.Florence2PreTrainedModel,Florence2Processor:()=>g.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>y.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>y.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>f.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>t.GLPNForDepthEstimation,GLPNModel:()=>t.GLPNModel,GLPNPreTrainedModel:()=>t.GLPNPreTrainedModel,GPT2LMHeadModel:()=>t.GPT2LMHeadModel,GPT2Model:()=>t.GPT2Model,GPT2PreTrainedModel:()=>t.GPT2PreTrainedModel,GPT2Tokenizer:()=>r.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>t.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>t.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>t.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>t.GPTJForCausalLM,GPTJModel:()=>t.GPTJModel,GPTJPreTrainedModel:()=>t.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>t.GPTNeoForCausalLM,GPTNeoModel:()=>t.GPTNeoModel,GPTNeoPreTrainedModel:()=>t.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>t.GPTNeoXForCausalLM,GPTNeoXModel:()=>t.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>t.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>r.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>t.Gemma2ForCausalLM,Gemma2Model:()=>t.Gemma2Model,Gemma2PreTrainedModel:()=>t.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>t.Gemma3ForCausalLM,Gemma3Model:()=>t.Gemma3Model,Gemma3PreTrainedModel:()=>t.Gemma3PreTrainedModel,Gemma3nAudioFeatureExtractor:()=>d.Gemma3nAudioFeatureExtractor,Gemma3nForConditionalGeneration:()=>t.Gemma3nForConditionalGeneration,Gemma3nPreTrainedModel:()=>t.Gemma3nPreTrainedModel,Gemma3nProcessor:()=>g.Gemma3nProcessor,GemmaForCausalLM:()=>t.GemmaForCausalLM,GemmaModel:()=>t.GemmaModel,GemmaPreTrainedModel:()=>t.GemmaPreTrainedModel,GemmaTokenizer:()=>r.GemmaTokenizer,GlmForCausalLM:()=>t.GlmForCausalLM,GlmModel:()=>t.GlmModel,GlmPreTrainedModel:()=>t.GlmPreTrainedModel,GraniteForCausalLM:()=>t.GraniteForCausalLM,GraniteModel:()=>t.GraniteModel,GranitePreTrainedModel:()=>t.GranitePreTrainedModel,Grok1Tokenizer:()=>r.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>t.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>t.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>g.GroundingDinoProcessor,GroupViTModel:()=>t.GroupViTModel,GroupViTPreTrainedModel:()=>t.GroupViTPreTrainedModel,HeliumForCausalLM:()=>t.HeliumForCausalLM,HeliumModel:()=>t.HeliumModel,HeliumPreTrainedModel:()=>t.HeliumPreTrainedModel,HerbertTokenizer:()=>r.HerbertTokenizer,HieraForImageClassification:()=>t.HieraForImageClassification,HieraModel:()=>t.HieraModel,HieraPreTrainedModel:()=>t.HieraPreTrainedModel,HubertForCTC:()=>t.HubertForCTC,HubertForSequenceClassification:()=>t.HubertForSequenceClassification,HubertModel:()=>t.HubertModel,HubertPreTrainedModel:()=>t.HubertPreTrainedModel,IJepaForImageClassification:()=>t.IJepaForImageClassification,IJepaModel:()=>t.IJepaModel,IJepaPreTrainedModel:()=>t.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>t.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>f.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>t.Idefics3PreTrainedModel,Idefics3Processor:()=>g.Idefics3Processor,ImageClassificationPipeline:()=>e.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>e.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>d.ImageFeatureExtractor,ImageMattingOutput:()=>t.ImageMattingOutput,ImageProcessor:()=>_.ImageProcessor,ImageSegmentationPipeline:()=>e.ImageSegmentationPipeline,ImageToImagePipeline:()=>e.ImageToImagePipeline,ImageToTextPipeline:()=>e.ImageToTextPipeline,InterruptableStoppingCriteria:()=>v.InterruptableStoppingCriteria,JAISLMHeadModel:()=>t.JAISLMHeadModel,JAISModel:()=>t.JAISModel,JAISPreTrainedModel:()=>t.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>f.JinaCLIPImageProcessor,JinaCLIPModel:()=>t.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>t.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>g.JinaCLIPProcessor,JinaCLIPTextModel:()=>t.JinaCLIPTextModel,JinaCLIPVisionModel:()=>t.JinaCLIPVisionModel,Lfm2ForCausalLM:()=>t.Lfm2ForCausalLM,Lfm2Model:()=>t.Lfm2Model,Lfm2PreTrainedModel:()=>t.Lfm2PreTrainedModel,LiteWhisperForConditionalGeneration:()=>t.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>t.LlamaForCausalLM,LlamaModel:()=>t.LlamaModel,LlamaPreTrainedModel:()=>t.LlamaPreTrainedModel,LlamaTokenizer:()=>r.LlamaTokenizer,LlavaForConditionalGeneration:()=>t.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>t.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>f.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>t.LlavaPreTrainedModel,LlavaProcessor:()=>g.LlavaProcessor,LlavaQwen2ForCausalLM:()=>t.LlavaQwen2ForCausalLM,LogitsProcessor:()=>y.LogitsProcessor,LogitsProcessorList:()=>y.LogitsProcessorList,LogitsWarper:()=>y.LogitsWarper,LongT5ForConditionalGeneration:()=>t.LongT5ForConditionalGeneration,LongT5Model:()=>t.LongT5Model,LongT5PreTrainedModel:()=>t.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>t.M2M100ForConditionalGeneration,M2M100Model:()=>t.M2M100Model,M2M100PreTrainedModel:()=>t.M2M100PreTrainedModel,M2M100Tokenizer:()=>r.M2M100Tokenizer,MBart50Tokenizer:()=>r.MBart50Tokenizer,MBartForCausalLM:()=>t.MBartForCausalLM,MBartForConditionalGeneration:()=>t.MBartForConditionalGeneration,MBartForSequenceClassification:()=>t.MBartForSequenceClassification,MBartModel:()=>t.MBartModel,MBartPreTrainedModel:()=>t.MBartPreTrainedModel,MBartTokenizer:()=>r.MBartTokenizer,MPNetForMaskedLM:()=>t.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>t.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>t.MPNetForSequenceClassification,MPNetForTokenClassification:()=>t.MPNetForTokenClassification,MPNetModel:()=>t.MPNetModel,MPNetPreTrainedModel:()=>t.MPNetPreTrainedModel,MPNetTokenizer:()=>r.MPNetTokenizer,MT5ForConditionalGeneration:()=>t.MT5ForConditionalGeneration,MT5Model:()=>t.MT5Model,MT5PreTrainedModel:()=>t.MT5PreTrainedModel,MarianMTModel:()=>t.MarianMTModel,MarianModel:()=>t.MarianModel,MarianPreTrainedModel:()=>t.MarianPreTrainedModel,MarianTokenizer:()=>r.MarianTokenizer,Mask2FormerImageProcessor:()=>f.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>f.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>t.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>f.MaskFormerImageProcessor,MaskFormerModel:()=>t.MaskFormerModel,MaskFormerPreTrainedModel:()=>t.MaskFormerPreTrainedModel,MaskedLMOutput:()=>t.MaskedLMOutput,MaxLengthCriteria:()=>v.MaxLengthCriteria,Metric3DForDepthEstimation:()=>t.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>t.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>t.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>t.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>t.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>t.MgpstrModelOutput,MgpstrPreTrainedModel:()=>t.MgpstrPreTrainedModel,MgpstrProcessor:()=>g.MgpstrProcessor,MgpstrTokenizer:()=>r.MgpstrTokenizer,MimiDecoderModel:()=>t.MimiDecoderModel,MimiDecoderOutput:()=>t.MimiDecoderOutput,MimiEncoderModel:()=>t.MimiEncoderModel,MimiEncoderOutput:()=>t.MimiEncoderOutput,MimiModel:()=>t.MimiModel,MimiPreTrainedModel:()=>t.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>y.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>y.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>t.MistralForCausalLM,MistralModel:()=>t.MistralModel,MistralPreTrainedModel:()=>t.MistralPreTrainedModel,MobileBertForMaskedLM:()=>t.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>t.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>t.MobileBertForSequenceClassification,MobileBertModel:()=>t.MobileBertModel,MobileBertPreTrainedModel:()=>t.MobileBertPreTrainedModel,MobileBertTokenizer:()=>r.MobileBertTokenizer,MobileLLMForCausalLM:()=>t.MobileLLMForCausalLM,MobileLLMModel:()=>t.MobileLLMModel,MobileLLMPreTrainedModel:()=>t.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>f.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>t.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>t.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>f.MobileNetV1ImageProcessor,MobileNetV1Model:()=>t.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>t.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>f.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>t.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>t.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>f.MobileNetV2ImageProcessor,MobileNetV2Model:()=>t.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>t.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>f.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>t.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>t.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>f.MobileNetV3ImageProcessor,MobileNetV3Model:()=>t.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>t.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>f.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>t.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>t.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>f.MobileNetV4ImageProcessor,MobileNetV4Model:()=>t.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>t.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>f.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>t.MobileViTForImageClassification,MobileViTImageProcessor:()=>f.MobileViTImageProcessor,MobileViTModel:()=>t.MobileViTModel,MobileViTPreTrainedModel:()=>t.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>t.MobileViTV2ForImageClassification,MobileViTV2Model:()=>t.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>t.MobileViTV2PreTrainedModel,ModelOutput:()=>t.ModelOutput,ModernBertDecoderForCausalLM:()=>t.ModernBertDecoderForCausalLM,ModernBertDecoderModel:()=>t.ModernBertDecoderModel,ModernBertDecoderPreTrainedModel:()=>t.ModernBertDecoderPreTrainedModel,ModernBertForMaskedLM:()=>t.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>t.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>t.ModernBertForTokenClassification,ModernBertModel:()=>t.ModernBertModel,ModernBertPreTrainedModel:()=>t.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>t.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>d.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>t.MoonshineForConditionalGeneration,MoonshineModel:()=>t.MoonshineModel,MoonshinePreTrainedModel:()=>t.MoonshinePreTrainedModel,MoonshineProcessor:()=>g.MoonshineProcessor,MptForCausalLM:()=>t.MptForCausalLM,MptModel:()=>t.MptModel,MptPreTrainedModel:()=>t.MptPreTrainedModel,MultiModalityCausalLM:()=>t.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>t.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>t.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>t.MusicgenForConditionalGeneration,MusicgenModel:()=>t.MusicgenModel,MusicgenPreTrainedModel:()=>t.MusicgenPreTrainedModel,NeoBertForMaskedLM:()=>t.NeoBertForMaskedLM,NeoBertForQuestionAnswering:()=>t.NeoBertForQuestionAnswering,NeoBertForSequenceClassification:()=>t.NeoBertForSequenceClassification,NeoBertForTokenClassification:()=>t.NeoBertForTokenClassification,NeoBertModel:()=>t.NeoBertModel,NeoBertPreTrainedModel:()=>t.NeoBertPreTrainedModel,NllbTokenizer:()=>r.NllbTokenizer,NoBadWordsLogitsProcessor:()=>y.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>y.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>t.NomicBertModel,NomicBertPreTrainedModel:()=>t.NomicBertPreTrainedModel,NougatImageProcessor:()=>f.NougatImageProcessor,NougatTokenizer:()=>r.NougatTokenizer,OPTForCausalLM:()=>t.OPTForCausalLM,OPTModel:()=>t.OPTModel,OPTPreTrainedModel:()=>t.OPTPreTrainedModel,ObjectDetectionPipeline:()=>e.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>t.Olmo2ForCausalLM,Olmo2Model:()=>t.Olmo2Model,Olmo2PreTrainedModel:()=>t.Olmo2PreTrainedModel,OlmoForCausalLM:()=>t.OlmoForCausalLM,OlmoModel:()=>t.OlmoModel,OlmoPreTrainedModel:()=>t.OlmoPreTrainedModel,OpenELMForCausalLM:()=>t.OpenELMForCausalLM,OpenELMModel:()=>t.OpenELMModel,OpenELMPreTrainedModel:()=>t.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>f.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>t.OwlViTForObjectDetection,OwlViTImageProcessor:()=>f.OwlViTImageProcessor,OwlViTModel:()=>t.OwlViTModel,OwlViTPreTrainedModel:()=>t.OwlViTPreTrainedModel,OwlViTProcessor:()=>g.OwlViTProcessor,Owlv2ForObjectDetection:()=>t.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>f.Owlv2ImageProcessor,Owlv2Model:()=>t.Owlv2Model,Owlv2PreTrainedModel:()=>t.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>t.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>t.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>g.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>t.PatchTSMixerForPrediction,PatchTSMixerModel:()=>t.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>t.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>t.PatchTSTForPrediction,PatchTSTModel:()=>t.PatchTSTModel,PatchTSTPreTrainedModel:()=>t.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>t.Phi3ForCausalLM,Phi3Model:()=>t.Phi3Model,Phi3PreTrainedModel:()=>t.Phi3PreTrainedModel,Phi3VForCausalLM:()=>t.Phi3VForCausalLM,Phi3VImageProcessor:()=>f.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>t.Phi3VPreTrainedModel,Phi3VProcessor:()=>g.Phi3VProcessor,PhiForCausalLM:()=>t.PhiForCausalLM,PhiModel:()=>t.PhiModel,PhiPreTrainedModel:()=>t.PhiPreTrainedModel,Pipeline:()=>e.Pipeline,PreTrainedModel:()=>t.PreTrainedModel,PreTrainedTokenizer:()=>r.PreTrainedTokenizer,PretrainedConfig:()=>n.PretrainedConfig,PretrainedMixin:()=>t.PretrainedMixin,Processor:()=>I.Processor,PvtForImageClassification:()=>t.PvtForImageClassification,PvtImageProcessor:()=>f.PvtImageProcessor,PvtModel:()=>t.PvtModel,PvtPreTrainedModel:()=>t.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>d.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>t.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>t.PyAnnoteModel,PyAnnotePreTrainedModel:()=>t.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>g.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>t.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>e.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>t.Qwen2ForCausalLM,Qwen2Model:()=>t.Qwen2Model,Qwen2PreTrainedModel:()=>t.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>r.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>t.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>f.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>t.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>g.Qwen2VLProcessor,Qwen3ForCausalLM:()=>t.Qwen3ForCausalLM,Qwen3Model:()=>t.Qwen3Model,Qwen3PreTrainedModel:()=>t.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>t.RFDetrForObjectDetection,RFDetrModel:()=>t.RFDetrModel,RFDetrObjectDetectionOutput:()=>t.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>t.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>t.RTDetrForObjectDetection,RTDetrImageProcessor:()=>f.RTDetrImageProcessor,RTDetrModel:()=>t.RTDetrModel,RTDetrObjectDetectionOutput:()=>t.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>t.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>t.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>t.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>t.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>t.RTDetrV2PreTrainedModel,RawAudio:()=>i.RawAudio,RawImage:()=>a.RawImage,RawVideo:()=>o.RawVideo,RawVideoFrame:()=>o.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>y.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>t.ResNetForImageClassification,ResNetModel:()=>t.ResNetModel,ResNetPreTrainedModel:()=>t.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>t.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>t.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>t.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>t.RoFormerForTokenClassification,RoFormerModel:()=>t.RoFormerModel,RoFormerPreTrainedModel:()=>t.RoFormerPreTrainedModel,RoFormerTokenizer:()=>r.RoFormerTokenizer,RobertaForMaskedLM:()=>t.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>t.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>t.RobertaForSequenceClassification,RobertaForTokenClassification:()=>t.RobertaForTokenClassification,RobertaModel:()=>t.RobertaModel,RobertaPreTrainedModel:()=>t.RobertaPreTrainedModel,RobertaTokenizer:()=>r.RobertaTokenizer,SamImageProcessor:()=>f.SamImageProcessor,SamImageSegmentationOutput:()=>t.SamImageSegmentationOutput,SamModel:()=>t.SamModel,SamPreTrainedModel:()=>t.SamPreTrainedModel,SamProcessor:()=>g.SamProcessor,SapiensForDepthEstimation:()=>t.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>t.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>t.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>t.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>d.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>f.SegformerFeatureExtractor,SegformerForImageClassification:()=>t.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>t.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>f.SegformerImageProcessor,SegformerModel:()=>t.SegformerModel,SegformerPreTrainedModel:()=>t.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>t.Seq2SeqLMOutput,SequenceClassifierOutput:()=>t.SequenceClassifierOutput,SiglipImageProcessor:()=>f.SiglipImageProcessor,SiglipModel:()=>t.SiglipModel,SiglipPreTrainedModel:()=>t.SiglipPreTrainedModel,SiglipTextModel:()=>t.SiglipTextModel,SiglipTokenizer:()=>r.SiglipTokenizer,SiglipVisionModel:()=>t.SiglipVisionModel,SmolLM3ForCausalLM:()=>t.SmolLM3ForCausalLM,SmolLM3Model:()=>t.SmolLM3Model,SmolLM3PreTrainedModel:()=>t.SmolLM3PreTrainedModel,SmolVLMForConditionalGeneration:()=>t.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>f.SmolVLMImageProcessor,SmolVLMProcessor:()=>g.SmolVLMProcessor,SnacDecoderModel:()=>t.SnacDecoderModel,SnacEncoderModel:()=>t.SnacEncoderModel,SnacFeatureExtractor:()=>d.SnacFeatureExtractor,SnacModel:()=>t.SnacModel,SnacPreTrainedModel:()=>t.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>d.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>t.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>t.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>t.SpeechT5HifiGan,SpeechT5Model:()=>t.SpeechT5Model,SpeechT5PreTrainedModel:()=>t.SpeechT5PreTrainedModel,SpeechT5Processor:()=>g.SpeechT5Processor,SpeechT5Tokenizer:()=>r.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>t.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>t.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>t.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>t.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>t.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>r.SqueezeBertTokenizer,StableLmForCausalLM:()=>t.StableLmForCausalLM,StableLmModel:()=>t.StableLmModel,StableLmPreTrainedModel:()=>t.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>t.Starcoder2ForCausalLM,Starcoder2Model:()=>t.Starcoder2Model,Starcoder2PreTrainedModel:()=>t.Starcoder2PreTrainedModel,StoppingCriteria:()=>v.StoppingCriteria,StoppingCriteriaList:()=>v.StoppingCriteriaList,StyleTextToSpeech2Model:()=>t.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>t.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>e.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>y.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>t.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>f.Swin2SRImageProcessor,Swin2SRModel:()=>t.Swin2SRModel,Swin2SRPreTrainedModel:()=>t.Swin2SRPreTrainedModel,SwinForImageClassification:()=>t.SwinForImageClassification,SwinForSemanticSegmentation:()=>t.SwinForSemanticSegmentation,SwinModel:()=>t.SwinModel,SwinPreTrainedModel:()=>t.SwinPreTrainedModel,T5ForConditionalGeneration:()=>t.T5ForConditionalGeneration,T5Model:()=>t.T5Model,T5PreTrainedModel:()=>t.T5PreTrainedModel,T5Tokenizer:()=>r.T5Tokenizer,TableTransformerForObjectDetection:()=>t.TableTransformerForObjectDetection,TableTransformerModel:()=>t.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>t.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>t.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>y.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>e.Text2TextGenerationPipeline,TextClassificationPipeline:()=>e.TextClassificationPipeline,TextGenerationPipeline:()=>e.TextGenerationPipeline,TextStreamer:()=>k.TextStreamer,TextToAudioPipeline:()=>e.TextToAudioPipeline,TokenClassificationPipeline:()=>e.TokenClassificationPipeline,TokenClassifierOutput:()=>t.TokenClassifierOutput,TokenizerModel:()=>r.TokenizerModel,TopKLogitsWarper:()=>y.TopKLogitsWarper,TopPLogitsWarper:()=>y.TopPLogitsWarper,TrOCRForCausalLM:()=>t.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>t.TrOCRPreTrainedModel,TranslationPipeline:()=>e.TranslationPipeline,UltravoxModel:()=>t.UltravoxModel,UltravoxPreTrainedModel:()=>t.UltravoxPreTrainedModel,UltravoxProcessor:()=>g.UltravoxProcessor,UniSpeechForCTC:()=>t.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>t.UniSpeechForSequenceClassification,UniSpeechModel:()=>t.UniSpeechModel,UniSpeechPreTrainedModel:()=>t.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>t.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>t.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>t.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>t.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>t.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>g.VLChatProcessor,VLMImageProcessor:()=>f.VLMImageProcessor,ViTFeatureExtractor:()=>f.ViTFeatureExtractor,ViTForImageClassification:()=>t.ViTForImageClassification,ViTImageProcessor:()=>f.ViTImageProcessor,ViTMAEModel:()=>t.ViTMAEModel,ViTMAEPreTrainedModel:()=>t.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>t.ViTMSNForImageClassification,ViTMSNModel:()=>t.ViTMSNModel,ViTMSNPreTrainedModel:()=>t.ViTMSNPreTrainedModel,ViTModel:()=>t.ViTModel,ViTPreTrainedModel:()=>t.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>t.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>t.VitMatteForImageMatting,VitMatteImageProcessor:()=>f.VitMatteImageProcessor,VitMattePreTrainedModel:()=>t.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>t.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>f.VitPoseImageProcessor,VitPosePreTrainedModel:()=>t.VitPosePreTrainedModel,VitsModel:()=>t.VitsModel,VitsModelOutput:()=>t.VitsModelOutput,VitsPreTrainedModel:()=>t.VitsPreTrainedModel,VitsTokenizer:()=>r.VitsTokenizer,VoxtralForConditionalGeneration:()=>t.VoxtralForConditionalGeneration,VoxtralProcessor:()=>g.VoxtralProcessor,Wav2Vec2BertForCTC:()=>t.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>t.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>t.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>t.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>r.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>d.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>t.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>t.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>t.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>t.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>t.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>g.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>g.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>t.WavLMForAudioFrameClassification,WavLMForCTC:()=>t.WavLMForCTC,WavLMForSequenceClassification:()=>t.WavLMForSequenceClassification,WavLMForXVector:()=>t.WavLMForXVector,WavLMModel:()=>t.WavLMModel,WavLMPreTrainedModel:()=>t.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>d.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>t.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>t.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>d.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>t.WhisperForConditionalGeneration,WhisperModel:()=>t.WhisperModel,WhisperPreTrainedModel:()=>t.WhisperPreTrainedModel,WhisperProcessor:()=>g.WhisperProcessor,WhisperTextStreamer:()=>k.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>y.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>r.WhisperTokenizer,XLMForQuestionAnswering:()=>t.XLMForQuestionAnswering,XLMForSequenceClassification:()=>t.XLMForSequenceClassification,XLMForTokenClassification:()=>t.XLMForTokenClassification,XLMModel:()=>t.XLMModel,XLMPreTrainedModel:()=>t.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>t.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>t.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>t.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>t.XLMRobertaForTokenClassification,XLMRobertaModel:()=>t.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>t.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>r.XLMRobertaTokenizer,XLMTokenizer:()=>r.XLMTokenizer,XLMWithLMHeadModel:()=>t.XLMWithLMHeadModel,XVectorOutput:()=>t.XVectorOutput,YolosFeatureExtractor:()=>f.YolosFeatureExtractor,YolosForObjectDetection:()=>t.YolosForObjectDetection,YolosImageProcessor:()=>f.YolosImageProcessor,YolosModel:()=>t.YolosModel,YolosObjectDetectionOutput:()=>t.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>t.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>e.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>e.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>e.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>e.ZeroShotObjectDetectionPipeline,bankers_round:()=>u.bankers_round,cat:()=>l.cat,cos_sim:()=>u.cos_sim,dot:()=>u.dot,dynamic_time_warping:()=>u.dynamic_time_warping,env:()=>s.env,full:()=>l.full,full_like:()=>l.full_like,getCacheShapes:()=>n.getCacheShapes,hamming:()=>i.hamming,hanning:()=>i.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>u.interpolate_data,is_chinese_char:()=>r.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>a.load_image,load_video:()=>o.load_video,log_softmax:()=>u.log_softmax,magnitude:()=>u.magnitude,matmul:()=>l.matmul,max:()=>u.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>u.medianFilter,mel_filter_bank:()=>i.mel_filter_bank,min:()=>u.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>u.permute_data,pipeline:()=>e.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>i.read_audio,rfft:()=>l.rfft,round:()=>u.round,slice:()=>l.slice,softmax:()=>u.softmax,spectrogram:()=>i.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>i.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var s=Vt("./src/env.js"),e=Vt("./src/pipelines.js"),t=Vt("./src/models.js"),r=Vt("./src/tokenizers.js"),n=Vt("./src/configs.js"),i=Vt("./src/utils/audio.js"),a=Vt("./src/utils/image.js"),o=Vt("./src/utils/video.js"),l=Vt("./src/utils/tensor.js"),u=Vt("./src/utils/maths.js"),h=Vt("./src/base/feature_extraction_utils.js"),d=Vt("./src/models/feature_extractors.js"),c=Vt("./src/models/auto/feature_extraction_auto.js"),_=Vt("./src/base/image_processors_utils.js"),f=Vt("./src/models/image_processors.js"),b=Vt("./src/models/auto/image_processing_auto.js"),I=Vt("./src/base/processing_utils.js"),g=Vt("./src/models/processors.js"),M=Vt("./src/models/auto/processing_auto.js"),k=Vt("./src/generation/streamers.js"),v=Vt("./src/generation/stopping_criteria.js"),y=Vt("./src/generation/logits_process.js")})();m.ASTFeatureExtractor;m.ASTForAudioClassification;m.ASTModel;m.ASTPreTrainedModel;m.AlbertForMaskedLM;m.AlbertForQuestionAnswering;m.AlbertForSequenceClassification;m.AlbertModel;m.AlbertPreTrainedModel;m.AlbertTokenizer;m.ArceeForCausalLM;m.ArceeModel;m.ArceePreTrainedModel;m.AudioClassificationPipeline;m.AutoConfig;m.AutoFeatureExtractor;m.AutoImageProcessor;m.AutoModel;m.AutoModelForAudioClassification;m.AutoModelForAudioFrameClassification;m.AutoModelForAudioTextToText;m.AutoModelForCTC;var sE=m.AutoModelForCausalLM;m.AutoModelForDepthEstimation;m.AutoModelForDocumentQuestionAnswering;m.AutoModelForImageClassification;m.AutoModelForImageFeatureExtraction;m.AutoModelForImageMatting;m.AutoModelForImageSegmentation;m.AutoModelForImageTextToText;m.AutoModelForImageToImage;m.AutoModelForMaskGeneration;m.AutoModelForMaskedLM;m.AutoModelForNormalEstimation;m.AutoModelForObjectDetection;m.AutoModelForPoseEstimation;m.AutoModelForQuestionAnswering;m.AutoModelForSemanticSegmentation;m.AutoModelForSeq2SeqLM;m.AutoModelForSequenceClassification;m.AutoModelForSpeechSeq2Seq;m.AutoModelForTextToSpectrogram;m.AutoModelForTextToWaveform;m.AutoModelForTokenClassification;m.AutoModelForUniversalSegmentation;m.AutoModelForVision2Seq;m.AutoModelForXVector;m.AutoModelForZeroShotObjectDetection;m.AutoProcessor;var rE=m.AutoTokenizer;m.AutomaticSpeechRecognitionPipeline;m.BackgroundRemovalPipeline;m.BartForConditionalGeneration;m.BartForSequenceClassification;m.BartModel;m.BartPretrainedModel;m.BartTokenizer;m.BaseModelOutput;m.BaseStreamer;m.BeitFeatureExtractor;m.BeitForImageClassification;m.BeitModel;m.BeitPreTrainedModel;m.BertForMaskedLM;m.BertForQuestionAnswering;m.BertForSequenceClassification;m.BertForTokenClassification;m.BertModel;m.BertPreTrainedModel;m.BertTokenizer;m.BitImageProcessor;m.BlenderbotForConditionalGeneration;m.BlenderbotModel;m.BlenderbotPreTrainedModel;m.BlenderbotSmallForConditionalGeneration;m.BlenderbotSmallModel;m.BlenderbotSmallPreTrainedModel;m.BlenderbotSmallTokenizer;m.BlenderbotTokenizer;m.BloomForCausalLM;m.BloomModel;m.BloomPreTrainedModel;m.BloomTokenizer;m.CLIPFeatureExtractor;m.CLIPImageProcessor;m.CLIPModel;m.CLIPPreTrainedModel;m.CLIPSegForImageSegmentation;m.CLIPSegModel;m.CLIPSegPreTrainedModel;m.CLIPTextModel;m.CLIPTextModelWithProjection;m.CLIPTokenizer;m.CLIPVisionModel;m.CLIPVisionModelWithProjection;m.CamembertForMaskedLM;m.CamembertForQuestionAnswering;m.CamembertForSequenceClassification;m.CamembertForTokenClassification;m.CamembertModel;m.CamembertPreTrainedModel;m.CamembertTokenizer;m.CausalLMOutput;m.CausalLMOutputWithPast;m.ChineseCLIPFeatureExtractor;m.ChineseCLIPModel;m.ChineseCLIPPreTrainedModel;m.ClapAudioModelWithProjection;m.ClapFeatureExtractor;m.ClapModel;m.ClapPreTrainedModel;m.ClapTextModelWithProjection;m.ClassifierFreeGuidanceLogitsProcessor;m.CodeGenForCausalLM;m.CodeGenModel;m.CodeGenPreTrainedModel;m.CodeGenTokenizer;m.CodeLlamaTokenizer;m.CohereForCausalLM;m.CohereModel;m.CoherePreTrainedModel;m.CohereTokenizer;m.ConvBertForMaskedLM;m.ConvBertForQuestionAnswering;m.ConvBertForSequenceClassification;m.ConvBertForTokenClassification;m.ConvBertModel;m.ConvBertPreTrainedModel;m.ConvBertTokenizer;m.ConvNextFeatureExtractor;m.ConvNextForImageClassification;m.ConvNextImageProcessor;m.ConvNextModel;m.ConvNextPreTrainedModel;m.ConvNextV2ForImageClassification;m.ConvNextV2Model;m.ConvNextV2PreTrainedModel;m.DFineForObjectDetection;m.DFineModel;m.DFinePreTrainedModel;m.DPTFeatureExtractor;m.DPTForDepthEstimation;m.DPTImageProcessor;m.DPTModel;m.DPTPreTrainedModel;m.DacDecoderModel;m.DacDecoderOutput;m.DacEncoderModel;m.DacEncoderOutput;m.DacFeatureExtractor;m.DacModel;m.DacPreTrainedModel;m.DataTypeMap;m.DebertaForMaskedLM;m.DebertaForQuestionAnswering;m.DebertaForSequenceClassification;m.DebertaForTokenClassification;m.DebertaModel;m.DebertaPreTrainedModel;m.DebertaTokenizer;m.DebertaV2ForMaskedLM;m.DebertaV2ForQuestionAnswering;m.DebertaV2ForSequenceClassification;m.DebertaV2ForTokenClassification;m.DebertaV2Model;m.DebertaV2PreTrainedModel;m.DebertaV2Tokenizer;m.DecisionTransformerModel;m.DecisionTransformerPreTrainedModel;m.DeiTFeatureExtractor;m.DeiTForImageClassification;m.DeiTImageProcessor;m.DeiTModel;m.DeiTPreTrainedModel;m.DepthAnythingForDepthEstimation;m.DepthAnythingPreTrainedModel;m.DepthEstimationPipeline;m.DepthProForDepthEstimation;m.DepthProPreTrainedModel;m.DetrFeatureExtractor;m.DetrForObjectDetection;m.DetrForSegmentation;m.DetrImageProcessor;m.DetrModel;m.DetrObjectDetectionOutput;m.DetrPreTrainedModel;m.DetrSegmentationOutput;m.Dinov2ForImageClassification;m.Dinov2Model;m.Dinov2PreTrainedModel;m.Dinov2WithRegistersForImageClassification;m.Dinov2WithRegistersModel;m.Dinov2WithRegistersPreTrainedModel;m.DistilBertForMaskedLM;m.DistilBertForQuestionAnswering;m.DistilBertForSequenceClassification;m.DistilBertForTokenClassification;m.DistilBertModel;m.DistilBertPreTrainedModel;m.DistilBertTokenizer;m.DocumentQuestionAnsweringPipeline;m.DonutFeatureExtractor;m.DonutImageProcessor;m.DonutSwinModel;m.DonutSwinPreTrainedModel;m.EfficientNetForImageClassification;m.EfficientNetImageProcessor;m.EfficientNetModel;m.EfficientNetPreTrainedModel;m.ElectraForMaskedLM;m.ElectraForQuestionAnswering;m.ElectraForSequenceClassification;m.ElectraForTokenClassification;m.ElectraModel;m.ElectraPreTrainedModel;m.ElectraTokenizer;m.EncodecFeatureExtractor;m.EosTokenCriteria;m.Ernie4_5_ForCausalLM;m.Ernie4_5_Model;m.Ernie4_5_PretrainedModel;m.Ernie4_5_Tokenizer;m.EsmForMaskedLM;m.EsmForSequenceClassification;m.EsmForTokenClassification;m.EsmModel;m.EsmPreTrainedModel;m.EsmTokenizer;m.ExaoneForCausalLM;m.ExaoneModel;m.ExaonePreTrainedModel;m.FFT;m.FalconForCausalLM;m.FalconModel;m.FalconPreTrainedModel;m.FalconTokenizer;m.FastViTForImageClassification;m.FastViTModel;m.FastViTPreTrainedModel;m.FeatureExtractionPipeline;m.FeatureExtractor;m.FillMaskPipeline;m.Florence2ForConditionalGeneration;m.Florence2PreTrainedModel;m.Florence2Processor;m.ForcedBOSTokenLogitsProcessor;m.ForcedEOSTokenLogitsProcessor;m.GLPNFeatureExtractor;m.GLPNForDepthEstimation;m.GLPNModel;m.GLPNPreTrainedModel;m.GPT2LMHeadModel;m.GPT2Model;m.GPT2PreTrainedModel;m.GPT2Tokenizer;m.GPTBigCodeForCausalLM;m.GPTBigCodeModel;m.GPTBigCodePreTrainedModel;m.GPTJForCausalLM;m.GPTJModel;m.GPTJPreTrainedModel;m.GPTNeoForCausalLM;m.GPTNeoModel;m.GPTNeoPreTrainedModel;m.GPTNeoXForCausalLM;m.GPTNeoXModel;m.GPTNeoXPreTrainedModel;m.GPTNeoXTokenizer;m.Gemma2ForCausalLM;m.Gemma2Model;m.Gemma2PreTrainedModel;m.Gemma3ForCausalLM;m.Gemma3Model;m.Gemma3PreTrainedModel;m.Gemma3nAudioFeatureExtractor;m.Gemma3nForConditionalGeneration;m.Gemma3nPreTrainedModel;m.Gemma3nProcessor;m.GemmaForCausalLM;m.GemmaModel;m.GemmaPreTrainedModel;m.GemmaTokenizer;m.GlmForCausalLM;m.GlmModel;m.GlmPreTrainedModel;m.GraniteForCausalLM;m.GraniteModel;m.GranitePreTrainedModel;m.Grok1Tokenizer;m.GroundingDinoForObjectDetection;m.GroundingDinoImageProcessor;m.GroundingDinoPreTrainedModel;m.GroundingDinoProcessor;m.GroupViTModel;m.GroupViTPreTrainedModel;m.HeliumForCausalLM;m.HeliumModel;m.HeliumPreTrainedModel;m.HerbertTokenizer;m.HieraForImageClassification;m.HieraModel;m.HieraPreTrainedModel;m.HubertForCTC;m.HubertForSequenceClassification;m.HubertModel;m.HubertPreTrainedModel;m.IJepaForImageClassification;m.IJepaModel;m.IJepaPreTrainedModel;m.Idefics3ForConditionalGeneration;m.Idefics3ImageProcessor;m.Idefics3PreTrainedModel;m.Idefics3Processor;m.ImageClassificationPipeline;m.ImageFeatureExtractionPipeline;m.ImageFeatureExtractor;m.ImageMattingOutput;m.ImageProcessor;m.ImageSegmentationPipeline;m.ImageToImagePipeline;m.ImageToTextPipeline;m.InterruptableStoppingCriteria;m.JAISLMHeadModel;m.JAISModel;m.JAISPreTrainedModel;m.JinaCLIPImageProcessor;m.JinaCLIPModel;m.JinaCLIPPreTrainedModel;m.JinaCLIPProcessor;m.JinaCLIPTextModel;m.JinaCLIPVisionModel;m.Lfm2ForCausalLM;m.Lfm2Model;m.Lfm2PreTrainedModel;m.LiteWhisperForConditionalGeneration;m.LlamaForCausalLM;m.LlamaModel;m.LlamaPreTrainedModel;m.LlamaTokenizer;m.LlavaForConditionalGeneration;m.LlavaOnevisionForConditionalGeneration;m.LlavaOnevisionImageProcessor;m.LlavaPreTrainedModel;m.LlavaProcessor;m.LlavaQwen2ForCausalLM;m.LogitsProcessor;m.LogitsProcessorList;m.LogitsWarper;m.LongT5ForConditionalGeneration;m.LongT5Model;m.LongT5PreTrainedModel;m.M2M100ForConditionalGeneration;m.M2M100Model;m.M2M100PreTrainedModel;m.M2M100Tokenizer;m.MBart50Tokenizer;m.MBartForCausalLM;m.MBartForConditionalGeneration;m.MBartForSequenceClassification;m.MBartModel;m.MBartPreTrainedModel;m.MBartTokenizer;m.MPNetForMaskedLM;m.MPNetForQuestionAnswering;m.MPNetForSequenceClassification;m.MPNetForTokenClassification;m.MPNetModel;m.MPNetPreTrainedModel;m.MPNetTokenizer;m.MT5ForConditionalGeneration;m.MT5Model;m.MT5PreTrainedModel;m.MarianMTModel;m.MarianModel;m.MarianPreTrainedModel;m.MarianTokenizer;m.Mask2FormerImageProcessor;m.MaskFormerFeatureExtractor;m.MaskFormerForInstanceSegmentation;m.MaskFormerImageProcessor;m.MaskFormerModel;m.MaskFormerPreTrainedModel;m.MaskedLMOutput;m.MaxLengthCriteria;m.Metric3DForDepthEstimation;m.Metric3DPreTrainedModel;m.Metric3Dv2ForDepthEstimation;m.Metric3Dv2PreTrainedModel;m.MgpstrForSceneTextRecognition;m.MgpstrModelOutput;m.MgpstrPreTrainedModel;m.MgpstrProcessor;m.MgpstrTokenizer;m.MimiDecoderModel;m.MimiDecoderOutput;m.MimiEncoderModel;m.MimiEncoderOutput;m.MimiModel;m.MimiPreTrainedModel;m.MinLengthLogitsProcessor;m.MinNewTokensLengthLogitsProcessor;m.MistralForCausalLM;m.MistralModel;m.MistralPreTrainedModel;m.MobileBertForMaskedLM;m.MobileBertForQuestionAnswering;m.MobileBertForSequenceClassification;m.MobileBertModel;m.MobileBertPreTrainedModel;m.MobileBertTokenizer;m.MobileLLMForCausalLM;m.MobileLLMModel;m.MobileLLMPreTrainedModel;m.MobileNetV1FeatureExtractor;m.MobileNetV1ForImageClassification;m.MobileNetV1ForSemanticSegmentation;m.MobileNetV1ImageProcessor;m.MobileNetV1Model;m.MobileNetV1PreTrainedModel;m.MobileNetV2FeatureExtractor;m.MobileNetV2ForImageClassification;m.MobileNetV2ForSemanticSegmentation;m.MobileNetV2ImageProcessor;m.MobileNetV2Model;m.MobileNetV2PreTrainedModel;m.MobileNetV3FeatureExtractor;m.MobileNetV3ForImageClassification;m.MobileNetV3ForSemanticSegmentation;m.MobileNetV3ImageProcessor;m.MobileNetV3Model;m.MobileNetV3PreTrainedModel;m.MobileNetV4FeatureExtractor;m.MobileNetV4ForImageClassification;m.MobileNetV4ForSemanticSegmentation;m.MobileNetV4ImageProcessor;m.MobileNetV4Model;m.MobileNetV4PreTrainedModel;m.MobileViTFeatureExtractor;m.MobileViTForImageClassification;m.MobileViTImageProcessor;m.MobileViTModel;m.MobileViTPreTrainedModel;m.MobileViTV2ForImageClassification;m.MobileViTV2Model;m.MobileViTV2PreTrainedModel;m.ModelOutput;m.ModernBertDecoderForCausalLM;m.ModernBertDecoderModel;m.ModernBertDecoderPreTrainedModel;m.ModernBertForMaskedLM;m.ModernBertForSequenceClassification;m.ModernBertForTokenClassification;m.ModernBertModel;m.ModernBertPreTrainedModel;m.Moondream1ForConditionalGeneration;m.MoonshineFeatureExtractor;m.MoonshineForConditionalGeneration;m.MoonshineModel;m.MoonshinePreTrainedModel;m.MoonshineProcessor;m.MptForCausalLM;m.MptModel;m.MptPreTrainedModel;m.MultiModalityCausalLM;m.MultiModalityPreTrainedModel;m.MusicgenForCausalLM;m.MusicgenForConditionalGeneration;m.MusicgenModel;m.MusicgenPreTrainedModel;m.NeoBertForMaskedLM;m.NeoBertForQuestionAnswering;m.NeoBertForSequenceClassification;m.NeoBertForTokenClassification;m.NeoBertModel;m.NeoBertPreTrainedModel;m.NllbTokenizer;m.NoBadWordsLogitsProcessor;m.NoRepeatNGramLogitsProcessor;m.NomicBertModel;m.NomicBertPreTrainedModel;m.NougatImageProcessor;m.NougatTokenizer;m.OPTForCausalLM;m.OPTModel;m.OPTPreTrainedModel;m.ObjectDetectionPipeline;m.Olmo2ForCausalLM;m.Olmo2Model;m.Olmo2PreTrainedModel;m.OlmoForCausalLM;m.OlmoModel;m.OlmoPreTrainedModel;m.OpenELMForCausalLM;m.OpenELMModel;m.OpenELMPreTrainedModel;m.OwlViTFeatureExtractor;m.OwlViTForObjectDetection;m.OwlViTImageProcessor;m.OwlViTModel;m.OwlViTPreTrainedModel;m.OwlViTProcessor;m.Owlv2ForObjectDetection;m.Owlv2ImageProcessor;m.Owlv2Model;m.Owlv2PreTrainedModel;m.PaliGemmaForConditionalGeneration;m.PaliGemmaPreTrainedModel;m.PaliGemmaProcessor;m.PatchTSMixerForPrediction;m.PatchTSMixerModel;m.PatchTSMixerPreTrainedModel;m.PatchTSTForPrediction;m.PatchTSTModel;m.PatchTSTPreTrainedModel;m.Phi3ForCausalLM;m.Phi3Model;m.Phi3PreTrainedModel;m.Phi3VForCausalLM;m.Phi3VImageProcessor;m.Phi3VPreTrainedModel;m.Phi3VProcessor;m.PhiForCausalLM;m.PhiModel;m.PhiPreTrainedModel;m.Pipeline;var nE=m.PreTrainedModel;m.PreTrainedTokenizer;m.PretrainedConfig;m.PretrainedMixin;m.Processor;m.PvtForImageClassification;m.PvtImageProcessor;m.PvtModel;m.PvtPreTrainedModel;m.PyAnnoteFeatureExtractor;m.PyAnnoteForAudioFrameClassification;m.PyAnnoteModel;m.PyAnnotePreTrainedModel;m.PyAnnoteProcessor;m.QuestionAnsweringModelOutput;m.QuestionAnsweringPipeline;m.Qwen2ForCausalLM;m.Qwen2Model;m.Qwen2PreTrainedModel;m.Qwen2Tokenizer;m.Qwen2VLForConditionalGeneration;m.Qwen2VLImageProcessor;m.Qwen2VLPreTrainedModel;m.Qwen2VLProcessor;m.Qwen3ForCausalLM;m.Qwen3Model;m.Qwen3PreTrainedModel;m.RFDetrForObjectDetection;m.RFDetrModel;m.RFDetrObjectDetectionOutput;m.RFDetrPreTrainedModel;m.RTDetrForObjectDetection;m.RTDetrImageProcessor;m.RTDetrModel;m.RTDetrObjectDetectionOutput;m.RTDetrPreTrainedModel;m.RTDetrV2ForObjectDetection;m.RTDetrV2Model;m.RTDetrV2ObjectDetectionOutput;m.RTDetrV2PreTrainedModel;var iE=m.RawAudio;m.RawImage;m.RawVideo;m.RawVideoFrame;m.RepetitionPenaltyLogitsProcessor;m.ResNetForImageClassification;m.ResNetModel;m.ResNetPreTrainedModel;m.RoFormerForMaskedLM;m.RoFormerForQuestionAnswering;m.RoFormerForSequenceClassification;m.RoFormerForTokenClassification;m.RoFormerModel;m.RoFormerPreTrainedModel;m.RoFormerTokenizer;m.RobertaForMaskedLM;m.RobertaForQuestionAnswering;m.RobertaForSequenceClassification;m.RobertaForTokenClassification;m.RobertaModel;m.RobertaPreTrainedModel;m.RobertaTokenizer;m.SamImageProcessor;m.SamImageSegmentationOutput;m.SamModel;m.SamPreTrainedModel;m.SamProcessor;m.SapiensForDepthEstimation;m.SapiensForNormalEstimation;m.SapiensForSemanticSegmentation;m.SapiensPreTrainedModel;m.SeamlessM4TFeatureExtractor;m.SegformerFeatureExtractor;m.SegformerForImageClassification;m.SegformerForSemanticSegmentation;m.SegformerImageProcessor;m.SegformerModel;m.SegformerPreTrainedModel;m.Seq2SeqLMOutput;m.SequenceClassifierOutput;m.SiglipImageProcessor;m.SiglipModel;m.SiglipPreTrainedModel;m.SiglipTextModel;m.SiglipTokenizer;m.SiglipVisionModel;m.SmolLM3ForCausalLM;m.SmolLM3Model;m.SmolLM3PreTrainedModel;m.SmolVLMForConditionalGeneration;m.SmolVLMImageProcessor;m.SmolVLMProcessor;m.SnacDecoderModel;m.SnacEncoderModel;m.SnacFeatureExtractor;m.SnacModel;m.SnacPreTrainedModel;m.SpeechT5FeatureExtractor;m.SpeechT5ForSpeechToText;m.SpeechT5ForTextToSpeech;m.SpeechT5HifiGan;m.SpeechT5Model;m.SpeechT5PreTrainedModel;m.SpeechT5Processor;m.SpeechT5Tokenizer;m.SqueezeBertForMaskedLM;m.SqueezeBertForQuestionAnswering;m.SqueezeBertForSequenceClassification;m.SqueezeBertModel;m.SqueezeBertPreTrainedModel;m.SqueezeBertTokenizer;m.StableLmForCausalLM;m.StableLmModel;m.StableLmPreTrainedModel;m.Starcoder2ForCausalLM;m.Starcoder2Model;m.Starcoder2PreTrainedModel;m.StoppingCriteria;m.StoppingCriteriaList;var aE=m.StyleTextToSpeech2Model;m.StyleTextToSpeech2PreTrainedModel;m.SummarizationPipeline;m.SuppressTokensAtBeginLogitsProcessor;m.Swin2SRForImageSuperResolution;m.Swin2SRImageProcessor;m.Swin2SRModel;m.Swin2SRPreTrainedModel;m.SwinForImageClassification;m.SwinForSemanticSegmentation;m.SwinModel;m.SwinPreTrainedModel;m.T5ForConditionalGeneration;m.T5Model;m.T5PreTrainedModel;m.T5Tokenizer;m.TableTransformerForObjectDetection;m.TableTransformerModel;m.TableTransformerObjectDetectionOutput;m.TableTransformerPreTrainedModel;m.TemperatureLogitsWarper;var oE=m.Tensor;m.Text2TextGenerationPipeline;m.TextClassificationPipeline;m.TextGenerationPipeline;m.TextStreamer;m.TextToAudioPipeline;m.TokenClassificationPipeline;m.TokenClassifierOutput;m.TokenizerModel;m.TopKLogitsWarper;m.TopPLogitsWarper;m.TrOCRForCausalLM;m.TrOCRPreTrainedModel;m.TranslationPipeline;m.UltravoxModel;m.UltravoxPreTrainedModel;m.UltravoxProcessor;m.UniSpeechForCTC;m.UniSpeechForSequenceClassification;m.UniSpeechModel;m.UniSpeechPreTrainedModel;m.UniSpeechSatForAudioFrameClassification;m.UniSpeechSatForCTC;m.UniSpeechSatForSequenceClassification;m.UniSpeechSatModel;m.UniSpeechSatPreTrainedModel;m.VLChatProcessor;m.VLMImageProcessor;m.ViTFeatureExtractor;m.ViTForImageClassification;m.ViTImageProcessor;m.ViTMAEModel;m.ViTMAEPreTrainedModel;m.ViTMSNForImageClassification;m.ViTMSNModel;m.ViTMSNPreTrainedModel;m.ViTModel;m.ViTPreTrainedModel;m.VisionEncoderDecoderModel;m.VitMatteForImageMatting;m.VitMatteImageProcessor;m.VitMattePreTrainedModel;m.VitPoseForPoseEstimation;m.VitPoseImageProcessor;m.VitPosePreTrainedModel;m.VitsModel;m.VitsModelOutput;m.VitsPreTrainedModel;m.VitsTokenizer;m.VoxtralForConditionalGeneration;m.VoxtralProcessor;m.Wav2Vec2BertForCTC;m.Wav2Vec2BertForSequenceClassification;m.Wav2Vec2BertModel;m.Wav2Vec2BertPreTrainedModel;m.Wav2Vec2CTCTokenizer;m.Wav2Vec2FeatureExtractor;m.Wav2Vec2ForAudioFrameClassification;m.Wav2Vec2ForCTC;m.Wav2Vec2ForSequenceClassification;m.Wav2Vec2Model;m.Wav2Vec2PreTrainedModel;m.Wav2Vec2Processor;m.Wav2Vec2ProcessorWithLM;m.WavLMForAudioFrameClassification;m.WavLMForCTC;m.WavLMForSequenceClassification;m.WavLMForXVector;m.WavLMModel;m.WavLMPreTrainedModel;m.WeSpeakerFeatureExtractor;m.WeSpeakerResNetModel;m.WeSpeakerResNetPreTrainedModel;m.WhisperFeatureExtractor;m.WhisperForConditionalGeneration;m.WhisperModel;m.WhisperPreTrainedModel;m.WhisperProcessor;m.WhisperTextStreamer;m.WhisperTimeStampLogitsProcessor;m.WhisperTokenizer;m.XLMForQuestionAnswering;m.XLMForSequenceClassification;m.XLMForTokenClassification;m.XLMModel;m.XLMPreTrainedModel;m.XLMRobertaForMaskedLM;m.XLMRobertaForQuestionAnswering;m.XLMRobertaForSequenceClassification;m.XLMRobertaForTokenClassification;m.XLMRobertaModel;m.XLMRobertaPreTrainedModel;m.XLMRobertaTokenizer;m.XLMTokenizer;m.XLMWithLMHeadModel;m.XVectorOutput;m.YolosFeatureExtractor;m.YolosForObjectDetection;m.YolosImageProcessor;m.YolosModel;m.YolosObjectDetectionOutput;m.YolosPreTrainedModel;m.ZeroShotAudioClassificationPipeline;m.ZeroShotClassificationPipeline;m.ZeroShotImageClassificationPipeline;m.ZeroShotObjectDetectionPipeline;m.bankers_round;m.cat;m.cos_sim;m.dot;m.dynamic_time_warping;m.env;m.full;m.full_like;m.getCacheShapes;m.hamming;m.hanning;m.interpolate;m.interpolate_4d;m.interpolate_data;m.is_chinese_char;m.layer_norm;m.load_image;m.load_video;m.log_softmax;m.magnitude;m.matmul;m.max;m.mean;m.mean_pooling;m.medianFilter;m.mel_filter_bank;m.min;m.ones;m.ones_like;m.permute;m.permute_data;var YT=m.pipeline;m.quantize_embeddings;m.rand;m.read_audio;m.rfft;m.round;m.slice;m.softmax;m.spectrogram;m.stack;m.std_mean;m.topk;m.window_function;m.zeros;m.zeros_like;const oi="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";function ZT(s){let e="";for(let t=0;t<s.length;t+=3)e+=oi[s[t]>>2],e+=oi[(s[t]&3)<<4|s[t+1]>>4],e+=oi[(s[t+1]&15)<<2|s[t+2]>>6],e+=oi[s[t+2]&63];return s.length%3===2?e=e.substring(0,e.length-1)+"=":s.length%3===1&&(e=e.substring(0,e.length-2)+"=="),e}function e1(s){let e=new Uint8Array(256);for(let n=0;n<oi.length;n++)e[oi.charCodeAt(n)]=n;let t=s.length*.75;s[s.length-1]==="="&&(t--,s[s.length-2]==="="&&t--);let r=new Uint8Array(t);for(let n=0,i=0;n<s.length;n+=4){let a=e[s.charCodeAt(n)],o=e[s.charCodeAt(n+1)],l=e[s.charCodeAt(n+2)],u=e[s.charCodeAt(n+3)];r[i++]=a<<2|o>>4,r[i++]=(o&15)<<4|l>>2,r[i++]=(l&3)<<6|u&63}return r}function t1(s,e,t,r){if(["32f","64"].indexOf(e)>-1&&["32f","64"].indexOf(r)>-1){t.set(s);return}NM(e),NM(r);let n=i1(e,r),i={oldMin:Math.pow(2,parseInt(e,10))/2,newMin:Math.pow(2,parseInt(r,10))/2,oldMax:Math.pow(2,parseInt(e,10))/2-1,newMax:Math.pow(2,parseInt(r,10))/2-1};UM(e,s,!0);for(let a=0,o=s.length;a<o;a++)t[a]=n(s[a],i);UM(r,t,!1)}function s1(s,e){return s>0?s=parseInt(s/e.oldMax*e.newMax,10):s=parseInt(s/e.oldMin*e.newMin,10),s}function r1(s,e){return parseInt(s>0?s*e.newMax:s*e.newMin,10)}function n1(s,e){return s>0?s/e.oldMax:s/e.oldMin}function i1(s,e){let t=function(r){return r};return s!=e&&(["32f","64"].includes(s)?t=r1:["32f","64"].includes(e)?t=n1:t=s1),t}function NM(s){if(s!="32f"&&s!="64"&&(parseInt(s,10)<"8"||parseInt(s,10)>"53"))throw new Error("Invalid bit depth.")}function UM(s,e,t){if(s=="8"){let r=t?-128:128;for(let n=0,i=e.length;n<i;n++)e[n]=e[n]+=r}}const Bv=[-1,-1,-1,-1,2,4,6,8,-1,-1,-1,-1,2,4,6,8],Uc=[7,8,9,10,11,12,13,14,16,17,19,21,23,25,28,31,34,37,41,45,50,55,60,66,73,80,88,97,107,118,130,143,157,173,190,209,230,253,279,307,337,371,408,449,494,544,598,658,724,796,876,963,1060,1166,1282,1411,1552,1707,1878,2066,2272,2499,2749,3024,3327,3660,4026,4428,4871,5358,5894,6484,7132,7845,8630,9493,10442,11487,12635,13899,15289,16818,18500,20350,22385,24623,27086,29794,32767];function a1(s){let e={index:0,predicted:0},t=new Uint8Array(s.length),r=[],n=0,i=0;for(let o=0,l=s.length;o<l;o++)o%505==0&&o!=0&&(t.set(l1(r,e),n),n+=256,r=[],i++),r.push(s[o]);let a=s.length/2;return a%2&&a++,t.slice(0,a+512+i*4)}function o1(s,e=256){let t={index:0,predicted:0,step:7},r=new Int16Array(s.length*2),n=[],i=0;for(let a=0,o=s.length;a<o;a++){if(a%e==0&&a!=0){let l=u1(n,t);r.set(l,i),i+=l.length,n=[]}n.push(s[a])}return r}function l1(s,e){let t=p1(s[0],e);for(let r=3,n=s.length;r<n;r+=2){let i=dc(s[r],e),a=dc(s[r+1],e);t.push(a<<4|i)}return t}function u1(s,e){e.predicted=c1(s[1]<<8|s[0]),e.index=s[2],e.step=Uc[e.index];let t=[e.predicted,e.predicted];for(let r=4,n=s.length;r<n;r++){let i=s[r],a=i>>4,o=a<<4^i;t.push(VM(o,e)),t.push(VM(a,e))}return t}function c1(s){return s>32768?s-65536:s}function dc(s,e){let t=s-e.predicted,r=0;t>=0?r=0:(r=8,t=-t);let n=Uc[e.index],i=n>>3;return t>n&&(r|=4,t-=n,i+=n),n>>=1,t>n&&(r|=2,t-=n,i+=n),n>>=1,t>n&&(r|=1,i+=n),d1(r,i,e),r}function d1(s,e,t){s&8?t.predicted-=e:t.predicted+=e,t.predicted<-32768?t.predicted=-32768:t.predicted>32767&&(t.predicted=32767),t.index+=Bv[s&7],t.index<0?t.index=0:t.index>88&&(t.index=88)}function VM(s,e){let t=0;return s&4&&(t+=e.step),s&2&&(t+=e.step>>1),s&1&&(t+=e.step>>2),t+=e.step>>3,s&8&&(t=-t),e.predicted+=t,e.predicted>32767?e.predicted=32767:e.predicted<-32767&&(e.predicted=-32767),h1(s,e),e.predicted}function h1(s,e){e.index+=Bv[s],e.index<0?e.index=0:e.index>88&&(e.index=88),e.step=Uc[e.index]}function p1(s,e){dc(s,e);let t=[];return t.push(s&255),t.push(s>>8&255),t.push(e.index),t.push(0),t}const m1=[1,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7];function f1(s){let e;s=s==-32768?-32767:s;let t=~s>>8&128;if(t||(s=s*-1),s>32635&&(s=32635),s>=256){let r=m1[s>>8&127],n=s>>r+3&15;e=r<<4|n}else e=s>>4;return e^(t^85)}function _1(s){let e=0;s^=85,(s&128)!==0&&(s&=-129,e=-1);let t=((s&240)>>4)+4,r=0;return t!=4?r=1<<t|(s&15)<<t-4|1<<t-5:r=s<<1|1,r=e===0?r:-r,r*8*-1}function g1(s){let e=new Uint8Array(s.length);for(let t=0,r=s.length;t<r;t++)e[t]=f1(s[t]);return e}function w1(s){let e=new Int16Array(s.length);for(let t=0,r=s.length;t<r;t++)e[t]=_1(s[t]);return e}const M1=132,WM=32635,b1=[0,0,1,1,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7],y1=[0,132,396,924,1980,4092,8316,16764];function v1(s){let e,t,r,n;return e=s>>8&128,e!=0&&(s=-s),s=s+M1,s>WM&&(s=WM),t=b1[s>>7&255],r=s>>t+3&15,n=~(e|t<<4|r),n}function x1(s){let e,t,r,n;return s=~s,e=s&128,t=s>>4&7,r=s&15,n=y1[t]+(r<<t+3),e!=0&&(n=-n),n}function T1(s){let e=new Uint8Array(s.length);for(let t=0,r=s.length;t<r;t++)e[t]=v1(s[t]);return e}function E1(s){let e=new Int16Array(s.length);for(let t=0,r=s.length;t<r;t++)e[t]=x1(s[t]);return e}function Rv(s,e,t=0,r=s.length){for(let n=t;n<r;n+=e)P1(s,e,n)}function P1(s,e,t){e--;for(let r=0;r<e;r++){let n=s[t+r];s[t+r]=s[t+e],s[t+e]=n,e--}}function C1(s,e=0,t=s.length){let r="";for(let n=e;n<t;){let i=128,a=191,o=!1,l=s[n++];if(l>=0&&l<=127)r+=String.fromCharCode(l);else{let u=0;l>=194&&l<=223?u=1:l>=224&&l<=239?(u=2,s[n]===224&&(i=160),s[n]===237&&(a=159)):l>=240&&l<=244?(u=3,s[n]===240&&(i=144),s[n]===244&&(a=143)):o=!0,l=l&(1<<8-u-1)-1;for(let h=0;h<u;h++)(s[n]<i||s[n]>a)&&(o=!0),l=l<<6|s[n]&63,n++;o?r+="�":l<=65535?r+=String.fromCharCode(l):(l-=65536,r+=String.fromCharCode((l>>10&1023)+55296,(l&1023)+56320))}}return r}function jv(s,e,t=0){let r=0,n=s.length;for(;r<n;){let i=s.codePointAt(r);if(i<128)e[t]=i,t++;else{let a=0,o=0;for(i<=2047?(a=1,o=192):i<=65535?(a=2,o=224):i<=1114111&&(a=3,o=240,r++),e[t]=(i>>6*a)+o,t++;a>0;)e[t]=128|i>>6*(a-1)&63,t++,a--}r++}return t}class S1{constructor(e,t=!1){this.bits=e,this.offset=Math.ceil(e/8),this.max=Math.pow(2,e)-1,this.min=0,this.unpack=this.unpack_,t&&(this.max=Math.pow(2,e)/2-1,this.min=-this.max-1,this.unpack=this.unpackSigned_)}pack(e,t,r=0){t=this.clamp_(Math.round(t));for(let n=0,i=this.offset;n<i;n++)e[r]=Math.floor(t/Math.pow(2,n*8))&255,r++;return r}unpack_(e,t=0){let r=0;for(let n=0;n<this.offset;n++)r+=e[t+n]*Math.pow(256,n);return r}unpackSigned_(e,t=0){return this.sign_(this.unpack_(e,t))}clamp_(e){return e>this.max?this.max:e<this.min?this.min:e}sign_(e){return e>this.max&&(e-=this.max*2+2),e}}class GM{constructor(e,t){this.offset=Math.ceil((e+t)/8),this.ebits=e,this.fbits=t,this.bias=(1<<e-1)-1,this.biasP2=Math.pow(2,this.bias+1),this.ebitsFbits=e+t,this.fbias=Math.pow(2,-(8*this.offset-1-e))}pack(e,t,r){Math.abs(t)>this.biasP2-this.ebitsFbits*2&&(t=t<0?-1/0:1/0);let n=((t=+t)||1/t)<0||t<0?1:0;t=Math.abs(t);let i=Math.min(Math.floor(Math.log(t)/Math.LN2),1023),a=Ku(t/Math.pow(2,i)*Math.pow(2,this.fbits));return t!==t?(a=Math.pow(2,this.fbits-1),i=(1<<this.ebits)-1):t!==0&&(t>=Math.pow(2,1-this.bias)?(a/Math.pow(2,this.fbits)>=2&&(i=i+1,a=1),i>this.bias?(i=(1<<this.ebits)-1,a=0):(i=i+this.bias,a=Ku(a)-Math.pow(2,this.fbits))):(a=Ku(t/Math.pow(2,1-this.bias-this.fbits)),i=0)),this.packFloatBits_(e,r,n,i,a)}unpack(e,t){let r=(1<<this.ebits)-1,n,i="";for(let l=this.offset-1;l>=0;l--){let u=e[l+t].toString(2);i+="00000000".substring(u.length)+u}let a=i.charAt(0)=="1"?-1:1;i=i.substring(1);let o=parseInt(i.substring(0,this.ebits),2);return i=i.substring(this.ebits),o==r?parseInt(i,2)!==0?NaN:a*(1/0):(o===0?(o+=1,n=parseInt(i,2)):n=parseInt("1"+i,2),a*n*this.fbias*Math.pow(2,o-this.bias))}packFloatBits_(e,t,r,n,i){let a=[];a.push(r);for(let d=this.ebits;d>0;d-=1)a[d]=n%2?1:0,n=Math.floor(n/2);let o=a.length;for(let d=this.fbits;d>0;d-=1)a[o+d]=i%2?1:0,i=Math.floor(i/2);let l=a.join(""),u=this.offset+t-1,h=t;for(;u>=t;)e[u]=parseInt(l.substring(0,8),2),l=l.substring(8),u--,h++;return h}}function Ku(s){let e=Math.floor(s),t=s-e;return t<.5?e:t>.5||e%2?e+1:e}function li(s,e=0,t=s.length){return C1(s,e,t)}function Os(s){let e=[];return jv(s,e),e}function KM(s,e,t=0){return jv(s,e,t)}function Nv(s,e,t,r=0){e=e||{};let n=Uv(e.bits,e.fp,e.signed),i=Math.ceil(e.bits/8),a=0,o=r;for(let l=s.length;a<l;a++)r=n.pack(t,s[a],r);return e.be&&Rv(t,i,o,r),r}function On(s,e,t,r=0,n=s.length){e=e||{};let i=Uv(e.bits,e.fp,e.signed);if(n=I1(s,r,n,i.offset),e.be){let a=k1(s);e.be&&Rv(a,i.offset,r,n),HM(a,t,r,n,i)}else HM(s,t,r,n,i)}function Vc(s,e,t,r=0){return Nv([s],e,t,r)}function it(s,e){let t=[];return Vc(s,e,t,0),t}function To(s,e,t=0){let r=[];return On(s,e,r,t,t+Math.ceil(e.bits/8)),r[0]}function HM(s,e,t,r,n){let i=n.offset;for(let a=0,o=t;o<r;o+=i,a++)e[a]=n.unpack(s,o)}function k1(s){return new Uint8Array(s)}function I1(s,e,t,r){let n=(t-e)%r;return t-n}function Uv(s,e,t){return e&&s==32?new GM(8,23):e&&s==64?new GM(11,52):new S1(s,t)}class $1{constructor(){this.container="",this.chunkSize=0,this.format="",this.signature=null,this.head=0,this.uInt32={bits:32,be:!1},this.supported_containers=["RIFF","RIFX"]}setSignature(e){if(this.head=0,this.container=this.readString(e,4),this.supported_containers.indexOf(this.container)===-1)throw Error("Not a supported format.");this.uInt32.be=this.container==="RIFX",this.chunkSize=this.readUInt32(e),this.format=this.readString(e,4),this.signature={chunkId:this.container,chunkSize:this.chunkSize,format:this.format,subChunks:this.getSubChunksIndex_(e)}}findChunk(e,t=!1){let r=this.signature.subChunks,n=[];for(let i=0;i<r.length;i++)if(r[i].chunkId==e)if(t)n.push(r[i]);else return r[i];return e=="LIST"&&n.length?n:null}readString(e,t){let r="";return r=li(e,this.head,this.head+t),this.head+=t,r}readUInt32(e){let t=To(e,this.uInt32,this.head);return this.head+=4,t}getSubChunksIndex_(e){let t=[],r=this.head;for(;r<=e.length-8;)t.push(this.getSubChunkIndex_(e,r)),r+=8+t[t.length-1].chunkSize,r=r%2?r+1:r;return t}getSubChunkIndex_(e,t){let r={chunkId:this.getChunkId_(e,t),chunkSize:this.getChunkSize_(e,t)};if(r.chunkId=="LIST")r.format=li(e,t+8,t+12),this.head+=4,r.subChunks=this.getSubChunksIndex_(e);else{let n=r.chunkSize%2?r.chunkSize+1:r.chunkSize;this.head=t+8+n,r.chunkData={start:t+8,end:this.head}}return r}getChunkId_(e,t){return this.head+=4,li(e,t,t+4)}getChunkSize_(e,t){return this.head+=4,To(e,this.uInt32,t+4)}}class Wc extends $1{constructor(){super(),this.supported_containers.push("RF64"),this.fmt={chunkId:"",chunkSize:0,audioFormat:0,numChannels:0,sampleRate:0,byteRate:0,blockAlign:0,bitsPerSample:0,cbSize:0,validBitsPerSample:0,dwChannelMask:0,subformat:[]},this.fact={chunkId:"",chunkSize:0,dwSampleLength:0},this.cue={chunkId:"",chunkSize:0,dwCuePoints:0,points:[]},this.smpl={chunkId:"",chunkSize:0,dwManufacturer:0,dwProduct:0,dwSamplePeriod:0,dwMIDIUnityNote:0,dwMIDIPitchFraction:0,dwSMPTEFormat:0,dwSMPTEOffset:0,dwNumSampleLoops:0,dwSamplerData:0,loops:[]},this.bext={chunkId:"",chunkSize:0,description:"",originator:"",originatorReference:"",originationDate:"",originationTime:"",timeReference:[0,0],version:0,UMID:"",loudnessValue:0,loudnessRange:0,maxTruePeakLevel:0,maxMomentaryLoudness:0,maxShortTermLoudness:0,reserved:"",codingHistory:""},this.iXML={chunkId:"",chunkSize:0,value:""},this.ds64={chunkId:"",chunkSize:0,riffSizeHigh:0,riffSizeLow:0,dataSizeHigh:0,dataSizeLow:0,originationTime:0,sampleCountHigh:0,sampleCountLow:0},this.data={chunkId:"",chunkSize:0,samples:new Uint8Array(0)},this.LIST=[],this.junk={chunkId:"",chunkSize:0,chunkData:[]},this._PMX={chunkId:"",chunkSize:0,value:""},this.uInt16={bits:16,be:!1,signed:!1,fp:!1}}fromBuffer(e,t=!0){if(this.clearHeaders(),this.setSignature(e),this.uInt16.be=this.uInt32.be,this.format!="WAVE")throw Error('Could not find the "WAVE" format identifier');this.readDs64Chunk_(e),this.readFmtChunk_(e),this.readFactChunk_(e),this.readBextChunk_(e),this.readiXMLChunk_(e),this.readCueChunk_(e),this.readSmplChunk_(e),this.readDataChunk_(e,t),this.readJunkChunk_(e),this.readLISTChunk_(e),this.read_PMXChunk_(e)}clearHeaders(){let e=new Wc;Object.assign(this.fmt,e.fmt),Object.assign(this.fact,e.fact),Object.assign(this.cue,e.cue),Object.assign(this.smpl,e.smpl),Object.assign(this.bext,e.bext),Object.assign(this.iXML,e.iXML),Object.assign(this.ds64,e.ds64),Object.assign(this.data,e.data),this.LIST=[],Object.assign(this.junk,e.junk),Object.assign(this._PMX,e._PMX)}readFmtChunk_(e){let t=this.findChunk("fmt ");if(t)this.head=t.chunkData.start,this.fmt.chunkId=t.chunkId,this.fmt.chunkSize=t.chunkSize,this.fmt.audioFormat=this.readUInt16_(e),this.fmt.numChannels=this.readUInt16_(e),this.fmt.sampleRate=this.readUInt32(e),this.fmt.byteRate=this.readUInt32(e),this.fmt.blockAlign=this.readUInt16_(e),this.fmt.bitsPerSample=this.readUInt16_(e),this.readFmtExtension_(e);else throw Error('Could not find the "fmt " chunk')}readFmtExtension_(e){this.fmt.chunkSize>16&&(this.fmt.cbSize=this.readUInt16_(e),this.fmt.chunkSize>18&&(this.fmt.validBitsPerSample=this.readUInt16_(e),this.fmt.chunkSize>20&&(this.fmt.dwChannelMask=this.readUInt32(e),this.fmt.subformat=[this.readUInt32(e),this.readUInt32(e),this.readUInt32(e),this.readUInt32(e)])))}readFactChunk_(e){let t=this.findChunk("fact");t&&(this.head=t.chunkData.start,this.fact.chunkId=t.chunkId,this.fact.chunkSize=t.chunkSize,this.fact.dwSampleLength=this.readUInt32(e))}readCueChunk_(e){let t=this.findChunk("cue ");if(t){this.head=t.chunkData.start,this.cue.chunkId=t.chunkId,this.cue.chunkSize=t.chunkSize,this.cue.dwCuePoints=this.readUInt32(e);for(let r=0;r<this.cue.dwCuePoints;r++)this.cue.points.push({dwName:this.readUInt32(e),dwPosition:this.readUInt32(e),fccChunk:this.readString(e,4),dwChunkStart:this.readUInt32(e),dwBlockStart:this.readUInt32(e),dwSampleOffset:this.readUInt32(e)})}}readSmplChunk_(e){let t=this.findChunk("smpl");if(t){this.head=t.chunkData.start,this.smpl.chunkId=t.chunkId,this.smpl.chunkSize=t.chunkSize,this.smpl.dwManufacturer=this.readUInt32(e),this.smpl.dwProduct=this.readUInt32(e),this.smpl.dwSamplePeriod=this.readUInt32(e),this.smpl.dwMIDIUnityNote=this.readUInt32(e),this.smpl.dwMIDIPitchFraction=this.readUInt32(e),this.smpl.dwSMPTEFormat=this.readUInt32(e),this.smpl.dwSMPTEOffset=this.readUInt32(e),this.smpl.dwNumSampleLoops=this.readUInt32(e),this.smpl.dwSamplerData=this.readUInt32(e);for(let r=0;r<this.smpl.dwNumSampleLoops;r++)this.smpl.loops.push({dwName:this.readUInt32(e),dwType:this.readUInt32(e),dwStart:this.readUInt32(e),dwEnd:this.readUInt32(e),dwFraction:this.readUInt32(e),dwPlayCount:this.readUInt32(e)})}}readDataChunk_(e,t){let r=this.findChunk("data");if(r)this.data.chunkId="data",this.data.chunkSize=r.chunkSize,t&&(this.data.samples=e.slice(r.chunkData.start,r.chunkData.end));else throw Error('Could not find the "data" chunk')}readBextChunk_(e){let t=this.findChunk("bext");t&&(this.head=t.chunkData.start,this.bext.chunkId=t.chunkId,this.bext.chunkSize=t.chunkSize,this.bext.description=this.readString(e,256),this.bext.originator=this.readString(e,32),this.bext.originatorReference=this.readString(e,32),this.bext.originationDate=this.readString(e,10),this.bext.originationTime=this.readString(e,8),this.bext.timeReference=[this.readUInt32(e),this.readUInt32(e)],this.bext.version=this.readUInt16_(e),this.bext.UMID=this.readString(e,64),this.bext.loudnessValue=this.readUInt16_(e),this.bext.loudnessRange=this.readUInt16_(e),this.bext.maxTruePeakLevel=this.readUInt16_(e),this.bext.maxMomentaryLoudness=this.readUInt16_(e),this.bext.maxShortTermLoudness=this.readUInt16_(e),this.bext.reserved=this.readString(e,180),this.bext.codingHistory=this.readString(e,this.bext.chunkSize-602))}readiXMLChunk_(e){let t=this.findChunk("iXML");t&&(this.head=t.chunkData.start,this.iXML.chunkId=t.chunkId,this.iXML.chunkSize=t.chunkSize,this.iXML.value=li(e,this.head,this.head+this.iXML.chunkSize))}readDs64Chunk_(e){let t=this.findChunk("ds64");if(t)this.head=t.chunkData.start,this.ds64.chunkId=t.chunkId,this.ds64.chunkSize=t.chunkSize,this.ds64.riffSizeHigh=this.readUInt32(e),this.ds64.riffSizeLow=this.readUInt32(e),this.ds64.dataSizeHigh=this.readUInt32(e),this.ds64.dataSizeLow=this.readUInt32(e),this.ds64.originationTime=this.readUInt32(e),this.ds64.sampleCountHigh=this.readUInt32(e),this.ds64.sampleCountLow=this.readUInt32(e);else if(this.container=="RF64")throw Error('Could not find the "ds64" chunk')}readLISTChunk_(e){let t=this.findChunk("LIST",!0);if(t!==null)for(let r=0;r<t.length;r++){let n=t[r];this.LIST.push({chunkId:n.chunkId,chunkSize:n.chunkSize,format:n.format,subChunks:[]});for(let i=0;i<n.subChunks.length;i++)this.readLISTSubChunks_(n.subChunks[i],n.format,e)}}readLISTSubChunks_(e,t,r){t=="adtl"?["labl","note","ltxt"].indexOf(e.chunkId)>-1&&this.readLISTadtlSubChunks_(r,e):t=="INFO"&&this.readLISTINFOSubChunks_(r,e)}readLISTadtlSubChunks_(e,t){this.head=t.chunkData.start;let r={chunkId:t.chunkId,chunkSize:t.chunkSize,dwName:this.readUInt32(e)};t.chunkId=="ltxt"?(r.dwSampleLength=this.readUInt32(e),r.dwPurposeID=this.readUInt32(e),r.dwCountry=this.readUInt16_(e),r.dwLanguage=this.readUInt16_(e),r.dwDialect=this.readUInt16_(e),r.dwCodePage=this.readUInt16_(e),r.value=""):r.value=this.readZSTR_(e,this.head),this.LIST[this.LIST.length-1].subChunks.push(r)}readLISTINFOSubChunks_(e,t){this.head=t.chunkData.start,this.LIST[this.LIST.length-1].subChunks.push({chunkId:t.chunkId,chunkSize:t.chunkSize,value:this.readZSTR_(e,this.head)})}readJunkChunk_(e){let t=this.findChunk("junk");t&&(this.junk={chunkId:t.chunkId,chunkSize:t.chunkSize,chunkData:[].slice.call(e.slice(t.chunkData.start,t.chunkData.end))})}read_PMXChunk_(e){let t=this.findChunk("_PMX");t&&(this.head=t.chunkData.start,this._PMX.chunkId=t.chunkId,this._PMX.chunkSize=t.chunkSize,this._PMX.value=li(e,this.head,this.head+this._PMX.chunkSize))}readZSTR_(e,t=0){for(let r=t;r<e.length&&(this.head++,e[r]!==0);r++);return li(e,t,this.head-1)}readUInt16_(e){let t=To(e,this.uInt16,this.head);return this.head+=2,t}}function Pr(s,e){let t=Os(s);for(let r=t.length;r<e;r++)t.push(0);return t}class A1 extends Wc{toBuffer(){this.uInt16.be=this.container==="RIFX",this.uInt32.be=this.uInt16.be;let e=[this.getJunkBytes_(),this.getDs64Bytes_(),this.getBextBytes_(),this.getiXMLBytes_(),this.getFmtBytes_(),this.getFactBytes_(),Os(this.data.chunkId),it(this.data.samples.length,this.uInt32),this.data.samples,this.getCueBytes_(),this.getSmplBytes_(),this.getLISTBytes_(),this.get_PMXBytes_()],t=0;for(let i=0;i<e.length;i++)t+=e[i].length;let r=new Uint8Array(t+12),n=0;n=KM(this.container,r,n),n=Vc(t+4,this.uInt32,r,n),n=KM(this.format,r,n);for(let i=0;i<e.length;i++)r.set(e[i],n),n+=e[i].length;return r}getBextBytes_(){let e=[];return this.enforceBext_(),this.bext.chunkId&&(this.bext.chunkSize=602+this.bext.codingHistory.length,e=e.concat(Os(this.bext.chunkId),it(602+this.bext.codingHistory.length,this.uInt32),Pr(this.bext.description,256),Pr(this.bext.originator,32),Pr(this.bext.originatorReference,32),Pr(this.bext.originationDate,10),Pr(this.bext.originationTime,8),it(this.bext.timeReference[0],this.uInt32),it(this.bext.timeReference[1],this.uInt32),it(this.bext.version,this.uInt16),Pr(this.bext.UMID,64),it(this.bext.loudnessValue,this.uInt16),it(this.bext.loudnessRange,this.uInt16),it(this.bext.maxTruePeakLevel,this.uInt16),it(this.bext.maxMomentaryLoudness,this.uInt16),it(this.bext.maxShortTermLoudness,this.uInt16),Pr(this.bext.reserved,180),Pr(this.bext.codingHistory,this.bext.codingHistory.length))),this.enforceByteLen_(e),e}enforceBext_(){for(let e in this.bext)if(this.bext.hasOwnProperty(e)&&this.bext[e]&&e!="timeReference"){this.bext.chunkId="bext";break}(this.bext.timeReference[0]||this.bext.timeReference[1])&&(this.bext.chunkId="bext")}getiXMLBytes_(){let e=[];if(this.iXML.chunkId){let t=Os(this.iXML.value);this.iXML.chunkSize=t.length,e=e.concat(Os(this.iXML.chunkId),it(this.iXML.chunkSize,this.uInt32),t)}return this.enforceByteLen_(e),e}getDs64Bytes_(){let e=[];return this.ds64.chunkId&&(e=e.concat(Os(this.ds64.chunkId),it(this.ds64.chunkSize,this.uInt32),it(this.ds64.riffSizeHigh,this.uInt32),it(this.ds64.riffSizeLow,this.uInt32),it(this.ds64.dataSizeHigh,this.uInt32),it(this.ds64.dataSizeLow,this.uInt32),it(this.ds64.originationTime,this.uInt32),it(this.ds64.sampleCountHigh,this.uInt32),it(this.ds64.sampleCountLow,this.uInt32))),this.enforceByteLen_(e),e}getCueBytes_(){let e=[];if(this.cue.chunkId){let t=this.getCuePointsBytes_();e=e.concat(Os(this.cue.chunkId),it(t.length+4,this.uInt32),it(this.cue.dwCuePoints,this.uInt32),t)}return this.enforceByteLen_(e),e}getCuePointsBytes_(){let e=[];for(let t=0;t<this.cue.dwCuePoints;t++)e=e.concat(it(this.cue.points[t].dwName,this.uInt32),it(this.cue.points[t].dwPosition,this.uInt32),Os(this.cue.points[t].fccChunk),it(this.cue.points[t].dwChunkStart,this.uInt32),it(this.cue.points[t].dwBlockStart,this.uInt32),it(this.cue.points[t].dwSampleOffset,this.uInt32));return e}getSmplBytes_(){let e=[];if(this.smpl.chunkId){let t=this.getSmplLoopsBytes_();e=e.concat(Os(this.smpl.chunkId),it(t.length+36,this.uInt32),it(this.smpl.dwManufacturer,this.uInt32),it(this.smpl.dwProduct,this.uInt32),it(this.smpl.dwSamplePeriod,this.uInt32),it(this.smpl.dwMIDIUnityNote,this.uInt32),it(this.smpl.dwMIDIPitchFraction,this.uInt32),it(this.smpl.dwSMPTEFormat,this.uInt32),it(this.smpl.dwSMPTEOffset,this.uInt32),it(this.smpl.dwNumSampleLoops,this.uInt32),it(this.smpl.dwSamplerData,this.uInt32),t)}return this.enforceByteLen_(e),e}getSmplLoopsBytes_(){let e=[];for(let t=0;t<this.smpl.dwNumSampleLoops;t++)e=e.concat(it(this.smpl.loops[t].dwName,this.uInt32),it(this.smpl.loops[t].dwType,this.uInt32),it(this.smpl.loops[t].dwStart,this.uInt32),it(this.smpl.loops[t].dwEnd,this.uInt32),it(this.smpl.loops[t].dwFraction,this.uInt32),it(this.smpl.loops[t].dwPlayCount,this.uInt32));return e}getFactBytes_(){let e=[];return this.fact.chunkId&&(e=e.concat(Os(this.fact.chunkId),it(this.fact.chunkSize,this.uInt32),it(this.fact.dwSampleLength,this.uInt32))),this.enforceByteLen_(e),e}getFmtBytes_(){let e=[];if(this.fmt.chunkId){let t=e.concat(Os(this.fmt.chunkId),it(this.fmt.chunkSize,this.uInt32),it(this.fmt.audioFormat,this.uInt16),it(this.fmt.numChannels,this.uInt16),it(this.fmt.sampleRate,this.uInt32),it(this.fmt.byteRate,this.uInt32),it(this.fmt.blockAlign,this.uInt16),it(this.fmt.bitsPerSample,this.uInt16),this.getFmtExtensionBytes_());return this.enforceByteLen_(t),t}throw Error('Could not find the "fmt " chunk')}getFmtExtensionBytes_(){let e=[];return this.fmt.chunkSize>16&&(e=e.concat(it(this.fmt.cbSize,this.uInt16))),this.fmt.chunkSize>18&&(e=e.concat(it(this.fmt.validBitsPerSample,this.uInt16))),this.fmt.chunkSize>20&&(e=e.concat(it(this.fmt.dwChannelMask,this.uInt32))),this.fmt.chunkSize>24&&(e=e.concat(it(this.fmt.subformat[0],this.uInt32),it(this.fmt.subformat[1],this.uInt32),it(this.fmt.subformat[2],this.uInt32),it(this.fmt.subformat[3],this.uInt32))),e}getLISTBytes_(){let e=[];for(let t=0;t<this.LIST.length;t++){let r=this.getLISTSubChunksBytes_(this.LIST[t].subChunks,this.LIST[t].format);e=e.concat(Os(this.LIST[t].chunkId),it(r.length+4,this.uInt32),Os(this.LIST[t].format),r)}return this.enforceByteLen_(e),e}getLISTSubChunksBytes_(e,t){let r=[];for(let n=0,i=e.length;n<i;n++)t=="INFO"?r=r.concat(this.getLISTINFOSubChunksBytes_(e[n])):t=="adtl"&&(r=r.concat(this.getLISTadtlSubChunksBytes_(e[n]))),this.enforceByteLen_(r);return r}getLISTINFOSubChunksBytes_(e){let t=[],r=Pr(e.value,e.value.length);return t=t.concat(Os(e.chunkId),it(r.length+1,this.uInt32),r),t.push(0),t}getLISTadtlSubChunksBytes_(e){let t=[];if(["labl","note"].indexOf(e.chunkId)>-1){let r=Pr(e.value,e.value.length);t=t.concat(Os(e.chunkId),it(r.length+4+1,this.uInt32),it(e.dwName,this.uInt32),r),t.push(0)}else e.chunkId=="ltxt"&&(t=t.concat(this.getLtxtChunkBytes_(e)));return t}getLtxtChunkBytes_(e){return[].concat(Os(e.chunkId),it(e.value.length+20,this.uInt32),it(e.dwName,this.uInt32),it(e.dwSampleLength,this.uInt32),it(e.dwPurposeID,this.uInt32),it(e.dwCountry,this.uInt16),it(e.dwLanguage,this.uInt16),it(e.dwDialect,this.uInt16),it(e.dwCodePage,this.uInt16),Pr(e.value,e.value.length))}get_PMXBytes_(){let e=[];if(this._PMX.chunkId){let t=Os(this._PMX.value);this._PMX.chunkSize=t.length,e=e.concat(Os(this._PMX.chunkId),it(this._PMX.chunkSize,this.uInt32),t)}return this.enforceByteLen_(e),e}getJunkBytes_(){let e=[];return this.junk.chunkId?e.concat(Os(this.junk.chunkId),it(this.junk.chunkData.length,this.uInt32),this.junk.chunkData):(this.enforceByteLen_(e),e)}enforceByteLen_(e){e.length%2&&e.push(0)}}function F1(s){let e=[];if(s.length>0)if(s[0].constructor!==Number){e=new Float64Array(s[0].length*s.length);for(let t=0,r=s[0].length,n=0;t<r;t++)for(let i=0,a=s.length;i<a;i++,n++)e[n]=s[i][t]}else e=s;return e}function O1(s,e,t=Float64Array){let r=[];for(let n=0;n<e;n++)r[n]=new t(s.length/e);for(let n=0;n<e;n++)for(let i=n,a=0;i<s.length;i+=e,a++)r[n][a]=s[i];return r}function D1(s,e){let t=s*e/8;return!(s<1||t>65535)}function Vv(s,e,t){let r=s*(e/8)*t;return!(t<1||r>4294967295)}class L1 extends A1{constructor(){super(),this.bitDepth="0",this.dataType={bits:0,be:!1},this.WAV_AUDIO_FORMATS={4:17,8:1,"8a":6,"8m":7,16:1,24:1,32:1,"32f":3,64:3}}fromScratch(e,t,r,n,i){i=i||{},this.clearHeaders(),this.newWavFile_(e,t,r,n,i)}fromBuffer(e,t=!0){super.fromBuffer(e,t),this.bitDepthFromFmt_(),this.updateDataType_()}toBuffer(){return this.validateWavHeader_(),super.toBuffer()}getSamples(e=!1,t=Float64Array){let r=new t(this.data.samples.length/(this.dataType.bits/8));return On(this.data.samples,this.dataType,r,0,this.data.samples.length),!e&&this.fmt.numChannels>1?O1(r,this.fmt.numChannels,t):r}getSample(e){if(e=e*(this.dataType.bits/8),e+this.dataType.bits/8>this.data.samples.length)throw new Error("Range error");return To(this.data.samples.slice(e,e+this.dataType.bits/8),this.dataType)}setSample(e,t){if(e=e*(this.dataType.bits/8),e+this.dataType.bits/8>this.data.samples.length)throw new Error("Range error");Vc(t,this.dataType,this.data.samples,e)}getiXML(){return this.iXML.value}setiXML(e){if(typeof e!="string")throw new TypeError("iXML value must be a string.");this.iXML.value=e,this.iXML.chunkId="iXML"}get_PMX(){return this._PMX.value}set_PMX(e){if(typeof e!="string")throw new TypeError("_PMX value must be a string.");this._PMX.value=e,this._PMX.chunkId="_PMX"}newWavFile_(e,t,r,n,i){i.container||(i.container="RIFF"),this.container=i.container,this.bitDepth=r,n=F1(n),this.updateDataType_();let a=this.dataType.bits/8;this.data.samples=new Uint8Array(n.length*a),Nv(n,this.dataType,this.data.samples,0),this.makeWavHeader_(r,e,t,a,this.data.samples.length,i),this.data.chunkId="data",this.data.chunkSize=this.data.samples.length,this.validateWavHeader_()}makeWavHeader_(e,t,r,n,i,a){e=="4"?this.createADPCMHeader_(e,t,r,n,i,a):e=="8a"||e=="8m"?this.createALawMulawHeader_(e,t,r,n,i,a):Object.keys(this.WAV_AUDIO_FORMATS).indexOf(e)==-1||t>2?this.createExtensibleHeader_(e,t,r,n,i,a):this.createPCMHeader_(e,t,r,n,i,a)}createPCMHeader_(e,t,r,n,i,a){this.container=a.container,this.chunkSize=36+i,this.format="WAVE",this.bitDepth=e,this.fmt={chunkId:"fmt ",chunkSize:16,audioFormat:this.WAV_AUDIO_FORMATS[e]||65534,numChannels:t,sampleRate:r,byteRate:t*n*r,blockAlign:t*n,bitsPerSample:parseInt(e,10),cbSize:0,validBitsPerSample:0,dwChannelMask:0,subformat:[]}}createADPCMHeader_(e,t,r,n,i,a){this.createPCMHeader_(e,t,r,n,i,a),this.chunkSize=40+i,this.fmt.chunkSize=20,this.fmt.byteRate=4055,this.fmt.blockAlign=256,this.fmt.bitsPerSample=4,this.fmt.cbSize=2,this.fmt.validBitsPerSample=505,this.fact={chunkId:"fact",chunkSize:4,dwSampleLength:i*2}}createExtensibleHeader_(e,t,r,n,i,a){this.createPCMHeader_(e,t,r,n,i,a),this.chunkSize=60+i,this.fmt.chunkSize=40,this.fmt.bitsPerSample=(parseInt(e,10)-1|7)+1,this.fmt.cbSize=22,this.fmt.validBitsPerSample=parseInt(e,10),this.fmt.dwChannelMask=z1(t),this.fmt.subformat=[1,1048576,2852126848,1905997824]}createALawMulawHeader_(e,t,r,n,i,a){this.createPCMHeader_(e,t,r,n,i,a),this.chunkSize=40+i,this.fmt.chunkSize=20,this.fmt.cbSize=2,this.fmt.validBitsPerSample=8,this.fact={chunkId:"fact",chunkSize:4,dwSampleLength:i}}bitDepthFromFmt_(){this.fmt.audioFormat===3&&this.fmt.bitsPerSample===32?this.bitDepth="32f":this.fmt.audioFormat===6?this.bitDepth="8a":this.fmt.audioFormat===7?this.bitDepth="8m":this.bitDepth=this.fmt.bitsPerSample.toString()}validateBitDepth_(){if(!this.WAV_AUDIO_FORMATS[this.bitDepth]){if(parseInt(this.bitDepth,10)>8&&parseInt(this.bitDepth,10)<54)return!0;throw new Error("Invalid bit depth.")}return!0}updateDataType_(){this.dataType={bits:(parseInt(this.bitDepth,10)-1|7)+1,fp:this.bitDepth=="32f"||this.bitDepth=="64",signed:this.bitDepth!="8",be:this.container=="RIFX"},["4","8a","8m"].indexOf(this.bitDepth)>-1&&(this.dataType.bits=8,this.dataType.signed=!1)}validateWavHeader_(){if(this.validateBitDepth_(),!D1(this.fmt.numChannels,this.fmt.bitsPerSample))throw new Error("Invalid number of channels.");if(!Vv(this.fmt.numChannels,this.fmt.bitsPerSample,this.fmt.sampleRate))throw new Error("Invalid sample rate.")}}function z1(s){let e=0;return s===1?e=4:s===2?e=3:s===4?e=51:s===6?e=63:s===8&&(e=1599),e}class B1 extends L1{getTag(e){let t=this.getTagIndex_(e);return t.TAG!==null?this.LIST[t.LIST].subChunks[t.TAG].value:null}setTag(e,t){e=R1(e);let r=this.getTagIndex_(e);r.TAG!==null?(this.LIST[r.LIST].subChunks[r.TAG].chunkSize=t.length+1,this.LIST[r.LIST].subChunks[r.TAG].value=t):r.LIST!==null?this.LIST[r.LIST].subChunks.push({chunkId:e,chunkSize:t.length+1,value:t}):(this.LIST.push({chunkId:"LIST",chunkSize:8+t.length+1,format:"INFO",subChunks:[]}),this.LIST[this.LIST.length-1].subChunks.push({chunkId:e,chunkSize:t.length+1,value:t}))}deleteTag(e){let t=this.getTagIndex_(e);return t.TAG!==null?(this.LIST[t.LIST].subChunks.splice(t.TAG,1),!0):!1}listTags(){let e=this.getLISTIndex("INFO"),t={};if(e!==null)for(let r=0,n=this.LIST[e].subChunks.length;r<n;r++)t[this.LIST[e].subChunks[r].chunkId]=this.LIST[e].subChunks[r].value;return t}getLISTIndex(e){for(let t=0,r=this.LIST.length;t<r;t++)if(this.LIST[t].format==e)return t;return null}getTagIndex_(e){let t={LIST:null,TAG:null};for(let r=0,n=this.LIST.length;r<n;r++)if(this.LIST[r].format=="INFO"){t.LIST=r;for(let i=0,a=this.LIST[r].subChunks.length;i<a;i++)if(this.LIST[r].subChunks[i].chunkId==e){t.TAG=i;break}break}return t}}function R1(s){if(s.constructor!==String)throw new Error("Invalid tag name.");if(s.length<4)for(let e=0,t=4-s.length;e<t;e++)s+=" ";return s}class qM extends B1{listCuePoints(){let e=this.getCuePoints_();for(let t=0,r=e.length;t<r;t++)e[t].position=e[t].dwSampleOffset/this.fmt.sampleRate*1e3,e[t].dwSampleLength?(e[t].end=e[t].dwSampleLength/this.fmt.sampleRate*1e3,e[t].end+=e[t].position):e[t].end=null,delete e[t].value;return e}setCuePoint(e){this.cue.chunkId="cue ",e.label||(e.label="");let t=this.getCuePoints_();this.clearLISTadtl_(),this.cue.points=[],e.dwSampleOffset=e.position*this.fmt.sampleRate/1e3,e.dwSampleLength=0,e.end&&(e.dwSampleLength=e.end*this.fmt.sampleRate/1e3-e.dwSampleOffset),t.length===0?this.setCuePoint_(e,1):this.setCuePointInOrder_(t,e),this.cue.dwCuePoints=this.cue.points.length}deleteCuePoint(e){this.cue.chunkId="cue ";let t=this.getCuePoints_();this.clearLISTadtl_();let r=this.cue.points.length;this.cue.points=[];for(let n=0;n<r;n++)n+1!==e&&this.setCuePoint_(t[n],n+1);this.cue.dwCuePoints=this.cue.points.length,this.cue.dwCuePoints?this.cue.chunkId="cue ":(this.cue.chunkId="",this.clearLISTadtl_())}updateLabel(e,t){let r=this.getLISTIndex("adtl");if(r!==null)for(let n=0,i=this.LIST[r].subChunks.length;n<i;n++)this.LIST[r].subChunks[n].dwName==e&&(this.LIST[r].subChunks[n].value=t)}getCuePoints_(){let e=[];for(let t=0;t<this.cue.points.length;t++){let r=this.cue.points[t],n=this.getDataForCuePoint_(r.dwName);n.label=n.value?n.value:"",n.dwPosition=r.dwPosition,n.fccChunk=r.fccChunk,n.dwChunkStart=r.dwChunkStart,n.dwBlockStart=r.dwBlockStart,n.dwSampleOffset=r.dwSampleOffset,e.push(n)}return e}getDataForCuePoint_(e){let t=this.getLISTIndex("adtl"),r={};return t!==null&&this.getCueDataFromLIST_(r,t,e),r}getCueDataFromLIST_(e,t,r){for(let n=0,i=this.LIST[t].subChunks.length;n<i;n++)if(this.LIST[t].subChunks[n].dwName==r){let a=this.LIST[t].subChunks[n];e.value=a.value||e.value,e.dwName=a.dwName||0,e.dwSampleLength=a.dwSampleLength||0,e.dwPurposeID=a.dwPurposeID||0,e.dwCountry=a.dwCountry||0,e.dwLanguage=a.dwLanguage||0,e.dwDialect=a.dwDialect||0,e.dwCodePage=a.dwCodePage||0}}setCuePoint_(e,t){this.cue.points.push({dwName:t,dwPosition:e.dwPosition?e.dwPosition:0,fccChunk:e.fccChunk?e.fccChunk:"data",dwChunkStart:e.dwChunkStart?e.dwChunkStart:0,dwBlockStart:e.dwBlockStart?e.dwBlockStart:0,dwSampleOffset:e.dwSampleOffset}),this.setLabl_(e,t)}setCuePointInOrder_(e,t){let r=!1;for(let n=0;n<e.length;n++)e[n].dwSampleOffset>t.dwSampleOffset&&!r?(this.setCuePoint_(t,n+1),this.setCuePoint_(e[n],n+2),r=!0):this.setCuePoint_(e[n],r?n+2:n+1);r||this.setCuePoint_(t,this.cue.points.length+1)}clearLISTadtl_(){for(let e=0,t=this.LIST.length;e<t;e++)this.LIST[e].format=="adtl"&&this.LIST.splice(e)}setLabl_(e,t){let r=this.getLISTIndex("adtl");r===null&&(this.LIST.push({chunkId:"LIST",chunkSize:4,format:"adtl",subChunks:[]}),r=this.LIST.length-1),this.setLabelText_(r,e,t),e.dwSampleLength&&this.setLtxtChunk_(r,e,t)}setLabelText_(e,t,r){this.LIST[e].subChunks.push({chunkId:"labl",chunkSize:4,dwName:r,value:t.label}),this.LIST[e].chunkSize+=12}setLtxtChunk_(e,t,r){this.LIST[e].subChunks.push({chunkId:"ltxt",chunkSize:20,dwName:r,dwSampleLength:t.dwSampleLength,dwPurposeID:t.dwPurposeID||0,dwCountry:t.dwCountry||0,dwLanguage:t.dwLanguage||0,dwDialect:t.dwDialect||0,dwCodePage:t.dwCodePage||0,value:t.label}),this.LIST[e].chunkSize+=28}}class j1{constructor(e,t,r){this.length_=e,this.scaleFactor_=(e-1)/t,this.interpolate=this.sinc,r.method==="point"?this.interpolate=this.point:r.method==="linear"?this.interpolate=this.linear:r.method==="cubic"&&(this.interpolate=this.cubic),this.tangentFactor_=1-Math.max(0,Math.min(1,r.tension||0)),this.sincFilterSize_=r.sincFilterSize||1,this.kernel_=U1(r.sincWindow||N1)}point(e,t){return this.getClippedInput_(Math.round(this.scaleFactor_*e),t)}linear(e,t){e=this.scaleFactor_*e;let r=Math.floor(e);return e-=r,(1-e)*this.getClippedInput_(r,t)+e*this.getClippedInput_(r+1,t)}cubic(e,t){e=this.scaleFactor_*e;let r=Math.floor(e),n=[this.getTangent_(r,t),this.getTangent_(r+1,t)],i=[this.getClippedInput_(r,t),this.getClippedInput_(r+1,t)];e-=r;let a=e*e,o=e*a;return(2*o-3*a+1)*i[0]+(o-2*a+e)*n[0]+(-2*o+3*a)*i[1]+(o-a)*n[1]}sinc(e,t){e=this.scaleFactor_*e;let r=Math.floor(e),n=r-this.sincFilterSize_+1,i=r+this.sincFilterSize_,a=0;for(let o=n;o<=i;o++)a+=this.kernel_(e-o)*this.getClippedInput_(o,t);return a}getTangent_(e,t){return this.tangentFactor_*(this.getClippedInput_(e+1,t)-this.getClippedInput_(e-1,t))/2}getClippedInput_(e,t){return 0<=e&&e<this.length_?t[e]:0}}function N1(s){return Math.exp(-s/2*s/2)}function U1(s){return function(e){return V1(e)*s(e)}}function V1(s){return s===0?1:Math.sin(Math.PI*s)/(Math.PI*s)}class W1{constructor(e,t,r){let n=2*Math.PI*r/t,i=0;this.filters=[];for(let a=0;a<=e;a++)a-e/2===0?this.filters[a]=n:(this.filters[a]=Math.sin(n*(a-e/2))/(a-e/2),this.filters[a]*=.54-.46*Math.cos(2*Math.PI*a/e)),i=i+this.filters[a];for(let a=0;a<=e;a++)this.filters[a]/=i;this.z=this.initZ_()}filter(e){this.z.buf[this.z.pointer]=e;let t=0;for(let r=0,n=this.z.buf.length;r<n;r++)t+=this.filters[r]*this.z.buf[(this.z.pointer+r)%this.z.buf.length];return this.z.pointer=(this.z.pointer+1)%this.z.buf.length,t}reset(){this.z=this.initZ_()}initZ_(){let e=[];for(let t=0;t<this.filters.length-1;t++)e.push(0);return{buf:e,pointer:0}}}class G1{constructor(e,t,r){let n=[];for(let i=0;i<e;i++)n.push(this.getCoeffs_({Fs:t,Fc:r,Q:.5/Math.sin(Math.PI/(e*2)*(i+.5))}));this.stages=[];for(let i=0;i<n.length;i++)this.stages[i]={b0:n[i].b[0],b1:n[i].b[1],b2:n[i].b[2],a1:n[i].a[0],a2:n[i].a[1],k:n[i].k,z:[0,0]}}filter(e){let t=e;for(let r=0,n=this.stages.length;r<n;r++)t=this.runStage_(r,t);return t}getCoeffs_(e){let t={};t.a=[],t.b=[];let r=this.preCalc_(e,t);return t.k=1,t.b.push((1-r.cw)/(2*r.a0)),t.b.push(2*t.b[0]),t.b.push(t.b[0]),t}preCalc_(e,t){let r={},n=2*Math.PI*e.Fc/e.Fs;return r.alpha=Math.sin(n)/(2*e.Q),r.cw=Math.cos(n),r.a0=1+r.alpha,t.a0=r.a0,t.a.push(-2*r.cw/r.a0),t.k=1,t.a.push((1-r.alpha)/r.a0),r}runStage_(e,t){let r=t*this.stages[e].k-this.stages[e].a1*this.stages[e].z[0]-this.stages[e].a2*this.stages[e].z[1],n=this.stages[e].b0*r+this.stages[e].b1*this.stages[e].z[0]+this.stages[e].b2*this.stages[e].z[1];return this.stages[e].z[1]=this.stages[e].z[0],this.stages[e].z[0]=r,n}reset(){for(let e=0;e<this.stages.length;e++)this.stages[e].z=[0,0]}}const K1={point:!1,linear:!1,cubic:!0,sinc:!0},XM={IIR:16,FIR:71},H1={IIR:G1,FIR:W1};function QM(s,e,t,r=null){r=r||{};let n=(t-e)/e+1,i=new Float64Array(s.length*n);r.method=r.method||"cubic";let a=new j1(s.length,i.length,{method:r.method,tension:r.tension||0,sincFilterSize:r.sincFilterSize||6,sincWindow:r.sincWindow||void 0,clip:r.clip||"mirror"});if(r.LPF===void 0&&(r.LPF=K1[r.method]),r.LPF){r.LPFType=r.LPFType||"IIR";const o=H1[r.LPFType];if(t>e){let l=new o(r.LPForder||XM[r.LPFType],t,e/2);q1(s,i,a,l)}else{let l=new o(r.LPForder||XM[r.LPFType],e,t/2);X1(s,i,a,l)}}else Wv(s,i,a);return i}function Wv(s,e,t){for(let r=0,n=e.length;r<n;r++)e[r]=t.interpolate(r,s)}function q1(s,e,t,r){for(let n=0,i=e.length;n<i;n++)e[n]=r.filter(t.interpolate(n,s));r.reset();for(let n=e.length-1;n>=0;n--)e[n]=r.filter(e[n])}function X1(s,e,t,r){for(let n=0,i=s.length;n<i;n++)s[n]=r.filter(s[n]);r.reset();for(let n=s.length-1;n>=0;n--)s[n]=r.filter(s[n]);Wv(s,e,t)}class Q1 extends qM{toRIFF(){let e=new Float64Array(Xi(this.data.samples.length,this.dataType.bits/8));On(this.data.samples,this.dataType,e,0,this.data.samples.length),this.fromExisting_(this.fmt.numChannels,this.fmt.sampleRate,this.bitDepth,e,{container:"RIFF"})}toRIFX(){let e=new Float64Array(Xi(this.data.samples.length,this.dataType.bits/8));On(this.data.samples,this.dataType,e,0,this.data.samples.length),this.fromExisting_(this.fmt.numChannels,this.fmt.sampleRate,this.bitDepth,e,{container:"RIFX"})}toIMAADPCM(){if(this.fmt.sampleRate!==8e3)throw new Error("Only 8000 Hz files can be compressed as IMA-ADPCM.");if(this.fmt.numChannels!==1)throw new Error("Only mono files can be compressed as IMA-ADPCM.");{this.assure16Bit_();let e=new Int16Array(Xi(this.data.samples.length,2));On(this.data.samples,this.dataType,e,0,this.data.samples.length),this.fromExisting_(this.fmt.numChannels,this.fmt.sampleRate,"4",a1(e),{container:this.correctContainer_()})}}fromIMAADPCM(e="16"){this.fromExisting_(this.fmt.numChannels,this.fmt.sampleRate,"16",o1(this.data.samples,this.fmt.blockAlign),{container:this.correctContainer_()}),e!="16"&&this.toBitDepth(e)}toALaw(){this.assure16Bit_();let e=new Int16Array(Xi(this.data.samples.length,2));On(this.data.samples,this.dataType,e,0,this.data.samples.length),this.fromExisting_(this.fmt.numChannels,this.fmt.sampleRate,"8a",g1(e),{container:this.correctContainer_()})}fromALaw(e="16"){this.fromExisting_(this.fmt.numChannels,this.fmt.sampleRate,"16",w1(this.data.samples),{container:this.correctContainer_()}),e!="16"&&this.toBitDepth(e)}toMuLaw(){this.assure16Bit_();let e=new Int16Array(Xi(this.data.samples.length,2));On(this.data.samples,this.dataType,e,0,this.data.samples.length),this.fromExisting_(this.fmt.numChannels,this.fmt.sampleRate,"8m",T1(e),{container:this.correctContainer_()})}fromMuLaw(e="16"){this.fromExisting_(this.fmt.numChannels,this.fmt.sampleRate,"16",E1(this.data.samples),{container:this.correctContainer_()}),e!="16"&&this.toBitDepth(e)}toBitDepth(e,t=!0){let r=e,n=this.bitDepth;t||(e!="32f"&&(r=this.dataType.bits.toString()),n=""+this.dataType.bits),this.assureUncompressed_();let i=this.getSamples(!0),a=new Float64Array(i.length);t1(i,n,a,r),this.fromExisting_(this.fmt.numChannels,this.fmt.sampleRate,e,a,{container:this.correctContainer_()})}toSampleRate(e,t){this.validateResample_(e);let r=this.getSamples(),n=[];if(r.constructor===Float64Array)n=QM(r,this.fmt.sampleRate,e,t);else for(let i=0;i<r.length;i++)n.push(QM(r[i],this.fmt.sampleRate,e,t));this.fromExisting_(this.fmt.numChannels,e,this.bitDepth,n,{container:this.correctContainer_()})}validateResample_(e){if(Vv(this.fmt.numChannels,this.fmt.bitsPerSample,e)){if(["4","8a","8m"].indexOf(this.bitDepth)>-1)throw new Error("wavefile can't change the sample rate of compressed files.")}else throw new Error("Invalid sample rate.")}assure16Bit_(){this.assureUncompressed_(),this.bitDepth!="16"&&this.toBitDepth("16")}assureUncompressed_(){this.bitDepth=="8a"?this.fromALaw():this.bitDepth=="8m"?this.fromMuLaw():this.bitDepth=="4"&&this.fromIMAADPCM()}correctContainer_(){return this.container=="RF64"?"RIFF":this.container}fromExisting_(e,t,r,n,i){let a=new qM;Object.assign(this.fmt,a.fmt),Object.assign(this.fact,a.fact),Object.assign(this.ds64,a.ds64),Object.assign(this.data,a.data),this.newWavFile_(e,t,r,n,i)}}function Xi(s,e){let t=s/e;return t%2&&t++,t}class J1 extends Q1{constructor(e){super(),e&&this.fromBuffer(e)}fromBase64(e){this.fromBuffer(e1(e))}toBase64(){return ZT(this.toBuffer())}toDataURI(){return"data:audio/wav;base64,"+this.toBase64()}fromDataURI(e){this.fromBase64(e.replace("data:audio/wav;base64,",""))}}class Y1{async checkWebGpuSupport(){if(!navigator.gpu)throw new Error(`No gpu adapter found, currently only Chrome and Edge support Webgpu:

 https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API`);if(!await navigator.gpu.requestAdapter())throw new Error("WebGPU is not supported")}async rawImageToBase64(e){const t=await e.toBlob("image/png",1);return"data:image/png;base64,"+(await new Promise((i,a)=>{const o=new FileReader;o.onloadend=()=>i(o.result),o.onerror=a,o.readAsDataURL(t)})).split(",")[1]}}const JM={"Kokoro-82M-v1.0-ONNX":{modelFileName:"model",dtype:"q4",name:"onnx-community/Kokoro-82M-v1.0-ONNX",pretrained:"Kokoro",subfolder:"onnx",device:"wasm"},"OuteTTS-0.2-500M":{modelFileName:"model",dtype:"q4",name:"onnx-community/OuteTTS-0.2-500M",pretrained:"Outetts",subfolder:"onnx",device:"webgpu"}};class Z1 extends Y1{constructor(e){super(),Object.defineProperty(this,"modelName",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"generator",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"model",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"onProgressChange",{enumerable:!0,configurable:!0,writable:!0,value:t=>{self.postMessage({event:"onProgressChange",payload:{progress:t}})}}),Object.defineProperty(this,"uint8ToBase64",{enumerable:!0,configurable:!0,writable:!0,value:t=>{let n="",i="";for(let a=0;a<t.byteLength;a+=32768){const o=t.subarray(a,a+32768);n+=String.fromCharCode(...o)}return i=btoa(n),i}}),Object.defineProperty(this,"ttsToBase64Wav",{enumerable:!0,configurable:!0,writable:!0,value:async({sampling_rate:t,audio:r})=>{const n=new J1;n.fromScratch(1,t,"32f",r);const i=n.toBuffer();return`data:audio/wav;base64,${this.uint8ToBase64(new Uint8Array(i))}`}}),Object.defineProperty(this,"onResult",{enumerable:!0,configurable:!0,writable:!0,value:t=>{self.postMessage({event:"onResult",payload:{result:t}})}}),Object.defineProperty(this,"speak",{enumerable:!0,configurable:!0,writable:!0,value:async(t,r=this.modelName==="Kokoro-82M-v1.0-ONNX"?"am_puck":"male_1",n=1.3)=>{if(!this.model)throw new Error("Model is not loaded");switch(JM[this.modelName].pretrained){case"Kokoro":{const o=await this.generator.generate(t,{voice:r,speed:n}),l=await this.ttsToBase64Wav(o);this.onResult(l);break}case"Outetts":{const a=this.generator,o=a.load_default_speaker(r),l=await a.generate({text:t,speaker:o});l.audio=l.audio.data,l.sampling_rate=l.sr;const u=await this.ttsToBase64Wav(l);this.onResult(u);break}}}}),Object.defineProperty(this,"load",{enumerable:!0,configurable:!0,writable:!0,value:async t=>{const r=JM[this.modelName];switch(r.pretrained){case"Kokoro":{const{KokoroTTS:n}=await import("./kokoro-CohYle5W.js");this.generator=await n.from_pretrained(r.name,{dtype:r.dtype,device:t||r.device,progress_callback:this.onProgressChange}),this.model=this.generator.model;break}case"Outetts":{const{HFModelConfig_v1:n,InterfaceHF:i}=await import("./index-C5USQyqK.js");this.onProgressChange({status:"progress",file:this.modelName,progress:0,total:100,name:this.modelName,loaded:0});const a=new n({model_path:r.name,language:"en",dtype:r.dtype,device:t||r.device});this.generator=await i({model_version:"0.2",cfg:a}),this.model=this.generator.model.model;break}case"default-type":{this.generator=await YT("text-to-speech",r.name,{dtype:r.dtype,device:t||r.device,model_file_name:r.modelFileName,progress_callback:this.onProgressChange,subfolder:r.subfolder}),this.model=this.generator.model;break}}}}),this.modelName=e}}let ho;self.addEventListener("message",async s=>{try{const{event:e,payload:t}=s.data;switch(e){case"load":ho=new Z1(t.modelName),await ho.load(t.device),self.postMessage({event:"onLoad",payload:{}});break;case"speak":if(!ho)throw new Error("No model found");await ho.speak(t.text,t.voice,t.speed);break}}catch(e){self.postMessage({event:"onError",payload:{error:e.message}})}});export{aE as _,rE as a,oE as b,iE as c,sE as d,nE as e};
