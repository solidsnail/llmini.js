var Dv=Object.defineProperty;var Lv=(e,r,t)=>r in e?Dv(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var J=(e,r,t)=>Lv(e,typeof r!="symbol"?r+"":r,t);const ia=new Map,Sn=[],zv=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){const s=ia.get(e);if(s===void 0)ia.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){const o=Sn.indexOf(e);o!==-1&&Sn.splice(o,1);for(let n=0;n<Sn.length;n++)if(ia.get(Sn[n]).priority<=t){Sn.splice(n,0,e);return}Sn.push(e)}return}throw new TypeError("not a valid backend")},Bv=async e=>{const r=ia.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{const t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},Rv=async e=>{const r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?Sn:t;let o;const n=[],i=new Set;for(const l of s){const c=await Bv(l);typeof c=="string"?n.push({name:l,err:c}):(o||(o=c),o===c&&i.add(l))}if(!o)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(const{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);const a=r.filter(l=>i.has(typeof l=="string"?l:l.name));return[o,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]},jv="1.21.0";let H_="warning";const Ps={wasm:{},webgl:{},webgpu:{},versions:{common:jv},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);H_=e}},get logLevel(){return H_}};Object.defineProperty(Ps,"logLevel",{enumerable:!0});const Nv=Ps,Vv=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];const s=t.getContext("2d");if(s!=null){let o,n;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(o=e.dims[2],n=e.dims[3]):(o=e.dims[3],n=e.dims[2]);const i=(r==null?void 0:r.format)!==void 0?r.format:"RGB",a=r==null?void 0:r.norm;let l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));const p=n*o;let d=0,u=p,f=p*2,_=-1;i==="RGBA"?(d=0,u=p,f=p*2,_=p*3):i==="RGB"?(d=0,u=p,f=p*2):i==="RBG"&&(d=0,f=p,u=p*2);for(let b=0;b<n;b++)for(let k=0;k<o;k++){const g=(e.data[d++]-c[0])*l[0],M=(e.data[u++]-c[1])*l[1],$=(e.data[f++]-c[2])*l[2],v=_===-1?255:(e.data[_++]-c[3])*l[3];s.fillStyle="rgba("+g+","+M+","+$+","+v+")",s.fillRect(k,b,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Uv=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let s;if(t!=null){let o,n,i;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(o=e.dims[2],n=e.dims[1],i=e.dims[3]):(o=e.dims[3],n=e.dims[2],i=e.dims[1]);const a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r==null?void 0:r.norm;let c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));const d=n*o;if(r!==void 0&&(r.format!==void 0&&i===4&&r.format!=="RGBA"||i===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const u=4;let f=0,_=1,b=2,k=3,g=0,M=d,$=d*2,v=-1;a==="RGBA"?(g=0,M=d,$=d*2,v=d*3):a==="RGB"?(g=0,M=d,$=d*2):a==="RBG"&&(g=0,$=d,M=d*2),s=t.createImageData(o,n);for(let y=0;y<n*o;f+=u,_+=u,b+=u,k+=u,y++)s.data[f]=(e.data[g++]-p[0])*c[0],s.data[_]=(e.data[M++]-p[1])*c[1],s.data[b]=(e.data[$++]-p[2])*c[2],s.data[k]=v===-1?255:(e.data[v++]-p[3])*c[3]}else throw new Error("Can not access image data");return s},Bl=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:t,width:s}=r,o=r.norm??{mean:255,bias:0};let n,i;typeof o.mean=="number"?n=[o.mean,o.mean,o.mean,o.mean]:n=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?i=[o.bias,o.bias,o.bias,o.bias]:i=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];const a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3);let d=4,u=0,f=1,_=2,b=3,k=0,g=c,M=c*2,$=-1;a==="RGB"&&(d=3,u=0,f=1,_=2,b=-1),l==="RGBA"?$=c*3:l==="RBG"?(k=0,M=c,g=c*2):l==="BGR"&&(M=0,g=c,k=c*2);for(let y=0;y<c;y++,u+=d,_+=d,f+=d,b+=d)p[k++]=(e[u]+i[0])/n[0],p[g++]=(e[f]+i[1])/n[1],p[M++]=(e[_]+i[2])/n[2],$!==-1&&b!==-1&&(p[$++]=(e[b]+i[3])/n[3]);return l==="RGBA"?new ds("float32",p,[1,4,t,s]):new ds("float32",p,[1,3,t,s])},Wv=async(e,r)=>{const t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,o=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string";let i,a=r??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){const p=l();p.width=e.width,p.height=e.height;const d=c(p);if(d!=null){let u=e.height,f=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(u=r.resizedHeight,f=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=u,a.width=f}else a.tensorFormat="RGBA",a.height=u,a.width=f;d.drawImage(e,0,0),i=d.getImageData(0,0,f,u).data}else throw new Error("Can not access image data")}else if(s){let p,d;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,d=r.resizedWidth):(p=e.height,d=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=p,a.width=d,r!==void 0){const u=l();u.width=d,u.height=p;const f=c(u);if(f!=null)f.putImageData(e,0,0),i=f.getImageData(0,0,d,p).data;else throw new Error("Can not access image data")}else i=e.data}else if(o){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");const p=l();p.width=e.width,p.height=e.height;const d=c(p);if(d!=null){const u=e.height,f=e.width;return d.drawImage(e,0,0,f,u),i=d.getImageData(0,0,f,u).data,a.height=u,a.width=f,Bl(i,a)}else throw new Error("Can not access image data")}else{if(n)return new Promise((p,d)=>{const u=l(),f=c(u);if(!e||!f)return d();const _=new Image;_.crossOrigin="Anonymous",_.src=e,_.onload=()=>{u.width=_.width,u.height=_.height,f.drawImage(_,0,0,u.width,u.height);const b=f.getImageData(0,0,u.width,u.height);a.height=u.height,a.width=u.width,p(Bl(b.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return Bl(i,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Gv=(e,r)=>{const{width:t,height:s,download:o,dispose:n}=r,i=[1,s,t,4];return new ds({location:"texture",type:"float32",texture:e,dims:i,download:o,dispose:n})},Kv=(e,r)=>{const{dataType:t,dims:s,download:o,dispose:n}=r;return new ds({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:o,dispose:n})},Hv=(e,r)=>{const{dataType:t,dims:s,download:o,dispose:n}=r;return new ds({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:o,dispose:n})},qv=(e,r,t)=>new ds({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]}),to=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),aa=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let q_=!1;const Qv=()=>{if(!q_){q_=!0;const e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(to.set("int64",BigInt64Array),aa.set(BigInt64Array,"int64")),r&&(to.set("uint64",BigUint64Array),aa.set(BigUint64Array,"uint64")),s?(to.set("float16",t),aa.set(t,"float16")):to.set("float16",Uint16Array)}},Xv=e=>{let r=1;for(let t=0;t<e.length;t++){const s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},Jv=(e,r)=>{switch(e.location){case"cpu":return new ds(e.type,e.data,r);case"cpu-pinned":return new ds({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new ds({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new ds({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new ds({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}};let ds=class{constructor(r,t,s){Qv();let o,n;if(typeof r=="object"&&"location"in r)switch(this.dataLocation=r.location,o=r.type,n=r.dims,r.location){case"cpu-pinned":{const a=to.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(r.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=r.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=r.texture,this.downloader=r.download,this.disposer=r.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="uint8"&&o!=="bool"&&o!=="uint4"&&o!=="int4")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=r.gpuBuffer,this.downloader=r.download,this.disposer=r.dispose;break}case"ml-tensor":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="uint64"&&o!=="int8"&&o!=="uint8"&&o!=="bool"&&o!=="uint4"&&o!=="int4")throw new TypeError(`unsupported type "${o}" to create tensor from MLTensor`);this.mlTensorData=r.mlTensor,this.downloader=r.download,this.disposer=r.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,l;if(typeof r=="string")if(o=r,l=s,r==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{const c=to.get(r);if(c===void 0)throw new TypeError(`Unsupported tensor type: ${r}.`);if(Array.isArray(t)){if(r==="float16"&&c===Uint16Array||r==="uint4"||r==="int4")throw new TypeError(`Creating a ${r} tensor from number array is not supported. Please use ${c.name} as data.`);r==="uint64"||r==="int64"?a=c.from(t,BigInt):a=c.from(t)}else if(t instanceof c)a=t;else if(t instanceof Uint8ClampedArray)if(r==="uint8")a=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(r==="float16"&&t instanceof Uint16Array&&c!==Uint16Array)a=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length);else throw new TypeError(`A ${o} tensor's data must be type of ${c}`)}else if(l=t,Array.isArray(r)){if(r.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const c=typeof r[0];if(c==="string")o="string",a=r;else if(c==="boolean")o="bool",a=Uint8Array.from(r);else throw new TypeError(`Invalid element type of data array: ${c}.`)}else if(r instanceof Uint8ClampedArray)o="uint8",a=Uint8Array.from(r);else{const c=aa.get(r.constructor);if(c===void 0)throw new TypeError(`Unsupported type for tensor data: ${r.constructor}.`);o=c,a=r}if(l===void 0)l=[a.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");n=l,this.cpuData=a,this.dataLocation="cpu"}const i=Xv(n);if(this.cpuData&&i!==this.cpuData.length&&!((o==="uint4"||o==="int4")&&Math.ceil(i/2)===this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=n,this.size=i}static async fromImage(r,t){return Wv(r,t)}static fromTexture(r,t){return Gv(r,t)}static fromGpuBuffer(r,t){return Kv(r,t)}static fromMLTensor(r,t){return Hv(r,t)}static fromPinnedBuffer(r,t,s){return qv(r,t,s)}toDataURL(r){return Vv(this,r)}toImageData(r){return Uv(this,r)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(r){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,r&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(r){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Jv(this,r)}};const Zn=ds,kM=(e,r)=>{(typeof Ps.trace>"u"?!Ps.wasm.trace:!Ps.trace)||console.timeStamp(`${e}::ORT::${r}`)},IM=(e,r)=>{var o;const t=((o=new Error().stack)==null?void 0:o.split(/\r\n|\r|\n/g))||[];let s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let i=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(i+=`::${r}`),kM("CPU",i);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},Rc=e=>{(typeof Ps.trace>"u"?!Ps.wasm.trace:!Ps.trace)||IM("BEGIN",e)},jc=e=>{(typeof Ps.trace>"u"?!Ps.wasm.trace:!Ps.trace)||IM("END",e)};let Yv=class AM{constructor(r){this.handler=r}async run(r,t,s){Rc();const o={};let n={};if(typeof r!="object"||r===null||r instanceof Zn||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof Zn)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(const c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);o[c]=null}if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1;const p=Object.getOwnPropertyNames(t);for(const d of this.outputNames)if(p.indexOf(d)!==-1){const u=t[d];(u===null||u instanceof Zn)&&(c=!0,i=!1,o[d]=u)}if(c){if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(i)for(const c of this.outputNames)o[c]=null;const a=await this.handler.run(r,o,n),l={};for(const c in a)if(Object.hasOwnProperty.call(a,c)){const p=a[c];p instanceof Zn?l[c]=p:l[c]=new Zn(p.type,p.data,p.dims)}return jc(),l}async release(){return this.handler.dispose()}static async create(r,t,s,o){Rc();let n,i={};if(typeof r=="string"){if(n=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){const p=r;let d=0,u=r.byteLength;if(typeof t=="object"&&t!==null)i=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(u=r.byteLength-d,typeof s=="number"){if(u=s,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||d+u>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-d}].`);if(typeof o=="object"&&o!==null)i=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(p,d,u)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[a,l]=await Rv(i),c=await a.createInferenceSessionHandler(n,l);return jc(),new AM(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}};const Zv=Yv;var ex=Object.freeze({__proto__:null,InferenceSession:Zv,TRACE:kM,TRACE_FUNC_BEGIN:Rc,TRACE_FUNC_END:jc,Tensor:Zn,env:Nv,registerBackend:zv});/*!
 * ONNX Runtime Web v1.22.0-dev.20250409-89f8206ba4
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var su=Object.defineProperty,tx=Object.getOwnPropertyDescriptor,rx=Object.getOwnPropertyNames,sx=Object.prototype.hasOwnProperty,nx=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),Ve=(e,r)=>()=>(e&&(r=e(e=0)),r),oo=(e,r)=>{for(var t in r)su(e,t,{get:r[t],enumerable:!0})},ox=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of rx(r))!sx.call(e,o)&&o!==t&&su(e,o,{get:()=>r[o],enumerable:!(s=tx(r,o))||s.enumerable});return e},Qo=e=>ox(su({},"__esModule",{value:!0}),e),Oo,tn,In,Q_,FM,OM=Ve(()=>{Oo=new Map,tn=[],In=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){let s=Oo.get(e);if(s===void 0)Oo.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){let o=tn.indexOf(e);o!==-1&&tn.splice(o,1);for(let n=0;n<tn.length;n++)if(Oo.get(tn[n]).priority<=t){tn.splice(n,0,e);return}tn.push(e)}return}throw new TypeError("not a valid backend")},Q_=async e=>{let r=Oo.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},FM=async e=>{let r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?tn:t,o,n=[],i=new Set;for(let l of s){let c=await Q_(l);typeof c=="string"?n.push({name:l,err:c}):(o||(o=c),o===c&&i.add(l))}if(!o)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);let a=r.filter(l=>i.has(typeof l=="string"?l:l.name));return[o,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]}}),ix=Ve(()=>{OM()}),DM,ax=Ve(()=>{DM="1.22.0-dev.20250409-89f8206ba4"}),Rl,us,LM=Ve(()=>{ax(),Rl="warning",us={wasm:{},webgl:{},webgpu:{},versions:{common:DM},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Rl=e}},get logLevel(){return Rl}},Object.defineProperty(us,"logLevel",{enumerable:!0})}),Zt,lx=Ve(()=>{LM(),Zt=us}),zM,BM,cx=Ve(()=>{zM=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];let s=t.getContext("2d");if(s!=null){let o,n;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(o=e.dims[2],n=e.dims[3]):(o=e.dims[3],n=e.dims[2]);let i=(r==null?void 0:r.format)!==void 0?r.format:"RGB",a=r==null?void 0:r.norm,l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));let p=n*o,d=0,u=p,f=p*2,_=-1;i==="RGBA"?(d=0,u=p,f=p*2,_=p*3):i==="RGB"?(d=0,u=p,f=p*2):i==="RBG"&&(d=0,f=p,u=p*2);for(let b=0;b<n;b++)for(let k=0;k<o;k++){let g=(e.data[d++]-c[0])*l[0],M=(e.data[u++]-c[1])*l[1],$=(e.data[f++]-c[2])*l[2],v=_===-1?255:(e.data[_++]-c[3])*l[3];s.fillStyle="rgba("+g+","+M+","+$+","+v+")",s.fillRect(k,b,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},BM=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),s;if(t!=null){let o,n,i;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(o=e.dims[2],n=e.dims[1],i=e.dims[3]):(o=e.dims[3],n=e.dims[2],i=e.dims[1]);let a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r==null?void 0:r.norm,c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));let d=n*o;if(r!==void 0&&(r.format!==void 0&&i===4&&r.format!=="RGBA"||i===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let u=4,f=0,_=1,b=2,k=3,g=0,M=d,$=d*2,v=-1;a==="RGBA"?(g=0,M=d,$=d*2,v=d*3):a==="RGB"?(g=0,M=d,$=d*2):a==="RBG"&&(g=0,$=d,M=d*2),s=t.createImageData(o,n);for(let y=0;y<n*o;f+=u,_+=u,b+=u,k+=u,y++)s.data[f]=(e.data[g++]-p[0])*c[0],s.data[_]=(e.data[M++]-p[1])*c[1],s.data[b]=(e.data[$++]-p[2])*c[2],s.data[k]=v===-1?255:(e.data[v++]-p[3])*c[3]}else throw new Error("Can not access image data");return s}}),Gi,RM,jM,NM,VM,UM,ux=Ve(()=>{nu(),Gi=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:t,width:s}=r,o=r.norm??{mean:255,bias:0},n,i;typeof o.mean=="number"?n=[o.mean,o.mean,o.mean,o.mean]:n=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?i=[o.bias,o.bias,o.bias,o.bias]:i=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3),d=4,u=0,f=1,_=2,b=3,k=0,g=c,M=c*2,$=-1;a==="RGB"&&(d=3,u=0,f=1,_=2,b=-1),l==="RGBA"?$=c*3:l==="RBG"?(k=0,M=c,g=c*2):l==="BGR"&&(M=0,g=c,k=c*2);for(let v=0;v<c;v++,u+=d,_+=d,f+=d,b+=d)p[k++]=(e[u]+i[0])/n[0],p[g++]=(e[f]+i[1])/n[1],p[M++]=(e[_]+i[2])/n[2],$!==-1&&b!==-1&&(p[$++]=(e[b]+i[3])/n[3]);return l==="RGBA"?new ns("float32",p,[1,4,t,s]):new ns("float32",p,[1,3,t,s])},RM=async(e,r)=>{let t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,o=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string",i,a=r??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){let p=l();p.width=e.width,p.height=e.height;let d=c(p);if(d!=null){let u=e.height,f=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(u=r.resizedHeight,f=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=u,a.width=f}else a.tensorFormat="RGBA",a.height=u,a.width=f;d.drawImage(e,0,0),i=d.getImageData(0,0,f,u).data}else throw new Error("Can not access image data")}else if(s){let p,d;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,d=r.resizedWidth):(p=e.height,d=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=p,a.width=d,r!==void 0){let u=l();u.width=d,u.height=p;let f=c(u);if(f!=null)f.putImageData(e,0,0),i=f.getImageData(0,0,d,p).data;else throw new Error("Can not access image data")}else i=e.data}else if(o){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");let p=l();p.width=e.width,p.height=e.height;let d=c(p);if(d!=null){let u=e.height,f=e.width;return d.drawImage(e,0,0,f,u),i=d.getImageData(0,0,f,u).data,a.height=u,a.width=f,Gi(i,a)}else throw new Error("Can not access image data")}else{if(n)return new Promise((p,d)=>{let u=l(),f=c(u);if(!e||!f)return d();let _=new Image;_.crossOrigin="Anonymous",_.src=e,_.onload=()=>{u.width=_.width,u.height=_.height,f.drawImage(_,0,0,u.width,u.height);let b=f.getImageData(0,0,u.width,u.height);a.height=u.height,a.width=u.width,p(Gi(b.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(i!==void 0)return Gi(i,a);throw new Error("Input data provided is not supported - aborted tensor creation")},jM=(e,r)=>{let{width:t,height:s,download:o,dispose:n}=r,i=[1,s,t,4];return new ns({location:"texture",type:"float32",texture:e,dims:i,download:o,dispose:n})},NM=(e,r)=>{let{dataType:t,dims:s,download:o,dispose:n}=r;return new ns({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:o,dispose:n})},VM=(e,r)=>{let{dataType:t,dims:s,download:o,dispose:n}=r;return new ns({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:o,dispose:n})},UM=(e,r,t)=>new ns({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]})}),$n,Wo,jl,WM,dx=Ve(()=>{$n=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Wo=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),jl=!1,WM=()=>{if(!jl){jl=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&($n.set("int64",BigInt64Array),Wo.set(BigInt64Array,"int64")),r&&($n.set("uint64",BigUint64Array),Wo.set(BigUint64Array,"uint64")),s?($n.set("float16",t),Wo.set(t,"float16")):$n.set("float16",Uint16Array)}}}),GM,KM,px=Ve(()=>{nu(),GM=e=>{let r=1;for(let t=0;t<e.length;t++){let s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},KM=(e,r)=>{switch(e.location){case"cpu":return new ns(e.type,e.data,r);case"cpu-pinned":return new ns({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new ns({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new ns({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new ns({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),ns,nu=Ve(()=>{cx(),ux(),dx(),px(),ns=class{constructor(e,r,t){WM();let s,o;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,s=e.type,o=e.dims,e.location){case"cpu-pinned":{let i=$n.get(s);if(!i)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(e.data instanceof i))throw new TypeError(`buffer should be of type ${i.name}`);this.cpuData=e.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint64"&&s!=="int8"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,a;if(typeof e=="string")if(s=e,a=t,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");i=r}else{let l=$n.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16"&&l===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${l.name} as data.`);e==="uint64"||e==="int64"?i=l.from(r,BigInt):i=l.from(r)}else if(r instanceof l)i=r;else if(r instanceof Uint8ClampedArray)if(e==="uint8")i=Uint8Array.from(r);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(e==="float16"&&r instanceof Uint16Array&&l!==Uint16Array)i=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw new TypeError(`A ${s} tensor's data must be type of ${l}`)}else if(a=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")s="string",i=e;else if(l==="boolean")s="bool",i=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else if(e instanceof Uint8ClampedArray)s="uint8",i=Uint8Array.from(e);else{let l=Wo.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);s=l,i=e}if(a===void 0)a=[i.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");o=a,this.cpuData=i,this.dataLocation="cpu"}let n=GM(o);if(this.cpuData&&n!==this.cpuData.length&&!((s==="uint4"||s==="int4")&&Math.ceil(n/2)===this.cpuData.length))throw new Error(`Tensor's size(${n}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=o,this.size=n}static async fromImage(e,r){return RM(e,r)}static fromTexture(e,r){return jM(e,r)}static fromGpuBuffer(e,r){return NM(e,r)}static fromMLTensor(e,r){return VM(e,r)}static fromPinnedBuffer(e,r,t){return UM(e,r,t)}toDataURL(e){return zM(this,e)}toImageData(e){return BM(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return KM(this,e)}}}),Es,HM=Ve(()=>{nu(),Es=ns}),Xo,Nl,Cs,ps,qM=Ve(()=>{LM(),Xo=(e,r)=>{(typeof us.trace>"u"?!us.wasm.trace:!us.trace)||console.timeStamp(`${e}::ORT::${r}`)},Nl=(e,r)=>{var o;let t=((o=new Error().stack)==null?void 0:o.split(/\r\n|\r|\n/g))||[],s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let i=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(i+=`::${r}`),Xo("CPU",i);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},Cs=e=>{(typeof us.trace>"u"?!us.wasm.trace:!us.trace)||Nl("BEGIN",e)},ps=e=>{(typeof us.trace>"u"?!us.wasm.trace:!us.trace)||Nl("END",e)}}),QM,mx=Ve(()=>{OM(),HM(),qM(),QM=class XM{constructor(r){this.handler=r}async run(r,t,s){Cs();let o={},n={};if(typeof r!="object"||r===null||r instanceof Es||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof Es)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);o[c]=null}if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1,p=Object.getOwnPropertyNames(t);for(let d of this.outputNames)if(p.indexOf(d)!==-1){let u=t[d];(u===null||u instanceof Es)&&(c=!0,i=!1,o[d]=u)}if(c){if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(i)for(let c of this.outputNames)o[c]=null;let a=await this.handler.run(r,o,n),l={};for(let c in a)if(Object.hasOwnProperty.call(a,c)){let p=a[c];p instanceof Es?l[c]=p:l[c]=new Es(p.type,p.data,p.dims)}return ps(),l}async release(){return this.handler.dispose()}static async create(r,t,s,o){Cs();let n,i={};if(typeof r=="string"){if(n=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){let p=r,d=0,u=r.byteLength;if(typeof t=="object"&&t!==null)i=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(u=r.byteLength-d,typeof s=="number"){if(u=s,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||d+u>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-d}].`);if(typeof o=="object"&&o!==null)i=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(p,d,u)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[a,l]=await FM(i),c=await a.createInferenceSessionHandler(n,l);return ps(),new XM(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),ou,hx=Ve(()=>{mx(),ou=QM}),_x=Ve(()=>{}),fx=Ve(()=>{}),gx=Ve(()=>{}),wx=Ve(()=>{}),JM={};oo(JM,{InferenceSession:()=>ou,TRACE:()=>Xo,TRACE_FUNC_BEGIN:()=>Cs,TRACE_FUNC_END:()=>ps,Tensor:()=>Es,env:()=>Zt,registerBackend:()=>In});var Ss=Ve(()=>{ix(),lx(),hx(),HM(),_x(),fx(),qM(),gx(),wx()}),iu=Ve(()=>{}),YM={};oo(YM,{default:()=>ZM});var Vl,Ul,ZM,Mx=Ve(()=>{var e;nv(),Dn(),au(),Vl="ort-wasm-proxy-worker",Ul=((e=globalThis.self)==null?void 0:e.name)===Vl,Ul&&(self.onmessage=r=>{let{type:t,in:s}=r.data;try{switch(t){case"init-wasm":lu(s.wasm).then(()=>{Pu(s).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:n}=s;Cu(n,o).then(()=>{postMessage({type:t})},i=>{postMessage({type:t,err:i})});break}case"copy-from":{let{buffer:o}=s,n=fa(o);postMessage({type:t,out:n});break}case"create":{let{model:o,options:n}=s;Su(o,n).then(i=>{postMessage({type:t,out:i})},i=>{postMessage({type:t,err:i})});break}case"release":$u(s),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:n,inputs:i,outputIndices:a,options:l}=s;ku(o,n,i,a,new Array(a.length).fill(null),l).then(c=>{c.some(p=>p[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:c},Au([...i,...c]))},c=>{postMessage({type:t,err:c})});break}case"end-profiling":Iu(s),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}}),ZM=Ul?null:r=>new Worker(r??ss,{type:"module",name:Vl})}),eb={};oo(eb,{default:()=>tb});var Wl,Gl,tb,X_,bx=Ve(()=>{var e,r;Gl=(Wl=import.meta.url,async function(t={}){var qn;var s,o,n=t,i=new Promise((m,E)=>{s=m,o=E}),a=typeof window=="object",l=typeof WorkerGlobalScope<"u",c=l&&((qn=self.name)==null?void 0:qn.startsWith("em-pthread"));n.mountExternalData=(m,E)=>{m.startsWith("./")&&(m=m.substring(2)),(n.Eb||(n.Eb=new Map)).set(m,E)},n.unmountExternalData=()=>{delete n.Eb};var p=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let d=m=>async(...E)=>{var A;try{if(n.Fb)throw Error("Session already started");let z=n.Fb={dc:E[0],errors:[]},V=await m(...E);if(n.Fb!==z)throw Error("Session mismatch");(A=n.Jb)==null||A.flush();let ce=z.errors;if(0<ce.length){let Pe=await Promise.all(ce);if(Pe=Pe.filter(De=>De),0<Pe.length)throw Error(Pe.join(`
`))}return V}finally{n.Fb=null}};n.jsepInit=(m,E)=>{if(m==="webgpu"){[n.Jb,n.Ub,n.Yb,n.Kb,n.Xb,n.jb,n.Zb,n.ac,n.Vb,n.Wb,n.$b]=E;let A=n.Jb;n.jsepRegisterBuffer=(z,V,ce,Pe)=>A.registerBuffer(z,V,ce,Pe),n.jsepGetBuffer=z=>A.getBuffer(z),n.jsepCreateDownloader=(z,V,ce)=>A.createDownloader(z,V,ce),n.jsepOnCreateSession=z=>{A.onCreateSession(z)},n.jsepOnReleaseSession=z=>{A.onReleaseSession(z)},n.jsepOnRunStart=z=>A.onRunStart(z),n.bc=(z,V)=>{A.upload(z,V)}}else if(m==="webnn"){let A=E[0];[n.nc,n.Nb,n.webnnEnsureTensor,n.Ob,n.webnnDownloadTensor]=E.slice(1),n.webnnReleaseTensorId=n.Nb,n.webnnUploadTensor=n.Ob,n.webnnOnRunStart=z=>A.onRunStart(z),n.webnnOnRunEnd=A.onRunEnd.bind(A),n.webnnRegisterMLContext=(z,V)=>{A.registerMLContext(z,V)},n.webnnOnReleaseSession=z=>{A.onReleaseSession(z)},n.webnnCreateMLTensorDownloader=(z,V)=>A.createMLTensorDownloader(z,V),n.webnnRegisterMLTensor=(z,V,ce,Pe)=>A.registerMLTensor(z,V,ce,Pe),n.webnnCreateMLContext=z=>A.createMLContext(z),n.webnnRegisterMLConstant=(z,V,ce,Pe,De,He)=>A.registerMLConstant(z,V,ce,Pe,De,n.Eb,He),n.webnnRegisterGraphInput=A.registerGraphInput.bind(A),n.webnnIsGraphInput=A.isGraphInput.bind(A),n.webnnCreateTemporaryTensor=A.createTemporaryTensor.bind(A),n.webnnIsInt64Supported=A.isInt64Supported.bind(A)}};let u=()=>{let m=(E,A,z)=>(...V)=>{let ce=fr,Pe=A==null?void 0:A();V=E(...V);let De=A==null?void 0:A();return Pe!==De&&(E=De,z(Pe),A=z=null),fr!=ce?new Promise((He,it)=>{zr={resolve:He,reject:it}}):V};(()=>{for(let E of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])n[E]=m(n[E],()=>n[E],A=>n[E]=A)})(),d!==void 0&&(n._OrtRun=d(n._OrtRun),n._OrtRunWithBinding=d(n._OrtRunWithBinding)),u=void 0};n.asyncInit=()=>{u==null||u()};var f,_,b=Object.assign({},n),k=(m,E)=>{throw E},g="";(a||l)&&(l?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),Wl&&(g=Wl),g=g.startsWith("blob:")?"":g.slice(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1),l&&(_=m=>{var E=new XMLHttpRequest;return E.open("GET",m,!1),E.responseType="arraybuffer",E.send(null),new Uint8Array(E.response)}),f=async m=>{if(j(m))return new Promise((A,z)=>{var V=new XMLHttpRequest;V.open("GET",m,!0),V.responseType="arraybuffer",V.onload=()=>{V.status==200||V.status==0&&V.response?A(V.response):z(V.status)},V.onerror=z,V.send(null)});var E=await fetch(m,{credentials:"same-origin"});if(E.ok)return E.arrayBuffer();throw Error(E.status+" : "+E.url)});var M=console.log.bind(console),$=console.error.bind(console),v=M,y=$;Object.assign(n,b),b=null;var T,x,P,O,L,G,K,R,te,H,ee,Z,ne,he=n.wasmBinary,ue=!1,j=m=>m.startsWith("file://");function F(){return T.buffer!=O.buffer&&ae(),O}function U(){return T.buffer!=O.buffer&&ae(),L}function se(){return T.buffer!=O.buffer&&ae(),G}function _e(){return T.buffer!=O.buffer&&ae(),K}function ie(){return T.buffer!=O.buffer&&ae(),R}function ve(){return T.buffer!=O.buffer&&ae(),te}function ze(){return T.buffer!=O.buffer&&ae(),H}function Ge(){return T.buffer!=O.buffer&&ae(),ne}if(c){let m=function(E){try{var A=E.data,z=A.Bb;if(z==="load"){let V=[];self.onmessage=ce=>V.push(ce),self.startWorker=()=>{postMessage({Bb:"loaded"});for(let ce of V)m(ce);self.onmessage=m};for(let ce of A.Rb)n[ce]&&!n[ce].proxy||(n[ce]=(...Pe)=>{postMessage({Bb:"callHandler",Qb:ce,args:Pe})},ce=="print"&&(v=n[ce]),ce=="printErr"&&(y=n[ce]));T=A.kc,ae(),Ie(A.lc)}else if(z==="run"){Us(A.Ab),Un(A.Ab,0,0,1,0,0),is(),de(A.Ab),X||(xo(),X=!0);try{Ws(A.fc,A.Hb)}catch(V){if(V!="unwind")throw V}}else A.target!=="setimmediate"&&(z==="checkMailbox"?X&&Te():z&&(y(`worker: received unknown command ${z}`),y(A)))}catch(V){throw Wn(),V}};var Ie,X=!1;y=function(...E){E=E.join(" "),console.error(E)},self.alert=function(...E){postMessage({Bb:"alert",text:E.join(" "),ic:hn()})},self.onunhandledrejection=E=>{throw E.reason||E},self.onmessage=m}function ae(){var m=T.buffer;n.HEAP8=O=new Int8Array(m),n.HEAP16=G=new Int16Array(m),n.HEAPU8=L=new Uint8Array(m),n.HEAPU16=K=new Uint16Array(m),n.HEAP32=R=new Int32Array(m),n.HEAPU32=te=new Uint32Array(m),n.HEAPF32=H=new Float32Array(m),n.HEAPF64=ne=new Float64Array(m),n.HEAP64=ee=new BigInt64Array(m),n.HEAPU64=Z=new BigUint64Array(m)}function W(){c?startWorker(n):dt.Ca()}c||(T=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),ae());var be,ke=0,Ee=null;function Me(){if(--ke==0&&Ee){var m=Ee;Ee=null,m()}}function Se(m){throw y(m="Aborted("+m+")"),ue=!0,m=new WebAssembly.RuntimeError(m+". Build with -sASSERTIONS for more info."),o(m),m}function we(){return{a:{L:Qe,Aa:Be,b:Ks,$:$s,A:S,pa:Q,X:re,Z:ge,qa:Fe,na:rt,ga:ft,ma:mt,J:vt,Y:st,V:zt,oa:Nt,W:jr,va:Cr,E:As,Q:Ur,O:Wr,D:je,u:et,r:Xt,P:Ls,z:I,R:N,ja:Y,T:Ne,aa:We,M:tt,F:Mt,ia:de,sa:Bt,t:Wt,Ba:_r,w:ls,o:ir,l:Kr,c:ms,n:zn,j:Zo,v:ei,p:ti,f:qs,s:ri,m:si,e:ni,k:oi,i:ii,g:Qs,d:ai,da:li,ea:uo,fa:ci,ba:po,ca:Bn,N:ho,xa:_o,ua:ui,h:jn,C:di,G:pi,ta:ga,x:mi,ra:hi,U:_i,q:mo,y:fi,K:gi,S:wi,za:fo,ya:Mi,ka:bi,la:wo,_:It,B:yi,I:Mo,ha:Nn,H:bo,a:T,wa:Ye}}}var Ae={829644:(m,E,A,z,V)=>{if(n===void 0||!n.Eb)return 1;if((m=Qt(Number(m>>>0))).startsWith("./")&&(m=m.substring(2)),!(m=n.Eb.get(m)))return 2;if(E=Number(E>>>0),A=Number(A>>>0),z=Number(z>>>0),E+A>m.byteLength)return 3;try{let ce=m.subarray(E,E+A);switch(V){case 0:U().set(ce,z>>>0);break;case 1:n.mc?n.mc(z,ce):n.bc(z,ce);break;default:return 4}return 0}catch{return 4}},830468:(m,E,A)=>{n.Ob(m,U().subarray(E>>>0,E+A>>>0))},830532:()=>n.nc(),830574:m=>{n.Nb(m)},830611:()=>{n.Vb()},830642:()=>{n.Wb()},830671:()=>{n.$b()},830696:m=>n.Ub(m),830729:m=>n.Yb(m),830761:(m,E,A)=>{n.Kb(Number(m),Number(E),Number(A),!0)},830824:(m,E,A)=>{n.Kb(Number(m),Number(E),Number(A))},830881:()=>typeof wasmOffsetConverter<"u",830938:m=>{n.jb("Abs",m,void 0)},830989:m=>{n.jb("Neg",m,void 0)},831040:m=>{n.jb("Floor",m,void 0)},831093:m=>{n.jb("Ceil",m,void 0)},831145:m=>{n.jb("Reciprocal",m,void 0)},831203:m=>{n.jb("Sqrt",m,void 0)},831255:m=>{n.jb("Exp",m,void 0)},831306:m=>{n.jb("Erf",m,void 0)},831357:m=>{n.jb("Sigmoid",m,void 0)},831412:(m,E,A)=>{n.jb("HardSigmoid",m,{alpha:E,beta:A})},831491:m=>{n.jb("Log",m,void 0)},831542:m=>{n.jb("Sin",m,void 0)},831593:m=>{n.jb("Cos",m,void 0)},831644:m=>{n.jb("Tan",m,void 0)},831695:m=>{n.jb("Asin",m,void 0)},831747:m=>{n.jb("Acos",m,void 0)},831799:m=>{n.jb("Atan",m,void 0)},831851:m=>{n.jb("Sinh",m,void 0)},831903:m=>{n.jb("Cosh",m,void 0)},831955:m=>{n.jb("Asinh",m,void 0)},832008:m=>{n.jb("Acosh",m,void 0)},832061:m=>{n.jb("Atanh",m,void 0)},832114:m=>{n.jb("Tanh",m,void 0)},832166:m=>{n.jb("Not",m,void 0)},832217:(m,E,A)=>{n.jb("Clip",m,{min:E,max:A})},832286:m=>{n.jb("Clip",m,void 0)},832338:(m,E)=>{n.jb("Elu",m,{alpha:E})},832396:m=>{n.jb("Gelu",m,void 0)},832448:m=>{n.jb("Relu",m,void 0)},832500:(m,E)=>{n.jb("LeakyRelu",m,{alpha:E})},832564:(m,E)=>{n.jb("ThresholdedRelu",m,{alpha:E})},832634:(m,E)=>{n.jb("Cast",m,{to:E})},832692:m=>{n.jb("Add",m,void 0)},832743:m=>{n.jb("Sub",m,void 0)},832794:m=>{n.jb("Mul",m,void 0)},832845:m=>{n.jb("Div",m,void 0)},832896:m=>{n.jb("Pow",m,void 0)},832947:m=>{n.jb("Equal",m,void 0)},833e3:m=>{n.jb("Greater",m,void 0)},833055:m=>{n.jb("GreaterOrEqual",m,void 0)},833117:m=>{n.jb("Less",m,void 0)},833169:m=>{n.jb("LessOrEqual",m,void 0)},833228:(m,E,A,z,V)=>{n.jb("ReduceMean",m,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},833403:(m,E,A,z,V)=>{n.jb("ReduceMax",m,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},833577:(m,E,A,z,V)=>{n.jb("ReduceMin",m,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},833751:(m,E,A,z,V)=>{n.jb("ReduceProd",m,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},833926:(m,E,A,z,V)=>{n.jb("ReduceSum",m,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834100:(m,E,A,z,V)=>{n.jb("ReduceL1",m,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834273:(m,E,A,z,V)=>{n.jb("ReduceL2",m,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834446:(m,E,A,z,V)=>{n.jb("ReduceLogSum",m,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834623:(m,E,A,z,V)=>{n.jb("ReduceSumSquare",m,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834803:(m,E,A,z,V)=>{n.jb("ReduceLogSumExp",m,{keepDims:!!E,noopWithEmptyAxes:!!A,axes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834983:m=>{n.jb("Where",m,void 0)},835036:(m,E,A)=>{n.jb("Transpose",m,{perm:E?Array.from(ie().subarray(Number(E)>>>0,Number(A)>>>0)):[]})},835160:(m,E,A,z)=>{n.jb("DepthToSpace",m,{blocksize:E,mode:Qt(A),format:z?"NHWC":"NCHW"})},835293:(m,E,A,z)=>{n.jb("DepthToSpace",m,{blocksize:E,mode:Qt(A),format:z?"NHWC":"NCHW"})},835426:(m,E,A,z,V,ce,Pe,De,He,it,xt,Ot,Gt,yr,Fs)=>{n.jb("ConvTranspose",m,{format:He?"NHWC":"NCHW",autoPad:E,dilations:[A],group:z,kernelShape:[V],pads:[ce,Pe],strides:[De],wIsConst:()=>!!F()[it>>>0],outputPadding:xt?Array.from(ie().subarray(Number(xt)>>>0,Number(Ot)>>>0)):[],outputShape:Gt?Array.from(ie().subarray(Number(Gt)>>>0,Number(yr)>>>0)):[],activation:Qt(Fs)})},835859:(m,E,A,z,V,ce,Pe,De,He,it,xt,Ot,Gt,yr)=>{n.jb("ConvTranspose",m,{format:De?"NHWC":"NCHW",autoPad:E,dilations:Array.from(ie().subarray(Number(A)>>>0,2+(Number(A)>>>0)>>>0)),group:z,kernelShape:Array.from(ie().subarray(Number(V)>>>0,2+(Number(V)>>>0)>>>0)),pads:Array.from(ie().subarray(Number(ce)>>>0,4+(Number(ce)>>>0)>>>0)),strides:Array.from(ie().subarray(Number(Pe)>>>0,2+(Number(Pe)>>>0)>>>0)),wIsConst:()=>!!F()[He>>>0],outputPadding:it?Array.from(ie().subarray(Number(it)>>>0,Number(xt)>>>0)):[],outputShape:Ot?Array.from(ie().subarray(Number(Ot)>>>0,Number(Gt)>>>0)):[],activation:Qt(yr)})},836520:(m,E,A,z,V,ce,Pe,De,He,it,xt,Ot,Gt,yr,Fs)=>{n.jb("ConvTranspose",m,{format:He?"NHWC":"NCHW",autoPad:E,dilations:[A],group:z,kernelShape:[V],pads:[ce,Pe],strides:[De],wIsConst:()=>!!F()[it>>>0],outputPadding:xt?Array.from(ie().subarray(Number(xt)>>>0,Number(Ot)>>>0)):[],outputShape:Gt?Array.from(ie().subarray(Number(Gt)>>>0,Number(yr)>>>0)):[],activation:Qt(Fs)})},836953:(m,E,A,z,V,ce,Pe,De,He,it,xt,Ot,Gt,yr)=>{n.jb("ConvTranspose",m,{format:De?"NHWC":"NCHW",autoPad:E,dilations:Array.from(ie().subarray(Number(A)>>>0,2+(Number(A)>>>0)>>>0)),group:z,kernelShape:Array.from(ie().subarray(Number(V)>>>0,2+(Number(V)>>>0)>>>0)),pads:Array.from(ie().subarray(Number(ce)>>>0,4+(Number(ce)>>>0)>>>0)),strides:Array.from(ie().subarray(Number(Pe)>>>0,2+(Number(Pe)>>>0)>>>0)),wIsConst:()=>!!F()[He>>>0],outputPadding:it?Array.from(ie().subarray(Number(it)>>>0,Number(xt)>>>0)):[],outputShape:Ot?Array.from(ie().subarray(Number(Ot)>>>0,Number(Gt)>>>0)):[],activation:Qt(yr)})},837614:(m,E)=>{n.jb("GlobalAveragePool",m,{format:E?"NHWC":"NCHW"})},837705:(m,E,A,z,V,ce,Pe,De,He,it,xt,Ot,Gt,yr)=>{n.jb("AveragePool",m,{format:yr?"NHWC":"NCHW",auto_pad:E,ceil_mode:A,count_include_pad:z,storage_order:V,dilations:ce?Array.from(ie().subarray(Number(ce)>>>0,Number(Pe)>>>0)):[],kernel_shape:De?Array.from(ie().subarray(Number(De)>>>0,Number(He)>>>0)):[],pads:it?Array.from(ie().subarray(Number(it)>>>0,Number(xt)>>>0)):[],strides:Ot?Array.from(ie().subarray(Number(Ot)>>>0,Number(Gt)>>>0)):[]})},838184:(m,E)=>{n.jb("GlobalAveragePool",m,{format:E?"NHWC":"NCHW"})},838275:(m,E,A,z,V,ce,Pe,De,He,it,xt,Ot,Gt,yr)=>{n.jb("AveragePool",m,{format:yr?"NHWC":"NCHW",auto_pad:E,ceil_mode:A,count_include_pad:z,storage_order:V,dilations:ce?Array.from(ie().subarray(Number(ce)>>>0,Number(Pe)>>>0)):[],kernel_shape:De?Array.from(ie().subarray(Number(De)>>>0,Number(He)>>>0)):[],pads:it?Array.from(ie().subarray(Number(it)>>>0,Number(xt)>>>0)):[],strides:Ot?Array.from(ie().subarray(Number(Ot)>>>0,Number(Gt)>>>0)):[]})},838754:(m,E)=>{n.jb("GlobalMaxPool",m,{format:E?"NHWC":"NCHW"})},838841:(m,E,A,z,V,ce,Pe,De,He,it,xt,Ot,Gt,yr)=>{n.jb("MaxPool",m,{format:yr?"NHWC":"NCHW",auto_pad:E,ceil_mode:A,count_include_pad:z,storage_order:V,dilations:ce?Array.from(ie().subarray(Number(ce)>>>0,Number(Pe)>>>0)):[],kernel_shape:De?Array.from(ie().subarray(Number(De)>>>0,Number(He)>>>0)):[],pads:it?Array.from(ie().subarray(Number(it)>>>0,Number(xt)>>>0)):[],strides:Ot?Array.from(ie().subarray(Number(Ot)>>>0,Number(Gt)>>>0)):[]})},839316:(m,E)=>{n.jb("GlobalMaxPool",m,{format:E?"NHWC":"NCHW"})},839403:(m,E,A,z,V,ce,Pe,De,He,it,xt,Ot,Gt,yr)=>{n.jb("MaxPool",m,{format:yr?"NHWC":"NCHW",auto_pad:E,ceil_mode:A,count_include_pad:z,storage_order:V,dilations:ce?Array.from(ie().subarray(Number(ce)>>>0,Number(Pe)>>>0)):[],kernel_shape:De?Array.from(ie().subarray(Number(De)>>>0,Number(He)>>>0)):[],pads:it?Array.from(ie().subarray(Number(it)>>>0,Number(xt)>>>0)):[],strides:Ot?Array.from(ie().subarray(Number(Ot)>>>0,Number(Gt)>>>0)):[]})},839878:(m,E,A,z,V)=>{n.jb("Gemm",m,{alpha:E,beta:A,transA:z,transB:V})},839982:m=>{n.jb("MatMul",m,void 0)},840036:(m,E,A,z)=>{n.jb("ArgMax",m,{keepDims:!!E,selectLastIndex:!!A,axis:z})},840144:(m,E,A,z)=>{n.jb("ArgMin",m,{keepDims:!!E,selectLastIndex:!!A,axis:z})},840252:(m,E)=>{n.jb("Softmax",m,{axis:E})},840315:(m,E)=>{n.jb("Concat",m,{axis:E})},840375:(m,E,A,z,V)=>{n.jb("Split",m,{axis:E,numOutputs:A,splitSizes:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},840531:m=>{n.jb("Expand",m,void 0)},840585:(m,E)=>{n.jb("Gather",m,{axis:Number(E)})},840656:(m,E)=>{n.jb("GatherElements",m,{axis:Number(E)})},840735:(m,E)=>{n.jb("GatherND",m,{batch_dims:Number(E)})},840814:(m,E,A,z,V,ce,Pe,De,He,it,xt)=>{n.jb("Resize",m,{antialias:E,axes:A?Array.from(ie().subarray(Number(A)>>>0,Number(z)>>>0)):[],coordinateTransformMode:Qt(V),cubicCoeffA:ce,excludeOutside:Pe,extrapolationValue:De,keepAspectRatioPolicy:Qt(He),mode:Qt(it),nearestMode:Qt(xt)})},841176:(m,E,A,z,V,ce,Pe)=>{n.jb("Slice",m,{starts:E?Array.from(ie().subarray(Number(E)>>>0,Number(A)>>>0)):[],ends:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[],axes:ce?Array.from(ie().subarray(Number(ce)>>>0,Number(Pe)>>>0)):[]})},841440:m=>{n.jb("Tile",m,void 0)},841492:(m,E,A)=>{n.jb("InstanceNormalization",m,{epsilon:E,format:A?"NHWC":"NCHW"})},841606:(m,E,A)=>{n.jb("InstanceNormalization",m,{epsilon:E,format:A?"NHWC":"NCHW"})},841720:m=>{n.jb("Range",m,void 0)},841773:(m,E)=>{n.jb("Einsum",m,{equation:Qt(E)})},841854:(m,E,A,z,V)=>{n.jb("Pad",m,{mode:E,value:A,pads:z?Array.from(ie().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},841997:(m,E,A,z,V,ce)=>{n.jb("BatchNormalization",m,{epsilon:E,momentum:A,spatial:!!V,trainingMode:!!z,format:ce?"NHWC":"NCHW"})},842166:(m,E,A,z,V,ce)=>{n.jb("BatchNormalization",m,{epsilon:E,momentum:A,spatial:!!V,trainingMode:!!z,format:ce?"NHWC":"NCHW"})},842335:(m,E,A)=>{n.jb("CumSum",m,{exclusive:Number(E),reverse:Number(A)})},842432:(m,E,A)=>{n.jb("DequantizeLinear",m,{axis:E,blockSize:A})},842522:(m,E,A,z,V)=>{n.jb("GridSample",m,{align_corners:E,mode:Qt(A),padding_mode:Qt(z),format:V?"NHWC":"NCHW"})},842692:(m,E,A,z,V)=>{n.jb("GridSample",m,{align_corners:E,mode:Qt(A),padding_mode:Qt(z),format:V?"NHWC":"NCHW"})},842862:(m,E)=>{n.jb("ScatterND",m,{reduction:Qt(E)})},842947:(m,E,A,z,V,ce,Pe,De,He)=>{n.jb("Attention",m,{numHeads:E,isUnidirectional:A,maskFilterValue:z,scale:V,doRotary:ce,qkvHiddenSizes:Pe?Array.from(ie().subarray(Number(De)>>>0,Number(De)+Pe>>>0)):[],pastPresentShareBuffer:!!He})},843219:m=>{n.jb("BiasAdd",m,void 0)},843274:m=>{n.jb("BiasSplitGelu",m,void 0)},843335:m=>{n.jb("FastGelu",m,void 0)},843391:(m,E,A,z,V,ce,Pe,De,He,it,xt,Ot,Gt,yr,Fs,xi)=>{n.jb("Conv",m,{format:Ot?"NHWC":"NCHW",auto_pad:E,dilations:A?Array.from(ie().subarray(Number(A)>>>0,Number(z)>>>0)):[],group:V,kernel_shape:ce?Array.from(ie().subarray(Number(ce)>>>0,Number(Pe)>>>0)):[],pads:De?Array.from(ie().subarray(Number(De)>>>0,Number(He)>>>0)):[],strides:it?Array.from(ie().subarray(Number(it)>>>0,Number(xt)>>>0)):[],w_is_const:()=>!!F()[Number(Gt)>>>0],activation:Qt(yr),activation_params:Fs?Array.from(ze().subarray(Number(Fs)>>>0,Number(xi)>>>0)):[]})},843975:m=>{n.jb("Gelu",m,void 0)},844027:(m,E,A,z,V,ce,Pe,De,He)=>{n.jb("GroupQueryAttention",m,{numHeads:E,kvNumHeads:A,scale:z,softcap:V,doRotary:ce,rotaryInterleaved:Pe,smoothSoftmax:De,localWindowSize:He})},844244:(m,E,A,z)=>{n.jb("LayerNormalization",m,{axis:E,epsilon:A,simplified:!!z})},844355:(m,E,A,z)=>{n.jb("LayerNormalization",m,{axis:E,epsilon:A,simplified:!!z})},844466:(m,E,A,z,V,ce)=>{n.jb("MatMulNBits",m,{k:E,n:A,accuracyLevel:z,bits:V,blockSize:ce})},844593:(m,E,A,z,V,ce)=>{n.jb("MultiHeadAttention",m,{numHeads:E,isUnidirectional:A,maskFilterValue:z,scale:V,doRotary:ce})},844752:(m,E)=>{n.jb("QuickGelu",m,{alpha:E})},844816:(m,E,A,z,V)=>{n.jb("RotaryEmbedding",m,{interleaved:!!E,numHeads:A,rotaryEmbeddingDim:z,scale:V})},844955:(m,E,A)=>{n.jb("SkipLayerNormalization",m,{epsilon:E,simplified:!!A})},845057:(m,E,A)=>{n.jb("SkipLayerNormalization",m,{epsilon:E,simplified:!!A})},845159:(m,E,A,z)=>{n.jb("GatherBlockQuantized",m,{gatherAxis:E,quantizeAxis:A,blockSize:z})},845280:m=>{n.Zb(m)},845314:(m,E)=>n.ac(Number(m),Number(E),n.Fb.dc,n.Fb.errors)};function Be(m,E,A){return kr(async()=>{await n.Xb(Number(m),Number(E),Number(A))})}function Qe(){return typeof wasmOffsetConverter<"u"}class xe{constructor(E){J(this,"name","ExitStatus");this.message=`Program terminated with exit(${E})`,this.status=E}}var Ze=m=>{m.terminate(),m.onmessage=()=>{}},Ke=[],nt=m=>{St.length==0&&(Pr(),qt(St[0]));var E=St.pop();if(!E)return 6;wt.push(E),Er[m.Ab]=E,E.Ab=m.Ab;var A={Bb:"run",fc:m.ec,Hb:m.Hb,Ab:m.Ab};return E.postMessage(A,m.Mb),0},Je=0,Oe=(m,E,...A)=>{for(var z=2*A.length,V=wn(),ce=Kn(8*z),Pe=ce>>>3,De=0;De<A.length;De++){var He=A[De];typeof He=="bigint"?(ee[Pe+2*De]=1n,ee[Pe+2*De+1]=He):(ee[Pe+2*De]=0n,Ge()[Pe+2*De+1>>>0]=He)}return m=To(m,0,z,ce,E),gn(V),m};function Ye(m){if(c)return Oe(0,1,m);if(P=m,!(0<Je)){for(var E of wt)Ze(E);for(E of St)Ze(E);St=[],wt=[],Er={},ue=!0}k(0,new xe(m))}function ot(m){if(c)return Oe(1,0,m);It(m)}var It=m=>{if(P=m,c)throw ot(m),"unwind";Ye(m)},St=[],wt=[],Mr=[],Er={},Rr=m=>{var E=m.Ab;delete Er[E],St.push(m),wt.splice(wt.indexOf(m),1),m.Ab=0,Eo(E)};function is(){Mr.forEach(m=>m())}var qt=m=>new Promise(E=>{m.onmessage=V=>{var ce=(V=V.data).Bb;if(V.Gb&&V.Gb!=hn()){var Pe=Er[V.Gb];Pe?Pe.postMessage(V,V.Mb):y(`Internal error! Worker sent a message "${ce}" to target pthread ${V.Gb}, but that thread no longer exists!`)}else ce==="checkMailbox"?Te():ce==="spawnThread"?nt(V):ce==="cleanupThread"?Rr(Er[V.hc]):ce==="loaded"?(m.loaded=!0,E(m)):ce==="alert"?alert(`Thread ${V.ic}: ${V.text}`):V.target==="setimmediate"?m.postMessage(V):ce==="callHandler"?n[V.Qb](...V.args):ce&&y(`worker sent an unknown command ${ce}`)},m.onerror=V=>{throw y(`worker sent an error! ${V.filename}:${V.lineno}: ${V.message}`),V};var A,z=[];for(A of[])n.propertyIsEnumerable(A)&&z.push(A);m.postMessage({Bb:"load",Rb:z,kc:T,lc:x})});function Pr(){var m=new Worker((()=>{let E=URL;return import.meta.url>"file:"&&import.meta.url<"file;"?new E("ort.bundle.min.mjs",import.meta.url):new URL(import.meta.url)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});St.push(m)}var Us=m=>{ae();var E=ve()[m+52>>>2>>>0];m=ve()[m+56>>>2>>>0],Gn(E,E-m),gn(E)},Ws=(m,E)=>{Je=0,m=So(m,E),0<Je?P=m:fn(m)};class Gs{constructor(E){this.Ib=E-24}}function Ks(m,E,A){var z=new Gs(m>>>=0);throw E>>>=0,A>>>=0,ve()[z.Ib+16>>>2>>>0]=0,ve()[z.Ib+4>>>2>>>0]=E,ve()[z.Ib+8>>>2>>>0]=A,m}function pt(m,E,A,z){return c?Oe(2,1,m,E,A,z):$s(m,E,A,z)}function $s(m,E,A,z){if(m>>>=0,A>>>=0,z>>>=0,p===void 0)return 6;var V=[];return c&&V.length===0?pt(m,E>>>=0,A,z):(m={ec:A,Ab:m,Hb:z,Mb:V},c?(m.Bb="spawnThread",postMessage(m,V),0):nt(m))}var ks=typeof TextDecoder<"u"?new TextDecoder:void 0,Ct=(m,E=0,A=NaN)=>{var z=(E>>>=0)+A;for(A=E;m[A]&&!(A>=z);)++A;if(16<A-E&&m.buffer&&ks)return ks.decode(m.buffer instanceof ArrayBuffer?m.subarray(E,A):m.slice(E,A));for(z="";E<A;){var V=m[E++];if(128&V){var ce=63&m[E++];if((224&V)==192)z+=String.fromCharCode((31&V)<<6|ce);else{var Pe=63&m[E++];65536>(V=(240&V)==224?(15&V)<<12|ce<<6|Pe:(7&V)<<18|ce<<12|Pe<<6|63&m[E++])?z+=String.fromCharCode(V):(V-=65536,z+=String.fromCharCode(55296|V>>10,56320|1023&V))}}else z+=String.fromCharCode(V)}return z},Qt=(m,E)=>(m>>>=0)?Ct(U(),m,E):"";function S(m,E,A){return c?Oe(3,1,m,E,A):0}function Q(m,E){if(c)return Oe(4,1,m,E)}var B=m=>{for(var E=0,A=0;A<m.length;++A){var z=m.charCodeAt(A);127>=z?E++:2047>=z?E+=2:55296<=z&&57343>=z?(E+=4,++A):E+=3}return E},q=(m,E,A)=>{var z=U();if(E>>>=0,0<A){var V=E;A=E+A-1;for(var ce=0;ce<m.length;++ce){var Pe=m.charCodeAt(ce);if(55296<=Pe&&57343>=Pe&&(Pe=65536+((1023&Pe)<<10)|1023&m.charCodeAt(++ce)),127>=Pe){if(E>=A)break;z[E++>>>0]=Pe}else{if(2047>=Pe){if(E+1>=A)break;z[E++>>>0]=192|Pe>>6}else{if(65535>=Pe){if(E+2>=A)break;z[E++>>>0]=224|Pe>>12}else{if(E+3>=A)break;z[E++>>>0]=240|Pe>>18,z[E++>>>0]=128|Pe>>12&63}z[E++>>>0]=128|Pe>>6&63}z[E++>>>0]=128|63&Pe}}z[E>>>0]=0,m=E-V}else m=0;return m};function re(m,E){if(c)return Oe(5,1,m,E)}function ge(m,E,A){if(c)return Oe(6,1,m,E,A)}function Fe(m,E,A){return c?Oe(7,1,m,E,A):0}function rt(m,E){if(c)return Oe(8,1,m,E)}function ft(m,E,A){if(c)return Oe(9,1,m,E,A)}function mt(m,E,A,z){if(c)return Oe(10,1,m,E,A,z)}function vt(m,E,A,z){if(c)return Oe(11,1,m,E,A,z)}function st(m,E,A,z){if(c)return Oe(12,1,m,E,A,z)}function zt(m){if(c)return Oe(13,1,m)}function Nt(m,E){if(c)return Oe(14,1,m,E)}function jr(m,E,A){if(c)return Oe(15,1,m,E,A)}var qr,rr,Cr=()=>Se(""),Sr=m=>{for(var E="";U()[m>>>0];)E+=qr[U()[m++>>>0]];return E},Nr={},as={};function $r(m,E,A={}){return function(z,V,ce={}){var Pe=V.name;if(!z)throw new rr(`type "${Pe}" must have a positive integer typeid pointer`);if(as.hasOwnProperty(z)){if(ce.Sb)return;throw new rr(`Cannot register type '${Pe}' twice`)}as[z]=V,Nr.hasOwnProperty(z)&&(V=Nr[z],delete Nr[z],V.forEach(De=>De()))}(m,E,A)}var Is=(m,E,A)=>{switch(E){case 1:return A?z=>F()[z>>>0]:z=>U()[z>>>0];case 2:return A?z=>se()[z>>>1>>>0]:z=>_e()[z>>>1>>>0];case 4:return A?z=>ie()[z>>>2>>>0]:z=>ve()[z>>>2>>>0];case 8:return A?z=>ee[z>>>3]:z=>Z[z>>>3];default:throw new TypeError(`invalid integer width (${E}): ${m}`)}};function As(m,E,A){A>>>=0,$r(m>>>=0,{name:E=Sr(E>>>0),fromWireType:z=>z,toWireType:function(z,V){if(typeof V!="bigint"&&typeof V!="number")throw V=V===null?"null":(z=typeof V)=="object"||z==="array"||z==="function"?V.toString():""+V,new TypeError(`Cannot convert "${V}" to ${this.name}`);return typeof V=="number"&&(V=BigInt(V)),V},Cb:Vr,readValueFromPointer:Is(E,A,E.indexOf("u")==-1),Db:null})}var Vr=8;function Ur(m,E,A,z){$r(m>>>=0,{name:E=Sr(E>>>0),fromWireType:function(V){return!!V},toWireType:function(V,ce){return ce?A:z},Cb:Vr,readValueFromPointer:function(V){return this.fromWireType(U()[V>>>0])},Db:null})}var Zr=[],Or=[];function ms(m){9<(m>>>=0)&&--Or[m+1]==0&&(Or[m]=void 0,Zr.push(m))}var pr=m=>{if(!m)throw new rr("Cannot use deleted val. handle = "+m);return Or[m]},hr=m=>{switch(m){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let E=Zr.pop()||Or.length;return Or[E]=m,Or[E+1]=1,E}};function Qr(m){return this.fromWireType(ve()[m>>>2>>>0])}var Ds={name:"emscripten::val",fromWireType:m=>{var E=pr(m);return ms(m),E},toWireType:(m,E)=>hr(E),Cb:Vr,readValueFromPointer:Qr,Db:null};function Wr(m){return $r(m>>>0,Ds)}var Re=(m,E)=>{switch(E){case 4:return function(A){return this.fromWireType(ze()[A>>>2>>>0])};case 8:return function(A){return this.fromWireType(Ge()[A>>>3>>>0])};default:throw new TypeError(`invalid float width (${E}): ${m}`)}};function je(m,E,A){A>>>=0,$r(m>>>=0,{name:E=Sr(E>>>0),fromWireType:z=>z,toWireType:(z,V)=>V,Cb:Vr,readValueFromPointer:Re(E,A),Db:null})}function et(m,E,A,z,V){if(m>>>=0,A>>>=0,E=Sr(E>>>0),V===-1&&(V=4294967295),V=De=>De,z===0){var ce=32-8*A;V=De=>De<<ce>>>ce}var Pe=E.includes("unsigned")?function(De,He){return He>>>0}:function(De,He){return He};$r(m,{name:E,fromWireType:V,toWireType:Pe,Cb:Vr,readValueFromPointer:Is(E,A,z!==0),Db:null})}function Xt(m,E,A){function z(ce){var Pe=ve()[ce>>>2>>>0];return ce=ve()[ce+4>>>2>>>0],new V(F().buffer,ce,Pe)}var V=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][E];$r(m>>>=0,{name:A=Sr(A>>>0),fromWireType:z,Cb:Vr,readValueFromPointer:z},{Sb:!0})}function Ls(m,E){$r(m>>>=0,{name:E=Sr(E>>>0),fromWireType:function(A){for(var z,V=ve()[A>>>2>>>0],ce=A+4,Pe=ce,De=0;De<=V;++De){var He=ce+De;De!=V&&U()[He>>>0]!=0||(Pe=Qt(Pe,He-Pe),z===void 0?z=Pe:(z+="\0",z+=Pe),Pe=He+1)}return es(A),z},toWireType:function(A,z){z instanceof ArrayBuffer&&(z=new Uint8Array(z));var V=typeof z=="string";if(!(V||z instanceof Uint8Array||z instanceof Uint8ClampedArray||z instanceof Int8Array))throw new rr("Cannot pass non-string to std::string");var ce=V?B(z):z.length,Pe=_n(4+ce+1),De=Pe+4;if(ve()[Pe>>>2>>>0]=ce,V)q(z,De,ce+1);else if(V)for(V=0;V<ce;++V){var He=z.charCodeAt(V);if(255<He)throw es(Pe),new rr("String has UTF-16 code units that do not fit in 8 bits");U()[De+V>>>0]=He}else for(V=0;V<ce;++V)U()[De+V>>>0]=z[V];return A!==null&&A.push(es,Pe),Pe},Cb:Vr,readValueFromPointer:Qr,Db(A){es(A)}})}var hs=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,zs=(m,E)=>{for(var A=m>>1,z=A+E/2;!(A>=z)&&_e()[A>>>0];)++A;if(32<(A<<=1)-m&&hs)return hs.decode(U().slice(m,A));for(A="",z=0;!(z>=E/2);++z){var V=se()[m+2*z>>>1>>>0];if(V==0)break;A+=String.fromCharCode(V)}return A},_s=(m,E,A)=>{if(A??(A=2147483647),2>A)return 0;var z=E;A=(A-=2)<2*m.length?A/2:m.length;for(var V=0;V<A;++V){var ce=m.charCodeAt(V);se()[E>>>1>>>0]=ce,E+=2}return se()[E>>>1>>>0]=0,E-z},an=m=>2*m.length,ln=(m,E)=>{for(var A=0,z="";!(A>=E/4);){var V=ie()[m+4*A>>>2>>>0];if(V==0)break;++A,65536<=V?(V-=65536,z+=String.fromCharCode(55296|V>>10,56320|1023&V)):z+=String.fromCharCode(V)}return z},cn=(m,E,A)=>{if(E>>>=0,A??(A=2147483647),4>A)return 0;var z=E;A=z+A-4;for(var V=0;V<m.length;++V){var ce=m.charCodeAt(V);if(55296<=ce&&57343>=ce&&(ce=65536+((1023&ce)<<10)|1023&m.charCodeAt(++V)),ie()[E>>>2>>>0]=ce,(E+=4)+4>A)break}return ie()[E>>>2>>>0]=0,E-z},pe=m=>{for(var E=0,A=0;A<m.length;++A){var z=m.charCodeAt(A);55296<=z&&57343>=z&&++A,E+=4}return E};function I(m,E,A){if(m>>>=0,E>>>=0,A=Sr(A>>>=0),E===2)var z=zs,V=_s,ce=an,Pe=De=>_e()[De>>>1>>>0];else E===4&&(z=ln,V=cn,ce=pe,Pe=De=>ve()[De>>>2>>>0]);$r(m,{name:A,fromWireType:De=>{for(var He,it=ve()[De>>>2>>>0],xt=De+4,Ot=0;Ot<=it;++Ot){var Gt=De+4+Ot*E;Ot!=it&&Pe(Gt)!=0||(xt=z(xt,Gt-xt),He===void 0?He=xt:(He+="\0",He+=xt),xt=Gt+E)}return es(De),He},toWireType:(De,He)=>{if(typeof He!="string")throw new rr(`Cannot pass non-string to C++ string type ${A}`);var it=ce(He),xt=_n(4+it+E);return ve()[xt>>>2>>>0]=it/E,V(He,xt+4,it+E),De!==null&&De.push(es,xt),xt},Cb:Vr,readValueFromPointer:Qr,Db(De){es(De)}})}function N(m,E){$r(m>>>=0,{Tb:!0,name:E=Sr(E>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function Y(m){Un(m>>>0,!l,1,!a,131072,!1),is()}var le=m=>{if(!ue)try{if(m(),!(0<Je))try{c?fn(P):It(P)}catch(E){E instanceof xe||E=="unwind"||k(0,E)}}catch(E){E instanceof xe||E=="unwind"||k(0,E)}};function de(m){m>>>=0,typeof Atomics.jc=="function"&&(Atomics.jc(ie(),m>>>2,m).value.then(Te),m+=128,Atomics.store(ie(),m>>>2,1))}var Te=()=>{var m=hn();m&&(de(m),le(Co))};function Ne(m,E){(m>>>=0)==E>>>0?setTimeout(Te):c?postMessage({Gb:m,Bb:"checkMailbox"}):(m=Er[m])&&m.postMessage({Bb:"checkMailbox"})}var qe=[];function We(m,E,A,z,V){for(E>>>=0,z/=2,qe.length=z,A=V>>>0>>>3,V=0;V<z;V++)qe[V]=ee[A+2*V]?ee[A+2*V+1]:Ge()[A+2*V+1>>>0];return(E?Ae[E]:Vn[m])(...qe)}var tt=()=>{Je=0};function Mt(m){m>>>=0,c?postMessage({Bb:"cleanupThread",hc:m}):Rr(Er[m])}function Bt(m){}var Dt=(m,E)=>{var A=as[m];if(A===void 0)throw m=vo(m),A=Sr(m),es(m),new rr(`${E} has unknown type ${A}`);return A},sr=(m,E,A)=>{var z=[];return m=m.toWireType(z,A),z.length&&(ve()[E>>>2>>>0]=hr(z)),m};function Wt(m,E,A){return E>>>=0,A>>>=0,m=pr(m>>>0),E=Dt(E,"emval::as"),sr(E,A,m)}function _r(m,E){return E>>>=0,m=pr(m>>>0),(E=Dt(E,"emval::as")).toWireType(null,m)}var br=m=>{try{m()}catch(E){Se(E)}},or=0,fr=null,Dr=0,Xr=[],Yt={},gr={},Gr=0,zr=null,fs=[];function kr(m){return function(E){if(!ue){if(or===0){var A=!1,z=!1;E((V=0)=>{if(!ue&&(Dr=V,A=!0,z)){or=2,br(()=>ko(fr)),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.resume(),V=!1;try{var ce=function(){var He=ie()[fr+8>>>2>>>0];return He=dt[gr[He]],--Je,He()}()}catch(He){ce=He,V=!0}var Pe=!1;if(!fr){var De=zr;De&&(zr=null,(V?De.reject:De.resolve)(ce),Pe=!0)}if(V&&!Pe)throw ce}}),z=!0,A||(or=1,fr=function(){var V=_n(65548),ce=V+12;ve()[V>>>2>>>0]=ce,ve()[V+4>>>2>>>0]=ce+65536,ce=Xr[0];var Pe=Yt[ce];return Pe===void 0&&(Pe=Gr++,Yt[ce]=Pe,gr[Pe]=ce),ce=Pe,ie()[V+8>>>2>>>0]=ce,V}(),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.pause(),br(()=>$o(fr)))}else or===2?(or=0,br(Io),es(fr),fr=null,fs.forEach(le)):Se(`invalid state: ${or}`);return Dr}}(E=>{m().then(E)})}function ls(m){return m>>>=0,kr(async()=>{var E=await pr(m);return hr(E)})}var cr=[];function ir(m,E,A,z){return A>>>=0,z>>>=0,(m=cr[m>>>0])(null,E=pr(E>>>0),A,z)}var mr={},nr=m=>{var E=mr[m];return E===void 0?Sr(m):E};function Kr(m,E,A,z,V){return A>>>=0,z>>>=0,V>>>=0,(m=cr[m>>>0])(E=pr(E>>>0),E[A=nr(A)],z,V)}var Bs=()=>typeof globalThis=="object"?globalThis:Function("return this")();function zn(m){return(m>>>=0)==0?hr(Bs()):(m=nr(m),hr(Bs()[m]))}var Hs=m=>{var E=cr.length;return cr.push(m),E},Yo=(m,E)=>{for(var A=Array(m),z=0;z<m;++z)A[z]=Dt(ve()[E+4*z>>>2>>>0],"parameter "+z);return A},io=(m,E)=>Object.defineProperty(E,"name",{value:m});function Zo(m,E,A){var z=(E=Yo(m,E>>>0)).shift();m--;var V=`return function (obj, func, destructorsRef, args) {
`,ce=0,Pe=[];A===0&&Pe.push("obj");for(var De=["retType"],He=[z],it=0;it<m;++it)Pe.push("arg"+it),De.push("argType"+it),He.push(E[it]),V+=`  var arg${it} = argType${it}.readValueFromPointer(args${ce?"+"+ce:""});
`,ce+=E[it].Cb;return V+=`  var rv = ${A===1?"new func":"func.call"}(${Pe.join(", ")});
`,z.Tb||(De.push("emval_returnValue"),He.push(sr),V+=`  return emval_returnValue(retType, destructorsRef, rv);
`),De.push(V+`};
`),m=function(xt){var Ot=Function;if(!(Ot instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Ot} which is not a function`);var Gt=io(Ot.name||"unknownFunctionName",function(){});return Gt.prototype=Ot.prototype,Gt=new Gt,(xt=Ot.apply(Gt,xt))instanceof Object?xt:Gt}(De)(...He),A=`methodCaller<(${E.map(xt=>xt.name).join(", ")}) => ${z.name}>`,Hs(io(A,m))}function ei(m){return m=nr(m>>>0),hr(n[m])}function ti(m,E){return E>>>=0,m=pr(m>>>0),E=pr(E),hr(m[E])}function qs(m){9<(m>>>=0)&&(Or[m+1]+=1)}function ri(){return hr([])}function si(m){m=pr(m>>>0);for(var E=Array(m.length),A=0;A<m.length;A++)E[A]=m[A];return hr(E)}function ni(m){return hr(nr(m>>>0))}function oi(){return hr({})}function ii(m){for(var E=pr(m>>>=0);E.length;){var A=E.pop();E.pop()(A)}ms(m)}function Qs(m,E,A){E>>>=0,A>>>=0,m=pr(m>>>0),E=pr(E),A=pr(A),m[E]=A}function ai(m,E){return E>>>=0,m=(m=Dt(m>>>0,"_emval_take_value")).readValueFromPointer(E),hr(m)}function li(m,E){m=-9007199254740992>m||9007199254740992<m?NaN:Number(m),E>>>=0,m=new Date(1e3*m),ie()[E>>>2>>>0]=m.getUTCSeconds(),ie()[E+4>>>2>>>0]=m.getUTCMinutes(),ie()[E+8>>>2>>>0]=m.getUTCHours(),ie()[E+12>>>2>>>0]=m.getUTCDate(),ie()[E+16>>>2>>>0]=m.getUTCMonth(),ie()[E+20>>>2>>>0]=m.getUTCFullYear()-1900,ie()[E+24>>>2>>>0]=m.getUTCDay(),m=(m.getTime()-Date.UTC(m.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,ie()[E+28>>>2>>>0]=m}var ao=m=>m%4==0&&(m%100!=0||m%400==0),lo=[0,31,60,91,121,152,182,213,244,274,305,335],co=[0,31,59,90,120,151,181,212,243,273,304,334];function uo(m,E){m=-9007199254740992>m||9007199254740992<m?NaN:Number(m),E>>>=0,m=new Date(1e3*m),ie()[E>>>2>>>0]=m.getSeconds(),ie()[E+4>>>2>>>0]=m.getMinutes(),ie()[E+8>>>2>>>0]=m.getHours(),ie()[E+12>>>2>>>0]=m.getDate(),ie()[E+16>>>2>>>0]=m.getMonth(),ie()[E+20>>>2>>>0]=m.getFullYear()-1900,ie()[E+24>>>2>>>0]=m.getDay();var A=(ao(m.getFullYear())?lo:co)[m.getMonth()]+m.getDate()-1|0;ie()[E+28>>>2>>>0]=A,ie()[E+36>>>2>>>0]=-60*m.getTimezoneOffset(),A=new Date(m.getFullYear(),6,1).getTimezoneOffset();var z=new Date(m.getFullYear(),0,1).getTimezoneOffset();m=0|(A!=z&&m.getTimezoneOffset()==Math.min(z,A)),ie()[E+32>>>2>>>0]=m}function ci(m){m>>>=0;var E=new Date(ie()[m+20>>>2>>>0]+1900,ie()[m+16>>>2>>>0],ie()[m+12>>>2>>>0],ie()[m+8>>>2>>>0],ie()[m+4>>>2>>>0],ie()[m>>>2>>>0],0),A=ie()[m+32>>>2>>>0],z=E.getTimezoneOffset(),V=new Date(E.getFullYear(),6,1).getTimezoneOffset(),ce=new Date(E.getFullYear(),0,1).getTimezoneOffset(),Pe=Math.min(ce,V);return 0>A?ie()[m+32>>>2>>>0]=+(V!=ce&&Pe==z):0<A!=(Pe==z)&&(V=Math.max(ce,V),E.setTime(E.getTime()+6e4*((0<A?Pe:V)-z))),ie()[m+24>>>2>>>0]=E.getDay(),A=(ao(E.getFullYear())?lo:co)[E.getMonth()]+E.getDate()-1|0,ie()[m+28>>>2>>>0]=A,ie()[m>>>2>>>0]=E.getSeconds(),ie()[m+4>>>2>>>0]=E.getMinutes(),ie()[m+8>>>2>>>0]=E.getHours(),ie()[m+12>>>2>>>0]=E.getDate(),ie()[m+16>>>2>>>0]=E.getMonth(),ie()[m+20>>>2>>>0]=E.getYear(),m=E.getTime(),BigInt(isNaN(m)?-1:m/1e3)}function po(m,E,A,z,V,ce,Pe){return c?Oe(16,1,m,E,A,z,V,ce,Pe):-52}function Bn(m,E,A,z,V,ce){if(c)return Oe(17,1,m,E,A,z,V,ce)}var Xs={},mo=()=>performance.timeOrigin+performance.now();function ho(m,E){if(c)return Oe(18,1,m,E);if(Xs[m]&&(clearTimeout(Xs[m].id),delete Xs[m]),!E)return 0;var A=setTimeout(()=>{delete Xs[m],le(()=>Po(m,performance.timeOrigin+performance.now()))},E);return Xs[m]={id:A,qc:E},0}function _o(m,E,A,z){m>>>=0,E>>>=0,A>>>=0,z>>>=0;var V=new Date().getFullYear(),ce=new Date(V,0,1).getTimezoneOffset();V=new Date(V,6,1).getTimezoneOffset();var Pe=Math.max(ce,V);ve()[m>>>2>>>0]=60*Pe,ie()[E>>>2>>>0]=+(ce!=V),m=(E=De=>{var He=Math.abs(De);return`UTC${0<=De?"-":"+"}${String(Math.floor(He/60)).padStart(2,"0")}${String(He%60).padStart(2,"0")}`})(ce),E=E(V),V<ce?(q(m,A,17),q(E,z,17)):(q(m,z,17),q(E,A,17))}var ga=()=>Date.now();function ui(m,E,A){return 0<=m&&3>=m?(m===0?m=Date.now():m=performance.timeOrigin+performance.now(),ee[A>>>0>>>3]=BigInt(Math.round(1e6*m)),0):28}var un=[],Rn=(m,E)=>{un.length=0;for(var A;A=U()[m++>>>0];){var z=A!=105;E+=(z&=A!=112)&&E%8?4:0,un.push(A==112?ve()[E>>>2>>>0]:A==106?ee[E>>>3]:A==105?ie()[E>>>2>>>0]:Ge()[E>>>3>>>0]),E+=z?8:4}return un};function jn(m,E,A){return m>>>=0,E=Rn(E>>>0,A>>>0),Ae[m](...E)}function di(m,E,A){return m>>>=0,E=Rn(E>>>0,A>>>0),Ae[m](...E)}var pi=()=>{};function mi(m,E){return y(Qt(m>>>0,E>>>0))}var hi=()=>{throw Je+=1,"unwind"};function _i(){return 4294901760}var fi=()=>navigator.hardwareConcurrency;function gi(){return Se("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function wi(m){m>>>=0;var E=U().length;if(m<=E||4294901760<m)return!1;for(var A=1;4>=A;A*=2){var z=E*(1+.2/A);z=Math.min(z,m+100663296);e:{z=(Math.min(4294901760,65536*Math.ceil(Math.max(m,z)/65536))-T.buffer.byteLength+65535)/65536|0;try{T.grow(z),ae();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1}var Js=()=>(Se("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Ys={},dn=m=>{m.forEach(E=>{Js()})};function fo(){var m=Error().stack.toString().split(`
`);return m[0]=="Error"&&m.shift(),dn(m),Ys.Lb=Js(),Ys.cc=m,Ys.Lb}function Mi(m,E,A){if(m>>>=0,E>>>=0,Ys.Lb==m)var z=Ys.cc;else(z=Error().stack.toString().split(`
`))[0]=="Error"&&z.shift(),dn(z);for(var V=3;z[V]&&Js()!=m;)++V;for(m=0;m<A&&z[m+V];++m)ie()[E+4*m>>>2>>>0]=Js();return m}var pn,gs={},go=()=>{if(!pn){var m,E={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(m in gs)gs[m]===void 0?delete E[m]:E[m]=gs[m];var A=[];for(m in E)A.push(`${m}=${E[m]}`);pn=A}return pn};function bi(m,E){if(c)return Oe(19,1,m,E);m>>>=0,E>>>=0;var A=0;return go().forEach((z,V)=>{var ce=E+A;for(V=ve()[m+4*V>>>2>>>0]=ce,ce=0;ce<z.length;++ce)F()[V++>>>0]=z.charCodeAt(ce);F()[V>>>0]=0,A+=z.length+1}),0}function wo(m,E){if(c)return Oe(20,1,m,E);m>>>=0,E>>>=0;var A=go();ve()[m>>>2>>>0]=A.length;var z=0;return A.forEach(V=>z+=V.length+1),ve()[E>>>2>>>0]=z,0}function yi(m){return c?Oe(21,1,m):52}function Mo(m,E,A,z){return c?Oe(22,1,m,E,A,z):52}function Nn(m,E,A,z){return c?Oe(23,1,m,E,A,z):70}var vi=[null,[],[]];function bo(m,E,A,z){if(c)return Oe(24,1,m,E,A,z);E>>>=0,A>>>=0,z>>>=0;for(var V=0,ce=0;ce<A;ce++){var Pe=ve()[E>>>2>>>0],De=ve()[E+4>>>2>>>0];E+=8;for(var He=0;He<De;He++){var it=U()[Pe+He>>>0],xt=vi[m];it===0||it===10?((m===1?v:y)(Ct(xt)),xt.length=0):xt.push(it)}V+=De}return ve()[z>>>2>>>0]=V,0}c||function(){for(var m=n.numThreads-1;m--;)Pr();Ke.unshift(()=>{ke++,function(E){c?E():Promise.all(St.map(qt)).then(E)}(()=>Me())})}();for(var yo=Array(256),mn=0;256>mn;++mn)yo[mn]=String.fromCharCode(mn);qr=yo,rr=n.BindingError=class extends Error{constructor(m){super(m),this.name="BindingError"}},n.InternalError=class extends Error{constructor(m){super(m),this.name="InternalError"}},Or.push(0,1,void 0,1,null,1,!0,1,!1,1),n.count_emval_handles=()=>Or.length/2-5-Zr.length;var dt,Vn=[Ye,ot,pt,S,Q,re,ge,Fe,rt,ft,mt,vt,st,zt,Nt,jr,po,Bn,ho,bi,wo,yi,Mo,Nn,bo];(async function(){function m(z,V){return dt=z.exports,dt=function(){var ce=dt,Pe={};for(let[De,He]of Object.entries(ce))Pe[De]=typeof He=="function"?(...it)=>{Xr.push(De);try{return He(...it)}finally{ue||(Xr.pop(),fr&&or===1&&Xr.length===0&&(or=0,Je+=1,br(Hn),typeof Fibers<"u"&&Fibers.rc()))}}:He;return Pe}(),dt=function(){var ce=dt,Pe=He=>it=>He(it)>>>0,De=He=>()=>He()>>>0;return(ce=Object.assign({},ce)).Da=Pe(ce.Da),ce.fb=De(ce.fb),ce.hb=Pe(ce.hb),ce.tb=Pe(ce.tb),ce.ub=De(ce.ub),ce.__cxa_get_exception_ptr=Pe(ce.__cxa_get_exception_ptr),ce}(),Mr.push(dt.ib),x=V,Me(),dt}ke++;var E=we();if(n.instantiateWasm)return new Promise(z=>{n.instantiateWasm(E,(V,ce)=>{m(V,ce),z(V.exports)})});if(c)return new Promise(z=>{Ie=V=>{var ce=new WebAssembly.Instance(V,we());z(m(ce,V))}});be??(be=n.locateFile?n.locateFile?n.locateFile("ort-wasm-simd-threaded.jsep.wasm",g):g+"ort-wasm-simd-threaded.jsep.wasm":new URL("https://solidsnail.github.io/llmini.js/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href);try{var A=await async function(z){var V=be;if(!he&&typeof WebAssembly.instantiateStreaming=="function"&&!j(V))try{var ce=fetch(V,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(ce,z)}catch(Pe){y(`wasm streaming compile failed: ${Pe}`),y("falling back to ArrayBuffer instantiation")}return async function(Pe,De){try{var He=await async function(it){if(!he)try{var xt=await f(it);return new Uint8Array(xt)}catch{}if(it==be&&he)it=new Uint8Array(he);else{if(!_)throw"both async and sync fetching of the wasm failed";it=_(it)}return it}(Pe);return await WebAssembly.instantiate(He,De)}catch(it){y(`failed to asynchronously prepare wasm: ${it}`),Se(it)}}(V,z)}(E);return m(A.instance,A.module)}catch(z){return o(z),Promise.reject(z)}})();var vo=m=>(vo=dt.Da)(m),xo=()=>(xo=dt.Ea)();n._OrtInit=(m,E)=>(n._OrtInit=dt.Fa)(m,E),n._OrtGetLastError=(m,E)=>(n._OrtGetLastError=dt.Ga)(m,E),n._OrtCreateSessionOptions=(m,E,A,z,V,ce,Pe,De,He,it)=>(n._OrtCreateSessionOptions=dt.Ha)(m,E,A,z,V,ce,Pe,De,He,it),n._OrtAppendExecutionProvider=(m,E,A,z,V)=>(n._OrtAppendExecutionProvider=dt.Ia)(m,E,A,z,V),n._OrtAddFreeDimensionOverride=(m,E,A)=>(n._OrtAddFreeDimensionOverride=dt.Ja)(m,E,A),n._OrtAddSessionConfigEntry=(m,E,A)=>(n._OrtAddSessionConfigEntry=dt.Ka)(m,E,A),n._OrtReleaseSessionOptions=m=>(n._OrtReleaseSessionOptions=dt.La)(m),n._OrtCreateSession=(m,E,A)=>(n._OrtCreateSession=dt.Ma)(m,E,A),n._OrtReleaseSession=m=>(n._OrtReleaseSession=dt.Na)(m),n._OrtGetInputOutputCount=(m,E,A)=>(n._OrtGetInputOutputCount=dt.Oa)(m,E,A),n._OrtGetInputOutputMetadata=(m,E,A,z)=>(n._OrtGetInputOutputMetadata=dt.Pa)(m,E,A,z),n._OrtFree=m=>(n._OrtFree=dt.Qa)(m),n._OrtCreateTensor=(m,E,A,z,V,ce)=>(n._OrtCreateTensor=dt.Ra)(m,E,A,z,V,ce),n._OrtGetTensorData=(m,E,A,z,V)=>(n._OrtGetTensorData=dt.Sa)(m,E,A,z,V),n._OrtReleaseTensor=m=>(n._OrtReleaseTensor=dt.Ta)(m),n._OrtCreateRunOptions=(m,E,A,z)=>(n._OrtCreateRunOptions=dt.Ua)(m,E,A,z),n._OrtAddRunConfigEntry=(m,E,A)=>(n._OrtAddRunConfigEntry=dt.Va)(m,E,A),n._OrtReleaseRunOptions=m=>(n._OrtReleaseRunOptions=dt.Wa)(m),n._OrtCreateBinding=m=>(n._OrtCreateBinding=dt.Xa)(m),n._OrtBindInput=(m,E,A)=>(n._OrtBindInput=dt.Ya)(m,E,A),n._OrtBindOutput=(m,E,A,z)=>(n._OrtBindOutput=dt.Za)(m,E,A,z),n._OrtClearBoundOutputs=m=>(n._OrtClearBoundOutputs=dt._a)(m),n._OrtReleaseBinding=m=>(n._OrtReleaseBinding=dt.$a)(m),n._OrtRunWithBinding=(m,E,A,z,V)=>(n._OrtRunWithBinding=dt.ab)(m,E,A,z,V),n._OrtRun=(m,E,A,z,V,ce,Pe,De)=>(n._OrtRun=dt.bb)(m,E,A,z,V,ce,Pe,De),n._OrtEndProfiling=m=>(n._OrtEndProfiling=dt.cb)(m),n._JsepOutput=(m,E,A)=>(n._JsepOutput=dt.db)(m,E,A),n._JsepGetNodeName=m=>(n._JsepGetNodeName=dt.eb)(m);var hn=()=>(hn=dt.fb)(),es=n._free=m=>(es=n._free=dt.gb)(m),_n=n._malloc=m=>(_n=n._malloc=dt.hb)(m),Un=(m,E,A,z,V,ce)=>(Un=dt.kb)(m,E,A,z,V,ce),Wn=()=>(Wn=dt.lb)(),To=(m,E,A,z,V)=>(To=dt.mb)(m,E,A,z,V),Eo=m=>(Eo=dt.nb)(m),fn=m=>(fn=dt.ob)(m),Po=(m,E)=>(Po=dt.pb)(m,E),Co=()=>(Co=dt.qb)(),Gn=(m,E)=>(Gn=dt.rb)(m,E),gn=m=>(gn=dt.sb)(m),Kn=m=>(Kn=dt.tb)(m),wn=()=>(wn=dt.ub)(),So=n.dynCall_ii=(m,E)=>(So=n.dynCall_ii=dt.vb)(m,E),$o=m=>($o=dt.wb)(m),Hn=()=>(Hn=dt.xb)(),ko=m=>(ko=dt.yb)(m),Io=()=>(Io=dt.zb)();return n.stackSave=()=>wn(),n.stackRestore=m=>gn(m),n.stackAlloc=m=>Kn(m),n.setValue=function(m,E,A="i8"){switch(A.endsWith("*")&&(A="*"),A){case"i1":case"i8":F()[m>>>0]=E;break;case"i16":se()[m>>>1>>>0]=E;break;case"i32":ie()[m>>>2>>>0]=E;break;case"i64":ee[m>>>3]=BigInt(E);break;case"float":ze()[m>>>2>>>0]=E;break;case"double":Ge()[m>>>3>>>0]=E;break;case"*":ve()[m>>>2>>>0]=E;break;default:Se(`invalid type for setValue: ${A}`)}},n.getValue=function(m,E="i8"){switch(E.endsWith("*")&&(E="*"),E){case"i1":case"i8":return F()[m>>>0];case"i16":return se()[m>>>1>>>0];case"i32":return ie()[m>>>2>>>0];case"i64":return ee[m>>>3];case"float":return ze()[m>>>2>>>0];case"double":return Ge()[m>>>3>>>0];case"*":return ve()[m>>>2>>>0];default:Se(`invalid type for getValue: ${E}`)}},n.UTF8ToString=Qt,n.stringToUTF8=q,n.lengthBytesUTF8=B,function m(){if(0<ke)Ee=m;else if(c)s(n),W();else{for(;0<Ke.length;)Ke.shift()(n);0<ke?Ee=m:(n.calledRun=!0,ue||(W(),s(n)))}}(),n.PTR_SIZE=4,i}),tb=Gl,X_=(r=(e=globalThis.self)==null?void 0:e.name)==null?void 0:r.startsWith("em-pthread"),X_&&Gl()}),Kl,Nc,J_,ss,rb,Ki,Y_,Z_,Hl,ef,ql,sb,Ql,nb,au=Ve(()=>{iu(),Kl=typeof location>"u"?void 0:location.origin,Nc=import.meta.url>"file:"&&import.meta.url<"file;",J_=()=>{{if(Nc){let e=URL;return new URL(new e("ort.bundle.min.mjs",import.meta.url).href,Kl).href}return import.meta.url}},ss=J_(),rb=()=>{if(ss&&!ss.startsWith("blob:"))return ss.substring(0,ss.lastIndexOf("/")+1)},Ki=(e,r)=>{try{let t=r??ss;return(t?new URL(e,t):new URL(e)).origin===Kl}catch{return!1}},Y_=(e,r)=>{let t=r??ss;try{return(t?new URL(e,t):new URL(e)).href}catch{return}},Z_=(e,r)=>`${r??"./"}${e}`,Hl=async e=>{let r=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},ef=async e=>(await import(e)).default,ql=(Mx(),Qo(YM)).default,sb=async()=>{if(!ss)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(Ki(ss))return[void 0,ql()];let e=await Hl(ss);return[e,ql(e)]},Ql=(bx(),Qo(eb)).default,nb=async(e,r,t)=>{if(!e&&!r&&Ql&&ss&&Ki(ss))return[void 0,Ql];{let s="ort-wasm-simd-threaded.jsep.mjs",o=e??Y_(s,r),n=t&&o&&!Ki(o,r),i=n?await Hl(o):o??Z_(s,r);return[n?i:void 0,await ef(i)]}}}),Xl,Hi,Do,Jl,tf,rf,sf,lu,Jt,Dn=Ve(()=>{au(),Hi=!1,Do=!1,Jl=!1,tf=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},rf=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},sf=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},lu=async e=>{if(Hi)return Promise.resolve();if(Do)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Jl)throw new Error("previous call to 'initializeWebAssembly()' failed.");Do=!0;let r=e.initTimeout,t=e.numThreads;if(e.simd!==!1){if(e.simd==="relaxed"){if(!sf())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!rf())throw new Error("WebAssembly SIMD is not supported in the current environment.")}let s=tf();t>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=t=1);let o=e.wasmPaths,n=typeof o=="string"?o:void 0,i=o==null?void 0:o.mjs,a=(i==null?void 0:i.href)??i,l=o==null?void 0:o.wasm,c=(l==null?void 0:l.href)??l,p=e.wasmBinary,[d,u]=await nb(a,n,t>1),f=!1,_=[];if(r>0&&_.push(new Promise(b=>{setTimeout(()=>{f=!0,b()},r)})),_.push(new Promise((b,k)=>{let g={numThreads:t};if(p)g.wasmBinary=p;else if(c||n)g.locateFile=M=>c??n+M;else if(a&&a.indexOf("blob:")!==0)g.locateFile=M=>new URL(M,a).href;else if(d){let M=rb();M&&(g.locateFile=$=>M+$)}u(g).then(M=>{Do=!1,Hi=!0,Xl=M,b(),d&&URL.revokeObjectURL(d)},M=>{Do=!1,Jl=!0,k(M)})})),await Promise.race(_),f)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},Jt=()=>{if(Hi&&Xl)return Xl;throw new Error("WebAssembly is not initialized yet.")}}),Ts,ua,Ht,cu=Ve(()=>{Dn(),Ts=(e,r)=>{let t=Jt(),s=t.lengthBytesUTF8(e)+1,o=t._malloc(s);return t.stringToUTF8(e,o,s),r.push(o),o},ua=(e,r,t,s)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([o,n])=>{let i=r?r+o:o;if(typeof n=="object")ua(n,i+".",t,s);else if(typeof n=="string"||typeof n=="number")s(i,n.toString());else if(typeof n=="boolean")s(i,n?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof n}`)})},Ht=e=>{let r=Jt(),t=r.stackSave();try{let s=r.PTR_SIZE,o=r.stackAlloc(2*s);r._OrtGetLastError(o,o+s);let n=Number(r.getValue(o,s===4?"i32":"i64")),i=r.getValue(o+s,"*"),a=i?r.UTF8ToString(i):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${a}`)}finally{r.stackRestore(t)}}}),ob,yx=Ve(()=>{Dn(),cu(),ob=e=>{let r=Jt(),t=0,s=[],o=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)o.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)o.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(o.terminate=!1);let n=0;return(e==null?void 0:e.tag)!==void 0&&(n=Ts(e.tag,s)),t=r._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,n),t===0&&Ht("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&ua(e.extra,"",new WeakSet,(i,a)=>{let l=Ts(i,s),c=Ts(a,s);r._OrtAddRunConfigEntry(t,l,c)!==0&&Ht(`Can't set a run config entry: ${i} - ${a}.`)}),[t,s]}catch(n){throw t!==0&&r._OrtReleaseRunOptions(t),s.forEach(i=>r._free(i)),n}}}),nf,of,af,Lo,lf,ib,vx=Ve(()=>{Dn(),cu(),nf=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},of=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},af=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},Lo=(e,r,t,s)=>{let o=Ts(r,s),n=Ts(t,s);Jt()._OrtAddSessionConfigEntry(e,o,n)!==0&&Ht(`Can't set a session config entry: ${r} - ${t}.`)},lf=async(e,r,t)=>{for(let s of r){let o=typeof s=="string"?s:s.name,n=[];switch(o){case"webnn":if(o="WEBNN",typeof s!="string"){let p=s==null?void 0:s.deviceType;p&&Lo(e,"deviceType",p,t)}break;case"webgpu":if(o="JS",typeof s!="string"){let p=s;if(p!=null&&p.preferredLayout){if(p.preferredLayout!=="NCHW"&&p.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${p.preferredLayout}`);Lo(e,"preferredLayout",p.preferredLayout,t)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=Ts(o,t),a=n.length,l=0,c=0;if(a>0){l=Jt()._malloc(a*Jt().PTR_SIZE),t.push(l),c=Jt()._malloc(a*Jt().PTR_SIZE),t.push(c);for(let p=0;p<a;p++)Jt().setValue(l+p*Jt().PTR_SIZE,n[p][0],"*"),Jt().setValue(c+p*Jt().PTR_SIZE,n[p][1],"*")}await Jt()._OrtAppendExecutionProvider(e,i,l,c,a)!==0&&Ht(`Can't append execution provider: ${o}.`)}},ib=async e=>{let r=Jt(),t=0,s=[],o=e||{};af(o);try{let n=nf(o.graphOptimizationLevel??"all"),i=of(o.executionMode??"sequential"),a=typeof o.logId=="string"?Ts(o.logId,s):0,l=o.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let c=o.logVerbosityLevel??0;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log verbosity level is not valid: ${c}`);let p=typeof o.optimizedModelFilePath=="string"?Ts(o.optimizedModelFilePath,s):0;if(t=r._OrtCreateSessionOptions(n,!!o.enableCpuMemArena,!!o.enableMemPattern,i,!!o.enableProfiling,0,a,l,c,p),t===0&&Ht("Can't create session options."),o.executionProviders&&await lf(t,o.executionProviders,s),o.enableGraphCapture!==void 0){if(typeof o.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${o.enableGraphCapture}`);Lo(t,"enableGraphCapture",o.enableGraphCapture.toString(),s)}if(o.freeDimensionOverrides)for(let[d,u]of Object.entries(o.freeDimensionOverrides)){if(typeof d!="string")throw new Error(`free dimension override name must be a string: ${d}`);if(typeof u!="number"||!Number.isInteger(u)||u<0)throw new Error(`free dimension override value must be a non-negative integer: ${u}`);let f=Ts(d,s);r._OrtAddFreeDimensionOverride(t,f,u)!==0&&Ht(`Can't set a free dimension override: ${d} - ${u}.`)}return o.extra!==void 0&&ua(o.extra,"",new WeakSet,(d,u)=>{Lo(t,d,u,s)}),[t,s]}catch(n){throw t!==0&&r._OrtReleaseSessionOptions(t)!==0&&Ht("Can't release session options."),s.forEach(i=>r._free(i)),n}}}),eo,Ns,kn,uu,da,du,pu,Vc,gt=Ve(()=>{eo=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Ns=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},kn=(e,r)=>{let t=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof r=="number"?r:r.reduce((o,n)=>o*n,1);return t>0?Math.ceil(s*t):void 0},uu=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},da=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},du=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",pu=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Vc=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),mu,ab=Ve(()=>{iu(),mu=async e=>{if(typeof e=="string"){let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),s=t?parseInt(t,10):0;if(s<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let o=r.body.getReader(),n;try{n=new ArrayBuffer(s)}catch(a){if(a instanceof RangeError){let l=Math.ceil(s/65536);n=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw a}let i=0;for(;;){let{done:a,value:l}=await o.read();if(a)break;let c=l.byteLength;new Uint8Array(n,i,c).set(l),i+=c}return new Uint8Array(n,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),cf,uf,df,pf,hu,mf,Lt,Vs=Ve(()=>{gt(),cf=["V","I","W","E","F"],uf=(e,r)=>{console.log(`[${cf[e]},${new Date().toISOString()}]${r}`)},hu=(e,r)=>{df=e,pf=r},mf=(e,r)=>{let t=da(e),s=da(df);t>=s&&uf(t,typeof r=="function"?r():r)},Lt=(...e)=>{pf&&mf(...e)}}),hf,so,ye,pa,lb,cb,ub,Et=Ve(()=>{hf=class{static calcMatMulShape(e,r){return e[1]!==r[0]?void 0:[e[0],r[1]]}},so=class{static calcShape(e,r,t=!1){let s=e.length,o=r.length;if(s===0)return r;if(o===0)return e;let n=Math.max(e.length,r.length),i=new Array(n);if(t){if(s<2||o<2)return;let a=hf.calcMatMulShape([e[s-2],e[s-1]],[r[o-2],r[o-1]]);if(a===void 0)return;[i[n-2],i[n-1]]=a}for(let a=t?3:1;a<=n;a++){let l=s-a<0?1:e[s-a],c=o-a<0?1:r[o-a];if(l!==c&&l>1&&c>1)return;let p=Math.max(l,c);if(l&&c)i[n-a]=Math.max(l,c);else{if(p>1)return;i[n-a]=0}}return i}static isValidBroadcast(e,r){let t=e.length,s=r.length;if(t>s)return!1;for(let o=1;o<=t;o++)if(e[t-o]!==1&&e[t-o]!==r[s-o])return!1;return!0}},ye=class la{static size(r){return la.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let s=r.length;if(s===0)return[];let o=new Array(s),n=s-1;for(;n>=0;){if(r[n]%t===0){o[n]=r[n]/t;break}if(t%r[n]!==0)throw new Error("cannot convert shape");o[n]=1,t/=r[n],n--}for(n--;n>=0;n--)o[n]=r[n];return o}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return la.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return la.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,s){let o=1;for(let n=t;n<s;n++){if(r[n]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=Number(r[n])}return o}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let s=new Array(t);s[t-1]=1,s[t-2]=r[t-1];for(let o=t-3;o>=0;--o)s[o]=s[o+1]*r[o+1];return s}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(s=>this.normalizeAxis(s,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(s=>r[s]):r.slice().reverse()}static padShape(r,t){let s=r.length;return r.map((o,n)=>o+t[n]+t[n+s])}static areEqual(r,t){return r.length!==t.length?!1:r.every((s,o)=>s===t[o])}},pa=class Go{static adjustPoolAttributes(r,t,s,o,n,i){if(!r&&s.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let a=0;a<t.length-2;a++)a>=s.length?s.push(t[a+2]):s[a]=t[a+2];for(let a=0;a<s.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<s.length;a++)if(a<n.length){if(n[a]<0)throw new Error("dilations should be greater than or equal to 1")}else n.push(1);for(let a=0;a<s.length*2;a++)if(a<i.length){if(i[a]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let a=0;a<s.length;a++){if(s[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[a]>=s[a]||i[a+s.length]>=s[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,s,o,n,i,a){if(a){if(n.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<r.length-2;l++)Go.adjustPadAndReturnShape(r[l+(i?1:2)],t[l],s[l],o[l],n,l,l+r.length-2,a)}}static computePoolOutputShape(r,t,s,o,n,i,a){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let l=[t[0],t[1]];return Go.computeShapeHelper(r,t,l,s,o,n,i,a),l}static computeConvOutputShape(r,t,s,o,n,i,a){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[r[0],t[0]];return Go.computeShapeHelper(!1,r,l,s,o,n,i,a),l}static computeShapeHelper(r,t,s,o,n,i,a,l){if(r)for(let c=0;c<t.length-2;c++)s.push(1);else for(let c=0;c<t.length-2;c++)s.push(Go.adjustPadAndReturnShape(t[c+2],o[c],n[c],i[c],a,c,c+t.length-2,l))}static adjustPadAndReturnShape(r,t,s,o,n,i,a,l){let c=s*(o-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return n[i]=0,n[a]=0,Math.floor((r-c)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((r+t-1)/t-1)*t+o-r;return n[i]=Math.floor(l==="SAME_LOWER"?(p+1)/2:p/2),n[a]=p-n[i],Math.floor((r+p-o)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+n[i]+n[a]-c)/t+1)}},lb=class{static getShapeOfGemmResult(e,r,t,s,o){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let n,i,a;r?(n=e[1],i=e[0]):(n=e[0],i=e[1]);let l=-1;if(s?(a=t[0],l=1):(a=t[1],l=0),t[l]!==i)throw new Error("dimension mismatch");if(n<=0||a<=0||i<=0)throw new Error("invalid shape specified");if(o&&!so.isValidBroadcast(o,[n,a]))throw new Error("gemm: invalid bias shape for broadcast");return[n,a,i]}},cb=-34028234663852886e22,ub=34028234663852886e22}),_u,db=Ve(()=>{gt(),_u=(e,r)=>new(uu(r))(e)}),Uc,Yl,_f,Zl,ff,ec,tc,rc,gf,pb,xx=Ve(()=>{Vs(),Uc=(e,r=!0)=>{if(e.byteLength%8!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let t=e.byteLength/8,s=new BigInt64Array(e.buffer,e.byteOffset,t),o=new Int32Array(t);for(let n=0;n<t;n++){let i=s[n];if(i>2147483647n||i<-2147483648n)throw new Error(`Overflow occurred when converting BigInt to Int32 at index ${n}: ${i}`);o[n]=Number(i)}return r?new Uint8Array(o.buffer):o},Yl=(e,r=!0)=>{if(e.byteLength%4!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let t=e.byteLength/4,s=new Int32Array(e.buffer,e.byteOffset,t),o=BigInt64Array.from(s,BigInt);return r?new Uint8Array(o.buffer):o},_f=1,Zl=()=>_f++,ff=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),ec=(e,r)=>{let t=ff.get(e);if(!t)throw new Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((s,o)=>s*o)*t/8):0},tc=class{constructor(e){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:r,context:t,tensor:s,dataType:o,shape:n,shouldConvertInt64toInt32:i=!1}=e;this.sessionId=r,this.mlContext=t,this.mlTensor=s,this.dataType=o,this.tensorShape=n,this.shouldConvertInt64toInt32=i}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return ec(this.dataType,this.tensorShape)}destroy(){Lt("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e,r){if(e){let t=await this.mlContext.readTensor(this.mlTensor),s=Yl(new Uint8Array(t));if(r){(r instanceof ArrayBuffer?new Uint8Array(r):new Uint8Array(r.buffer,r.byteOffset,r.byteLength)).set(s);return}else return s.buffer}else return r?this.mlContext.readTensor(this.mlTensor,r):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,r,t){return this.mlContext===e&&this.dataType===r&&this.tensorShape.length===t.length&&this.tensorShape.every((s,o)=>s===t[o])}setIsInt64ToInt32Converted(e){this.isInt64ToInt32Converted=e}},rc=class{constructor(e,r){this.tensorManager=e,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,r,t,s){let o=r,n=this.tensorManager.getMLContext(e),i=o==="int64"&&!n.opSupportLimits().input.dataTypes.includes("int64");if(i&&(o="int32",Lt("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(n,o,t))return this.wrapper.tensor;if(s){if(this.wrapper.byteLength!==ec(o,t))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let a=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,o,t,a,!0,!0,i),s&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){let r=e;if(this.wrapper)if(this.wrapper.shouldConvertInt64toInt32&&(r=Uc(e,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),r.byteLength===this.wrapper.byteLength){this.wrapper.write(r);return}else Lt("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(r):this.activeUpload=new Uint8Array(r)}async download(e){var r,t,s;if(this.activeUpload){let o=(r=this.wrapper)!=null&&r.isInt64ToInt32Converted?Yl(this.activeUpload):this.activeUpload;if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(o):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(o);return}else return o.buffer}if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read((t=this.wrapper)==null?void 0:t.shouldConvertInt64toInt32,e):this.wrapper.read((s=this.wrapper)==null?void 0:s.shouldConvertInt64toInt32)}},gf=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let r=this.backend.getMLContext(e);if(!r)throw new Error("MLContext not found for session.");return r}reserveTensorId(){let e=Zl();return this.tensorTrackersById.set(e,new rc(this)),e}releaseTensorId(e){let r=this.tensorTrackersById.get(e);r&&(this.tensorTrackersById.delete(e),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(e,r,t,s,o){Lt("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${r}, dataType: ${t}, shape: ${s}, copyOld: ${o}}`);let n=this.tensorTrackersById.get(r);if(!n)throw new Error("Tensor not found.");return n.ensureTensor(e,t,s,o)}upload(e,r){let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");t.upload(r)}async download(e,r){Lt("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${r==null?void 0:r.byteLength}}`);let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");return t.download(r)}releaseTensorsForSession(e){for(let r of this.freeTensors)r.sessionId===e&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==e)}registerTensor(e,r,t,s){let o=this.getMLContext(e),n=Zl(),i=new tc({sessionId:e,context:o,tensor:r,dataType:t,shape:s});return this.tensorTrackersById.set(n,new rc(this,i)),this.externalTensors.add(i),n}async getCachedTensor(e,r,t,s,o,n,i=!1){let a=this.getMLContext(e);for(let[c,p]of this.freeTensors.entries())if(p.canReuseTensor(a,r,t)){Lt("verbose",()=>`[WebNN] Reusing tensor {dataType: ${r}, shape: ${t}}`);let d=this.freeTensors.splice(c,1)[0];return d.sessionId=e,d}Lt("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${r}, shape: ${t}}`);let l=await a.createTensor({dataType:r,shape:t,dimensions:t,usage:s,writable:o,readable:n});return new tc({sessionId:e,context:a,tensor:l,dataType:r,shape:t,shouldConvertInt64toInt32:i})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},pb=(...e)=>new gf(...e)}),qi,wf,mb,Tx=Ve(()=>{gt(),Dn(),db(),xx(),Vs(),qi=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),wf=(e,r)=>{if(e===r)return!0;if(e===void 0||r===void 0)return!1;let t=Object.keys(e).sort(),s=Object.keys(r).sort();return t.length===s.length&&t.every((o,n)=>o===s[n]&&e[o]===r[o])},mb=class{constructor(e){this.tensorManager=pb(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,hu(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){Lt("verbose",()=>`[WebNN] onRunStart {sessionId: ${e}}`),this.activeSessionId=e}onRunEnd(e){Lt("verbose",()=>`[WebNN] onRunEnd {sessionId: ${e}}`);let r=this.temporarySessionTensorIds.get(e);if(r){for(let t of r)Lt("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex(s=>s.gpuDevice===e);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:s}),s}}else if(e===void 0){let t=this.mlContextCache.findIndex(s=>s.options===void 0&&s.gpuDevice===void 0);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:s}),s}}let r=this.mlContextCache.findIndex(t=>wf(t.options,e));if(r!==-1)return this.mlContextCache[r].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,r){this.mlContextBySessionId.set(e,r);let t=this.sessionIdsByMLContext.get(r);t||(t=new Set,this.sessionIdsByMLContext.set(r,t)),t.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let r=this.mlContextBySessionId.get(e);if(!r)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let t=this.sessionIdsByMLContext.get(r);if(t.delete(e),t.size===0){this.sessionIdsByMLContext.delete(r);let s=this.mlContextCache.findIndex(o=>o.mlContext===r);s!==-1&&this.mlContextCache.splice(s,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){Lt("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,r,t,s,o){let n=qi.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,r,n,s,o)}async createTemporaryTensor(e,r,t){Lt("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${r}, shape: ${t}}`);let s=qi.get(r);if(!s)throw new Error(`Unsupported ONNX data type: ${r}`);let o=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,o,s,t,!1);let n=this.temporarySessionTensorIds.get(e);return n?n.push(o):this.temporarySessionTensorIds.set(e,[o]),o}uploadTensor(e,r){if(!Jt().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");Lt("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${r.byteLength}}`),this.tensorManager.upload(e,r)}async downloadTensor(e,r){return this.tensorManager.download(e,r)}createMLTensorDownloader(e,r){return async()=>{let t=await this.tensorManager.download(e);return _u(t,r)}}registerMLTensor(e,r,t,s){let o=qi.get(t);if(!o)throw new Error(`Unsupported ONNX data type: ${t}`);let n=this.tensorManager.registerTensor(e,r,o,s);return Lt("verbose",()=>`[WebNN] registerMLTensor {tensor: ${r}, dataType: ${o}, dimensions: ${s}} -> {tensorId: ${n}}`),n}registerMLConstant(e,r,t,s,o,n,i=!1){if(!n)throw new Error("External mounted files are not available.");let a=e;e.startsWith("./")&&(a=e.substring(2));let l=n.get(a);if(!l)throw new Error(`File with name ${a} not found in preloaded files.`);if(r+t>l.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let c=l.slice(r,r+t).buffer,p;switch(o.dataType){case"float32":p=new Float32Array(c);break;case"float16":p=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(c):new Uint16Array(c);break;case"int32":p=new Int32Array(c);break;case"uint32":p=new Uint32Array(c);break;case"int64":i?(p=Uc(new Uint8Array(c),!1),o.dataType="int32"):p=new BigInt64Array(c);break;case"uint64":p=new BigUint64Array(c);break;case"int8":p=new Int8Array(c);break;case"int4":case"uint4":case"uint8":p=new Uint8Array(c);break;default:throw new Error(`Unsupported data type: ${o.dataType} in creating WebNN Constant from external data.`)}return Lt("verbose",()=>`[WebNN] registerMLConstant {dataType: ${o.dataType}, shape: ${o.shape}}} ${i?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),s.constant(o,p)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,r){let t=this.sessionGraphInputs.get(e);return t?t.includes(r):!1}isInt64Supported(e){var r;return!!((r=this.mlContextBySessionId.get(e))!=null&&r.opSupportLimits().input.dataTypes.includes("int64"))}flush(){}}}),fu=Ve(()=>{}),sc,Qi,Xi,Mf,bf,nc,Wc,yf,hb,Ex=Ve(()=>{Vs(),fu(),sc=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Qi=[],Xi=e=>Math.ceil(Number(e)/16)*16,Mf=e=>{for(let r=0;r<Qi.length;r++){let t=Qi[r];if(e<=t)return t}return Math.ceil(e/16)*16},bf=1,nc=()=>bf++,Wc=async(e,r,t,s)=>{let o=Xi(t),n=e.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let i=e.getCommandEncoder();e.endComputePass(),i.copyBufferToBuffer(r,0,n,0,o),e.flush(),await n.mapAsync(GPUMapMode.READ);let a=n.getMappedRange();if(s){let l=s();return l.set(new Uint8Array(a,0,t)),l}else return new Uint8Array(a.slice(0,t))}finally{n.destroy()}},yf=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[r]of sc)Qi.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(e,r){let t=r.buffer,s=r.byteOffset,o=r.byteLength,n=Xi(o),i=this.storageCache.get(e);if(!i)throw new Error("gpu data for uploading does not exist");if(Number(i.originalSize)!==o)throw new Error(`inconsistent data size. gpu data size=${i.originalSize}, data size=${o}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=a.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,s,o)),a.unmap();let c=this.backend.device.createCommandEncoder();c.copyBufferToBuffer(a,0,i.gpuData.buffer,0,n),this.backend.device.queue.submit([c.finish()]),a.destroy(),Lt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,r){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let o=Xi(t.originalSize),n=this.backend.getCommandEncoder();this.backend.endComputePass(),n.copyBufferToBuffer(t.gpuData.buffer,0,s.gpuData.buffer,0,o)}registerExternalBuffer(e,r,t){let s;if(t){if(s=t[0],e===t[1])return Lt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else s=nc();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:e},originalSize:r}),Lt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),Lt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=Mf(e),s,o=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,n=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(o||n){let a=(o?this.freeBuffers:this.freeUniformBuffers).get(t);a?a.length>0?s=a.pop():s=this.backend.device.createBuffer({size:t,usage:r}):s=this.backend.device.createBuffer({size:t,usage:r})}else s=this.backend.device.createBuffer({size:t,usage:r});let i={id:nc(),type:0,buffer:s};return this.storageCache.set(i.id,{gpuData:i,originalSize:Number(e)}),Lt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${i.id}`),i}get(e){var r;return(r=this.storageCache.get(e))==null?void 0:r.gpuData}release(e){let r=typeof e=="bigint"?Number(e):e,t=this.storageCache.get(r);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return Lt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,r){let t=this.storageCache.get(Number(e));if(!t)throw new Error("data does not exist");await Wc(this.backend,t.gpuData.buffer,t.originalSize,r)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let r=sc.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let t=this.freeBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let t=this.freeUniformBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let r of this.buffersPending)e.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let r=this.capturedPendingBuffers.get(e);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(Lt("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},hb=(...e)=>new yf(...e)}),vf,Ut,dr=Ve(()=>{vf=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Ut=e=>new vf(e)}),no,Ji,Fr,Hr,ct,lr,Gc,ro,nn,lt,zo,$e,at,_b,gu,xf,fb,Pt=Ve(()=>{gt(),Et(),no=64,Ji=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},Fr=(e,r=1)=>{let t=Ji(e,r);return typeof t=="string"?t:t[0]},Hr=(e,r=1)=>{let t=Ji(e,r);return typeof t=="string"?t:t[1]},ct=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:ye.computeStrides(t)})}),r},lr=e=>e%4===0?4:e%2===0?2:1,Gc=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,ro=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}<f32>(${t})`,nn=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,lt=(e,r,t,s)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?s==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:s==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,zo=(e,r,t,s,o)=>{let n=typeof t=="number",i=n?t:t.length,a=[...new Array(i).keys()],l=i<2?"u32":i<=4?`vec${i}<u32>`:`array<u32, ${i}>`,c=Ji(r,o),p=typeof c=="string"?c:c[1],d=typeof c=="string"?c:c[0],u={indices:l,value:p,storage:d,tensor:r},f=j=>typeof j=="string"?j:`${j}u`,_={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},b=n?"uniforms.":"",k=`${b}${e}_shape`,g=`${b}${e}_strides`,M="";for(let j=0;j<i-1;j++)M+=`
    let dim${j} = current / ${lt(g,j,i)};
    let rest${j} = current % ${lt(g,j,i)};
    indices[${j}] = dim${j};
    current = rest${j};
    `;M+=`indices[${i-1}] = current;`;let $=i<2?"":`
  fn o2i_${e}(offset: u32) -> ${u.indices} {
    var indices: ${u.indices};
    var current = offset;
    ${M}
    return indices;
  }`,v=j=>(_.offsetToIndices=!0,i<2?j:`o2i_${e}(${j})`),y=[];if(i>=2)for(let j=i-1;j>=0;j--)y.push(`${lt(g,j,i)} * (indices[${j}])`);let T=i<2?"":`
  fn i2o_${e}(indices: ${u.indices}) -> u32 {
    return ${y.join("+")};
  }`,x=j=>(_.indicesToOffset=!0,i<2?j:`i2o_${e}(${j})`),P=(...j)=>i===0?"0u":`${u.indices}(${j.map(f).join(",")})`,O=(j,F)=>i<2?`${j}`:`${lt(j,F,i)}`,L=(j,F,U)=>i<2?`${j}=${U};`:`${lt(j,F,i)}=${U};`,G={},K=(j,F)=>{_.broadcastedIndicesToOffset=!0;let U=`${F.name}broadcastedIndicesTo${e}Offset`;if(U in G)return`${U}(${j})`;let se=[];for(let _e=i-1;_e>=0;_e--){let ie=F.indicesGet("outputIndices",_e+F.rank-i);se.push(`${O(g,_e)} * (${ie} % ${O(k,_e)})`)}return G[U]=`fn ${U}(outputIndices: ${F.type.indices}) -> u32 {
             return ${se.length>0?se.join("+"):"0u"};
           }`,`${U}(${j})`},R=(j,F)=>(()=>{if(u.storage===u.value)return`${e}[${j}]=${F};`;if(u.storage==="vec2<u32>"&&u.value==="i32")return`${e}[${j}]=vec2<u32>(u32(${F}), select(0u, 0xFFFFFFFFu, ${F} < 0));`;if(u.storage==="vec2<u32>"&&u.value==="u32")return`${e}[${j}]=vec2<u32>(u32(${F}), 0u);`;if(u.storage==="u32"&&u.value==="vec4<bool>")return`${e}[${j}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${F}));`;throw new Error(`not supported combination of storage type ${u.storage} and value type ${u.value} yet`)})(),te=j=>(()=>{if(u.storage===u.value)return`${e}[${j}]`;if(u.storage==="vec2<u32>"&&u.value==="i32")return`i32(${e}[${j}].x)`;if(u.storage==="vec2<u32>"&&u.value==="u32")return`u32(${e}[${j}].x)`;if(u.storage==="u32"&&u.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${j}] & 0xFFu), bool(${e}[${j}] & 0xFF00u), bool(${e}[${j}] & 0xFF0000u), bool(${e}[${j}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${u.storage} and value type ${u.value} yet`)})(),H=i<2?"":`
  fn get_${e}ByIndices(indices: ${u.indices}) -> ${p} {
    return ${te(`i2o_${e}(indices)`)};
  }`,ee=i<2?"":(()=>{let j=a.map(U=>`d${U}: u32`).join(", "),F=a.map(U=>`d${U}`).join(", ");return`
  fn get_${e}(${j}) -> ${p} {
    return get_${e}ByIndices(${P(F)});
  }`})(),Z=(...j)=>{if(j.length!==i)throw new Error(`indices length must be ${i}`);let F=j.map(f).join(",");return i===0?te("0u"):i===1?te(F[0]):(_.get=!0,_.getByIndices=!0,_.indicesToOffset=!0,`get_${e}(${F})`)},ne=j=>i<2?te(j):(_.getByIndices=!0,_.indicesToOffset=!0,`get_${e}ByIndices(${j})`),he=i<2?"":`
  fn set_${e}ByIndices(indices: ${u.indices}, value: ${p}) {
    ${R(`i2o_${e}(indices)`,"value")}
  }`,ue=i<2?"":(()=>{let j=a.map(U=>`d${U}: u32`).join(", "),F=a.map(U=>`d${U}`).join(", ");return`
  fn set_${e}(${j}, value: ${p}) {
    set_${e}ByIndices(${P(F)}, value);
  }`})();return{impl:()=>{let j=[],F=!1;return _.offsetToIndices&&(j.push($),F=!0),_.indicesToOffset&&(j.push(T),F=!0),_.broadcastedIndicesToOffset&&(Object.values(G).forEach(U=>j.push(U)),F=!0),_.set&&(j.push(ue),F=!0),_.setByIndices&&(j.push(he),F=!0),_.get&&(j.push(ee),F=!0),_.getByIndices&&(j.push(H),F=!0),!n&&F&&j.unshift(`const ${k} = ${u.indices}(${t.join(",")});`,`const ${g} = ${u.indices}(${ye.computeStrides(t).join(",")});`),j.join(`
`)},type:u,offsetToIndices:v,indicesToOffset:x,broadcastedIndicesToOffset:K,indices:P,indicesGet:O,indicesSet:L,set:(...j)=>{if(j.length!==i+1)throw new Error(`indices length must be ${i}`);let F=j[i];if(typeof F!="string")throw new Error("value must be string");let U=j.slice(0,i).map(f).join(",");return i===0?R("0u",F):i===1?R(U[0],F):(_.set=!0,_.setByIndices=!0,_.indicesToOffset=!0,`set_${e}(${U}, ${F})`)},setByOffset:R,setByIndices:(j,F)=>i<2?R(j,F):(_.setByIndices=!0,_.indicesToOffset=!0,`set_${e}ByIndices(${j}, ${F});`),get:Z,getByOffset:te,getByIndices:ne,usage:s,name:e,strides:g,shape:k,rank:i}},$e=(e,r,t,s=1)=>zo(e,r,t,"input",s),at=(e,r,t,s=1)=>zo(e,r,t,"output",s),_b=(e,r,t)=>zo(e,r,t,"atomicOutput",1),gu=(e,r,t,s=1)=>zo(e,r,t,"internal",s),xf=class{constructor(e,r){this.normalizedDispatchGroup=e,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=no){let r=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],s=typeof e=="number"?1:e[2];if(r>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||s>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*t*s>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let o=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,n=o?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,i=o?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*t*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${t}, ${s})
  fn main(${n}) {
    ${i}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,r){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",s=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${r}) var<storage, ${t}> ${e.name}: array<${s}>;`}declareVariables(...e){return e.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(e,r,t=1){return this.uniforms.push({name:e,type:r,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:r,type:t,length:s}of this.uniforms)if(s&&s>4)t==="f16"?e.push(`@align(16) ${r}:array<mat2x4<${t}>, ${Math.ceil(s/8)}>`):e.push(`${r}:array<vec4<${t}>, ${Math.ceil(s/4)}>`);else{let o=s==null||s===1?t:`vec${s}<${t}>`;e.push(`${r}:${o}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[e(r.type),r.length??1])}},fb=(e,r)=>new xf(e,r)}),Tf,oc,Ef,Pf,Cf,Sf,os,gb,wb,on=Ve(()=>{gt(),Et(),dr(),Pt(),Tf=(e,r)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(r.length!==0&&r.length!==e[0].dims.length)throw new Error(`perm size ${r.length} does not match input rank ${e[0].dims.length}`)},oc=(e,r)=>r.length!==0?r:[...new Array(e).keys()].reverse(),Ef=(e,r)=>ye.sortBasedOnPerm(e,oc(e.length,r)),Pf=(e,r,t,s)=>{let o=`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`;for(let n=0;n<r;++n)o+=`a[${e[n]}]=i[${n}];`;return o+="return a;}"},Cf=(e,r)=>{let t=[],s=[];for(let o=0;o<e.length;++o)e[o]!==1&&t.push(e[o]),e[r[o]]!==1&&s.push(r[o]);return{newShape:t,newPerm:s}},Sf=(e,r)=>{let t=0;for(let s=0;s<e.length;++s)if(r[e[s]]!==1){if(e[s]<t)return!1;t=e[s]}return!0},os=(e,r)=>{let t=e.dataType,s=e.dims.length,o=oc(s,r),n=Ef(e.dims,o),i=e.dims,a=n,l=s<2||Sf(o,e.dims),c;if(l)return c=_=>{let b=$e("input",t,i,4),k=at("output",t,a,4);return`
  ${_.registerUniform("output_size","u32").declareVariables(b,k)}
  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let _=ye.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(_/64/4)},programUniforms:[{type:12,data:Math.ceil(_/4)}]}},getShaderSource:c};let{newShape:p,newPerm:d}=Cf(e.dims,o),u=ye.areEqual(d,[2,3,1]),f=ye.areEqual(d,[3,1,2]);if(p.length===2||u||f){i=u?[p[0],p[1]*p[2]]:f?[p[0]*p[1],p[2]]:p,a=[i[1],i[0]];let _=16;return c=b=>{let k=$e("a",t,i.length),g=at("output",t,a.length);return`
  ${b.registerUniform("output_size","u32").declareVariables(k,g)}
  var<workgroup> tile : array<array<${g.type.value}, ${_+1}>, ${_}>;
  ${b.mainStart([_,_,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${_} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${_}u + local_id.x;
    let input_row = workgroup_id_x * ${_}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${k.getByIndices(`${k.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${_}u + local_id.x;
    let output_row = workgroup_id_y * ${_}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${g.setByIndices(`${g.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let b=ye.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(a[1]/_),y:Math.ceil(a[0]/_)},programUniforms:[{type:12,data:b},...ct(i,a)]}},getShaderSource:c}}return c=_=>{let b=$e("a",t,i.length),k=at("output",t,a.length);return`
  ${_.registerUniform("output_size","u32").declareVariables(b,k)}

  ${Pf(o,s,b,k)}

  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${k.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${k.setByOffset("global_idx",b.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let _=ye.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:[{type:12,data:_},...ct(i,a)]}},getShaderSource:c}},gb=(e,r)=>{Tf(e.inputs,r.perm),e.compute(os(e.inputs[0],r.perm))},wb=e=>Ut({perm:e.perm})}),$f,kf,If,Af,Ff,Of,Df,Lf,zf,Bf,Ms,Mb,bb,yb,vb,xb,Tb,Eb,Pb,Cb,Sb,Px=Ve(()=>{gt(),Et(),Pt(),wu(),on(),$f={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},kf={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},If={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Af={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Ff=(e,r)=>{let t=[];for(let s=r-e;s<r;++s)t.push(s);return t},Of=(e,r)=>{let t=[],s=e.length;for(let n=0;n<s;n++)r.indexOf(n)===-1&&t.push(e[n]);let o=r.map(n=>e[n]);return[t,o]},Df=(e,r)=>{let t=e.length+r.length,s=[],o=0;for(let n=0;n<t;n++)r.indexOf(n)===-1?s.push(e[o++]):s.push(1);return s},Lf=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},zf=(e,r)=>{let t=[];if(!Lf(e,r)){for(let s=0;s<r;++s)e.indexOf(s)===-1&&t.push(s);e.forEach(s=>t.push(s))}return t},Bf=(e,r,t,s,o,n,i)=>{let a=t[0].dims,l=ye.size(n),c=ye.size(i),p=$e("_A",t[0].dataType,a),d=at("output",o,n),u=64;l===1&&(u=256);let f=`
          var<workgroup> aBestValues : array<f32, ${u}>;
       `,_=b=>`
        ${b.registerUniform("reduceSize","u32").declareVariables(p,d)}
        ${f}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${b.mainStart(u)}

          let outputIndex = global_idx / ${u};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${If[s]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${u}) {
           let candidate = f32(${p.getByOffset("offset + k")});
           bestValue = ${$f[s]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${u}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${kf[s]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${d.setByOffset("outputIndex",`${s==="mean"?`${d.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${d.type.storage}(${Af[s]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${r};${u}`,inputDependencies:["type"]},getShaderSource:_,getRunData:()=>({outputs:[{dims:n,dataType:o}],dispatchGroup:{x:l},programUniforms:[{type:12,data:c}]})}},Ms=(e,r,t,s)=>{let o=e.inputs.length===1?t:Kc(e.inputs,t),n=o.axes;n.length===0&&!o.noopWithEmptyAxes&&(n=e.inputs[0].dims.map((f,_)=>_));let i=ye.normalizeAxes(n,e.inputs[0].dims.length),a=i,l=e.inputs[0],c=zf(a,e.inputs[0].dims.length);c.length>0&&(l=e.compute(os(e.inputs[0],c),{inputs:[0],outputs:[-1]})[0],a=Ff(a.length,l.dims.length));let[p,d]=Of(l.dims,a),u=p;o.keepDims&&(u=Df(p,i)),e.compute(Bf(r,o.cacheKey,[l],s,e.inputs[0].dataType,u,d),{inputs:[l]})},Mb=(e,r)=>{Ms(e,"ReduceMeanShared",r,"mean")},bb=(e,r)=>{Ms(e,"ReduceL1Shared",r,"l1")},yb=(e,r)=>{Ms(e,"ReduceL2Shared",r,"l2")},vb=(e,r)=>{Ms(e,"ReduceLogSumExpShared",r,"logSumExp")},xb=(e,r)=>{Ms(e,"ReduceMaxShared",r,"max")},Tb=(e,r)=>{Ms(e,"ReduceMinShared",r,"min")},Eb=(e,r)=>{Ms(e,"ReduceProdShared",r,"prod")},Pb=(e,r)=>{Ms(e,"ReduceSumShared",r,"sum")},Cb=(e,r)=>{Ms(e,"ReduceSumSquareShared",r,"sumSquare")},Sb=(e,r)=>{Ms(e,"ReduceLogSumShared",r,"logSum")}}),bs,Rf,ma,Kc,ys,jf,Nf,Vf,Uf,Wf,Gf,Kf,Hf,qf,Qf,vs,$b,kb,Ib,Ab,Fb,Ob,Db,Lb,zb,Bb,wu=Ve(()=>{gt(),Et(),dr(),Pt(),Px(),bs=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Rf=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],ma=(e,r,t,s,o,n,i=!1,a=!1)=>{let l=[],c=t[0].dims,p=c.length,d=ye.normalizeAxes(o,p),u=!a&&d.length===0;c.forEach((b,k)=>{u||d.indexOf(k)>=0?i&&l.push(1):l.push(b)});let f=l.length,_=ye.size(l);return{name:e,shaderCache:r,getShaderSource:b=>{let k=[],g=$e("_A",t[0].dataType,p),M=at("output",n,f),$=s(g,M,d),v=$[2];for(let y=0,T=0;y<p;y++)u||d.indexOf(y)>=0?(i&&T++,v=`for(var j${y}: u32 = 0; j${y} < ${c[y]}; j${y}++) {
                  ${$[2].includes("last_index")?`let last_index = j${y};`:""}
                  ${g.indicesSet("input_indices",y,`j${y}`)}
                  ${v}
                }`):(k.push(`${g.indicesSet("input_indices",y,M.indicesGet("output_indices",T))};`),T++);return`

        ${b.registerUniform("output_size","u32").declareVariables(g,M)}

        ${b.mainStart()}
          ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${g.type.indices};
          let output_indices = ${M.offsetToIndices("global_idx")};

          ${k.join(`
`)}
          ${$[0]}       // init ops for reduce max/min
          ${$[1]}
          ${v}
          ${$[3]}
          ${$.length===4?M.setByOffset("global_idx","value"):$.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:n}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:[{type:12,data:_},...ct(c,l)]})}},Kc=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),Ut({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},ys=(e,r,t,s)=>{let o=e.inputs,n=o.length===1?t:Kc(o,t);e.compute(ma(r,{hint:n.cacheKey,inputDependencies:["rank"]},[o[0]],n.noopWithEmptyAxes&&n.axes.length===0?Rf:s,n.axes,o[0].dataType,n.keepDims,n.noopWithEmptyAxes),{inputs:[0]})},jf=(e,r)=>{bs(e.inputs),ys(e,"ReduceLogSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},Nf=(e,r)=>{bs(e.inputs),ys(e,"ReduceL1",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},Vf=(e,r)=>{bs(e.inputs),ys(e,"ReduceL2",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Uf=(e,r)=>{bs(e.inputs),ys(e,"ReduceLogSumExp",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},Wf=(e,r)=>{bs(e.inputs),ys(e,"ReduceMax",r,(t,s,o)=>{let n=[];for(let i=0;i<t.rank;i++)(o.indexOf(i)>=0||o.length===0)&&n.push(t.indicesSet("input_indices",i,0));return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},Gf=(e,r)=>{bs(e.inputs),ys(e,"ReduceMean",r,(t,s,o)=>{let n=1;for(let i=0;i<t.rank;i++)(o.indexOf(i)>=0||o.length===0)&&(n*=e.inputs[0].dims[i]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${n});`]})},Kf=(e,r)=>{bs(e.inputs),ys(e,"ReduceMin",r,(t,s,o)=>{let n=[];for(let i=0;i<t.rank;i++)(o.indexOf(i)>=0||o.length===0)&&n.push(`input_indices[${i}] = 0;`);return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},Hf=(e,r)=>{bs(e.inputs),ys(e,"ReduceProd",r,(t,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},qf=(e,r)=>{bs(e.inputs),ys(e,"ReduceSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},Qf=(e,r)=>{bs(e.inputs),ys(e,"ReduceSumSquare",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},vs=(e,r,t)=>{if(r.length===0)return t;let s=1,o=1;for(let n=0;n<r.length;n++)r.indexOf(n)===-1?s*=e[n]:o*=e[n];return o<32&&s>1024},$b=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Gf(e,r):Mb(e,r)},kb=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Nf(e,r):bb(e,r)},Ib=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Vf(e,r):yb(e,r)},Ab=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Uf(e,r):vb(e,r)},Fb=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Wf(e,r):xb(e,r)},Ob=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Kf(e,r):Tb(e,r)},Db=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Hf(e,r):Eb(e,r)},Lb=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?qf(e,r):Pb(e,r)},zb=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Qf(e,r):Cb(e,r)},Bb=(e,r)=>{vs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?jf(e,r):Sb(e,r)}}),ic,Rb,jb,Hc,Cx=Ve(()=>{gt(),dr(),wu(),ic=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Rb=(e,r)=>{ic(e.inputs);let t=(s,o,n)=>{let i=[];for(let a=0;a<s.rank;a++)(n.indexOf(a)>=0||n.length===0)&&i.push(`input_indices[${a}] = 0;`);return[`${i.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};e.compute(ma("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},jb=(e,r)=>{ic(e.inputs);let t=(s,o,n)=>{let i=[];for(let a=0;a<s.rank;a++)(n.indexOf(a)>=0||n.length===0)&&i.push(`input_indices[${a}] = 0;`);return[`${i.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};e.compute(ma("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Hc=e=>Ut(e)}),Xf,Yi,Jf,Yf,Zf,Jo,eg,Nb,Mu=Ve(()=>{gt(),Et(),fu(),Pt(),Xf=(e,r)=>{let t=e[0],s=e[1],o=e[2],n=e[3],i=e[4],a=e[5];if(i&&a)throw new Error("Attention cannot have both past and attention_bias");if(t.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=t.dims[0],c=t.dims[1],p=t.dims[2];if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(s.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(s.dims[0]!==p)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(o.dims[0]!==s.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let d=o.dims[0]/3,u=d,f=u;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let $ of r.qkvHiddenSizes)if($%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");d=r.qkvHiddenSizes[0],u=r.qkvHiddenSizes[1],f=r.qkvHiddenSizes[2]}let _=c;if(d!==u)throw new Error("qkv_hidden_sizes first element should be same as the second");if(o.dims[0]!==d+u+f)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let b=0;if(i){if(u!==f)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(i.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(i.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(i.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(i.dims[2]!==r.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(i.dims[4]!==u/r.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(b=i.dims[3])}let k=_+b,g=-1,M=0;if(n)throw new Error("Mask not supported");if(i)throw new Error("past is not supported");if(a){if(a.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(a.dims[0]!==l||a.dims[1]!==r.numHeads||a.dims[2]!==c||a.dims[3]!==k)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:c,pastSequenceLength:b,kvSequenceLength:_,totalSequenceLength:k,maxSequenceLength:g,inputHiddenSize:p,hiddenSize:d,vHiddenSize:f,headSize:Math.floor(d/r.numHeads),vHeadSize:Math.floor(f/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:M,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Yi=(e,r,t)=>r&&e?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e==null?void 0:e.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${t?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,Jf=(e,r,t,s,o,n,i,a)=>{let l=lr(i?1:n),c=64,p=n/l;p<c&&(c=32);let d=Math.ceil(n/l/c),u=[{type:12,data:r},{type:12,data:t},{type:12,data:s},{type:12,data:o},{type:12,data:p},{type:12,data:d}],f=Fr(e.dataType,l),_=Hr(1,l),b=["type"];i&&b.push("type"),a&&b.push("type");let k=g=>{let M=at("x",e.dataType,e.dims,l),$=[M],v=i?$e("seq_lens",i.dataType,i.dims):void 0;v&&$.push(v);let y=a?$e("total_sequence_length_input",a.dataType,a.dims):void 0;y&&$.push(y);let T=Hr(e.dataType),x=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${c}>;
  var<workgroup> thread_sum: array<f32, ${c}>;
  ${g.registerUniforms(x).declareVariables(...$)}
  ${g.mainStart([c,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${Yi(v,y,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${c}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${i?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${_}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${_}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${c}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${_}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${_}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${c}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${M.type.value}(${T}(1.0) / ${T}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${_}(x[offset + i]);
        x[offset + i] = ${M.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${i?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${M.type.value}(${T}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${c};${f};${l}`,inputDependencies:b},getShaderSource:k,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:o,z:r*t},programUniforms:u})}},Yf=(e,r,t,s,o,n,i,a,l)=>{let c=i+n.kvSequenceLength,p=[n.batchSize,n.numHeads,n.sequenceLength,c],d=e>1&&s,u=n.kvNumHeads?n.kvNumHeads:n.numHeads,f=d?[n.batchSize,u,c,n.headSize]:void 0,_=n.nReps?n.nReps:1,b=n.scale===0?1/Math.sqrt(n.headSize):n.scale,k=lr(n.headSize),g=n.headSize/k,M=12,$={x:Math.ceil(c/M),y:Math.ceil(n.sequenceLength/M),z:n.batchSize*n.numHeads},v=[{type:12,data:n.sequenceLength},{type:12,data:g},{type:12,data:c},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:1,data:b},{type:12,data:i},{type:12,data:n.kvSequenceLength},{type:12,data:_}],y=d&&s&&ye.size(s.dims)>0,T=["type","type"];y&&T.push("type"),o&&T.push("type"),a&&T.push("type"),l&&T.push("type");let x=[{dims:p,dataType:r.dataType,gpuDataType:0}];d&&x.push({dims:f,dataType:r.dataType,gpuDataType:0});let P=O=>{let L=$e("q",r.dataType,r.dims,k),G=$e("key",t.dataType,t.dims,k),K=[L,G];if(y){let he=$e("past_key",s.dataType,s.dims,k);K.push(he)}o&&K.push($e("attention_bias",o.dataType,o.dims));let R=a?$e("seq_lens",a.dataType,a.dims):void 0;R&&K.push(R);let te=l?$e("total_sequence_length_input",l.dataType,l.dims):void 0;te&&K.push(te);let H=at("output",r.dataType,p),ee=[H];d&&ee.push(at("present_key",r.dataType,f,k));let Z=Hr(1,k),ne=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${M}u;

  var<workgroup> tileQ: array<${L.type.storage}, ${M*M}>;
  var<workgroup> tileK: array<${L.type.storage}, ${M*M}>;
  ${O.registerUniforms(ne).declareVariables(...K,...ee)}
  ${O.mainStart([M,M,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${_===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${_===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${Yi(R,te,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${y&&d?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${d?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${Z}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${y&&d?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${d?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${Z}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(k){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${k}`)}})()};
        output[outputIdx] = ${H.type.value} (sum * uniforms.alpha) + ${o?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${k};${o!==void 0};${s!==void 0};${e}`,inputDependencies:T},getRunData:()=>({outputs:x,dispatchGroup:$,programUniforms:v}),getShaderSource:P}},Zf=(e,r,t,s,o,n,i=void 0,a=void 0)=>{let l=n+o.kvSequenceLength,c=o.nReps?o.nReps:1,p=o.vHiddenSize*c,d=e>1&&s,u=o.kvNumHeads?o.kvNumHeads:o.numHeads,f=d?[o.batchSize,u,l,o.headSize]:void 0,_=[o.batchSize,o.sequenceLength,p],b=12,k={x:Math.ceil(o.vHeadSize/b),y:Math.ceil(o.sequenceLength/b),z:o.batchSize*o.numHeads},g=[{type:12,data:o.sequenceLength},{type:12,data:l},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.headSize},{type:12,data:p},{type:12,data:n},{type:12,data:o.kvSequenceLength},{type:12,data:c}],M=d&&s&&ye.size(s.dims)>0,$=["type","type"];M&&$.push("type"),i&&$.push("type"),a&&$.push("type");let v=[{dims:_,dataType:r.dataType,gpuDataType:0}];d&&v.push({dims:f,dataType:r.dataType,gpuDataType:0});let y=T=>{let x=$e("probs",r.dataType,r.dims),P=$e("v",t.dataType,t.dims),O=[x,P];M&&O.push($e("past_value",s.dataType,s.dims));let L=i?$e("seq_lens",i.dataType,i.dims):void 0;i&&O.push(L);let G=a?$e("total_sequence_length_input",a.dataType,a.dims):void 0;a&&O.push(G);let K=[at("output",r.dataType,_)];d&&K.push(at("present_value",r.dataType,f));let R=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${b}u;
  var<workgroup> tileQ: array<${x.type.value}, ${b*b}>;
  var<workgroup> tileV: array<${x.type.value}, ${b*b}>;
  ${T.registerUniforms(R).declareVariables(...O,...K)}
  ${T.mainStart([b,b,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${c===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${c===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${Yi(L,G,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${M&&d?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${d?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${x.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${M&&d?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${d?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${s!==void 0};${e}`,inputDependencies:$},getRunData:()=>({outputs:v,dispatchGroup:k,programUniforms:g}),getShaderSource:y}},Jo=(e,r,t,s,o,n,i,a,l,c,p=void 0,d=void 0)=>{let u=Math.min(e.outputCount,1+(i?1:0)+(a?1:0)),f=u>1?c.pastSequenceLength:0,_=f+c.kvSequenceLength,b=l&&ye.size(l.dims)>0?l:void 0,k=[r,t];u>1&&i&&ye.size(i.dims)>0&&k.push(i),b&&k.push(b),p&&k.push(p),d&&k.push(d);let g=e.compute(Yf(u,r,t,i,b,c,f,p,d),{inputs:k,outputs:u>1?[-1,1]:[-1]})[0];e.compute(Jf(g,c.batchSize,c.numHeads,f,c.sequenceLength,_,p,d),{inputs:p&&d?[g,p,d]:[g],outputs:[]});let M=[g,s];u>1&&a&&ye.size(a.dims)>0&&M.push(a),p&&M.push(p),d&&M.push(d),e.compute(Zf(u,g,s,a,c,f,p,d),{inputs:M,outputs:u>1?[0,2]:[0]})},eg=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],s=r.sequenceLength,o=r.inputHiddenSize,n=r.headSize,i=12,a={x:Math.ceil(r.headSize/i),y:Math.ceil(r.sequenceLength/i),z:r.batchSize*r.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],c=[{type:12,data:s},{type:12,data:o},{type:12,data:n},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],p=d=>{let u=at("output_q",l[0].dataType,t),f=at("output_k",l[0].dataType,t),_=at("output_v",l[0].dataType,t),b=$e("input",l[0].dataType,l[0].dims),k=$e("weight",l[1].dataType,l[1].dims),g=$e("bias",l[2].dataType,l[2].dims),M=b.type.storage,$=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileInput: array<${M}, ${i*i}>;
  var<workgroup> tileWeightQ: array<${M}, ${i*i}>;
  var<workgroup> tileWeightK: array<${M}, ${i*i}>;
  var<workgroup> tileWeightV: array<${M}, ${i*i}>;
  ${d.registerUniforms($).declareVariables(b,k,g,u,f,_)}
  ${d.mainStart([i,i,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${M}(0);
    var valueK = ${M}(0);
    var valueV = ${M}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:c}),getShaderSource:p},{inputs:l,outputs:[-1,-1,-1]})},Nb=(e,r)=>{let t=Xf(e.inputs,r),[s,o,n]=eg(e,t);return Jo(e,s,o,n,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t)}}),tg,rg,sg,Vb,Sx=Ve(()=>{Ss(),gt(),Et(),dr(),Pt(),tg=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(s,o,n)=>{let i=o.length;if(i!==s.length)throw new Error(`${n}: num dimensions != ${i}`);o.forEach((a,l)=>{if(a!==s[l])throw new Error(`${n}: dim[${l}] do not match`)})};if(e[0].dims.length>1){let s=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,s,"Invalid input scale"),t(e[2].dims,s,"Invalid input B"),t(e[3].dims,s,"Invalid input mean"),t(e[4].dims,s,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},rg=(e,r)=>{let{epsilon:t,spatial:s,format:o}=r,n=e[0].dims,i=s?lr(n[n.length-1]):1,a=o==="NHWC"&&n.length>1?i:1,l=ye.size(n)/i,c=s,p=c?n.length:n,d=$e("x",e[0].dataType,e[0].dims,i),u=$e("scale",e[1].dataType,e[1].dims,a),f=$e("bias",e[2].dataType,e[2].dims,a),_=$e("inputMean",e[3].dataType,e[3].dims,a),b=$e("inputVar",e[4].dataType,e[4].dims,a),k=at("y",e[0].dataType,p,i),g=()=>{let $="";if(s)$=`let cOffset = ${n.length===1?"0u":o==="NHWC"?`outputIndices[${n.length-1}] / ${i}`:"outputIndices[1]"};`;else if(o==="NCHW")$=`
            ${k.indicesSet("outputIndices","0","0")}
            let cOffset = ${k.indicesToOffset("outputIndices")};`;else{$=`var cIndices = ${u.type.indices}(0);
                       cIndices[0] = outputIndices[${n.length-1}];`;for(let v=1;v<u.rank;v++)$+=`cIndices[${v}] = outputIndices[${v}];`;$+=`let cOffset = ${u.indicesToOffset("cIndices")};`}return $},M=$=>`
  const epsilon = ${t};
  ${$.registerUniform("outputSize","u32").declareVariables(d,u,f,_,b,k)}
  ${$.mainStart()}
  ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${k.offsetToIndices(`global_idx * ${i}`)};
    ${g()}
    let scale = ${u.getByOffset("cOffset")};
    let bias = ${f.getByOffset("cOffset")};
    let inputMean = ${_.getByOffset("cOffset")};
    let inputVar = ${b.getByOffset("cOffset")};
    let x = ${d.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${k.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${s}_${i}`,inputDependencies:c?["rank","type","type","type","type"]:void 0},getShaderSource:M,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c?[{type:12,data:l},...ct(n)]:[{type:12,data:l}]})}},sg=e=>Ut(e),Vb=(e,r)=>{let{inputs:t,outputCount:s}=e,o=sg({...r,outputCount:s});if(Zt.webgpu.validateInputContent&&tg(t,o),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(rg(t,o))}}),ng,og,Ub,$x=Ve(()=>{Et(),Pt(),ng=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},og=e=>{let r=e[0].dims,t=e[0].dims[2],s=ye.size(r)/4,o=e[0].dataType,n=$e("input",o,r,4),i=$e("bias",o,[t],4),a=$e("residual",o,r,4),l=at("output",o,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:c=>`
  const channels = ${t}u / 4;
  ${c.declareVariables(n,i,a,l)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let value = ${n.getByOffset("global_idx")}
      + ${i.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},Ub=e=>{ng(e.inputs),e.compute(og(e.inputs))}}),ig,jt,Wb,Gb,Kb,Hb,qb,Qb,Xb,Jb,Yb,ag,Zb,ey,ty,ry,Ko,sy,ca,ny,oy,iy,ay,ly,cy,uy,dy,py,my,hy,_y,fy,gy,wy,My,ac,by,qc,Qc,yy,vy,xy,lg,cg,Ty,bu=Ve(()=>{gt(),Et(),dr(),Pt(),ig=(e,r,t,s,o,n,i)=>{let a=Math.ceil(r/4),l="";typeof o=="string"?l=`${o}(a)`:l=o("a");let c=$e("inputData",t,[a],4),p=at("outputData",s,[a],4),d=[{name:"vec_size",type:"u32"}];return i&&d.push(...i),`
      ${e.registerUniforms(d).declareVariables(c,p)}

  ${n??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${c.getByOffset("global_idx")};
    ${p.setByOffset("global_idx",l)}
  }`},jt=(e,r,t,s,o,n=e.dataType,i,a)=>{let l=[{type:12,data:Math.ceil(ye.size(e.dims)/4)}];return i&&l.push(...i),{name:r,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:c=>ig(c,ye.size(e.dims),e.dataType,n,t,s,a),getRunData:c=>({outputs:[{dims:e.dims,dataType:n}],dispatchGroup:{x:Math.ceil(ye.size(c[0].dims)/64/4)},programUniforms:l})}},Wb=e=>{e.compute(jt(e.inputs[0],"Abs","abs"))},Gb=e=>{e.compute(jt(e.inputs[0],"Acos","acos"))},Kb=e=>{e.compute(jt(e.inputs[0],"Acosh","acosh"))},Hb=e=>{e.compute(jt(e.inputs[0],"Asin","asin"))},qb=e=>{e.compute(jt(e.inputs[0],"Asinh","asinh"))},Qb=e=>{e.compute(jt(e.inputs[0],"Atan","atan"))},Xb=e=>{e.compute(jt(e.inputs[0],"Atanh","atanh"))},Jb=e=>Ut(e),Yb=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}e.compute(jt(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},ag=e=>{let r,t,s=e.length>=2&&e[1].data!==0,o=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:r=s?e[1].getFloat32Array()[0]:-34028234663852886e22,t=o?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=s?e[1].getUint16Array()[0]:64511,t=o?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Ut({min:r,max:t})},Zb=(e,r)=>{let t=r||ag(e.inputs),s=Hr(e.inputs[0].dataType);e.compute(jt(e.inputs[0],"Clip",o=>`clamp(${o}, vec4<${s}>(uniforms.min), vec4<${s}>(uniforms.max))`,void 0,t.cacheKey,void 0,[{type:e.inputs[0].dataType,data:t.min},{type:e.inputs[0].dataType,data:t.max}],[{name:"min",type:s},{name:"max",type:s}]),{inputs:[0]})},ey=e=>{e.compute(jt(e.inputs[0],"Ceil","ceil"))},ty=e=>{e.compute(jt(e.inputs[0],"Cos","cos"))},ry=e=>{e.compute(jt(e.inputs[0],"Cosh","cosh"))},Ko=e=>Ut(e),sy=(e,r)=>{let t=Hr(e.inputs[0].dataType);e.compute(jt(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`
  const elu_alpha_ = ${t}(${r.alpha});

  fn elu_f32(a: ${t}) -> ${t} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},ca=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,ny=e=>{let r=Hr(e.inputs[0].dataType);e.compute(jt(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,ca(r)))},oy=e=>{e.compute(jt(e.inputs[0],"Exp","exp"))},iy=e=>{e.compute(jt(e.inputs[0],"Floor","floor"))},ay=e=>{let r=Hr(e.inputs[0].dataType);e.compute(jt(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,ca(r)))},ly=(e,r)=>{let t=Hr(e.inputs[0].dataType);e.compute(jt(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},cy=e=>{e.compute(jt(e.inputs[0],"Not",r=>`!${r}`))},uy=e=>{e.compute(jt(e.inputs[0],"Neg",r=>`-${r}`))},dy=e=>{e.compute(jt(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},py=e=>{let r=Hr(e.inputs[0].dataType);e.compute(jt(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},my=e=>{e.compute(jt(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},hy=e=>Ut(e),_y=(e,r)=>{let t=Hr(e.inputs[0].dataType);e.compute(jt(e.inputs[0],"HardSigmoid",s=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${s} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},fy=e=>{e.compute(jt(e.inputs[0],"Sin","sin"))},gy=e=>{e.compute(jt(e.inputs[0],"Sinh","sinh"))},wy=e=>{e.compute(jt(e.inputs[0],"Sqrt","sqrt"))},My=e=>{e.compute(jt(e.inputs[0],"Tan","tan"))},ac=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,by=e=>{e.compute(jt(e.inputs[0],"Tanh",ac))},qc=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${ac("v")};
}
`,Qc=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,yy=e=>{let r=Hr(e.inputs[0].dataType);e.compute(jt(e.inputs[0],"FastGelu",Qc,qc(r),void 0,e.inputs[0].dataType))},vy=(e,r)=>{let t=Hr(e.inputs[0].dataType);return e.compute(jt(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},xy=e=>{e.compute(jt(e.inputs[0],"Log","log"))},lg=(e,r)=>`
const alpha = vec4<${e}>(${r});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,cg=e=>`quick_gelu_impl(${e})`,Ty=(e,r)=>{let t=Hr(e.inputs[0].dataType);e.compute(jt(e.inputs[0],"QuickGelu",cg,lg(t,r.alpha),r.cacheKey,e.inputs[0].dataType))}}),ug,dg,Ey,kx=Ve(()=>{Et(),Pt(),bu(),ug=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},dg=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=$e("input",e[0].dataType,e[0].dims,4),s=$e("bias",e[0].dataType,[e[0].dims[2]],4),o=at("output",e[0].dataType,r,4),n=ye.size(r)/4,i=Fr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:a=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${a.declareVariables(t,s,o)}

  ${ca(i)}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Ey=e=>{ug(e.inputs),e.compute(dg(e.inputs))}}),pg,mg,xs,Py,Cy,Sy,$y,ky,Iy,Ay,Fy,Oy,Dy,Ix=Ve(()=>{gt(),Et(),Pt(),pg=(e,r,t,s,o,n,i,a,l,c,p,d)=>{let u,f;typeof a=="string"?u=f=(M,$)=>`${a}((${M}),(${$}))`:typeof a=="function"?u=f=a:(u=a.scalar,f=a.vector);let _=at("outputData",p,s.length,4),b=$e("aData",l,r.length,4),k=$e("bData",c,t.length,4),g;if(o)if(n){let M=ye.size(r)===1,$=ye.size(t)===1,v=r.length>0&&r[r.length-1]%4===0,y=t.length>0&&t[t.length-1]%4===0;M||$?g=_.setByOffset("global_idx",f(M?`${b.type.value}(${b.getByOffset("0")}.x)`:b.getByOffset("global_idx"),$?`${k.type.value}(${k.getByOffset("0")}.x)`:k.getByOffset("global_idx"))):g=`
            let outputIndices = ${_.offsetToIndices("global_idx * 4u")};
            let offsetA = ${b.broadcastedIndicesToOffset("outputIndices",_)};
            let offsetB = ${k.broadcastedIndicesToOffset("outputIndices",_)};
            ${_.setByOffset("global_idx",f(i||v?b.getByOffset("offsetA / 4u"):`${b.type.value}(${b.getByOffset("offsetA / 4u")}[offsetA % 4u])`,i||y?k.getByOffset("offsetB / 4u"):`${k.type.value}(${k.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else g=_.setByOffset("global_idx",f(b.getByOffset("global_idx"),k.getByOffset("global_idx")));else{if(!n)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let M=($,v,y="")=>{let T=`aData[indexA${v}][componentA${v}]`,x=`bData[indexB${v}][componentB${v}]`;return`
            let outputIndices${v} = ${_.offsetToIndices(`global_idx * 4u + ${v}u`)};
            let offsetA${v} = ${b.broadcastedIndicesToOffset(`outputIndices${v}`,_)};
            let offsetB${v} = ${k.broadcastedIndicesToOffset(`outputIndices${v}`,_)};
            let indexA${v} = offsetA${v} / 4u;
            let indexB${v} = offsetB${v} / 4u;
            let componentA${v} = offsetA${v} % 4u;
            let componentB${v} = offsetB${v} % 4u;
            ${$}[${v}] = ${y}(${u(T,x)});
          `};p===9?g=`
            var data = vec4<u32>(0);
            ${M("data",0,"u32")}
            ${M("data",1,"u32")}
            ${M("data",2,"u32")}
            ${M("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:g=`
            ${M("outputData[global_idx]",0)}
            ${M("outputData[global_idx]",1)}
            ${M("outputData[global_idx]",2)}
            ${M("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(b,k,_)}

        ${d??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${g}
      }`},mg=(e,r,t,s,o,n,i=t.dataType)=>{let a=t.dims.map(b=>Number(b)??1),l=s.dims.map(b=>Number(b)??1),c=!ye.areEqual(a,l),p=a,d=ye.size(a),u=!1,f=!1,_=[c];if(c){let b=so.calcShape(a,l,!1);if(!b)throw new Error("Can't perform binary op on the given tensors");p=b.slice(),d=ye.size(p);let k=ye.size(a)===1,g=ye.size(l)===1,M=a.length>0&&a[a.length-1]%4===0,$=l.length>0&&l[l.length-1]%4===0;_.push(k),_.push(g),_.push(M),_.push($);let v=1;for(let y=1;y<p.length;y++){let T=a[a.length-y],x=l[l.length-y];if(T===x)v*=T;else break}v%4===0?(f=!0,u=!0):(k||g||M||$)&&(u=!0)}else u=!0;return _.push(u),{name:e,shaderCache:{hint:r+_.map(b=>b.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:b=>pg(b,a,l,p,u,c,f,o,t.dataType,s.dataType,i,n),getRunData:()=>({outputs:[{dims:p,dataType:i}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:Math.ceil(ye.size(p)/4)},...ct(a,l,p)]})}},xs=(e,r,t,s,o,n)=>{e.compute(mg(r,o??"",e.inputs[0],e.inputs[1],t,s,n))},Py=e=>{xs(e,"Add",(r,t)=>`${r}+${t}`)},Cy=e=>{xs(e,"Div",(r,t)=>`${r}/${t}`)},Sy=e=>{xs(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},$y=e=>{xs(e,"Mul",(r,t)=>`${r}*${t}`)},ky=e=>{let r=$e("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;xs(e,"Pow",{scalar:(t,s)=>`pow_custom(${t},${s})`,vector:(t,s)=>`pow_vector_custom(${t},${s})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Iy=e=>{xs(e,"Sub",(r,t)=>`${r}-${t}`)},Ay=e=>{xs(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},Fy=e=>{xs(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},Oy=e=>{xs(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},Dy=e=>{xs(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}}),hg,_g,fg,gg,Ly,zy,Ax=Ve(()=>{gt(),Et(),dr(),Pt(),hg=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,s=e[t],o=s.dataType,n=s.dims.length;e.forEach((i,a)=>{if(a!==t){if(i.dataType!==o)throw new Error("input tensors should be one type");if(i.dims.length!==n)throw new Error("input tensors should have the same shape");i.dims.forEach((l,c)=>{if(c!==r&&l!==s.dims[c])throw new Error("non concat dimensions must match")})}})},_g=(e,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${r});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,fg=(e,r)=>{let t=e.length,s=[];for(let o=0;o<t;++o){let n=r.setByOffset("global_idx",e[o].getByIndices("indices"));t===1?s.push(n):o===0?s.push(`if (inputIndex == ${o}u) { ${n} }`):o===t-1?s.push(`else { ${n} }`):s.push(`else if (inputIndex == ${o}) { ${n} }`)}return s.join(`
`)},gg=(e,r,t,s)=>{let o=ye.size(t),n=new Array(e.length),i=new Array(e.length),a=0,l=[],c=[],p=[{type:12,data:o}];for(let b=0;b<e.length;++b)a+=e[b].dims[r],n[b]=a,c.push(e[b].dims.length),i[b]=$e(`input${b}`,s,c[b]),l.push("rank"),p.push({type:12,data:n[b]});for(let b=0;b<e.length;++b)p.push(...ct(e[b].dims));p.push(...ct(t));let d=at("output",s,t.length),u=d.indicesGet("indices",r),f=Array.from(Array(n.length).keys()).map(b=>`uniforms.sizeInConcatAxis${b}`).join(","),_=b=>`

  ${(()=>{b.registerUniform("outputSize","u32");for(let k=0;k<e.length;k++)b.registerUniform(`sizeInConcatAxis${k}`,"u32");return b.declareVariables(...i,d)})()}

  ${_g(n.length,f)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${d.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${u});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${n.length}u>(${f});
      ${u} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${fg(i,d)}
  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:t,dataType:s}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:p}),getShaderSource:_}},Ly=(e,r)=>{let t=e.inputs,s=t[0].dims,o=ye.normalizeAxis(r.axis,s.length);hg(t,o);let n=s.slice();n[o]=t.reduce((a,l)=>a+(l.dims.length>o?l.dims[o]:0),0);let i=t.filter(a=>ye.size(a.dims)>0);e.compute(gg(i,o,n,t[0].dataType),{inputs:i})},zy=e=>Ut({axis:e.axis})}),An,Fn,On,yu,Ln=Ve(()=>{gt(),Et(),An=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Fn=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},On=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},yu=e=>{let r=(e==null?void 0:e.activation)||"";if(r==="HardSigmoid"){let[t,s]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:r,alpha:t,beta:s}}else if(r==="Clip"){let[t,s]=(e==null?void 0:e.activation_params)||[cb,ub];return{activation:r,clipMax:s,clipMin:t}}else if(r==="LeakyRelu"){let[t]=(e==null?void 0:e.activation_params)||[.01];return{activation:r,alpha:t}}return{activation:r}}}),Lr,By,vu=Ve(()=>{Lr=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},By=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Ry,Fx=Ve(()=>{Ry=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),qo,xu,Tu=Ve(()=>{gt(),Et(),Pt(),Ln(),qo=(e,r,t,s,o)=>{let n=s-t;return`
      ${Array.from({length:t}).map((i,a)=>`
      if (${lt(r.shape,a,r.rank)} != 1) {
        ${r.indicesSet(e,a,lt(o,a+n,s))}
      } else {
        ${r.indicesSet(e,a,0)}
      }`).join("")}
`},xu=(e,r,t,s,o=!1,n)=>{let i=e[0].dims,a=e[1].dims,l=i[i.length-2],c=a[a.length-1],p=i[i.length-1],d=lr(c),u=lr(p),f=lr(l),_=ye.size(t)/d/f,b=e.length>2,k=s?s.slice(0,-2):t.slice(0,-2),g=[ye.size(k),l,c],M=[{type:12,data:_},{type:12,data:l},{type:12,data:c},{type:12,data:p}];Fn(r,M),M.push(...ct(k,i,a)),b&&M.push(...ct(e[2].dims)),M.push(...ct(g));let $=v=>{let y=gu("batch_dims",e[0].dataType,k.length),T=$e("a",e[0].dataType,i.length,u),x=$e("b",e[1].dataType,a.length,d),P=at("output",e[0].dataType,g.length,d),O=Fr(P.type.tensor),L=An(r,P.type.value,O),G=[T,x],K="";if(b){let H=o?d:1;G.push($e("bias",e[2].dataType,e[2].dims.length,H)),K=`${o?`value += bias[col / ${H}];`:`value += ${P.type.value}(bias[row + i]);`}`}let R=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];On(r,R);let te=()=>{let H=`var a_data: ${T.type.value};`;for(let ee=0;ee<u;ee++)H+=`
              let b_data${ee} = b[(b_offset + (k + ${ee}) * uniforms.N + col) / ${d}];`;for(let ee=0;ee<f;ee++){H+=`a_data = a[(a_offset + (row + ${ee}) * uniforms.K + k) / ${u}];`;for(let Z=0;Z<u;Z++)H+=`
            values[${ee}] = fma(${x.type.value}(a_data${u===1?"":`[${Z}]`}), b_data${Z}, values[${ee}]);
`}return H};return`
  ${v.registerUniforms(R).registerInternalVariables(y).declareVariables(...G,P)}
  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${f};
    let row = (index1 % stride1) * ${f};
    let batch = index1 / stride1;

    ${t.length===2?"":`let batch_indices = ${y.offsetToIndices("batch")};`}

    var a_indices: ${T.type.indices};
    ${qo("a_indices",T,T.rank-2,y.rank,"batch_indices")}
    ${T.indicesSet("a_indices",T.rank-2,0)}
    ${T.indicesSet("a_indices",T.rank-1,0)}
    let a_offset = ${T.indicesToOffset("a_indices")};

    var b_indices: ${x.type.indices};
    ${qo("b_indices",x,x.rank-2,y.rank,"batch_indices")}
    ${x.indicesSet("b_indices",x.rank-2,0)}
    ${x.indicesSet("b_indices",x.rank-1,0)}
    let b_offset = ${x.indicesToOffset("b_indices")};
    var values: array<${P.type.value}, ${f}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${u}) {
      ${te()}
    }
    for (var i = 0u; i < ${f}u; i++) {
      var value = values[i];
      ${K}
      ${L}
      let cur_indices = ${P.type.indices}(batch, row + i, col);
      let offset = ${P.indicesToOffset("cur_indices")};
      ${P.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${d};${u};${f};${o}`,inputDependencies:b?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:M}),getShaderSource:$}}}),wg,Mg,Xc,lc,bg,Jc,yg,ha,Eu=Ve(()=>{gt(),Et(),Pt(),Ln(),Tu(),vu(),wg=(e,r)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,Mg=(e,r)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Xc=(e,r,t="f32",s,o=!1,n=32,i=!1,a=32)=>{let l=r[1]*e[1],c=r[0]*e[0],p=o?l:n,d=o?n:l,u=p/r[0],f=n/r[1];if(!((o&&u===4&&e[1]===4||!o&&(u===3||u===4))&&p%r[0]===0&&n%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${u} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${u} must be 3 or 4.
  tileAWidth ${p} must be divisible by workgroupSize[0]${r[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${u}<${t}>, ${p/u}>, ${d}>;
var<workgroup> mm_Bsub: array<array<vec4<${t}>, ${c/e[0]}>, ${n}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${u};
const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${i?"0":"i32(globalId.z)"};
  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${i?`${Math.ceil(a/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${i?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${t}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${f};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${wg(o,s)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${u===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Mg(o,u)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},lc=(e,r)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,bg=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Jc=(e,r,t="f32",s,o=!1,n=32,i=!1,a=32,l=!1)=>{let c=e[1]*r[1],p=e[0]*r[0],d=o?c:n,u=o?n:c;if(!(u%r[1]===0&&d%r[0]===0&&n%r[1]===0))throw new Error(`tileAHight ${u} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${r[0]}, tileInner ${n} must be divisible by workgroupSize[1]${r[1]}`);let f=u/r[1],_=d/r[0],b=n/r[1],k=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${c};
    let globalColStart = i32(workgroupId.x) * ${p};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${r[0]}) {
          ${lc(o,s)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${s?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${t}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${c};

let tileRowA = i32(localId.y) * ${f};
let tileColA = i32(localId.x) * ${_};
let tileRowB = i32(localId.y) * ${b};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${_}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${lc(o,s)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${b}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${s?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${t}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${bg(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${t}, ${d}>, ${u}>;
  var<workgroup> mm_Bsub : array<array<${t}, ${p}>, ${n}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${i?"0":"i32(globalId.z)"};
    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${i?`${Math.ceil(a/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${i?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${t}, colPerThread>, rowPerThread>;
    ${k}
  }
`},yg=(e,r,t,s,o=!1)=>{let[n,i,a,l]=s,c=Fr(s[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${Lr(e,c)} {
      var value = ${Lr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${i.type.indices};
        ${qo("aIndices",i,i.rank-2,n.rank,"batchIndices")}
        ${i.indicesSet("aIndices",i.rank-2,"u32(row)")}
        ${i.indicesSet("aIndices",i.rank-1,"u32(colIn)")}
        value = ${i.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${Lr(e,c)} {
      var value = ${Lr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${a.type.indices};
        ${qo("bIndices",a,a.rank-2,n.rank,"batchIndices")}
        ${a.indicesSet("bIndices",a.rank-2,"u32(row)")}
        ${a.indicesSet("bIndices",a.rank-1,"u32(colIn)")}
        value = ${a.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Lr(e,c)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${o?"bias[colIn]":`${Lr(e,c)}(bias[row])`};`:""}
        ${t}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},ha=(e,r,t,s,o=!1,n)=>{let i=e[0].dims,a=e[1].dims,l=i.slice(0,-2),c=a.slice(0,-2),p=s?s.slice(0,-2):t.slice(0,-2),d=ye.size(p),u=i[i.length-2],f=i[i.length-1],_=a[a.length-1],b=f%4===0&&_%4===0,k=u<=8?[4,1,1]:[4,4,1],g=[8,8,1],M=[Math.ceil(_/g[0]/k[0]),Math.ceil(u/g[1]/k[1]),Math.ceil(d/g[2]/k[2])],$=b?4:1,v=[...l,u,f/$],y=v.length,T=[...c,f,_/$],x=T.length,P=[d,u,_/$],O=[{type:6,data:u},{type:6,data:_},{type:6,data:f}];Fn(r,O),O.push(...ct(p,v,T));let L=["rank","rank"],G=e.length>2;G&&(O.push(...ct(e[2].dims)),L.push("rank")),O.push(...ct(P));let K=R=>{let te=p.length,H=gu("batchDims",e[0].dataType,te,1),ee=Fr(e[0].dataType),Z=$e("a",e[0].dataType,y,$),ne=$e("b",e[1].dataType,x,$),he=at("result",e[0].dataType,P.length,$),ue=[Z,ne];if(G){let _e=o?$:1;ue.push($e("bias",e[2].dataType,e[2].dims.length,_e))}let j=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];On(r,j);let F=Fr(he.type.tensor),U=An(r,he.type.value,F),se=yg($,G,U,[H,Z,ne,he],o);return`
  ${R.registerUniforms(j).registerInternalVariables(H).declareVariables(...ue,he)}
  ${se}
  ${b?Xc(k,g,ee,H):Jc(k,g,ee,H)}
                   `};return{name:"MatMul",shaderCache:{hint:`${k};${r.activation};${b};${o}`,inputDependencies:L},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:M[0],y:M[1],z:M[2]},programUniforms:O}),getShaderSource:K}}}),vg,jy,Ox=Ve(()=>{gt(),Vs(),Pt(),Ln(),vu(),Fx(),Eu(),vg=(e,r,t,s,o=!1,n,i=4,a=4,l=4,c="f32")=>{let p=O=>{switch(O){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${O} is not supported.`)}},d=O=>{switch(O){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${O} is not supported.`)}},u=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,f=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,_=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",b=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",k=e?"row":"col",g=e?"col":"row",M=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${k} / outWidth;
    let outCol = ${k} % outWidth;

    let WRow = ${g} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${g} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${g} % inChannels;
    var resData = ${Lr(i,c)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${_} && xCol >= 0 && xCol < ${b}) {
      ${u}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${p(i)}
    }
    return resData;`,$=e?r&&s?`
    let col = colIn * ${i};
    ${M}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${M}
    }
    return ${Lr(i,c)}(0.0);`:s&&t?`
    let col = colIn * ${i};
    ${M}`:`
    let col = colIn * ${i};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${M}
    }
    return ${Lr(i,c)}(0.0);`,v=e?s&&t?d(a):`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${d(a)}
    }
    return ${Lr(a,c)}(0.0);`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${d(a)}
    }
    return ${Lr(a,c)}(0.0);`,y=Lr(l,c),T=Lr(e?i:a,c),x=Lr(e?a:i,c),P=An(n,y,c);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${T} {
      ${e?$:v}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${x} {
      ${e?v:$}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${y}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${f}
      ${By(o)}
      ${P}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},jy=(e,r,t,s,o,n,i,a,l)=>{let c=r.format==="NHWC",p=c?e[0].dims[3]:e[0].dims[1],d=t[0],u=c?t[2]:t[3],f=c?t[1]:t[2],_=c?t[3]:t[1],b=c&&(p%4===0||p%3===0)&&_%4===0,k=c?_:u*f,g=c?u*f:_,M=[8,8,1],$=s<=8?[4,1,1]:[4,4,1],v=[Math.ceil(k/M[0]/$[0]),Math.ceil(g/M[1]/$[1]),Math.ceil(d/M[2]/$[2])];Lt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${v}`);let y=b?c&&p%4!==0?3:4:1,T=M[1]*$[1],x=M[0]*$[0],P=Math.max(M[0]*y,M[1]),O=s%T===0,L=o%x===0,G=n%P===0,K=b?[y,4,4]:[1,1,1],R=[{type:6,data:s},{type:6,data:o},{type:6,data:n},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];Fn(r,R),R.push(...ct(e[0].dims,e[1].dims));let te=["rank","rank"];i&&(R.push(...ct(e[2].dims)),te.push("rank")),R.push(...ct(t));let H=ee=>{let Z=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];On(r,Z);let ne=b?4:1,he=Fr(e[0].dataType),ue=`
      fn setOutputAtIndex(flatIndex : i32, value : ${b?`vec4<${he}>`:he}) {
        result[flatIndex] = ${b?`vec4<${he}>`:he}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${b?`vec4<${he}>`:he}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${b?"/ 4":""}, value);
      }`,j=$e("x",e[0].dataType,e[0].dims.length,y===3?1:y),F=$e("w",e[1].dataType,e[1].dims.length,ne),U=[j,F],se=at("result",e[0].dataType,t.length,ne);if(i){let _e=$e("bias",e[2].dataType,e[2].dims.length,ne);U.push(_e),ue+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?`vec4<${he}>`:he} {
          return bias[coords.${c?"w":"y"}${b?"/ 4":""}];
        }`}return`
        ${Ry("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${ee.registerUniforms(Z).declareVariables(...U,se)}
        ${ue}
        ${vg(c,O,L,G,i,r,K[0],K[1],K[2],he)}
        ${b?Xc($,M,he,void 0,!c,P):Jc($,M,he,void 0,!c,P,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${y};${b};${O};${L};${G};${T};${x};${P}`,inputDependencies:te},getRunData:()=>({outputs:[{dims:l?l(t):t,dataType:e[0].dataType}],dispatchGroup:{x:v[0],y:v[1],z:v[2]},programUniforms:R}),getShaderSource:H}}}),xg,cc,Bo,Tg,uc,Eg,Ny,Vy,Dx=Ve(()=>{gt(),Vs(),Et(),Pt(),Ln(),vu(),xg=e=>{let r=1;for(let t=0;t<e.length;t++)r*=e[t];return r},cc=e=>typeof e=="number"?[e,e,e]:e,Bo=(e,r)=>r<=1?e:e+(e-1)*(r-1),Tg=(e,r,t,s=1)=>{let o=Bo(r,s);return Math.floor((e[0]*(t-1)-t+o)/2)},uc=(e,r,t,s,o)=>{o==null&&(o=Tg(e,r[0],s[0]));let n=[0,0,0,t];for(let i=0;i<3;i++)e[i]+2*o>=r[i]&&(n[i]=Math.trunc((e[i]-r[i]+2*o)/s[i]+1));return n},Eg=(e,r,t,s,o,n,i,a,l,c)=>{let p,d,u,f;if(e==="VALID"&&(e=0),typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e};let _=uc([r,t,s,1],[a,l,c],1,[o,n,i],e);d=_[0],u=_[1],f=_[2]}else if(Array.isArray(e)){if(!e.every((b,k,g)=>b===g[0]))throw Error(`Unsupported padding parameter: ${e}`);p={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let _=uc([r,t,s,1],[a,l,c],1,[o,n,i],e[0]);d=_[0],u=_[1],f=_[2]}else if(e==="SAME_UPPER"){d=Math.ceil(r/o),u=Math.ceil(t/n),f=Math.ceil(s/i);let _=(d-1)*o+a-r,b=(u-1)*n+l-t,k=(f-1)*i+c-s,g=Math.floor(_/2),M=_-g,$=Math.floor(b/2),v=b-$,y=Math.floor(k/2),T=k-y;p={top:$,bottom:v,left:y,right:T,front:g,back:M}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:u,outWidth:f}},Ny=(e,r,t,s,o,n=!1,i="channelsLast")=>{let a,l,c,p,d;if(i==="channelsLast")[a,l,c,p,d]=e;else if(i==="channelsFirst")[a,d,l,c,p]=e;else throw new Error(`Unknown dataFormat ${i}`);let[u,,f,_,b]=r,[k,g,M]=cc(t),[$,v,y]=cc(s),T=Bo(f,$),x=Bo(_,v),P=Bo(b,y),{padInfo:O,outDepth:L,outHeight:G,outWidth:K}=Eg(o,l,c,p,k,g,M,T,x,P),R=n?u*d:u,te=[0,0,0,0,0];return i==="channelsFirst"?te=[a,R,L,G,K]:i==="channelsLast"&&(te=[a,L,G,K,R]),{batchSize:a,dataFormat:i,inDepth:l,inHeight:c,inWidth:p,inChannels:d,outDepth:L,outHeight:G,outWidth:K,outChannels:R,padInfo:O,strideDepth:k,strideHeight:g,strideWidth:M,filterDepth:f,filterHeight:_,filterWidth:b,effectiveFilterDepth:T,effectiveFilterHeight:x,effectiveFilterWidth:P,dilationDepth:$,dilationHeight:v,dilationWidth:y,inShape:e,outShape:te,filterShape:r}},Vy=(e,r,t,s,o,n)=>{let i=n==="channelsLast";i?e[0].dims[3]:e[0].dims[1];let a=[64,1,1],l={x:t.map((k,g)=>g)},c=[Math.ceil(xg(l.x.map(k=>t[k]))/a[0]),1,1];Lt("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${c}`);let p=1,d=ye.size(t),u=[{type:12,data:d},{type:12,data:s},{type:12,data:o},{type:12,data:r.strides},{type:12,data:r.dilations}];Fn(r,u),u.push(...ct(e[0].dims,e[1].dims));let f=["rank","rank"],_=e.length===3;_&&(u.push(...ct(e[2].dims)),f.push("rank")),u.push(...ct(t));let b=k=>{let g=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:s.length},{name:"pads",type:"u32",length:o.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];On(r,g);let M=1,$=Fr(e[0].dataType),v=$e("x",e[0].dataType,e[0].dims.length,p),y=$e("W",e[1].dataType,e[1].dims.length,M),T=[v,y],x=at("result",e[0].dataType,t.length,M),P="";if(_){let G=$e("bias",e[2].dataType,e[2].dims.length,M);T.push(G),P+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${$} {
          return bias[${i?lt("coords",4,5):lt("coords",1,5)}];
        }`}let O=Lr(p,$),L=An(r,O,$);return`
            ${P}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${v.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${y.getByIndices("aIndices")};
            }
          ${k.registerUniforms(g).declareVariables(...T,x)}
          ${k.mainStart()}
          ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${x.offsetToIndices("global_idx")};
              let batch = ${lt("coords",0,v.rank)};
              let d2 = ${i?lt("coords",v.rank-1,v.rank):lt("coords",1,v.rank)};
              let xFRCCorner = vec3<u32>(${i?lt("coords",1,v.rank):lt("coords",2,v.rank)},
              ${i?lt("coords",2,v.rank):lt("coords",3,v.rank)},
              ${i?lt("coords",3,v.rank):lt("coords",4,v.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${i?lt("uniforms.x_shape",1,v.rank):lt("uniforms.x_shape",2,v.rank)};
              let xShapeZ = ${i?lt("uniforms.x_shape",2,v.rank):lt("uniforms.x_shape",3,v.rank)};
              let xShapeW = ${i?lt("uniforms.x_shape",3,v.rank):lt("uniforms.x_shape",4,v.rank)};
              let xShapeU = ${i?lt("uniforms.x_shape",4,v.rank):lt("uniforms.x_shape",1,v.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${i?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${i?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${i?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${i?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${_?"value = value + getBiasByOutputCoords(coords)":""};
              ${L}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${i};${p};${_}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:c[0],y:c[1],z:c[2]},programUniforms:u}),getShaderSource:b}}}),Uy,Wy,Lx=Ve(()=>{gt(),Et(),Pt(),Ln(),Uy=(e,r,t,s)=>{let o=e.length>2,n=o?"value += b[output_channel];":"",i=e[0].dims,a=e[1].dims,l=r.format==="NHWC",c=l?t[3]:t[1],p=c/r.group,d=l&&p>=4?lr(c):1,u=ye.size(t)/d,f=[{type:12,data:u},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:p}];Fn(r,f),f.push(...ct(i,[a[0],a[1],a[2],a[3]/d]));let _=o?["rank","rank","rank"]:["rank","rank"];f.push(...ct([t[0],t[1],t[2],t[3]/d]));let b=k=>{let g=at("output",e[0].dataType,t.length,d),M=Fr(g.type.tensor),$=An(r,g.type.value,M),v=$e("x",e[0].dataType,i.length),y=$e("w",e[1].dataType,a.length,d),T=[v,y];o&&T.push($e("b",e[2].dataType,e[2].dims,d));let x=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];On(r,x);let P=l?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${v.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${y.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${v.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${y.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${k.registerUniforms(x).declareVariables(...T,g)}

  ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${g.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${d} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];

    var value: ${g.type.value} = ${g.type.value}(0);
    ${P}
    ${n}
    ${$}
    ${g.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${d}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:f}),getShaderSource:b}},Wy=(e,r,t,s)=>{let o=e.length>2,n=lr(t[3]),i=lr(t[2]),a=ye.size(t)/n/i,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/n],c=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/n],p=[t[0],t[1],t[2],t[3]/n],d=[{type:12,data:a},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];Fn(r,d),d.push(...ct(l,c,p));let u=(i-1)*r.strides[1]+c[1],f=_=>{let b=at("output",e[0].dataType,p.length,n),k=Fr(b.type.tensor),g=An(r,b.type.value,k),M=$e("x",e[0].dataType,l.length,n),$=$e("w",e[1].dataType,c.length,n),v=[M,$];o&&v.push($e("b",e[2].dataType,e[2].dims,n));let y=o?"value += b[output_channel];":"",T=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return On(r,T),`
  ${_.registerUniforms(T).declareVariables(...v,b)}
  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${i}u;
    let col = (index1 % width1) * ${i}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${M.type.value}, ${u}>;
    var values: array<${b.type.value}, ${i}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${c[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${u}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${M.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${M.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${c[1]}; w_width++) {
          let w_val = ${$.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${i}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${i}u; i++) {
      var value = values[i];
      ${y}
      ${g}
      ${b.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${n};${i};${u};${c[0]};${c[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:f}}}),Pg,Zi,Cg,ea,Yc,dc,Sg,$g,Zc,zx=Ve(()=>{Et(),Ox(),Dx(),Eu(),Lx(),Ln(),Tu(),on(),Pg=(e,r,t,s,o,n)=>{let i=e[0],a=e.slice(n?1:2,n?3:4),l=a.length,c=r[0],p=r.slice(2).map((u,f)=>u+(u-1)*(t[f]-1)),d=a.map((u,f)=>u+s[f]+s[f+l]).map((u,f)=>Math.floor((u-p[f]+o[f])/o[f]));return d.splice(0,0,i),d.splice(n?3:1,0,c),d},Zi=[2,3,1,0],Cg=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[1]*r.group;if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let o=e[0].dims.length-2;if(r.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(r.strides.length!==o)throw new Error(`strides should be ${o}D`);if(r.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},ea=(e,r)=>{let t=e.kernelShape.slice();t.length<r[1].dims.length-2&&t.push(...Array(r[1].dims.length-2-t.length).fill(0));for(let n=2;n<r[1].dims.length;++n)t[n-2]===0&&(t[n-2]=r[1].dims[n]);let s=e.pads.slice();pa.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,s,e.format==="NHWC",e.autoPad);let o=Object.assign({},e);return Object.assign(o,{kernelShape:t,pads:s}),o},Yc=e=>{let r=yu(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],o=e.dilations,n=e.group,i=e.kernel_shape,a=e.pads,l=e.strides,c=e.w_is_const();return{autoPad:s,format:t,dilations:o,group:n,kernelShape:i,pads:a,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},dc=(e,r,t,s)=>{let o=t.format==="NHWC",n=Pg(r[0].dims,r[1].dims,t.dilations,t.pads,t.strides,o);if(t.group!==1){let T=[r[0]];if(o){let x=e.kernelCustomData.wT??e.compute(os(r[1],Zi),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=x),T.push(x)}else T.push(r[1]);r.length===3&&T.push(r[2]),!e.adapterInfo.isArchitecture("ampere")&&o&&r[1].dims[0]===t.group&&r[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1?e.compute(Wy(T,t,n,s),{inputs:T}):e.compute(Uy(T,t,n,s),{inputs:T});return}let i=r.length===3,a=r[0].dims[o?1:2],l=r[0].dims[o?2:3],c=r[0].dims[o?3:1],p=r[1].dims[2],d=r[1].dims[3],u=n[o?1:2],f=n[o?2:3],_=n[o?3:1],b=o&&p===a&&d===l&&t.pads[0]===0&&t.pads[1]===0;if(b||p===1&&d===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let T=n[0],x,P,O,L=[];if(o){let R=e.kernelCustomData.wT??e.compute(os(r[1],Zi),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=R),b){let te=a*l*c;x=r[0].reshape([1,T,te]),P=R.reshape([1,te,_]),O=[1,T,_]}else x=r[0].reshape([T,a*l,c]),P=R.reshape([1,c,_]),O=[T,u*f,_];L.push(x),L.push(P)}else x=r[0].reshape([T,c,a*l]),P=r[1].reshape([1,_,c]),O=[T,_,u*f],L.push(P),L.push(x);i&&L.push(r[2]);let G=O[2],K=L[0].dims[L[0].dims.length-1];G<8&&K<8?e.compute(xu(L,t,n,O,o,s),{inputs:L}):e.compute(ha(L,t,n,O,o,s),{inputs:L});return}let k=!0,g=e.kernelCustomData.wT??e.compute(os(r[1],Zi),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=g);let M=[r[0],g];i&&M.push(r[2]);let $=o?u*f:_,v=o?_:u*f,y=p*d*c;e.compute(jy(M,t,n,$,v,y,i,k,s),{inputs:M})},Sg=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let o=[0,r.pads[0],0,r.pads[1]],n=[1].concat(r.strides),i=[1].concat(r.dilations),a=[1].concat(r.kernelShape),l=ea({...r,pads:o,strides:n,dilations:i,kernelShape:a},s);dc(e,s,l,c=>t?[c[0],c[2],c[3]]:[c[0],c[1],c[3]])},$g=(e,r,t)=>{let s=t.format==="NHWC"?"channelsLast":"channelsFirst",o=ea(t,r),n=t.autoPad==="NOTSET"?t.pads:t.autoPad,i=Ny(r[0].dims,r[1].dims,t.strides,t.dilations,n,!1,s);e.compute(Vy(r,o,i.outShape,[i.filterDepth,i.filterHeight,i.filterWidth],[i.padInfo.front,i.padInfo.top,i.padInfo.left],s))},Zc=(e,r)=>{if(Cg(e.inputs,r),e.inputs[0].dims.length===3)Sg(e,r);else if(e.inputs[0].dims.length===5)$g(e,e.inputs,r);else{let t=ea(r,e.inputs);dc(e,e.inputs,t)}}}),Gy,Bx=Ve(()=>{gt(),Vs(),Et(),Pt(),Gy=(e,r,t)=>{let s=e.length>2,o=r.outputShape,n=r.format==="NHWC",i=r.group,a=e[1].dims,l=a[2]/i,c=a[3],p=n?lr(l):1,d=n&&c===1&&l>=4,u=d?Math.floor(l/4)*4:Math.floor(l/p)*p,f=l-u,_=n?lr(c):1,b=n?c===1?p:_:1,k=ye.size(o)/_,g=[Math.ceil(k/64),1,1];Lt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${g}`);let M=["rank","rank"],$=[r.strides[0],r.strides[1]],v=[r.kernelShape[n?1:2],r.kernelShape[n?2:3]],y=[r.dilations[0],r.dilations[1]],T=[v[0]+(r.dilations[0]<=1?0:(r.kernelShape[n?1:2]-1)*(r.dilations[0]-1)),v[1]+(r.dilations[1]<=1?0:(r.kernelShape[n?2:3]-1)*(r.dilations[1]-1))],x=[T[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),T[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],P=[{type:12,data:k},{type:12,data:$},{type:12,data:v},{type:12,data:y},{type:12,data:T},{type:6,data:x},{type:12,data:u},{type:12,data:l},{type:12,data:c},...ct(e[0].dims,e[1].dims)];s&&(P.push(...ct(e[2].dims)),M.push("rank")),P.push(...ct(o));let O=L=>{let G=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:$.length},{name:"filter_dims",type:"u32",length:v.length},{name:"dilations",type:"u32",length:v.length},{name:"effective_filter_dims",type:"u32",length:T.length},{name:"pads",type:"i32",length:x.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],K=Fr(e[0].dataType),R=n?1:2,te=n?2:3,H=n?3:1,ee=$e("W",e[1].dataType,e[1].dims.length,b),Z=$e("Dy",e[0].dataType,e[0].dims.length,p),ne=[Z,ee];s&&ne.push($e("bias",e[2].dataType,[o[H]].length,_));let he=at("result",e[0].dataType,o.length,_),ue=()=>{let U="";if(d)p===4?U+=`
        let xValue = ${Z.getByOffset("x_offset")};
        let wValue = ${ee.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:p===2?U+=`
          dotProd = dotProd + dot(vec4<${K}>(${Z.getByOffset("x_offset")}, ${Z.getByOffset("x_offset + 1u")}), vec4<${K}>(${ee.getByOffset("w_offset")}, ${ee.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:p===1&&(U+=`
          dotProd = dotProd + dot(vec4<${K}>(${Z.getByOffset("x_offset")}, ${Z.getByOffset("x_offset + 1u")}, ${Z.getByOffset("x_offset + 2u")}, ${Z.getByOffset("x_offset + 3u")}), vec4<${K}>(${ee.getByOffset("w_offset")}, ${ee.getByOffset("w_offset + 1u")}, ${ee.getByOffset("w_offset + 2u")}, ${ee.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(U+=`
                  let xValue = ${n?Z.getByOffset(`${Z.indicesToOffset(`${Z.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p}`):Z.get("batch","inputChannel","idyR","idyC")};
        `,p===1)U+=`
          let w_offset = ${ee.indicesToOffset(`${ee.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${ee.getByOffset(`w_offset / ${b}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let se=0;se<p;se++)U+=`
            let wValue${se} = ${ee.getByOffset(`${ee.indicesToOffset(`${ee.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${se}, wOutChannel)`)} / ${b}`)};
            dotProd = dotProd + xValue[${se}] * wValue${se};`;return U},j=()=>{if(f===0)return"";if(!d)throw new Error(`packInputAs4 ${d} is not true.`);let U="";if(p===1){U+="dotProd = dotProd";for(let se=0;se<f;se++)U+=`
            + ${Z.getByOffset(`x_offset + ${se}`)} * ${ee.getByOffset(`w_offset + ${se}`)}`;U+=";"}else if(p===2){if(f!==2)throw new Error(`Invalid inputChannelsRemainder ${f}.`);U+=`
          let xValue = ${Z.getByOffset("x_offset")};
          let wValue = ${ee.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return U},F=`
            let outputIndices = ${he.offsetToIndices(`global_idx * ${_}`)};
            let batch = ${he.indicesGet("outputIndices",0)};
            let d1 = ${he.indicesGet("outputIndices",H)};
            let r = ${he.indicesGet("outputIndices",R)};
            let c = ${he.indicesGet("outputIndices",te)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${he.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${K}(dyRCorner) + ${K}(wR)) / ${K}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${K}(uniforms.Dy_shape[${R}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${K}(dyCCorner) + ${K}(wC)) / ${K}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${K}(uniforms.Dy_shape[${te}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${d?`
                var x_offset = ${Z.indicesToOffset(`${Z.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p};
                var w_offset = ${ee.indicesToOffset(`${ee.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${b};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${d?4:p}) {
                  ${ue()}
                  inputChannel = inputChannel + ${d?4:p};
                }
                ${j()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${s?` + bias[d1 / ${_}]`:""};
            ${he.setByOffset("global_idx","value")};
          `;return`
    ${L.registerUniforms(G).declareVariables(...ne,he)}
      ${L.mainStart()}
      ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${F}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${p}${b}${_}${d}${f}`,inputDependencies:M},getRunData:()=>({dispatchGroup:{x:g[0],y:g[1],z:g[2]},outputs:[{dims:t?t(o):o,dataType:e[0].dataType}],programUniforms:P}),getShaderSource:O}}}),kg,Ig,Ag,pc,Ky,Fg,mc,Og,Hy,Rx=Ve(()=>{Bx(),Ln(),on(),kg=(e,r,t,s,o,n)=>(e-1)*r+t+(s-1)*o+1-n,Ig=(e,r,t,s,o)=>{let n=Math.floor(e/2);r==="SAME_UPPER"?(t[s]=n,t[o]=e-n):r==="SAME_LOWER"&&(t[s]=e-n,t[o]=n)},Ag=(e,r,t,s,o,n,i,a,l,c)=>{let p=e.length-2,d=c.length===0;l.length<p&&l.push(...Array(p-l.length).fill(0));let u=e[0],f=r[a?3:1]*o;for(let _=0,b=e.length-p-(a?1:0);_<p;++_,++b){let k=e[b],g=d?k*i[_]:c[_],M=kg(k,i[_],n[_],r[b],t[_],g);Ig(M,s,n,_,_+p),d&&c.push(i[_]*(k-1)+l[_]+(r[b]-1)*t[_]+1-n[_]-n[_+p])}c.splice(0,0,u),c.splice(a?3:1,0,f)},pc=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((d,u)=>d*u,1)===0){t.length=0;for(let d=2;d<r[1].dims.length;++d)t.push(r[1].dims[d])}let s=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(s?3:1,0,r[1].dims[1]);let o=e.pads.slice(),n=e.outputShape.slice(),i=e.outputPadding.slice(),a=r[0].dims,l=e.dilations.slice();if(l.reduce((d,u)=>d+u,0)===0){let d=r[0].dims.length-2;l=new Array(d).fill(1)}let c=e.strides.slice();if(c.reduce((d,u)=>d+u,0)===0){let d=r[0].dims.length-2;c=new Array(d).fill(1)}Ag(a,t,l,e.autoPad,e.group,o,c,s,i,n);let p=Object.assign({},e);return Object.assign(p,{kernelShape:t,pads:o,outputPadding:i,outputShape:n,dilations:l,strides:c}),p},Ky=e=>{let r=yu(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],o=e.dilations,n=e.group,i=e.kernelShape,a=e.pads,l=e.strides,c=e.wIsConst(),p=e.outputPadding,d=e.outputShape;return{autoPad:s,format:t,dilations:o,group:n,kernelShape:i,outputPadding:p,outputShape:d,pads:a,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},Fg=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[0];if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==o))throw new Error("invalid bias");let n=e[0].dims.length-2;if(r.dilations.reduce((i,a)=>i+a,0)>0&&r.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(r.strides.reduce((i,a)=>i+a,0)>0&&r.strides.length!==n)throw new Error(`strides should be ${n}D`);if(r.pads.reduce((i,a)=>i+a,0)>0&&r.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(r.outputPadding.length!==n&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${n}D`);if(r.kernelShape.reduce((i,a)=>i+a,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},mc=(e,r,t,s)=>{let o=e.kernelCustomData.wT??e.compute(os(r[1],[2,3,0,1]),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=o);let n=[r[0],o];r.length===3&&n.push(r[2]),e.compute(Gy(n,t,s),{inputs:n})},Og=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let o=r.kernelShape;(o.length===0||o[0]===0)&&(o=[e.inputs[1].dims[2]]);let n=r.dilations;(n.length===0||n[0]===0)&&(n=[1]);let i=r.strides;(i.length===0||i[0]===0)&&(i=[1]);let a=r.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],i=[1].concat(i),n=[1].concat(n),o=[1].concat(o);let l=r.outputPadding;l=[0].concat(l);let c=pc({...r,pads:a,strides:i,dilations:n,kernelShape:o,outputPadding:l},s);mc(e,s,c,p=>t?[p[0],p[2],p[3]]:[p[0],p[1],p[3]])},Hy=(e,r)=>{if(Fg(e.inputs,r),e.inputs[0].dims.length===3)Og(e,r);else{let t=pc(r,e.inputs);mc(e,e.inputs,t)}}}),Dg,qy,Qy,jx=Ve(()=>{gt(),Et(),dr(),Pt(),Dg=(e,r,t,s)=>{let o=ye.size(r),n=r.length,i=$e("input",e,n),a=at("output",e,n),l=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),c=ye.normalizeAxis(l,n),p=d=>{let u=` i32(${i.indicesGet("inputIndices","uniforms.axis")}) `,f=lt("uniforms.input_shape","uniforms.axis",n),_=s.reverse?u+(s.exclusive?" + 1":""):"0",b=s.reverse?f:u+(s.exclusive?"":" + 1");return`
                ${d.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(i,a)}
                ${d.mainStart()}
                  ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${_};
                  let last : i32 = ${b};
                  for (var i : i32 = first; i < last; i++) {
                    ${i.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${i.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},{type:12,data:c},...ct(r,r)]}),getShaderSource:p}},qy=(e,r)=>{let t=e.inputs[0].dims,s=e.inputs[0].dataType,o=e.inputs[1];e.compute(Dg(s,t,o,r),{inputs:[0]})},Qy=e=>{let r=e.exclusive===1,t=e.reverse===1;return Ut({exclusive:r,reverse:t})}}),Lg,zg,Bg,Xy,Jy,Nx=Ve(()=>{gt(),Et(),dr(),Pt(),Lg=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},zg=(e,r,t,s)=>{let o=[];o.push(`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`);for(let n=0;n<r;++n)o.push(t.indicesSet("a",e[n],`i[${n}]`));return o.push("return a;}"),o.join(`
`)},Bg=(e,r)=>{let t,s,o,n,i,a,l=r.format==="NHWC",c=r.blocksize,p=r.mode==="DCR";l?([t,s,o,n]=e.dims,i=p?[t,s,o,c,c,n/c**2]:[t,s,o,n/c**2,c,c],a=p?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([t,s,o,n]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],i=p?[t,c,c,n/c**2,s,o]:[t,n/c**2,c,c,s,o],a=p?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let d=e.reshape(i),u=d.dims.length,f=e.dataType,_=$e("a",f,u),b=at("output",f,u),k=g=>`
  ${g.registerUniform("output_size","u32").declareVariables(_,b)}

  ${zg(a,u,_,b)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${b.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${b.setByOffset("global_idx",_.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:g=>{let M=l?[t,s*c,o*c,n/c**2]:[t,n/c**2,s*c,o*c],$=ye.size(M),v=d.dims,y=ye.sortBasedOnPerm(v,a);return{outputs:[{dims:M,dataType:g[0].dataType}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:[{type:12,data:$},...ct(v,y)]}},getShaderSource:k}},Xy=(e,r)=>{Lg(e.inputs),e.compute(Bg(e.inputs[0],r))},Jy=e=>Ut({blocksize:e.blocksize,mode:e.mode,format:e.format})}),ta,Ro,hc,Rg,jg,Ng,Vg,_c,Ug,Yy,Zy,Vx=Ve(()=>{gt(),Et(),dr(),Pt(),ta="[a-zA-Z]|\\.\\.\\.",Ro="("+ta+")+",hc="^"+Ro+"$",Rg="("+Ro+",)*"+Ro,jg="^"+Rg+"$",Ng=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,r){let t=this.symbolToIndices.get(e);t===void 0?t=[r]:t.push(r),this.symbolToIndices.set(e,t)}},Vg=class{constructor(e,r){var o;this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,s]=r.includes("->")?r.split("->",2):[r,""];if(!t.match(RegExp(jg)))throw new Error("Invalid LHS term");if(t.split(",").forEach((n,i)=>{let a=e[i].dims.slice();if(!n.match(RegExp(hc)))throw new Error("Invalid LHS term");let l=this.processTerm(n,!0,a,i);this.lhs.push(l)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([n,i])=>i.count===1||n==="...").map(([n])=>n).join("");else if(!s.match(RegExp(Ro)))throw new Error("Invalid RHS");(o=s.match(RegExp(ta,"g")))==null||o.forEach(n=>{if(n==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let i=this.symbolToInfo.get(n);if(i===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(i.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(e,r,t){let s=this.symbolToInfo.get(e);if(s!==void 0){if(s.dimValue!==r&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(t)}else s={count:1,dimValue:r,inputIndices:[t]};this.symbolToInfo.set(e,s)}processTerm(e,r,t,s=-1){let o=t.length,n=!1,i=[],a=0;if(!e.match(RegExp(hc))&&!r&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(ta,"g")),c=new Ng(s);return l==null||l.forEach((p,d)=>{if(p==="..."){if(n)throw new Error("Only one ellipsis is allowed per input term");n=!0;let u=o-l.length+1;if(u<0)throw new Error("Ellipsis out of bounds");if(i=t.slice(a,a+u),this.hasEllipsis){if(this.ellipsisDims.length!==i.length||this.ellipsisDims.toString()!==i.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=i;else throw new Error("Ellipsis must be specified in the LHS");for(let f=0;f<i.length;f++){let _=String.fromCharCode(48+f);c.addSymbol(_,d+f),this.addSymbol(_,t[a++],s)}}else c.addSymbol(p,d+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[a++],s)}),c}},_c=e=>e+"_max",Ug=(e,r,t,s)=>{let o=e.map(c=>c.length).map((c,p)=>$e(`input${p}`,r,c)),n=ye.size(s),i=at("output",r,s.length),a=[...t.symbolToInfo.keys()].filter(c=>!t.rhs.symbolToIndices.has(c)),l=c=>{let p=[],d="var prod = 1.0;",u="var sum = 0.0;",f="sum += prod;",_=[],b=[],k=[],g=[],M=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((v,y)=>{var T;if(t.rhs.symbolToIndices.has(y)){let x=(T=t.rhs.symbolToIndices.get(y))==null?void 0:T[0];x!==void 0&&t.lhs.forEach((P,O)=>{if(v.inputIndices.includes(O)){let L=P.symbolToIndices.get(y);if(L===void 0)throw new Error("Invalid symbol error");L.forEach(G=>{p.push(`${o[O].indicesSet(`input${O}Indices`,G,i.indicesGet("outputIndices",x))}`)})}})}else t.lhs.forEach((x,P)=>{if(v.inputIndices.includes(P)){let O=x.symbolToIndices.get(y);if(O===void 0)throw new Error("Invalid symbol error");O.forEach(L=>{_.push(`${o[P].indicesSet(`input${P}Indices`,L,`${y}`)}`)}),g.push(`prod *= ${o[P].getByIndices(`input${P}Indices`)};`)}}),b.push(`for(var ${y}: u32 = 0; ${y} < uniforms.${_c(y)}; ${y}++) {`),k.push("}")});let $=M?[...p,`let sum = ${o.map((v,y)=>v.getByIndices(`input${y}Indices`)).join(" * ")};`]:[...p,u,...b,..._,d,...g,f,...k];return`
            ${c.registerUniforms(a.map(v=>({name:`${_c(v)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...o,i)}

            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${i.offsetToIndices("global_idx")};
            ${o.map((v,y)=>`var input${y}Indices: ${o[y].type.indices};`).join(`
`)}
            ${$.join(`
`)};
            ${i.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let c=a.filter(d=>t.symbolToInfo.has(d)).map(d=>{var u;return{type:12,data:((u=t.symbolToInfo.get(d))==null?void 0:u.dimValue)||0}});c.push({type:12,data:n});let p=e.map((d,u)=>[...ct(d)]).reduce((d,u)=>d.concat(u),c);return p.push(...ct(s)),{outputs:[{dims:s,dataType:r}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:p}},getShaderSource:l}},Yy=(e,r)=>{let t=new Vg(e.inputs,r.equation),s=t.outputDims,o=e.inputs.map((n,i)=>n.dims);e.compute(Ug(o,e.inputs[0].dataType,t,s))},Zy=e=>{let r=e.equation.replace(/\s+/g,"");return Ut({equation:r})}}),Wg,fc,Gg,Kg,e0,Ux=Ve(()=>{gt(),Et(),Pt(),Wg=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=t.length<r.length?0:t.length-r.length,o=r.length<t.length?0:r.length-t.length;for(;s<t.length&&o<r.length;++s,++o)if(t[s]!==r[o]&&t[s]!==1&&r[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},fc=(e,r)=>{let t=e.length-r.length,s=[];for(let o=0;o<t;++o)s.push(e[o]);for(let o=0;o<r.length;++o)s.push(r[o]===1?e[o+t]:r[o]);return s},Gg=(e,r)=>e.length>r.length?fc(e,r):fc(r,e),Kg=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=Gg(r,t),o=e[0].dataType,n=o===9||ye.size(r)===1,i=o===9||r.length>0&&r[r.length-1]%4===0?4:1,a=n||s.length>0&&s[s.length-1]%4===0?4:1,l=Math.ceil(ye.size(s)/a),c=d=>{let u=$e("input",o,r.length,i),f=at("output",o,s.length,a),_;if(o===9){let b=(k,g,M="")=>`
          let outputIndices${g} = ${f.offsetToIndices(`outputOffset + ${g}u`)};
          let offset${g} = ${u.broadcastedIndicesToOffset(`outputIndices${g}`,f)};
          let index${g} = offset${g} / 4u;
          let component${g} = offset${g} % 4u;
          ${k}[${g}] = ${M}(${u.getByOffset(`index${g}`)}[component${g}]);
        `;_=`
        let outputOffset = global_idx * ${a};
        var data = vec4<u32>(0);
        ${b("data",0,"u32")}
        ${b("data",1,"u32")}
        ${b("data",2,"u32")}
        ${b("data",3,"u32")}
        ${f.setByOffset("global_idx","data")}
      }`}else _=`
        let outputIndices = ${f.offsetToIndices(`global_idx * ${a}`)};
        let inputOffset = ${u.broadcastedIndicesToOffset("outputIndices",f)};
        let data = ${f.type.value}(${u.getByOffset(`inputOffset / ${i}`)});
        ${f.setByOffset("global_idx","data")}
      }`;return`
    ${d.registerUniform("vec_size","u32").declareVariables(u,f)}
    ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${_}`},p=[{type:12,data:l},...ct(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${i}${a}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p})}},e0=e=>{Wg(e.inputs),e.compute(Kg(e.inputs),{inputs:[0]})}}),Hg,t0,Wx=Ve(()=>{gt(),Et(),Pt(),bu(),Hg=e=>{let r=e[0].dataType,t=ye.size(e[0].dims),s=ye.size(e[1].dims),o=s%4===0,n=i=>{let a=$e("x",r,[1],4),l=$e("bias",r,[1],4),c=at("y",r,[1],4),p=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],d=f=>`
      let bias${f}_offset: u32 = (global_idx * 4 + ${f}) % uniforms.bias_size;
      let bias${f} = ${l.getByOffset(`bias${f}_offset / 4`)}[bias${f}_offset % 4];`,u=o?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${d(0)}${d(1)}${d(2)}${d(3)}
      let bias = ${a.type.value}(bias0, bias1, bias2, bias3);`;return`${i.registerUniforms(p).declareVariables(a,l,c)}

    ${qc(Hr(r))}

    ${i.mainStart(no)}
      ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${a.getByOffset("global_idx")};
      ${u}
      let x_in = x + bias;
      ${c.setByOffset("global_idx",Qc("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${o}`,inputDependencies:["type","type"]},getShaderSource:n,getRunData:i=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(t/no/4)}})}},t0=e=>{e.inputs.length<2||ye.size(e.inputs[1].dims)===0?yy(e):e.compute(Hg(e.inputs))}}),qg,Qg,r0,s0,Gx=Ve(()=>{gt(),Et(),dr(),Pt(),qg=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Qg=(e,r)=>{let t=e[0].dims,s=e[1].dims,o=t.length,n=ye.normalizeAxis(r.axis,o),i=t.slice(0);i.splice(n,1,...s);let a=t[n],l=e[0].dataType===9?4:1,c=Math.ceil(ye.size(i)/l),p=[{type:12,data:c},{type:6,data:a},{type:12,data:n},...ct(e[0].dims,e[1].dims,i)],d=u=>{let f=$e("data",e[0].dataType,e[0].dims.length,l),_=$e("inputIndices",e[1].dataType,e[1].dims.length),b=at("output",e[0].dataType,i.length,l),k=M=>{let $=s.length,v=`var indicesIndices${M}  = ${_.type.indices}(0);`;for(let y=0;y<$;y++)v+=`${$>1?`indicesIndices${M}[${y}]`:`indicesIndices${M}`} = ${i.length>1?`outputIndices${M}[uniforms.axis + ${y}]`:`outputIndices${M}`};`;v+=`
          var idx${M} = ${_.getByIndices(`indicesIndices${M}`)};
          if (idx${M} < 0) {
            idx${M} = idx${M} + uniforms.axisDimLimit;
          }
          var dataIndices${M} : ${f.type.indices};
        `;for(let y=0,T=0;y<o;y++)y===n?(v+=`${o>1?`dataIndices${M}[${y}]`:`dataIndices${M}`} = u32(idx${M});`,T+=$):(v+=`${o>1?`dataIndices${M}[${y}]`:`dataIndices${M}`} = ${i.length>1?`outputIndices${M}[${T}]`:`outputIndices${M}`};`,T++);return v},g;if(e[0].dataType===9){let M=($,v,y="")=>`
          let outputIndices${v} = ${b.offsetToIndices(`outputOffset + ${v}u`)};
          ${k(v)};
          let offset${v} = ${f.indicesToOffset(`dataIndices${v}`)};
          let index${v} = offset${v} / 4u;
          let component${v} = offset${v} % 4u;
          ${$}[${v}] = ${y}(${f.getByOffset(`index${v}`)}[component${v}]);
        `;g=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${M("value",0,"u32")}
        ${M("value",1,"u32")}
        ${M("value",2,"u32")}
        ${M("value",3,"u32")}
        ${b.setByOffset("global_idx","value")}
      `}else g=`
      let outputIndices = ${b.offsetToIndices("global_idx")};
      ${k("")};
      let value = ${f.getByIndices("dataIndices")};
      ${b.setByOffset("global_idx","value")};
      `;return`
      ${u.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(f,_,b)}
      ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${g}
      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:d}},r0=e=>Ut({axis:e.axis}),s0=(e,r)=>{let t=e.inputs;qg(t),e.compute(Qg(e.inputs,r))}}),Xg,n0,o0,Kx=Ve(()=>{gt(),Et(),Pt(),Xg=(e,r,t,s,o,n,i,a,l)=>{let c=[{type:12,data:n},{type:12,data:s},{type:12,data:o},{type:12,data:t},{type:12,data:i},{type:12,data:a},{type:12,data:l}],p=[n];c.push(...ct(r.dims,p));let d=u=>{let f=$e("indices_data",r.dataType,r.dims.length),_=at("input_slice_offsets_data",12,1,1),b=[f,_],k=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:o.length},{name:"sizes_from_slice_dims_data",type:"u32",length:t.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${u.registerUniforms(k).declareVariables(...b)}
  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${o.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${t.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${o.length}_${t.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:p,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:c}),getShaderSource:d},{inputs:[r],outputs:[-1]})[0]},n0=(e,r)=>{let t=e.inputs,s=t[0].dims,o=t[0].dataType,n=t[1].dims,i=n[n.length-1],a=ye.sizeToDimension(n,n.length-1),l=ye.sizeFromDimension(s,r.batchDims+i),c=ye.sizeToDimension(s,r.batchDims),p=ye.sizeFromDimension(s,r.batchDims),d=a/c,u=new Array(i),f=l;for(let v=0;v<i;++v)u[i-1-v]=f,f*=s[r.batchDims+i-1-v];let _=Xg(e,t[1],u,r.batchDims,s,a,d,p,i),b=r.batchDims+i;if(b>s.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let k=n.slice(0,-1).concat(s.slice(b)),g=ye.size(k),M=[{type:12,data:g},{type:12,data:l},...ct(t[0].dims,_.dims,k)],$=v=>{let y=$e("data",t[0].dataType,t[0].dims.length),T=$e("slice_offsets",12,_.dims.length),x=at("output",t[0].dataType,k.length);return`
          ${v.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(y,T,x)}
            ${v.mainStart()}
            ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:k,dataType:o}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:M}),getShaderSource:$},{inputs:[t[0],_]})},o0=e=>({batchDims:e.batch_dims,cacheKey:""})}),Jg,Yg,i0,a0,Hx=Ve(()=>{gt(),Et(),dr(),Pt(),Jg=(e,r)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let t=ye.normalizeAxis(r.quantizeAxis,e[0].dims.length),s=r.blockSize,o=e[0],n=e[2],i=e.length===4?e[3]:void 0;if(n.dims.length!==o.dims.length||!o.dims.map((a,l)=>l===t?Math.ceil(a/s)===n.dims[l]:a===n.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(i){if(i.dataType!==o.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(i.dims.length!==n.dims.length||!i.dims.map((a,l)=>a===n.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Yg=(e,r)=>{let t=e[0].dims,s=e[1].dims,o=t.length,n=ye.normalizeAxis(r.gatherAxis,o),i=ye.normalizeAxis(r.quantizeAxis,o),a=t.slice(0);a.splice(n,1,...s);let l=ye.size(a),c=e[2].dataType,p=e[0].dataType===22,d=[{type:12,data:l},{type:12,data:i},{type:12,data:n},{type:12,data:r.blockSize},...ct(...e.map((f,_)=>f.dims),a)],u=f=>{let _=$e("data",e[0].dataType,e[0].dims.length),b=$e("inputIndices",e[1].dataType,e[1].dims.length),k=$e("scales",e[2].dataType,e[2].dims.length),g=e.length>3?$e("zeroPoint",e[3].dataType,e[3].dims.length):void 0,M=at("output",c,a.length),$=[_,b,k];g&&$.push(g);let v=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${f.registerUniforms(v).declareVariables(...$,M)}
        ${f.mainStart()}
        let output_indices = ${M.offsetToIndices("global_idx")};
        var indices_indices = ${b.type.indices}(0);
        ${s.length>1?`
          for (var i: u32 = 0; i < ${s.length}; i++) {
            let index = ${M.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${b.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${M.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${_.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${M.indicesGet("output_indices","i")};
          ${_.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${b.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${t[n]};
        }
        ${_.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${a.length}; i++) {
          let index = ${M.indicesGet("output_indices",`i + ${s.length} - 1`)};
          ${_.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${_.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${_.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${k.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${k.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${k.getByIndices("scale_indices")};
        ${g?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${g.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${g.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Hr(c)}(quantized_data - zero_point) * scale;
        ${M.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${e.filter((f,_)=>_!==1).map(f=>f.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(f,_)=>"rank")},getRunData:()=>({outputs:[{dims:a,dataType:c}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:u}},i0=(e,r)=>{let t=e.inputs;Jg(t,r),e.compute(Yg(e.inputs,r))},a0=e=>Ut({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),Zg,ew,l0,c0,qx=Ve(()=>{gt(),Et(),dr(),Pt(),Zg=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},ew=(e,r)=>{let t=e[0].dims,s=e[0].dataType,o=t.length,n=e[1].dims,i=e[1].dataType,a=ye.normalizeAxis(r.axis,o),l=t[a],c=n.slice(0),p=ye.size(c),d=$e("input",s,o),u=$e("indicesInput",i,n.length),f=at("output",s,c.length),_=[{type:12,data:p},{type:6,data:l},{type:12,data:a}];return _.push(...ct(t,n,c)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:_}),getShaderSource:b=>`
      ${b.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(d,u,f)}
      ${b.mainStart()}
      ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${f.offsetToIndices("global_idx")};

      var idx = ${u.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${d.type.indices}(outputIndices);
      ${d.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${d.getByIndices("inputIndices")};

      ${f.setByOffset("global_idx","value")};
  }`}},l0=e=>Ut({axis:e.axis}),c0=(e,r)=>{let t=e.inputs;Zg(t),e.compute(ew(e.inputs,r))}}),tw,rw,u0,d0,Qx=Ve(()=>{gt(),Et(),Pt(),tw=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},rw=(e,r)=>{let t=e[0].dims.slice(),s=e[1].dims.slice(),[o,n,i]=lb.getShapeOfGemmResult(t,r.transA,s,r.transB,e.length===3?e[2].dims:void 0),a=[o,n];if(!a)throw new Error("Can't use gemm on the given tensors");let l=16,c=Math.ceil(n/l),p=Math.ceil(o/l),d=!0,u=ye.size(a),f=[{type:12,data:d?c:u},{type:12,data:o},{type:12,data:n},{type:12,data:i},{type:1,data:r.alpha},{type:1,data:r.beta}],_=["type","type"];e.length===3&&(f.push(...ct(e[2].dims)),_.push("rank")),f.push(...ct(a));let b=g=>{let M="";r.transA&&r.transB?M="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?M="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?M="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(M="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let $=r.alpha===1?"":"value *= uniforms.alpha;",v=$e("a",e[0].dataType,e[0].dims),y=$e("b",e[1].dataType,e[1].dims),T=v.type.value,x=null,P=[v,y];e.length===3&&(x=$e("c",e[2].dataType,e[2].dims.length),P.push(x));let O=at("output",e[0].dataType,a.length);P.push(O);let L=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${g.registerUniforms(L).declareVariables(...P)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${T}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${M}
    }

    ${$}
    ${x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",O)}; value += ${T}(uniforms.beta) * ${x.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},k=g=>{let M=$e("a",e[0].dataType,e[0].dims),$=$e("b",e[1].dataType,e[1].dims),v=null,y=[M,$];e.length===3&&(v=$e("c",e[2].dataType,e[2].dims.length),y.push(v));let T=at("output",e[0].dataType,a.length);y.push(T);let x=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],P="",O="";r.transA&&r.transB?(O=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${M.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,P="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(O=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${M.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,P="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(O=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${M.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,P="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!r.transA&&!r.transB&&(O=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${M.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,P="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let L=r.alpha===1?"":"value *= uniforms.alpha;";return`
  ${g.registerUniforms(x).declareVariables(...y)}
  var<workgroup> tile_a: array<array<${M.type.storage}, ${l}>, ${l}>;
  var<workgroup> tile_b: array<array<${$.type.storage}, ${l}>, ${l}>;
  ${g.mainStart([l,l,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${l};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${l};
    let num_tiles = (uniforms.K - 1) / ${l} + 1;
    var k_start = 0u;
    var value = ${T.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${O}
      k_start = k_start + ${l};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${l}; k++) {
        ${P}
      }
      workgroupBarrier();
    }

    ${L}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${v!=null?`let cOffset = ${v.broadcastedIndicesToOffset("vec2(m, n)",T)}; value += ${T.type.value}(uniforms.beta) * ${v.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return d?{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:c*p},programUniforms:f}),getShaderSource:k}:{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:f}),getShaderSource:b}},u0=e=>{let r=e.transA,t=e.transB,s=e.alpha,o=e.beta;return{transA:r,transB:t,alpha:s,beta:o,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},d0=(e,r)=>{tw(e.inputs),e.compute(rw(e.inputs,r))}}),Os,Rs,Tn,En,sw,nw,ow,iw,aw,lw,cw,uw,p0,m0,Xx=Ve(()=>{gt(),Et(),dr(),Pt(),[Os,Rs,Tn,En]=[0,1,2,3],sw=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},nw=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,ow=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,iw=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,aw=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,lw=(e,r,t)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${r} {
     var pixel = ${r}(0);
     var indices = vec4<u32>(0);
     indices[${Os}] = batch;
     indices[${Rs}] = channel;`+(()=>{switch(t.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${Tn}] = u32(r);
            indices[${En}] = u32(c);
          } else {
            return ${r}(0);
          }
        `;case"border":return`
          indices[${Tn}] = u32(clamp(r, 0, H - 1));
          indices[${En}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${Tn}] = gs_reflect(r, border[1], border[3]);
          indices[${En}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${t.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,cw=(e,r,t)=>(()=>{switch(t.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Os}], indices[${Rs}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Os}], indices[${Rs}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Os}], indices[${Rs}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Os}], indices[${Rs}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Os}], indices[${Rs}], border);

          let dx2 = ${r}(f32(x2) - x);
          let dx1 = ${r}(x - f32(x1));
          let dy2 = ${r}(f32(y2) - y);
          let dy1 = ${r}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${r}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Os}], indices[${Rs}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${t.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,uw=(e,r)=>{let t=$e("x",e[0].dataType,e[0].dims.length),s=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],o=$e("grid",e[1].dataType,s.length,2),n=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];r.format==="NHWC"&&(n=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[Os,Rs,Tn,En]=[0,3,1,2]);let i=at("output",e[0].dataType,n.length),a=t.type.value,l=ye.size(n),c=[{type:12,data:l},...ct(e[0].dims,s,n)],p=d=>`
  ${d.registerUniform("output_size","u32").declareVariables(t,o,i)}
  ${nw}
  ${ow(a)}
  ${iw(r)}
  ${aw(r)}
  ${lw(t,a,r)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${Tn}]);
      let W_in = i32(uniforms.x_shape[${En}]);

      ${r.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${i.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${Os}], indices[${Tn}], indices[${En}]);
      let nxy = ${o.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${cw(i,a,r)}
  }`;return{name:"GridSample",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:["type","type"]},getRunData:d=>{let u=ye.size(n);return{outputs:[{dims:n,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:c}},getShaderSource:p}},p0=(e,r)=>{sw(e.inputs),e.compute(uw(e.inputs,r))},m0=e=>Ut({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),Yr,dw,h0,gc,pw,Ho,_0,f0=Ve(()=>{gt(),Et(),dr(),fu(),Mu(),Pt(),on(),Yr=(e,r)=>e.length>r&&e[r].dims.length>0?e[r]:void 0,dw=(e,r)=>{let t=e[0],s=Yr(e,1),o=Yr(e,2),n=Yr(e,3),i=Yr(e,4),a=Yr(e,5),l=Yr(e,6),c=Yr(e,7);if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let p=t.dims[0],d=t.dims[1],u=t.dims.length===3?t.dims[2]:r.numHeads*t.dims[4],f=d,_=0,b=0,k=Math.floor(u/r.numHeads);if(l&&c&&ye.size(l.dims)&&ye.size(c.dims)){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==p||l.dims[1]!==r.numHeads||l.dims[3]!==k)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==p||c.dims[1]!==r.numHeads||c.dims[3]!==k)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==c.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(c.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');_=l.dims[2],b=l.dims[2]}else if(l&&ye.size(l.dims)||c&&ye.size(c.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let g;if(s&&ye.size(s.dims)>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(s.dims[2]!==t.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');g=2,f=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==k)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');g=5,f=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==k)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');g=0,f=s.dims[2]}}else{if(t.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(t.dims[2]!==r.numHeads||t.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');g=3}if(n&&ye.size(n.dims)>0){if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&s.dims.length===5&&s.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let M=_+f,$=0;if(i&&ye.size(i.dims)>0){$=8;let x=i.dims;throw x.length===1?x[0]===p?$=1:x[0]===3*p+2&&($=3):x.length===2&&x[0]===p&&x[1]===M&&($=5),$===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let v=!1,y=u;if(o&&ye.size(o.dims)>0){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(f!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');y=o.dims[2]}else{if(f!==o.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');y=o.dims[1]*o.dims[3],v=!0}}let T=!1;if(i&&ye.size(i.dims)>0)throw new Error("Key padding mask is not supported");if(a&&ye.size(a.dims)>0){if(a.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(a.dims[0]!==p||a.dims[1]!==r.numHeads||a.dims[2]!==d||a.dims[3]!==M)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:d,pastSequenceLength:_,kvSequenceLength:f,totalSequenceLength:M,maxSequenceLength:b,inputHiddenSize:0,hiddenSize:u,vHiddenSize:y,headSize:k,vHeadSize:Math.floor(y/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:$,scale:r.scale,broadcastResPosBias:T,passPastInKv:v,qkvFormat:g}},h0=e=>Ut({...e}),gc=Ut({perm:[0,2,1,3]}),pw=(e,r,t,s,o,n,i)=>{let a=[s,o,n],l=ye.size(a),c=[{type:12,data:l},{type:12,data:i},{type:12,data:n}],p=d=>{let u=at("qkv_with_bias",r.dataType,a),f=$e("qkv",r.dataType,a),_=$e("bias",t.dataType,a),b=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${d.registerUniforms(b).declareVariables(f,_,u)}
  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:p},{inputs:[r,t],outputs:[-1]})[0]},Ho=(e,r,t,s,o,n,i,a)=>{let l=n;if(i&&ye.size(i.dims)>0){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=pw(e,n,i,r,s,t*o,a),l=l.reshape([r,s,t,o]),t===1||s===1?l:e.compute(os(l,gc.perm),{inputs:[l],outputs:[-1]})[0]}else return n.dims.length===3&&(l=n.reshape([r,s,t,o])),t===1||s===1?l:e.compute(os(l,gc.perm),{inputs:[l],outputs:[-1]})[0]},_0=(e,r)=>{let t=dw(e.inputs,r),s=e.inputs[0],o=Yr(e.inputs,1),n=Yr(e.inputs,2),i=Yr(e.inputs,3),a=Yr(e.inputs,4),l=Yr(e.inputs,5),c=Yr(e.inputs,6),p=Yr(e.inputs,7);if(s.dims.length===5)throw new Error("Packed QKV is not implemented");if((o==null?void 0:o.dims.length)===5)throw new Error("Packed KV is not implemented");let d=o&&n&&o.dims.length===4&&n.dims.length===4,u=Ho(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,s,i,0);if(d)return Jo(e,u,o,n,a,void 0,c,p,l,t);if(!o||!n)throw new Error("key and value must be provided");let f=Ho(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,o,i,t.hiddenSize),_=Ho(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,n,i,2*t.hiddenSize);Jo(e,u,f,_,a,void 0,c,p,l,t)}}),mw,hw,_w,fw,eu,g0,w0,M0=Ve(()=>{gt(),Et(),dr(),Pt(),mw=e=>{if(!e||e.length<1)throw new Error("too few inputs")},hw=(e,r)=>{let t=[],s=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(o=>t.push(Number(o))),s=t.length),Ut({numOutputs:s,axis:r.axis,splitSizes:t})},_w=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${lt("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,fw=e=>{let r=e.length,t=[];for(let s=0;s<r;++s){let o=e[s].setByIndices("indices","input[global_idx]");r===1?t.push(o):s===0?t.push(`if (output_number == ${s}u) { ${o} }`):s===r-1?t.push(`else { ${o} }`):t.push(`else if (output_number == ${s}) { ${o} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${t.join(`
`)}
      }`},eu=(e,r)=>{let t=e[0].dims,s=ye.size(t),o=e[0].dataType,n=ye.normalizeAxis(r.axis,t.length),i=new Array(r.numOutputs),a=$e("input",o,t.length),l=new Array(r.numOutputs),c=[],p=[],d=0,u=[{type:12,data:s}];for(let _=0;_<r.numOutputs;_++){d+=r.splitSizes[_],l[_]=d;let b=t.slice();b[n]=r.splitSizes[_],p.push(b),i[_]=at(`output${_}`,o,b.length),c.push({dims:p[_],dataType:e[0].dataType})}u.push({type:12,data:l},...ct(t,...p));let f=_=>`
  ${_.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(a,...i)}
  ${_w(l.length)}
  ${fw(i)}

  ${_.mainStart()}
    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",n)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${lt("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${a.indicesSet("indices",n,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:f,getRunData:()=>({outputs:c,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},g0=(e,r)=>{mw(e.inputs);let t=e.inputs.length===1?r:hw(e.inputs,r);e.compute(eu(e.inputs,t),{inputs:[0]})},w0=e=>{let r=e.axis,t=e.splitSizes,s=e.numOutputs<0?t.length:e.numOutputs;if(s!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Ut({axis:r,numOutputs:s,splitSizes:t})}}),gw,_a,b0,y0=Ve(()=>{gt(),Et(),dr(),Pt(),gw=(e,r)=>{let[t,s,o,n]=e,{numHeads:i,rotaryEmbeddingDim:a}=r;if(t.dims.length!==3&&t.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${t.dims.length}`);if(!ye.areEqual(s.dims,[])&&!ye.areEqual(s.dims,[1])&&s.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${s.dims.length}`);if(o.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${o.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(!ye.areEqual(o.dims,n.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(a>0&&i===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=t.dims[0],c=t.dims[t.dims.length-2],p=o.dims[0],d=ye.sizeFromDimension(t.dims,1)/c,u=a===0?o.dims[1]*2:d/i;if(a>u)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(s.dims.length===2){if(l!==s.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${s.dims[0]}`);if(c!==s.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${s.dims[1]}`)}if(u/2!==o.dims[1]&&a/2!==o.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${o.dims[1]}`);if(c>p)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},_a=(e,r)=>{let{interleaved:t,numHeads:s,rotaryEmbeddingDim:o,scale:n}=r,i=e[0].dims[0],a=ye.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],c=a/l,p=e[2].dims[1],d=o===0?p*2:c/s,u=new Array(i,l,c/d,d-p),f=ye.computeStrides(u),_=[{type:1,data:n},{type:12,data:u},{type:12,data:f},...e[0].dims.length===3?new Array({type:12,data:[a,c,d,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[a,d,l*d,1]}):[],...ct(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],b=k=>{let g=$e("input",e[0].dataType,e[0].dims.length),M=$e("position_ids",e[1].dataType,e[1].dims.length),$=$e("cos_cache",e[2].dataType,e[2].dims.length),v=$e("sin_cache",e[3].dataType,e[3].dims.length),y=at("output",e[0].dataType,e[0].dims.length);return k.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:u.length},{name:"global_strides",type:"u32",length:f.length},{name:"input_output_strides",type:"u32",length:f.length}]),`
        ${k.declareVariables(g,M,$,v,y)}

        ${k.mainStart(no)}
          let half_rotary_emb_dim = uniforms.${$.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${k.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${M.broadcastedIndicesToOffset("bsnh.xy",at("",M.type.tensor,2))};
            let position_id =
                u32(${M.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${t});
            let j = i + select(half_rotary_emb_dim, 1, ${t});
            let re = ${g.getByOffset("i")} * ${$.get("position_id","bsnh[3]")} -
                ${g.getByOffset("j")} * ${v.get("position_id","bsnh[3]")};
            ${y.setByOffset("i","re")}
            let im = ${g.getByOffset("i")} * ${v.get("position_id","bsnh[3]")} +
                ${g.getByOffset("j")} * ${$.get("position_id","bsnh[3]")};
            ${y.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${y.setByOffset("k",g.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Ut({interleaved:t}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:b,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ye.size(u)/no)},programUniforms:_})}},b0=(e,r)=>{gw(e.inputs,r),e.compute(_a(e.inputs,r))}}),ww,Mw,wc,bw,v0,Jx=Ve(()=>{dr(),gt(),Mu(),f0(),M0(),on(),y0(),Pt(),ww=(e,r)=>{if(r.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let t=e[0],s=e[1],o=e[2],n=e[3],i=e[4];if(r.doRotary!==0&&e.length<=7)throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(r.localWindowSize!==-1)throw new Error("Local attention is not supported");if(r.softcap!==0)throw new Error("Softcap is not supported");if(r.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let a=!1,l=t.dims[0],c=t.dims[1],p=t.dims.length===3?a?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],d=c,u=0,f=!s||s.dims.length===0,_=Math.floor(f?p/(r.numHeads+2*r.kvNumHeads):p/r.numHeads);f&&(p=_*r.numHeads);let b=n&&n.dims.length!==0,k=i&&i.dims.length!==0;if(b&&n.dims.length===4&&n.dims[0]===l&&n.dims[1]!==r.kvNumHeads&&n.dims[2]===r.kvNumHeads&&n.dims[3]===_)throw new Error("BSNH pastKey/pastValue is not supported");if(b&&k){if(n.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(i.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');u=n.dims[2]}else if(b||k)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let g=1;if(s&&s.dims.length>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(t.dims[2]%s.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');d=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==_)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');d=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==_)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=s.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');g=3}let M=0,$=!1,v=r.kvNumHeads?_*r.kvNumHeads:p;if(o&&o.dims.length>0){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(d!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=o.dims[2]}else{if(d!==o.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');v=o.dims[1]*o.dims[3],$=!0}}let y=e.length>4?e[5]:void 0;if(y&&y.dims.length!==1&&y.dims[0]!==l)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:c,pastSequenceLength:u,kvSequenceLength:d,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:p,vHiddenSize:v,headSize:_,vHeadSize:Math.floor(v/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:M,scale:r.scale,broadcastResPosBias:!1,passPastInKv:$,qkvFormat:g}},Mw=Ut({perm:[0,2,1,3]}),wc=(e,r,t)=>{let s=r,o=t.kvNumHeads;return r.dims.length===3&&t.kvSequenceLength!==0&&(s=r.reshape([t.batchSize,t.kvSequenceLength,o,t.headSize]),s=e.compute(os(s,Mw.perm),{inputs:[s],outputs:[-1]})[0]),s},bw=(e,r,t,s)=>{let o=7,n=["type","type"],i=[e*r],a=e*r,l=[{type:12,data:a},{type:12,data:r},{type:12,data:e}],c=p=>{let d=$e("seq_lens",t.dataType,t.dims),u=$e("total_seq_lens",s.dataType,s.dims),f=at("pos_ids",o,i),_=[{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}];return`
  ${p.registerUniforms(_).declareVariables(d,u,f)}
  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let total_sequence_length = u32(${u.getByOffset("0")});
    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;
    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;
    let batch_idx = global_idx / uniforms.sequence_length;
    let sequence_idx = i32(global_idx % uniforms.sequence_length);
    var pos_id: i32 = 0;
    let seqlen = ${d.getByOffset("batch_idx")};
    let total_seqlen = seqlen + 1;
    if (is_first_prompt) {
      if (sequence_idx < total_seqlen) {
        pos_id = sequence_idx;
      } else {
        pos_id = 1;
      }
      ${f.setByOffset("global_idx","pos_id")}
    } else if (is_subsequent_prompt) {
      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);
      if (past_seqlen + sequence_idx < total_seqlen) {
        pos_id = past_seqlen + sequence_idx;
      } else {
        pos_id = 1;
      }
      ${f.setByOffset("global_idx","pos_id")}
    } else if (global_idx < uniforms.batch_size) {
      ${f.setByOffset("global_idx","seqlen")}
    };
  }
  `};return{name:"GeneratePositionIds",shaderCache:{hint:`${e};${r}`,inputDependencies:n},getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:l}),getShaderSource:c}},v0=(e,r)=>{var v;let t=ww(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((v=e.inputs[1])==null?void 0:v.dims.length)===5)throw new Error("Packed KV is not implemented");let s=e.inputs[0],o=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,n=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,i=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,a=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,l=e.inputs.length>4?e.inputs[5]:void 0,c=e.inputs.length>5?e.inputs[6]:void 0,p=t.kvNumHeads?t.kvNumHeads:t.numHeads,d=Ut({axis:2,numOutputs:3,splitSizes:[t.numHeads*t.headSize,p*t.headSize,p*t.headSize]}),[u,f,_]=!o&&!n?e.compute(eu([s],d),{inputs:[s],outputs:[-1,-1,-1]}):[s,o,n],b,k;if(r.doRotary){let y=e.compute(bw(t.batchSize,t.sequenceLength,l,c),{inputs:[l,c],outputs:[-1]})[0],T=e.inputs[7],x=e.inputs[8],P=Ut({interleaved:r.rotaryInterleaved!==0,numHeads:t.numHeads,rotaryEmbeddingDim:0,scale:r.scale}),O=[u,y,T,x],L=[-1];b=e.compute(_a(O,P),{inputs:O,outputs:L})[0],O.splice(0,1,f);let G=Ut({interleaved:r.rotaryInterleaved!==0,numHeads:t.kvNumHeads,rotaryEmbeddingDim:0,scale:r.scale});k=e.compute(_a(O,G),{inputs:O,outputs:L})[0]}let g=Ho(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,r.doRotary?b:u,void 0,0),M=wc(e,r.doRotary?k:f,t),$=wc(e,_,t);Jo(e,g,M,$,void 0,void 0,i,a,void 0,t,l,c)}}),Mc,yw,vw,x0,Yx=Ve(()=>{gt(),Et(),on(),Pt(),Mc=(e,r,t,s,o,n,i,a)=>{let l=lr(n),c=l===1?"f32":`vec${l}f`,p=l===1?"vec2f":`mat2x${l}f`,d=o*i,u=64;d===1&&(u=256);let f=[o,i,n/l],_=[o,i,2],b=["rank","type","type"],k=[];k.push(...ct(f,_));let g=M=>{let $=$e("x",r.dataType,3,l),v=$e("scale",t.dataType,t.dims),y=$e("bias",s.dataType,s.dims),T=at("output",1,3,2),x=[$,v,y,T];return`
  var<workgroup> workgroup_shared : array<${p}, ${u}>;
  const workgroup_size = ${u}u;
  ${M.declareVariables(...x)}
  ${M.mainStart(u)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${c}(0);
    var squared_sum = ${c}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${c}(${$.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${p}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${nn("workgroup_shared[0][0]",l)} / f32(hight * ${l});
      let squared_sum_final = ${nn("workgroup_shared[0][1]",l)} / f32(hight * ${l});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${a}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${a};${u}`,inputDependencies:b},getRunData:()=>({outputs:[{dims:_,dataType:1}],dispatchGroup:{x:d},programUniforms:k}),getShaderSource:g},{inputs:[r,t,s],outputs:[-1]})[0]},yw=(e,r,t)=>{let s=r[0].dims,o=s,n=2,i=s[0],a=s[1],l=ye.sizeFromDimension(s,n),c=lr(l),p=ye.size(o)/c,d=Mc(e,r[0],r[1],r[2],i,l,a,t.epsilon),u=[i,a,l/c],f=[i,a],_=["type","none"],b=k=>{let g=$e("x",r[0].dataType,u.length,c),M=$e("scale_shift",1,f.length,2),$=at("output",r[0].dataType,u.length,c),v=[g,M,$];return`
  ${k.registerUniform("output_size","u32").declareVariables(...v)}
  ${k.mainStart()}
  ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${$.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${M.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${g.getByOffset("global_idx")} * ${$.type.value}(scale_shift.x) + ${$.type.value}(scale_shift.y);
      ${$.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${c}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},...ct(u,f,u)]}),getShaderSource:b},{inputs:[r[0],d]})},vw=(e,r,t)=>{let s=r[0].dims,o=s,n=s[0],i=s[s.length-1],a=ye.sizeFromDimension(s,1)/i,l=lr(i),c=ye.size(o)/l,p=[{type:12,data:a},{type:12,data:Math.floor(i/l)}],d=["type","type"],u=!1,f=[0,s.length-1];for(let g=0;g<s.length-2;g++)u=u||s[g+1]!==1,f.push(g+1);u=u&&s[s.length-1]!==1;let _=u?e.compute(os(e.inputs[0],f),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:s.length},(g,M)=>s[f[M]])),b=Mc(e,_,r[1],r[2],n,a,i,t.epsilon),k=g=>{let M=Fr(r[0].dataType),$=l===1?"vec2f":`mat${l}x2f`,v=x=>{let P=x===0?"x":"y",O=l===1?"f32":`vec${l}f`;switch(l){case 1:return`${M}(${O}(scale.${P}))`;case 2:return`vec2<${M}>(${O}(scale[0].${P}, scale[1].${P}))`;case 4:return`vec4<${M}>(${O}(scale[0].${P}, scale[1].${P}, scale[2].${P}, scale[3].${P}))`;default:throw new Error(`Not supported compoents ${l}`)}},y=$e("input",r[0].dataType,r[0].dims,l),T=at("output",r[0].dataType,o,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${y.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${$}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${T.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${g.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${v(0)}, ${v(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:k},{inputs:[r[0],b]})},x0=(e,r)=>{r.format==="NHWC"?vw(e,e.inputs,r):yw(e,e.inputs,r)}}),xw,Tw,T0,Zx=Ve(()=>{gt(),Et(),Pt(),xw=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Tw=(e,r,t)=>{let s=r.simplified,o=e[0].dims,n=e[1],i=!s&&e[2],a=o,l=ye.normalizeAxis(r.axis,o.length),c=ye.sizeToDimension(o,l),p=ye.sizeFromDimension(o,l),d=ye.size(n.dims),u=i?ye.size(i.dims):0;if(d!==p||i&&u!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${u}`);let f=[];for(let y=0;y<o.length;++y)y<l?f.push(o[y]):f.push(1);let _=lr(p),b=["type","type"],k=[{type:12,data:c},{type:1,data:p},{type:12,data:Math.floor(p/_)},{type:1,data:r.epsilon}];i&&b.push("type");let g=t>1,M=t>2,$=y=>{let T=Fr(e[0].dataType),x=[$e("x",e[0].dataType,e[0].dims,_),$e("scale",n.dataType,n.dims,_)];i&&x.push($e("bias",i.dataType,i.dims,_)),x.push(at("output",e[0].dataType,a,_)),g&&x.push(at("mean_data_output",1,f)),M&&x.push(at("inv_std_output",1,f));let P=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${y.registerUniforms(P).declareVariables(...x)}
  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Gc("f32",_)};
    var mean_square_vector = ${Gc("f32",_)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${ro(T,_,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${nn("mean_vector",_)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${nn("mean_square_vector",_)} / uniforms.norm_size ${s?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${ro(T,_,"x[j + offset]")};
      let f32scale = ${ro(T,_,"scale[j]")};
      output[j + offset] = ${x[0].type.value}((f32input ${s?"":"- mean"}) * inv_std_dev * f32scale
        ${i?`+ ${ro(T,_,"bias[j]")}`:""}
      );
    }

    ${g?"mean_data_output[global_idx] = mean":""};
    ${M?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},v=[{dims:a,dataType:e[0].dataType}];return g&&v.push({dims:f,dataType:1}),M&&v.push({dims:f,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${_};${t};${s}`,inputDependencies:b},getRunData:()=>({outputs:v,dispatchGroup:{x:Math.ceil(c/64)},programUniforms:k}),getShaderSource:$}},T0=(e,r)=>{xw(e.inputs),e.compute(Tw(e.inputs,r,e.outputCount))}}),Ew,E0,eT=Ve(()=>{Et(),Tu(),Eu(),Ew=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},E0=e=>{Ew(e.inputs);let r=so.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can't use matmul on the given tensors");let t=r[r.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];if(t<8&&s<8)e.compute(xu(e.inputs,{activation:""},r));else{let o=r[r.length-2],n=ye.size(e.inputs[0].dims.slice(0,-2)),i=ye.size(e.inputs[1].dims.slice(0,-2));if(n!==1&&o===1&&i===1){let a=e.inputs[0].reshape([1,n,s]),l=e.inputs[1].reshape([1,s,t]),c=[1,n,t],p=[a,l];e.compute(ha(p,{activation:""},r,c),{inputs:p})}else e.compute(ha(e.inputs,{activation:""},r))}}}),Pw,Cw,Sw,P0,C0,tT=Ve(()=>{gt(),Et(),dr(),Pt(),Pw=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],s=t.dims.length;if(t.dims[s-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let o=Math.floor((r.k+r.blockSize-1)/r.blockSize),n=r.blockSize/8*r.bits,i=e[1];if(!ye.areEqual(i.dims,[r.n,o,n]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let a=e[2].dims;if(ye.size(a)!==r.n*o)throw new Error("scales input size error.");if(e.length===4){let l=e[3].dims,c=r.bits>4?r.n*o:r.n*Math.floor((o+1)/2);if(ye.size(l)!==c)throw new Error("zeroPoints input size error.")}},Cw=(e,r)=>{let t=e[0].dims,s=t.length,o=t[s-2],n=r.k,i=r.n,a=t.slice(0,s-2),l=ye.size(a),c=e[1].dims[2]/4,p=e[0].dataType,d=lr(r.k),u=lr(c),f=lr(i),_=a.concat([o,i]),b=o>1&&i/f%2===0?2:1,k=ye.size(_)/f/b,g=64,M=[],$=[l,o,n/d],v=ye.convertShape(e[1].dims).slice();v.splice(-1,1,c/u),M.push(...ct($)),M.push(...ct(v)),M.push(...ct(e[2].dims)),e.length===4&&M.push(...ct(ye.convertShape(e[3].dims)));let y=[l,o,i/f];M.push(...ct(y));let T=x=>{let P=$.length,O=$e("a",e[0].dataType,P,d),L=$e("b",12,v.length,u),G=$e("scales",e[2].dataType,e[2].dims.length),K=[O,L,G],R=e.length===4?$e("zero_points",12,e[3].dims.length):void 0;R&&K.push(R);let te=y.length,H=at("output",e[0].dataType,te,f),ee=Fr(e[0].dataType),Z=(()=>{switch(d){case 1:return`array<${ee}, 8>`;case 2:return`mat4x2<${ee}>`;case 4:return`mat2x4<${ee}>`;default:throw new Error(`${d}-component is not supported.`)}})(),ne=()=>{let j=`
          // reuse a data
            var input_offset = ${O.indicesToOffset(`${O.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Z};
            for (var j: u32 = 0; j < ${8/d}; j++) {
              a_data[j] = ${O.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let F=0;F<f*b;F++)j+=`
            b_value = ${u===1?`b${F}_data`:`b${F}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Z}(${Array.from({length:4},(U,se)=>`${ee}(b_value_lower[${se}]), ${ee}(b_value_upper[${se}])`).join(", ")});
            b_dequantized_values = ${d===1?`${Z}(${Array.from({length:8},(U,se)=>`(b_quantized_values[${se}] - ${R?`zero_point${F}`:"zero_point"}) * scale${F}`).join(", ")});`:`(b_quantized_values - ${Z}(${Array(8).fill(`${R?`zero_point${F}`:"zero_point"}`).join(",")})) * scale${F};`};
            workgroup_shared[local_id.x * ${b} + ${Math.floor(F/f)}]${f>1?`[${F%f}]`:""} += ${Array.from({length:8/d},(U,se)=>`${d===1?`a_data[${se}] * b_dequantized_values[${se}]`:`dot(a_data[${se}], b_dequantized_values[${se}])`}`).join(" + ")};
          `;return j},he=()=>{let j=`
            var col_index = col * ${f};
            ${R?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${ee}(8);`}
            `;for(let F=0;F<f*b;F++)j+=`
            let scale${F} = ${G.getByOffset("col_index * nBlocksPerCol + block")};
            ${R?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${R.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${F} = ${ee}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return j},ue=()=>{let j=`col_index = col * ${f};`;for(let F=0;F<f*b;F++)j+=`
            let b${F}_data = ${L.getByIndices(`${L.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return j+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Z};
            var b_dequantized_values: ${Z};`,j};return`
        var<workgroup> workgroup_shared: array<${H.type.value}, ${b*g}>;
        ${x.declareVariables(...K,H)}
        ${x.mainStart([g,1,1])}
          let output_indices = ${H.offsetToIndices(`(global_idx / ${g}) * ${b}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${g}) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/d};
            ${he()}
            for (var word: u32 = 0; word < ${c}; word += ${u}) {
              ${ue()}
              for (var i: u32 = 0; i < ${u}; i++) {
                ${ne()}
                word_offset += ${8/d};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${b}) {
            var output_value: ${H.type.value} = ${H.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${g}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${b};
            }
            ${H.setByIndices(`${H.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${d};${u};${f};${b};${g}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:_,dataType:p}],dispatchGroup:{x:k},programUniforms:M}),getShaderSource:T}},Sw=(e,r)=>{let t=e[0].dims,s=t.length,o=t[s-2],n=r.k,i=r.n,a=t.slice(0,s-2),l=ye.size(a),c=e[1].dims[2]/4,p=e[0].dataType,d=lr(r.k),u=lr(c),f=a.concat([o,i]),_=128,b=i%8===0?8:i%4===0?4:1,k=_/b,g=k*u*8,M=g/d,$=g/r.blockSize,v=ye.size(f)/b,y=[],T=[l,o,n/d],x=ye.convertShape(e[1].dims).slice();x.splice(-1,1,c/u),y.push(...ct(T)),y.push(...ct(x)),y.push(...ct(e[2].dims)),e.length===4&&y.push(...ct(ye.convertShape(e[3].dims)));let P=[l,o,i];y.push(...ct(P));let O=L=>{let G=T.length,K=$e("a",e[0].dataType,G,d),R=$e("b",12,x.length,u),te=$e("scales",e[2].dataType,e[2].dims.length),H=[K,R,te],ee=e.length===4?$e("zero_points",12,e[3].dims.length):void 0;ee&&H.push(ee);let Z=P.length,ne=at("output",e[0].dataType,Z),he=Fr(e[0].dataType),ue=()=>{switch(d){case 1:return`
          let a_data0 = vec4<${he}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${he}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${he}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${he}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${d}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${K.type.value}, ${M}>;
        var<workgroup> inter_results: array<array<${ne.type.value}, ${k}>, ${b}>;
        ${L.declareVariables(...H,ne)}
        ${L.mainStart([k,b,1])}
          let output_indices = ${ne.offsetToIndices(`workgroup_index * ${b}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${$} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${M};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${M}; a_offset += ${_})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${K.getByIndices(`${K.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${K.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${$} + local_id.x;
            ${ee?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${ee.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${he}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${he}(8);`}
            let scale = ${te.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${R.getByIndices(`${R.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/d};
            for (var i: u32 = 0; i < ${u}; i++) {
              ${ue()}
              let b_value = ${u===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${he}>(${Array.from({length:4},(j,F)=>`${he}(b_value_lower[${F}]), ${he}(b_value_upper[${F}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${he}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(j,F)=>`${`dot(a_data${F}, b_dequantized_values[${F}])`}`).join(" + ")};
              word_offset += ${8/d};
            }
            workgroupBarrier();
          }

          if (local_idx < ${b}) {
            var output_value: ${ne.type.value} = ${ne.type.value}(0);
            for (var b = 0u; b < ${k}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${ne.setByIndices(`${ne.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${d};${u};${k};${b}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:p}],dispatchGroup:{x:v},programUniforms:y}),getShaderSource:O}},P0=(e,r)=>{Pw(e.inputs,r),r.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Sw(e.inputs,r)):e.compute(Cw(e.inputs,r))},C0=e=>Ut(e)}),$w,kw,Iw,Aw,Fw,Ow,Dw,Lw,S0,rT=Ve(()=>{gt(),Et(),Pt(),$w=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},kw=(e,r,t)=>{let s="";for(let o=r-1;o>=0;--o)s+=`
            k = i32(${e.indicesGet("indices",o)}) - ${lt("uniforms.pads",o,t)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${lt("uniforms.x_shape",o,r)})) {
              break;
            }
            offset += k * i32(${lt("uniforms.x_strides",o,r)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},Iw=(e,r,t)=>{let s="";for(let o=r-1;o>=0;--o)s+=`
                k = i32(${e.indicesGet("indices",o)}) - ${lt("uniforms.pads",o,t)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${lt("uniforms.x_shape",o,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${lt("uniforms.x_shape",o,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${lt("uniforms.x_strides",o,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},Aw=(e,r,t)=>{let s="";for(let o=r-1;o>=0;--o)s+=`
                k = i32(${e.indicesGet("indices",o)}) - ${lt("uniforms.pads",o,t)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${lt("uniforms.x_shape",o,r)})) {
                  k = i32(${lt("uniforms.x_shape",o,r)}) - 1;
                }
                offset += k * i32(${lt("uniforms.x_strides",o,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},Fw=(e,r,t)=>{let s="";for(let o=r-1;o>=0;--o)s+=`
                k = i32(${e.indicesGet("indices",o)}) - ${lt("uniforms.pads",o,t)};
                if (k < 0)  {
                  k += i32(${lt("uniforms.x_shape",o,r)}]);
                }
                if (k >= i32(${lt("uniforms.x_shape",o,r)})) {
                  k -= i32(${lt("uniforms.x_shape",o,r)});
                }
                offset += k * i32(${lt("uniforms.x_strides",o,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},Ow=(e,r,t)=>{switch(t.mode){case 0:return kw(e,r,t.pads.length);case 1:return Iw(e,r,t.pads.length);case 2:return Aw(e,r,t.pads.length);case 3:return Fw(e,r,t.pads.length);default:throw new Error("Invalid mode")}},Dw=(e,r)=>{let t=ye.padShape(e[0].dims.slice(),r.pads),s=e[0].dims,o=ye.size(t),n=[{type:12,data:o},{type:6,data:r.pads}],i=e.length>=3&&e[2].data;r.mode===0&&n.push({type:i?e[2].dataType:1,data:r.value}),n.push(...ct(e[0].dims,t));let a=["rank"],l=c=>{let p=at("output",e[0].dataType,t.length),d=$e("x",e[0].dataType,s.length),u=d.type.value,f=Ow(p,s.length,r),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&_.push({name:"constant_value",type:i?u:"f32"}),`
            ${c.registerUniforms(_).declareVariables(d,p)}
            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${p.offsetToIndices("global_idx")};

            var value = ${u}(0);
            ${f}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}${i}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ye.size(t)/64)},programUniforms:n}),getShaderSource:l}},Lw=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,o=e[0].dims.length,n=new Int32Array(2*o).fill(0);if(e.length>=4){let a=e[3].getBigInt64Array();for(let l=0;l<a.length;l++)n[Number(a[l])]=Number(t[l]),n[Number(a[l])+o]=Number(t[l+a.length])}else t.forEach((a,l)=>n[Number(l)]=Number(a));let i=[];return n.forEach(a=>i.push(a)),{mode:r.mode,value:s,pads:i}}else return r},S0=(e,r)=>{$w(e.inputs);let t=Lw(e.inputs,r);e.compute(Dw(e.inputs,t),{inputs:[0]})}}),jo,bc,yc,vc,xc,zw,Bw,Tc,Ec,$0,k0,Pc,I0,A0,Cc,F0,O0,D0,L0,sT=Ve(()=>{Ss(),gt(),Et(),Pt(),jo=e=>{if(Zt.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},bc=(e,r,t)=>{let s=r.format==="NHWC",o=e.dims.slice();s&&o.splice(1,0,o.pop());let n=Object.hasOwnProperty.call(r,"dilations"),i=r.kernelShape.slice(),a=r.strides.slice(),l=n?r.dilations.slice():[],c=r.pads.slice();pa.adjustPoolAttributes(t,o,i,a,l,c);let p=pa.computePoolOutputShape(t,o,a,l,i,c,r.autoPad),d=Object.assign({},r);n?Object.assign(d,{kernelShape:i,strides:a,pads:c,dilations:l,cacheKey:r.cacheKey}):Object.assign(d,{kernelShape:i,strides:a,pads:c,cacheKey:r.cacheKey});let u=p.slice();return u.push(u.splice(1,1)[0]),[d,s?u:p]},yc=(e,r)=>{let t=r.format==="NHWC",s=ye.size(e),o=ye.size(r.kernelShape),n=[{type:12,data:s},{type:12,data:o}],i=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let a=r.kernelShape[r.kernelShape.length-1],l=r.strides[r.strides.length-1],c=r.pads[r.pads.length/2-1],p=r.pads[r.pads.length-1],d=!!(c+p);n.push({type:12,data:a},{type:12,data:l},{type:12,data:c},{type:12,data:p}),i.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let u=!1;if(r.kernelShape.length===2){let f=r.kernelShape[r.kernelShape.length-2],_=r.strides[r.strides.length-2],b=r.pads[r.pads.length/2-2],k=r.pads[r.pads.length-2];u=!!(b+k),n.push({type:12,data:f},{type:12,data:_},{type:12,data:b},{type:12,data:k}),i.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[n,i,!0,d,u]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=ye.computeStrides(r.kernelShape);n.push({type:12,data:a},{type:12,data:r.pads},{type:12,data:r.strides}),i.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let l=r.pads.reduce((c,p)=>c+p);return[n,i,!!l,!1,!1]}},vc=(e,r,t,s,o,n,i,a,l,c,p,d)=>{let u=o.format==="NHWC",f=r.type.value,_=at("output",r.type.tensor,s);if(o.kernelShape.length<=2){let b="",k="",g="",M=t-(u?2:1);if(p?b=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${M}] = indices[${M}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${M}] < 0 || xIndices[${M}]
                      >= uniforms.x_shape[${M}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`:b=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${M}] = indices[${M}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`,o.kernelShape.length===2){let $=t-(u?3:2);d?k=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${$}] < 0 || xIndices[${$}] >= uniforms.x_shape[${$}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:k=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sh - uniforms.phStart + j;
                `,g=`
              }
            `}return`
            ${e.registerUniforms(l).declareVariables(r,_)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${_.offsetToIndices("global_idx")};
              var xIndices = ${_.offsetToIndices("global_idx")};

              var value = ${f}(${a});
              var pad = 0;
              ${k}
              ${b}
              ${g}
              ${i}

              output[global_idx] = value;
            }`}else{if(u)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let b=o.kernelShape.length,k=o.pads.length,g="";return c?g=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${n}
              }`:g=`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${n}
            `,`
            ${e.registerUniforms(l).declareVariables(r,_)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${_.offsetToIndices("global_idx")};
              var xIndices = ${_.offsetToIndices("global_idx")};

              var offsets: array<u32, ${b}>;

              var value = ${f}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${b-1}u; j++) {
                  offsets[j] = offset / ${lt("uniforms.kernelStrides","j",b)};
                  offset -= offsets[j] * ${lt("uniforms.kernelStrides","j",b)};
                }
                offsets[${b-1}] = offset;

                isPad = false;
                for (var j = ${t-b}u; j < ${t}u; j++) {
                  xIndices[j] = indices[j] * ${lt("uniforms.strides",`j - ${t-b}u`,b)}
                    + offsets[j - ${t-b}u] - ${lt("uniforms.pads","j - 2u",k)};
                  ${g}
              }
              ${i}

              output[global_idx] = value;
            }`}},xc=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,zw=e=>`${xc(e)};${e.countIncludePad}`,Bw=e=>`${xc(e)};${e.storageOrder};${e.dilations}`,Tc=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Ec=(e,r,t,s)=>{let[o,n]=bc(r,s,t),i=$e("x",r.dataType,r.dims.length),a=i.type.value,l="value += x_val;",c="";o.countIncludePad?c+=`value /= ${a}(uniforms.kernelSize);`:c+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[p,d,u,f,_]=yc(n,o);p.push(...ct(r.dims,n));let b=["rank"];return{name:e,shaderCache:{hint:`${s.cacheKey};${u};${f};${_}`,inputDependencies:b},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ye.size(n)/64)},programUniforms:p}),getShaderSource:k=>vc(k,i,r.dims.length,n.length,o,l,c,0,d,u,f,_)}},$0=e=>{let r=e.count_include_pad!==0,t=Tc(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:r,...t,cacheKey:""};return{...s,cacheKey:zw(s)}},k0=(e,r)=>{jo(e.inputs),e.compute(Ec("AveragePool",e.inputs[0],!1,r))},Pc={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},I0=e=>{let r=e.format;return{format:r,...Pc,cacheKey:r}},A0=(e,r)=>{jo(e.inputs),e.compute(Ec("GlobalAveragePool",e.inputs[0],!0,r))},Cc=(e,r,t,s)=>{let[o,n]=bc(r,s,t),i=`
      value = max(x_val, value);
    `,a="",l=$e("x",r.dataType,r.dims.length),c=["rank"],[p,d,u,f,_]=yc(n,o);return p.push(...ct(r.dims,n)),{name:e,shaderCache:{hint:`${s.cacheKey};${u};${f};${_}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ye.size(n)/64)},programUniforms:p}),getShaderSource:b=>vc(b,l,r.dims.length,n.length,o,i,a,r.dataType===10?-65504:-1e5,d,u,f,_)}},F0=(e,r)=>{jo(e.inputs),e.compute(Cc("MaxPool",e.inputs[0],!1,r))},O0=e=>{let r=e.storage_order,t=e.dilations,s=Tc(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let o={storageOrder:r,dilations:t,...s,cacheKey:""};return{...o,cacheKey:Bw(o)}},D0=e=>{let r=e.format;return{format:r,...Pc,cacheKey:r}},L0=(e,r)=>{jo(e.inputs),e.compute(Cc("GlobalMaxPool",e.inputs[0],!0,r))}}),Rw,jw,z0,B0,nT=Ve(()=>{gt(),Et(),dr(),Pt(),Rw=(e,r)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((t,s)=>t===e[2].dims[s]).reduce((t,s)=>t&&s,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((o,n)=>n===r.axis||o===e[0].dims[n]).reduce((o,n)=>o&&n,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let t=e[0].dims[r.axis],s=e[1].dims[r.axis];if(r.blockSize<Math.ceil(t/s)||r.blockSize>Math.ceil(t/(s-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},jw=(e,r)=>{let t=ye.normalizeAxis(r.axis,e[0].dims.length),s=e[0].dataType,o=s===3,n=e[0].dims,i=e[1].dataType,a=ye.size(n),l=s===3||s===2,c=l?[Math.ceil(ye.size(e[0].dims)/4)]:e[0].dims,p=e[1].dims,d=e.length>2?e[2]:void 0,u=d?l?[Math.ceil(ye.size(d.dims)/4)]:d.dims:void 0,f=p.length===0||p.length===1&&p[0]===1,_=f===!1&&p.length===1,b=lr(a),k=f&&(!l||b===4),g=k?b:1,M=k&&!l?b:1,$=$e("input",l?12:s,c.length,M),v=$e("scale",i,p.length),y=d?$e("zero_point",l?12:s,u.length):void 0,T=at("output",i,n.length,g),x=[$,v];y&&x.push(y);let P=[c,p];d&&P.push(u);let O=[{type:12,data:a/g},{type:12,data:t},{type:12,data:r.blockSize},...ct(...P,n)],L=G=>{let K=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${G.registerUniforms(K).declareVariables(...x,T)}
      ${G.mainStart()}
          ${G.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${T.offsetToIndices("global_idx")};

          // Set input x
          ${l?`
            let input = ${$.getByOffset("global_idx / 4")};
            let x_vec = ${o?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${g===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${$.getByOffset("global_idx")};`};

          // Set scale input
          ${f?`let scale_value= ${v.getByOffset("0")}`:_?`
            let scale_index = ${T.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${v.getByOffset("scale_index")};`:`
            var scale_indices: ${v.type.indices} = output_indices;
            let index = ${v.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${v.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${v.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${y?f?l?`
                let zero_point_input = ${y.getByOffset("0")};
                let zero_point_vec =  ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${y.getByOffset("0")}`:_?l?`
                let zero_point_index = ${T.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${y.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${T.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${y.getByOffset("zero_point_index")};`:l?`
                let zero_point_offset = ${v.indicesToOffset("scale_indices")};
                let zero_point_input = ${y.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${o?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${y.getByIndices("scale_indices")};`:`let zero_point_value = ${l?o?"i32":"u32":$.type.value}(0);`};
      // Compute and write output
      ${T.setByOffset("global_idx",`${T.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:y?["rank","rank","rank"]:["rank","rank"]},getShaderSource:L,getRunData:()=>({outputs:[{dims:n,dataType:i}],dispatchGroup:{x:Math.ceil(a/g/64),y:1,z:1},programUniforms:O})}},z0=(e,r)=>{Rw(e.inputs,r),e.compute(jw(e.inputs,r))},B0=e=>Ut({axis:e.axis,blockSize:e.blockSize})}),Nw,Vw,R0,oT=Ve(()=>{Ss(),gt(),Pt(),Nw=(e,r,t)=>{let s=e===r,o=e<r&&t<0,n=e>r&&t>0;if(s||o||n)throw new Error("Range these inputs' contents are invalid.")},Vw=(e,r,t,s)=>{let o=Math.abs(Math.ceil((r-e)/t)),n=[o],i=o,a=[{type:12,data:i},{type:s,data:e},{type:s,data:t},...ct(n)],l=c=>{let p=at("output",s,n.length),d=p.type.value,u=[{name:"outputSize",type:"u32"},{name:"start",type:d},{name:"delta",type:d}];return`
        ${c.registerUniforms(u).declareVariables(p)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${d}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:n,dataType:s}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:a})}},R0=e=>{let r=0,t=0,s=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),Zt.webgpu.validateInputContent&&Nw(r,t,s),e.compute(Vw(r,t,s,e.inputs[0].dataType),{inputs:[]})}}),Uw,Sc,$c,Ww,j0,N0,iT=Ve(()=>{gt(),Et(),dr(),Pt(),Uw=(e,r,t,s)=>{if(e!=="none"&&s!=="i32"&&s!=="u32"&&s!=="f32")throw new Error(`Input ${s} is not supported with reduction ${e}.`);let o=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,n=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${r}=${t};`;case"add":return s==="i32"||s==="u32"?`atomicAdd(&${r}, bitcast<${s}>(${t}));`:`
              ${o}bitcast<${s}>(oldValue) + (${t})${n}`;case"max":return s==="i32"||s==="u32"?`atomicMax(&${r}, bitcast<${s}>(${t}));`:`
                ${o}max(bitcast<f32>(oldValue), (${t}))${n}`;case"min":return s==="i32"||s==="u32"?`atomicMin(&${r}, bitcast<${s}>(${t}));`:`${o}min(bitcast<${s}>(oldValue), (${t}))${n}`;case"mul":return`${o}(bitcast<${s}>(oldValue) * (${t}))${n}`;default:throw new Error(`Reduction ${e} is not supported.`)}},Sc=(e,r)=>`${e===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[${r?"i - indices_start":"i"}];
    let dim_value = uniforms.output_shape[${r?"i - indices_start":"i"} + uniforms.last_index_dimension];`}
    
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));`,$c=(e,r,t)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {
        let value = updates[uniforms.num_updates_elements * ${t?"global_idx":"idx"} + i];
        ${Uw(e.reduction,"output[data_offset + i]","value",r)}
      }`,Ww=(e,r)=>{let t=e[0].dims,s=e[1].dims,o=t,n=1,i=Math.ceil(ye.size(s)/n),a=s[s.length-1],l=ye.sizeFromDimension(t,a),c=ye.sizeFromDimension(s,0)/a,p=[{type:12,data:i},{type:12,data:a},{type:12,data:l},...ct(e[1].dims,e[2].dims,o)],d=u=>{let f=$e("indices",e[1].dataType,e[1].dims.length),_=$e("updates",e[2].dataType,e[2].dims.length,n),b=r.reduction!=="none"&&r.reduction!==""?_b("output",e[0].dataType,o.length):at("output",e[0].dataType,o.length,n);return`
      ${u.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(f,_,b)}
      ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${r.reduction==="none"}) {
    for (var i = 0; i < ${c}; i = i + 1) {
      for (var j = i + 1; j < ${c}; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  if (${r.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    // Process each index-update pair individually when duplicates exist
    for (var idx = 0u; idx < ${c}u; idx++) {
      var data_offset = 0u;
      for (var i = 0u; i < uniforms.last_index_dimension; i++) {
        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);
        ${Sc(t.length,!1)}
      }
      ${$c(r,b.type.value,!1)}
    }
    return;
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  var indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${Sc(t.length,!0)}
  }
  ${$c(r,b.type.value,!0)}
  }`};return{name:"ScatterND",shaderCache:{hint:`${r.cacheKey}_${r.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:p}),getShaderSource:d}},j0=e=>Ut({reduction:e.reduction}),N0=(e,r)=>{e.compute(Ww(e.inputs,r),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),Gw,Kw,Hw,kc,qw,Qw,Xw,Jw,Yw,Zw,eM,tM,Ic,rM,sM,nM,oM,iM,V0,U0,aT=Ve(()=>{gt(),Et(),dr(),Pt(),Gw=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Kw=(e,r,t)=>{r.every(o=>o>=0&&o<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(t).fill(1);return r.forEach((o,n)=>s[o]=e[n]),s},Hw=(e,r,t,s,o,n)=>{let[i,a,l]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],c=e[0].dims.length;if(i>0&&e.length>i&&e[i].dims.length>0)e[i].getFloat32Array().forEach(p=>n.push(p));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&e.length>a&&e[a].dims.length===1&&e[a].dims[0]>0){if(e[a].getFloat32Array().forEach(p=>s.push(p)),s.length!==0&&s.length!==c&&t>=18&&s.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Gw(s,r),r.axes.length>0&&Kw(s,r.axes,c).forEach((p,d)=>s[d]=p)}if(l>0&&e.length>l&&e[l].dims.length===1&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach(p=>o.push(Number(p))),o.length!==0&&o.length!==c&&t>=18&&o.length!==r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(s.length!==0&&s.length!==r.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==0&&o.length!==r.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof s<"u"&&typeof o<"u"&&s.length>0&&o.length>c)throw new Error("Resize requires only of scales or sizes to be specified")},kc=(e,r,t,s)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${r});
  let whole = ${s}(big / (${t}));
  let fract = ${s}(big % (${t})) / ${s}(${t});
  return whole + fract;
`,qw=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${r}(xResized) / ${r}(xScale);
          } else {
            ${kc("xResized","lengthOriginal","lengthResized",r)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${kc("xResized","lengthOriginal - 1","lengthResized - 1",r)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Qw=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Xw=(e,r,t)=>{let s=new Array(t).fill(0).concat(new Array(t).fill(1)),o=e.length===0?s:e.slice();return r.length>0?(r.forEach((n,i)=>{s[n]=o[i],s[i+t]=o[r.length+i]}),s):o},Jw=(e,r,t,s)=>{let o=[];if(t.length>0)if(s.length>0){if(e.forEach(n=>o.push(n)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((n,i)=>o[n]=t[i])}else t.forEach(n=>o.push(n));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");o=e.map((n,i)=>Math.round(n*r[i]))}return o},Yw=(e,r,t)=>{let s=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(n=>r[n]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(n=>r[n]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let o=e.slice();return t.axes.length>0?(t.axes.forEach(n=>r[n]=s),t.axes.forEach(n=>o[n]=Math.round(e[n]*r[n]))):(r.fill(s,0,r.length),o.forEach((n,i)=>o[i]=Math.round(n*r[i]))),o},Zw=(e,r,t,s,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {
      var original_indices: array<${e.type.value}, ${t.length}>;
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${lt("uniforms.scales","i",s)};
        var roi_low = ${lt("uniforms.roi","i",o)};
        var roi_hi = ${lt("uniforms.roi",`i + ${r.length}`,o)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${lt("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${lt("uniforms.output_shape","i",t.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,eM=(e,r,t,s,o,n,i)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${lt("uniforms.scales","i",o)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${lt("uniforms.roi","i",n)};
          var roi_hi = ${lt("uniforms.roi",`i + ${t.length}`,n)};
          var input_shape_i = ${lt("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${lt("uniforms.output_shape","i",s.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${i} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,tM=(e,r)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${lt("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,Ic=(e,r,t,s)=>e.rank>s?`
    ${e.indicesSet("input_indices",r,"channel")};
    ${e.indicesSet("input_indices",t,"batch")};
`:"",rM=(e,r,t,s,o)=>{let[n,i,a,l]=t.length===2?[-1,0,1,-1]:[0,2,3,1],c=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${c} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(row, ${t[i]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(col, ${t[a]} - 1))`)};
      ${Ic(e,l,n,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${c} = originalIndices[${i}];
      var col:${c} = originalIndices[${a}];
      ${s?`if (row < 0 || row > (${t[i]} - 1) || col < 0 || col > (${t[a]} - 1)) {
        return ${o};
      }`:""};
      row = max(0, min(row, ${t[i]} - 1));
      col = max(0, min(col, ${t[a]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${t.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${t.length>2?`u32(originalIndices[${n}])`:"0"};
      var x11: ${c} = getInputValue(batch, channel, row1, col1);
      var x12: ${c} = getInputValue(batch, channel, row1, col2);
      var x21: ${c} = getInputValue(batch, channel, row2, col1);
      var x22: ${c} = getInputValue(batch, channel, row2, col2);
      var dx1: ${c} = abs(row - ${c}(row1));
      var dx2: ${c} = abs(${c}(row2) - row);
      var dy1: ${c} = abs(col - ${c}(col1));
      var dy2: ${c} = abs(${c}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},sM=(e,r,t,s,o,n,i,a,l,c)=>{let p=t.length===2,[d,u]=p?[0,1]:[2,3],f=e.type.value,_=b=>{let k=b===d?"row":"col";return`
      fn ${k}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${f} {
        var output_index = ${r.indicesGet("output_indices",b)};
        var originalIdx: ${f} = getOriginalCoordinateFromResizedCoordinate(output_index, ${o[b]},
        ${s[b]}, ${t[b]}, ${n[b]}, ${n[b]} + ${t.length});
        var fractOriginalIdx: ${f} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${t[b]} - 1))) {
          return ${l};
        }
        var data: array<${f}, 4> = array<${f}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${k}: ${f} = originalIdx + ${f}(i);
          if (${k} < 0 || ${k} >= ${t[b]}) {
            ${c?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${l};`:`${k} = max(0, min(${k}, ${t[b]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",b,`u32(${k})`)};
          data[i + 1] = ${b===d?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${_(d)};
    ${_(u)};
  fn getCubicInterpolationCoefs(s: ${f}) -> array<${f}, 4> {
    var absS = abs(s);
    var coeffs: array<${f}, 4> = array<${f}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${f} = 1.0 - absS;
    var twoMinusAbsS: ${f} = 2.0 - absS;
    var onePlusAbsS: ${f} = 1.0 + absS;
    coeffs[0] = ((${i} * onePlusAbsS - 5 * ${i}) * onePlusAbsS + 8 * ${i}) * onePlusAbsS - 4 * ${i};
    coeffs[1] = ((${i} + 2) * absS - (${i} + 3)) * absS * absS + 1;
    coeffs[2] = ((${i} + 2) * oneMinusAbsS - (${i} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${i} * twoMinusAbsS - 5 * ${i}) * twoMinusAbsS + 8 * ${i}) * twoMinusAbsS - 4 * ${i};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${f}, 4>, coefs: array<${f}, 4>) -> ${f} {
    var coefsSum: ${f} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${f} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},nM=(e,r,t,s,o)=>{let[n,i,a,l,c]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",i,`max(0, min(depth, ${t[i]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(height, ${t[a]} - 1))`)};
      ${e.indicesSet("input_indices",l,`max(0, min(width, ${t[l]} - 1))`)};
      ${Ic(e,c,n,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${i}];
      var height:${p} = originalIndices[${a}];
      var width:${p} = originalIndices[${l}];
      ${s?`if (depth < 0 || depth > (${t[i]} - 1) || height < 0 || height > (${t[a]} - 1) || width < 0 || (width > ${t[l]} - 1)) {
      return ${o};
        }`:""};

    depth = max(0, min(depth, ${t[i]} - 1));
      height = max(0, min(height, ${t[a]} - 1));
      width = max(0, min(width, ${t[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${t.length>3?`u32(originalIndices[${c}])`:"0"};
      var batch: u32 =  ${t.length>3?`u32(originalIndices[${n}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},oM=(e,r,t,s,o,n)=>{let i=e.dims,a=Xw(n,r.axes,i.length),l=Jw(i,s,o,r.axes),c=s.slice();s.length===0&&(c=i.map((M,$)=>M===0?1:l[$]/M),r.keepAspectRatioPolicy!=="stretch"&&(l=Yw(i,c,r)));let p=at("output",e.dataType,l.length),d=$e("input",e.dataType,i.length),u=ye.size(l),f=i.length===l.length&&i.every((M,$)=>M===l[$]),_=r.coordinateTransformMode==="tf_crop_and_resize",b=r.extrapolationValue,k=d.type.value,g=M=>`
      ${f?"":`
      ${qw(r.coordinateTransformMode,k)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${tM(d,i)};
              ${Qw(r.nearestMode,t,k)};
              ${eM(d,p,i,l,c.length,a.length,_)};
              `;case"linear":return`
              ${Zw(p,i,l,c.length,a.length)};
              ${(()=>{if(i.length===2||i.length===4)return`${rM(d,p,i,_,b)}`;if(i.length===3||i.length===5)return`${nM(d,p,i,_,b)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(i.length===2||i.length===4)return`${sM(d,p,i,l,c,a,r.cubicCoeffA,_,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${M.registerUniform("output_size","u32").registerUniform("scales","f32",c.length).registerUniform("roi","f32",a.length).declareVariables(d,p)}
      ${M.mainStart()}
        ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${f?"output[global_idx] = input[global_idx];":`
        let output_indices = ${p.offsetToIndices("global_idx")};
        var input_indices: ${d.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${d.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${i.length===2||i.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${c.length>0?r.mode==="cubic"?c:c.length:""}|${o.length>0?o:""}|${a.length>0?a:""}|${f}|${r.mode==="nearest"?i.length:i}`,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:[{type:12,data:u},{type:1,data:c},{type:1,data:a},...ct(i,l)]})}},iM=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},V0=(e,r)=>{let t=[],s=[],o=[],n=iM(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Hw(e.inputs,r,n,t,s,o),e.compute(oM(e.inputs[0],r,n,t,s,o),{inputs:[0]})},U0=e=>{let r=e.antialias,t=e.axes,s=e.coordinateTransformMode,o=e.cubicCoeffA,n=e.excludeOutside!==0,i=e.extrapolationValue,a=e.keepAspectRatioPolicy,l=e.mode,c=e.nearestMode===""?"simple":e.nearestMode;return Ut({antialias:r,axes:t,coordinateTransformMode:s,cubicCoeffA:o,excludeOutside:n,extrapolationValue:i,keepAspectRatioPolicy:a,mode:l,nearestMode:c})}}),aM,lM,W0,lT=Ve(()=>{gt(),Et(),Pt(),aM=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],s=e[2];if(r.dataType!==t.dataType||r.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=r.dims[r.dims.length-1],n=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==n)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let i=e[3];if(i.dims.length!==1)throw new Error("Beta must be 1D");if(i.dims[i.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let i=e[4];if(i.dims.length!==1)throw new Error("Bias must be 1D");if(i.dims[i.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},lM=(e,r,t,s)=>{let o=r.simplified,n=e[0].dims,i=ye.size(n),a=n,l=i,c=n.slice(-1)[0],p=s?n.slice(0,-1).concat(1):[],d=!o&&e.length>3,u=e.length>4,f=s&&t>1,_=s&&t>2,b=t>3,k=64,g=lr(c),M=[{type:12,data:l},{type:12,data:g},{type:12,data:c},{type:1,data:r.epsilon}],$=y=>{let T=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],x=[$e("x",e[0].dataType,e[0].dims,g),$e("skip",e[1].dataType,e[1].dims,g),$e("gamma",e[2].dataType,e[2].dims,g)];d&&x.push($e("beta",e[3].dataType,e[3].dims,g)),u&&x.push($e("bias",e[4].dataType,e[4].dims,g)),x.push(at("output",e[0].dataType,a,g)),f&&x.push(at("mean_output",1,p)),_&&x.push(at("inv_std_output",1,p)),b&&x.push(at("input_skip_bias_sum",e[0].dataType,a,g));let P=Fr(e[0].dataType),O=Fr(1,g);return`

      ${y.registerUniforms(T).declareVariables(...x)}
      var<workgroup> sum_shared : array<${O}, ${k}>;
      var<workgroup> sum_squared_shared : array<${O}, ${k}>;

      ${y.mainStart([k,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${k};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${k};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${k-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${u?"bias[offset1d + i]":P+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${b?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${ro(P,g,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${k};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${nn("sum",g)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${nn("square_sum",g)} / f32(uniforms.hidden_size) ${o?"":"- mean * mean"} + uniforms.epsilon);
        ${f?"mean_output[global_idx] = mean;":""}
        ${_?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${o?"":`- ${P}(mean)`}) *
            ${P}(inv_std_dev) * gamma[offset1d + i]
            ${d?"+ beta[offset1d + i]":""};
        }
      }`},v=[{dims:a,dataType:e[0].dataType}];return t>1&&v.push({dims:p,dataType:1}),t>2&&v.push({dims:p,dataType:1}),t>3&&v.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${g};${f};${_};${b}`,inputDependencies:e.map((y,T)=>"type")},getShaderSource:$,getRunData:()=>({outputs:v,dispatchGroup:{x:Math.ceil(l/c)},programUniforms:M})}},W0=(e,r)=>{aM(e.inputs);let t=[0];e.outputCount>1&&t.push(-3),e.outputCount>2&&t.push(-3),e.outputCount>3&&t.push(3),e.compute(lM(e.inputs,r,e.outputCount,!1),{outputs:t})}}),cM,No,uM,Ac,dM,pM,G0,K0,cT=Ve(()=>{gt(),Et(),dr(),Pt(),cM=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},No=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(s=>t.push(Number(s)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(s=>t.push(Number(s)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},uM=(e,r)=>{if(e.length>1){let t=No(e,1),s=No(e,2),o=No(e,3);return o.length===0&&(o=[...Array(e[0].dims.length).keys()]),Ut({starts:t,ends:s,axes:o})}else return r},Ac=(e,r,t,s,o)=>{let n=e;return e<0&&(n+=t[s[r]]),o[r]<0?Math.max(0,Math.min(n,t[s[r]]-1)):Math.max(0,Math.min(n,t[s[r]]))},dM=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${t.length}; i >= 0; i--) {
            let input_shape_i = ${lt("uniforms.input_shape","i",t.length)};
            let steps_i = ${lt("uniforms.steps","i",t.length)};
            let signs_i = ${lt("uniforms.signs","i",t.length)};
            let starts_i = ${lt("uniforms.starts","i",t.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,pM=(e,r)=>{let t=e[0].dims,s=ye.size(t),o=r.axes.length>0?ye.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],n=No(e,4);n.forEach(g=>g!==0||(()=>{throw new Error("step cannot be 0")})),n.length===0&&(n=Array(o.length).fill(1));let i=r.starts.map((g,M)=>Ac(g,M,t,o,n)),a=r.ends.map((g,M)=>Ac(g,M,t,o,n));if(o.length!==i.length||o.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(o.length!==t.length)for(let g=0;g<t.length;++g)o.includes(g)||(i.splice(g,0,0),a.splice(g,0,t[g]),n.splice(g,0,1));let l=n.map(g=>Math.sign(g));n.forEach((g,M,$)=>{if(g<0){let v=(a[M]-i[M])/g,y=i[M],T=y+v*n[M];i[M]=T,a[M]=y,$[M]=-g}});let c=t.slice(0);o.forEach((g,M)=>{c[g]=Math.ceil((a[g]-i[g])/n[g])});let p={dims:c,dataType:e[0].dataType},d=at("output",e[0].dataType,c.length),u=$e("input",e[0].dataType,e[0].dims.length),f=ye.size(c),_=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:i.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:n.length}],b=[{type:12,data:f},{type:12,data:i},{type:6,data:l},{type:12,data:n},...ct(e[0].dims,c)],k=g=>`
      ${g.registerUniforms(_).declareVariables(u,d)}
        ${dM(u,d,t)}
        ${g.mainStart()}
          ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${d.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${d.setByOffset("global_idx",u.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${i.length}_${n.length}`,inputDependencies:["rank"]},getShaderSource:k,getRunData:()=>({outputs:[p],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:b})}},G0=(e,r)=>{cM(e.inputs,r);let t=uM(e.inputs,r);e.compute(pM(e.inputs,t),{inputs:[0]})},K0=e=>{let r=e.starts,t=e.ends,s=e.axes;return Ut({starts:r,ends:t,axes:s})}}),mM,hM,H0,q0,uT=Ve(()=>{gt(),Et(),dr(),on(),Pt(),mM=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},hM=(e,r)=>{let t=e.inputs[0],s=t.dims,o=ye.size(s),n=s.length,i=ye.normalizeAxis(r.axis,n),a=i<s.length-1,l,c=[];a?(c=Array.from({length:n},(x,P)=>P),c[i]=n-1,c[n-1]=i,l=e.compute(os(t,c),{inputs:[t],outputs:[-1]})[0]):l=t;let p=l.dims,d=p[n-1],u=o/d,f=lr(d),_=d/f,b=64;u===1&&(b=256);let k=(x,P)=>P===4?`max(max(${x}.x, ${x}.y), max(${x}.z, ${x}.w))`:P===2?`max(${x}.x, ${x}.y)`:P===3?`max(max(${x}.x, ${x}.y), ${x}.z)`:x,g=$e("x",l.dataType,l.dims,f),M=at("result",l.dataType,l.dims,f),$=g.type.value,v=Fr(l.dataType)==="f32"?`var threadMax = ${$}(-3.402823e+38f);`:`var threadMax = ${$}(-65504.0h);`,y=x=>`
      var<workgroup> rowMaxShared : ${$};
      var<workgroup> rowSumShared : ${$};
      var<workgroup> threadShared : array<${$}, ${b}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${$} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${$}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${x.registerUniform("packedCols","i32").declareVariables(g,M)}
      ${x.mainStart(b)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${b};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${v}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${$}(${k("threadShared[0]",f)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${$}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${$}(${nn("threadShared[0]",f)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,T=e.compute({name:"Softmax",shaderCache:{hint:`${f};${b}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:p,dataType:l.dataType}],dispatchGroup:{x:u},programUniforms:[{type:6,data:_}]}),getShaderSource:y},{inputs:[l],outputs:[a?-1:0]})[0];a&&e.compute(os(T,c),{inputs:[T]})},H0=(e,r)=>{mM(e.inputs),hM(e,r)},q0=e=>Ut({axis:e.axis})}),Fc,_M,fM,gM,Q0,dT=Ve(()=>{gt(),Et(),Pt(),Fc=e=>Array.from(e.getBigInt64Array(),Number),_M=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Fc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},fM=(e,r)=>{let t=[];for(let s=0;s<e.length;++s)t.push(e[s]*r[s]);return t},gM=(e,r)=>{let t=e[0].dims,s=r??Fc(e[1]),o=fM(t,s),n=ye.size(o),i=e[0].dataType,a=$e("input",i,t.length),l=at("output",i,o.length),c=p=>`
      const inputShape = ${a.indices(...t)};
      ${p.registerUniform("output_size","u32").declareVariables(a,l)}
      ${p.mainStart()}
      ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${l.offsetToIndices("global_idx")};
      var input_indices: ${a.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;

        ${a.indicesSet("input_indices","i","input_dim_value")}
      }
      ${l.setByOffset("global_idx",a.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${s}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},...ct(e[0].dims,o)]}),getShaderSource:c}},Q0=e=>{_M(e.inputs),e.compute(gM(e.inputs),{inputs:[0]})}}),wM,MM,X0,pT=Ve(()=>{gt(),Et(),Pt(),wM=(e,r,t,s,o)=>{let n=at("output_data",o,t.length,4),i=$e("a_data",r[1].dataType,r[1].dims.length,4),a=$e("b_data",r[2].dataType,r[2].dims.length,4),l=$e("c_data",r[0].dataType,r[0].dims.length,4),c,p=(d,u,f)=>`select(${u}, ${d}, ${f})`;if(!s)c=n.setByOffset("global_idx",p(i.getByOffset("global_idx"),a.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let d=(u,f,_="")=>{let b=`a_data[index_a${f}][component_a${f}]`,k=`b_data[index_b${f}][component_b${f}]`,g=`bool(c_data[index_c${f}] & (0xffu << (component_c${f} * 8)))`;return`
            let output_indices${f} = ${n.offsetToIndices(`global_idx * 4u + ${f}u`)};
            let offset_a${f} = ${i.broadcastedIndicesToOffset(`output_indices${f}`,n)};
            let offset_b${f} = ${a.broadcastedIndicesToOffset(`output_indices${f}`,n)};
            let offset_c${f} = ${l.broadcastedIndicesToOffset(`output_indices${f}`,n)};
            let index_a${f} = offset_a${f} / 4u;
            let index_b${f} = offset_b${f} / 4u;
            let index_c${f} = offset_c${f} / 4u;
            let component_a${f} = offset_a${f} % 4u;
            let component_b${f} = offset_b${f} % 4u;
            let component_c${f} = offset_c${f} % 4u;
            ${u}[${f}] = ${_}(${p(b,k,g)});
          `};o===9?c=`
            var data = vec4<u32>(0);
            ${d("data",0,"u32")}
            ${d("data",1,"u32")}
            ${d("data",2,"u32")}
            ${d("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:c=`
            ${d("output_data[global_idx]",0)}
            ${d("output_data[global_idx]",1)}
            ${d("output_data[global_idx]",2)}
            ${d("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(l,i,a,n)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${c}
      }`},MM=e=>{let r=e[1].dims,t=e[2].dims,s=e[0].dims,o=e[1].dataType,n=!(ye.areEqual(r,t)&&ye.areEqual(t,s)),i=r,a=ye.size(r);if(n){let c=so.calcShape(so.calcShape(r,t,!1),s,!1);if(!c)throw new Error("Can't perform where op on the given tensors");i=c,a=ye.size(i)}let l=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:c=>wM(c,e,i,n,o),getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:l},...ct(s,r,t,i)]})}},X0=e=>{e.compute(MM(e.inputs))}}),J0,mT=Ve(()=>{Cx(),Mu(),Sx(),$x(),kx(),Ix(),Ax(),zx(),Rx(),jx(),Nx(),Vx(),Ux(),Wx(),Gx(),Kx(),Hx(),qx(),Qx(),Xx(),Jx(),Yx(),Zx(),eT(),tT(),f0(),rT(),sT(),nT(),oT(),iT(),wu(),aT(),y0(),lT(),cT(),uT(),M0(),dT(),on(),bu(),pT(),J0=new Map([["Abs",[Wb]],["Acos",[Gb]],["Acosh",[Kb]],["Add",[Py]],["ArgMax",[jb,Hc]],["ArgMin",[Rb,Hc]],["Asin",[Hb]],["Asinh",[qb]],["Atan",[Qb]],["Atanh",[Xb]],["Attention",[Nb]],["AveragePool",[k0,$0]],["BatchNormalization",[Vb]],["BiasAdd",[Ub]],["BiasSplitGelu",[Ey]],["Cast",[Yb,Jb]],["Ceil",[ey]],["Clip",[Zb]],["Concat",[Ly,zy]],["Conv",[Zc,Yc]],["ConvTranspose",[Hy,Ky]],["Cos",[ty]],["Cosh",[ry]],["CumSum",[qy,Qy]],["DepthToSpace",[Xy,Jy]],["DequantizeLinear",[z0,B0]],["Div",[Cy]],["Einsum",[Yy,Zy]],["Elu",[sy,Ko]],["Equal",[Sy]],["Erf",[ny]],["Exp",[oy]],["Expand",[e0]],["FastGelu",[t0]],["Floor",[iy]],["FusedConv",[Zc,Yc]],["Gather",[s0,r0]],["GatherElements",[c0,l0]],["GatherBlockQuantized",[i0,a0]],["GatherND",[n0,o0]],["Gelu",[ay]],["Gemm",[d0,u0]],["GlobalAveragePool",[A0,I0]],["GlobalMaxPool",[L0,D0]],["Greater",[Ay]],["GreaterOrEqual",[Oy]],["GridSample",[p0,m0]],["GroupQueryAttention",[v0]],["HardSigmoid",[_y,hy]],["InstanceNormalization",[x0]],["LayerNormalization",[T0]],["LeakyRelu",[ly,Ko]],["Less",[Fy]],["LessOrEqual",[Dy]],["Log",[xy]],["MatMul",[E0]],["MatMulNBits",[P0,C0]],["MaxPool",[F0,O0]],["Mul",[$y]],["MultiHeadAttention",[_0,h0]],["Neg",[uy]],["Not",[cy]],["Pad",[S0]],["Pow",[ky]],["QuickGelu",[Ty,Ko]],["Range",[R0]],["Reciprocal",[dy]],["ReduceMin",[Ob]],["ReduceMean",[$b]],["ReduceMax",[Fb]],["ReduceSum",[Lb]],["ReduceProd",[Db]],["ReduceL1",[kb]],["ReduceL2",[Ib]],["ReduceLogSum",[Bb]],["ReduceLogSumExp",[Ab]],["ReduceSumSquare",[zb]],["Relu",[py]],["Resize",[V0,U0]],["RotaryEmbedding",[b0]],["ScatterND",[N0,j0]],["Sigmoid",[my]],["Sin",[fy]],["Sinh",[gy]],["Slice",[G0,K0]],["SkipLayerNormalization",[W0]],["Split",[g0,w0]],["Sqrt",[wy]],["Softmax",[H0,q0]],["Sub",[Iy]],["Tan",[My]],["Tanh",[by]],["ThresholdedRelu",[vy,Ko]],["Tile",[Q0]],["Transpose",[gb,wb]],["Where",[X0]]])}),Y0,hT=Ve(()=>{Ss(),Vs(),Pt(),Y0=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,r){this.repo.set(e,r)}run(e,r,t,s,o){Cs(e.programInfo.name);let n=this.backend.device,i=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let a=[];for(let c of r)a.push({binding:a.length,resource:{buffer:c.buffer}});for(let c of t)a.push({binding:a.length,resource:{buffer:c.buffer}});o&&a.push({binding:a.length,resource:o});let l=n.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:a,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let c={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(c)}i.setPipeline(e.computePipeline),i.setBindGroup(0,l),i.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),ps(e.programInfo.name)}dispose(){}build(e,r){Cs(e.name);let t=this.backend.device,s=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(c=>{t.features.has(c.feature)&&s.push(`enable ${c.extension};`)});let o=fb(r,this.backend.device.limits),n=e.getShaderSource(o),i=`${s.join(`
`)}
${o.additionalImplementations}
${n}`,a=t.createShaderModule({code:i,label:e.name});Lt("verbose",()=>`[WebGPU] ${e.name} shader code: ${i}`);let l=t.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:e.name});return ps(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:o.variablesInfo}}normalizeDispatchGroupSize(e){let r=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,s=typeof e=="number"?1:e.z||1,o=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=o&&t<=o&&s<=o)return[r,t,s];let n=r*t*s,i=Math.ceil(Math.sqrt(n));if(i>o){if(i=Math.ceil(Math.cbrt(n)),i>o)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[i,i,i]}else return[i,i,1]}}}),Z0={};oo(Z0,{WebGpuBackend:()=>ev});var bM,yM,vM,ev,_T=Ve(()=>{Ss(),gt(),Vs(),db(),Ex(),mT(),hT(),bM=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let s=0;s<e.length;++s){let o=e[s].dataType;switch(r[s]){case"none":{t.push("");break}case"type":{t.push(`${o}`);break}case"rank":{let n=e[s].dims.length;t.push(`${o};${n}`);break}case"dims":{let n=e[s].dims.join(",");t.push(`${o};${n}`);break}default:throw new Error(`unsupported input dependency: ${r[s]}`)}}return t.join("|")},yM=(e,r,t)=>{var o,n;let s=e.name;return(o=e.shaderCache)!=null&&o.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+t+`:${bM(r,((n=e.shaderCache)==null?void 0:n.inputDependencies)??new Array(r.length).fill("dims"))}`,s},vM=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},ev=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,r){this.env=e;let t=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t},o=n=>r.features.has(n)&&t.push(n)&&!0;o("chromium-experimental-timestamp-query-inside-passes")||o("timestamp-query"),o("shader-f16"),o("subgroups"),this.device=await r.requestDevice(s),this.adapterInfo=new vM(r.info||await r.requestAdapterInfo()),this.gpuDataManager=hb(this),this.programManager=new Y0(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,hu(e.logLevel,!!e.debug),this.device.onuncapturederror=n=>{n.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${n.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Cs(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var s;let r=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let o=0;o<r.length/2;o++){let n=t[o],i=n.kernelId,a=this.kernels.get(i),l=a.kernelType,c=a.kernelName,p=n.programName,d=n.inputTensorViews,u=n.outputTensorViews,f=r[o*2],_=r[o*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=f);let b=Number(f-this.queryTimeBase),k=Number(_-this.queryTimeBase);if(!Number.isSafeInteger(b)||!Number.isSafeInteger(k))throw new RangeError("incorrect timestamp range");if((s=this.env.webgpu.profiling)!=null&&s.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:d.map(g=>({dims:g.dims,dataType:Ns(g.dataType)})),outputsMetadata:u.map(g=>({dims:g.dims,dataType:Ns(g.dataType)})),kernelId:i,kernelType:l,kernelName:c,programName:p,startTime:b,endTime:k});else{let g="";d.forEach(($,v)=>{g+=`input[${v}]: [${$.dims}] | ${Ns($.dataType)}, `});let M="";u.forEach(($,v)=>{M+=`output[${v}]: [${$.dims}] | ${Ns($.dataType)}, `}),console.log(`[profiling] kernel "${i}|${l}|${c}|${p}" ${g}${M}execution time: ${k-b} ns`)}Xo("GPU",`${p}::${f}::${_}`)}e.unmap(),this.pendingQueries.delete(e)}),ps()}run(e,r,t,s,o,n){Cs(e.name);let i=[];for(let M=0;M<r.length;++M){let $=r[M].data;if($===0)continue;let v=this.gpuDataManager.get($);if(!v)throw new Error(`no GPU data for input: ${$}`);i.push(v)}let{outputs:a,dispatchGroup:l,programUniforms:c}=e.getRunData(r),p=t.length===0?a.map((M,$)=>$):t;if(p.length!==a.length)throw new Error(`Output size ${p.length} must be equal to ${a.length}.`);let d=[],u=[];for(let M=0;M<a.length;++M){if(!Number.isInteger(p[M])||p[M]<-3||p[M]>=n)throw new Error(`Invalid output index: ${p[M]}`);if(p[M]===-3)continue;let $=p[M]===-1,v=p[M]===-2,y=$||v?o(a[M].dataType,a[M].dims):s(p[M],a[M].dataType,a[M].dims);if(d.push(y),y.data===0)continue;let T=this.gpuDataManager.get(y.data);if(!T)throw new Error(`no GPU data for output: ${y.data}`);if($&&this.temporaryData.push(T),v){let x=this.kernelPersistentData.get(this.currentKernelId);x||(x=[],this.kernelPersistentData.set(this.currentKernelId,x)),x.push(T)}u.push(T)}if(i.length!==r.length||u.length!==d.length){if(u.length===0)return ps(e.name),d;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let f;if(c){let M=0,$=[];c.forEach(x=>{let P=typeof x.data=="number"?[x.data]:x.data;if(P.length===0)return;let O=x.type===10?2:4,L,G;x.type===10?(G=P.length>4?16:P.length>2?8:P.length*O,L=P.length>4?16:O*P.length):(G=P.length<=2?P.length*O:16,L=16),M=Math.ceil(M/G)*G,$.push(M);let K=x.type===10?8:4;M+=P.length>4?Math.ceil(P.length/K)*L:P.length*O});let v=16;M=Math.ceil(M/v)*v;let y=new ArrayBuffer(M);c.forEach((x,P)=>{let O=$[P],L=typeof x.data=="number"?[x.data]:x.data;if(x.type===6)new Int32Array(y,O,L.length).set(L);else if(x.type===12)new Uint32Array(y,O,L.length).set(L);else if(x.type===10)new Uint16Array(y,O,L.length).set(L);else if(x.type===1)new Float32Array(y,O,L.length).set(L);else throw new Error(`Unsupported uniform type: ${Ns(x.type)}`)});let T=this.gpuDataManager.create(M,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(T.buffer,0,y,0,M),this.gpuDataManager.release(T.id),f={offset:0,size:M,buffer:T.buffer}}let _=this.programManager.normalizeDispatchGroupSize(l),b=_[1]===1&&_[2]===1,k=yM(e,r,b),g=this.programManager.getArtifact(k);if(g||(g=this.programManager.build(e,_),this.programManager.setArtifact(k,g),Lt("info",()=>`[artifact] key: ${k}, programName: ${e.name}`)),c&&g.uniformVariablesInfo){if(c.length!==g.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${g.uniformVariablesInfo.length}, got ${c.length} in program "${g.programInfo.name}".`);for(let M=0;M<c.length;M++){let $=c[M],v=$.type,y=typeof $.data=="number"?1:$.data.length,[T,x]=g.uniformVariablesInfo[M];if(v!==T||y!==x)throw new Error(`Uniform variable ${M} mismatch: expect type ${T} with size ${x}, got type ${v} with size ${y} in program "${g.programInfo.name}".`)}}if(Lt("info",()=>`[ProgramManager] run "${e.name}" (key=${k}) with ${_[0]}x${_[1]}x${_[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let M={kernelId:this.currentKernelId,programName:g.programInfo.name,inputTensorViews:r,outputTensorViews:d};this.pendingKernels.push(M),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(M)}return this.programManager.run(g,i,u,_,f),ps(e.name),d}upload(e,r){this.gpuDataManager.upload(e,r)}memcpy(e,r){this.gpuDataManager.memcpy(e,r)}async download(e,r){await this.gpuDataManager.download(e,r)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,r,t,s){let o=J0.get(e);if(!o)throw new Error(`kernel not implemented: ${e}`);let n={kernelType:e,kernelName:s,kernelEntry:o[0],attributes:[o[1],t]};this.kernels.set(r,n)}releaseKernel(e){let r=this.kernelPersistentData.get(e);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,r,t){let s=this.kernels.get(e);if(!s)throw new Error(`kernel not created: ${e}`);let o=s.kernelType,n=s.kernelName,i=s.kernelEntry,a=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${o}] ${n}" is not allowed to be called recursively`);this.currentKernelId=e,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),Lt("info",()=>`[WebGPU] Start to run kernel "[${o}] ${n}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),i(r,a[1]),0}catch(c){return t.push(Promise.resolve(`[WebGPU] Kernel "[${o}] ${n}" failed. ${c}`)),1}finally{l&&t.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel "[${o}] ${n}": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,r,t,s){let o=this.sessionExternalDataMapping.get(e);o||(o=new Map,this.sessionExternalDataMapping.set(e,o));let n=o.get(r),i=this.gpuDataManager.registerExternalBuffer(t,s,n);return o.set(r,[i,t]),i}unregisterBuffers(e){let r=this.sessionExternalDataMapping.get(e);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let r=this.gpuDataManager.get(e);if(!r)throw new Error(`no GPU data for buffer: ${e}`);return r.buffer}createDownloader(e,r,t){return async()=>{let s=await Wc(this,e,r);return _u(s.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Lt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Lt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Lt("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let s=0;s<t;s++){let o=this.getComputePassEncoder(),n=e[s];this.writeTimestamp(this.pendingDispatchNumber*2),o.setPipeline(n.computePipeline),o.setBindGroup(0,n.bindGroup),o.dispatchWorkgroups(...n.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),tv={};oo(tv,{init:()=>rv});var ra,xM,rv,fT=Ve(()=>{gt(),Vs(),Et(),Tx(),ra=class sv{constructor(r,t,s,o){this.module=r,this.dataType=t,this.data=s,this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=ye.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=ye.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=ye.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let r=ye.size(this.dims);return r===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(ye.size(r)!==ye.size(this.dims))throw new Error("Invalid new shape");return new sv(this.module,this.dataType,this.data,r)}},xM=class{constructor(e,r,t){this.module=e,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo;let s=e.PTR_SIZE,o=t/e.PTR_SIZE,n=s===4?"i32":"i64";this.opKernelContext=Number(e.getValue(s*o++,n));let i=Number(e.getValue(s*o++,n));this.outputCount=Number(e.getValue(s*o++,n)),this.customDataOffset=Number(e.getValue(s*o++,"*")),this.customDataSize=Number(e.getValue(s*o++,n));let a=[];for(let l=0;l<i;l++){let c=Number(e.getValue(s*o++,n)),p=Number(e.getValue(s*o++,"*")),d=Number(e.getValue(s*o++,n)),u=[];for(let f=0;f<d;f++)u.push(Number(e.getValue(s*o++,n)));a.push(new ra(e,c,p,u))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,r){var i;let t=((i=r==null?void 0:r.inputs)==null?void 0:i.map(a=>typeof a=="number"?this.inputs[a]:a))??this.inputs,s=(r==null?void 0:r.outputs)??[],o=(a,l,c)=>new ra(this.module,l,this.output(a,c),c),n=(a,l)=>{let c=kn(a,l);if(!c)throw new Error(`Unsupported data type: ${a}`);let p=c>0?this.backend.gpuDataManager.create(c).id:0;return new ra(this.module,a,p,l)};return this.backend.run(e,t,s,o,n,this.outputCount)}output(e,r){let t=this.module.stackSave();try{let s=this.module.PTR_SIZE,o=s===4?"i32":"i64",n=this.module.stackAlloc((1+r.length)*s);this.module.setValue(n,r.length,o);for(let i=0;i<r.length;i++)this.module.setValue(n+s*(i+1),r[i],o);return this.module._JsepOutput(this.opKernelContext,e,n)}catch(s){throw new Error(`Failed to generate kernel's output[${e}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(t)}}},rv=async(e,r,t,s)=>{let o=r.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let n=(_T(),Qo(Z0)).WebGpuBackend,i=new n;await i.initialize(t,s),o("webgpu",[i,a=>i.alloc(Number(a)),a=>i.free(a),(a,l,c,p=!1)=>{if(p)Lt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(a)}, dst=${Number(l)}, size=${Number(c)}`),i.memcpy(Number(a),Number(l));else{Lt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(a)}, gpuDataId=${Number(l)}, size=${Number(c)}`);let d=r.HEAPU8.subarray(Number(a>>>0),Number(a>>>0)+Number(c));i.upload(Number(l),d)}},async(a,l,c)=>{Lt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${l}, size=${c}`),await i.download(Number(a),()=>r.HEAPU8.subarray(Number(l)>>>0,Number(l+c)>>>0))},(a,l,c)=>i.createKernel(a,Number(l),c,r.UTF8ToString(r._JsepGetNodeName(Number(l)))),a=>i.releaseKernel(a),(a,l,c,p)=>{Lt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${c}, kernel=${a}, contextDataOffset=${l}`);let d=new xM(r,i,Number(l));return i.computeKernel(Number(a),d,p)},()=>i.captureBegin(),()=>i.captureEnd(),()=>i.replay()])}else{let n=new mb(t);o("webnn",[n,()=>n.reserveTensorId(),i=>n.releaseTensorId(i),async(i,a,l,c,p)=>n.ensureTensor(i,a,l,c,p),(i,a)=>{n.uploadTensor(i,a)},async(i,a)=>n.downloadTensor(i,a)])}}}),TM,Pu,Cu,rn,EM,Oc,fa,Su,$u,Dc,ku,Iu,Au,nv=Ve(()=>{yx(),vx(),gt(),Dn(),cu(),ab(),TM=(e,r)=>{Jt()._OrtInit(e,r)!==0&&Ht("Can't initialize onnxruntime.")},Pu=async e=>{TM(e.wasm.numThreads,da(e.logLevel))},Cu=async(e,r)=>{var t,s;(s=(t=Jt()).asyncInit)==null||s.call(t);{let o=(fT(),Qo(tv)).init;if(r==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=e.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let a=e.webgpu.forceFallbackAdapter;if(a!==void 0&&typeof a!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${a}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:a}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await o("webgpu",Jt(),e,n)}if(r==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await o("webnn",Jt(),e)}}},rn=new Map,EM=e=>{let r=Jt(),t=r.stackSave();try{let s=r.PTR_SIZE,o=r.stackAlloc(2*s);r._OrtGetInputOutputCount(e,o,o+s)!==0&&Ht("Can't get session input/output count.");let n=s===4?"i32":"i64";return[Number(r.getValue(o,n)),Number(r.getValue(o+s,n))]}finally{r.stackRestore(t)}},Oc=(e,r)=>{let t=Jt(),s=t.stackSave(),o=0;try{let n=t.PTR_SIZE,i=t.stackAlloc(2*n);t._OrtGetInputOutputMetadata(e,r,i,i+n)!==0&&Ht("Can't get session input/output metadata.");let a=Number(t.getValue(i,"*"));o=Number(t.getValue(i+n,"*"));let l=t.HEAP32[o/4];if(l===0)return[a,0];let c=t.HEAPU32[o/4+1],p=[];for(let d=0;d<c;d++){let u=Number(t.getValue(o+8+d*n,"*"));p.push(u!==0?t.UTF8ToString(u):Number(t.getValue(o+8+(d+c)*n,"*")))}return[a,l,p]}finally{t.stackRestore(s),o!==0&&t._OrtFree(o)}},fa=e=>{let r=Jt(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},Su=async(e,r)=>{var d,u,f,_;let t,s,o=Jt();Array.isArray(e)?[t,s]=e:e.buffer===o.HEAPU8.buffer?[t,s]=[e.byteOffset,e.byteLength]:[t,s]=fa(e);let n=0,i=0,a=0,l=[],c=[],p=[];try{if([i,l]=await ib(r),(r==null?void 0:r.externalData)&&o.mountExternalData){let P=[];for(let O of r.externalData){let L=typeof O=="string"?O:O.path;P.push(mu(typeof O=="string"?O:O.data).then(G=>{o.mountExternalData(L,G)}))}await Promise.all(P)}for(let P of(r==null?void 0:r.executionProviders)??[])if((typeof P=="string"?P:P.name)==="webnn"){if(o.shouldTransferToMLTensor=!1,typeof P!="string"){let O=P,L=O==null?void 0:O.context,G=O==null?void 0:O.gpuDevice,K=O==null?void 0:O.deviceType,R=O==null?void 0:O.powerPreference;L?o.currentContext=L:G?o.currentContext=await o.webnnCreateMLContext(G):o.currentContext=await o.webnnCreateMLContext({deviceType:K,powerPreference:R})}else o.currentContext=await o.webnnCreateMLContext();break}n=await o._OrtCreateSession(t,s,i),(d=o.webgpuOnCreateSession)==null||d.call(o,n),n===0&&Ht("Can't create a session."),(u=o.jsepOnCreateSession)==null||u.call(o),o.currentContext&&(o.webnnRegisterMLContext(n,o.currentContext),o.currentContext=void 0,o.shouldTransferToMLTensor=!0);let[b,k]=EM(n),g=!!(r!=null&&r.enableGraphCapture),M=[],$=[],v=[],y=[],T=[];for(let P=0;P<b;P++){let[O,L,G]=Oc(n,P);O===0&&Ht("Can't get an input name."),c.push(O);let K=o.UTF8ToString(O);M.push(K),v.push(L===0?{name:K,isTensor:!1}:{name:K,isTensor:!0,type:Ns(L),shape:G})}for(let P=0;P<k;P++){let[O,L,G]=Oc(n,P+b);O===0&&Ht("Can't get an output name."),p.push(O);let K=o.UTF8ToString(O);$.push(K),y.push(L===0?{name:K,isTensor:!1}:{name:K,isTensor:!0,type:Ns(L),shape:G});{if(g&&(r==null?void 0:r.preferredOutputLocation)===void 0){T.push("gpu-buffer");continue}let R=typeof(r==null?void 0:r.preferredOutputLocation)=="string"?r.preferredOutputLocation:((f=r==null?void 0:r.preferredOutputLocation)==null?void 0:f[K])??"cpu";if(R!=="cpu"&&R!=="cpu-pinned"&&R!=="gpu-buffer"&&R!=="ml-tensor")throw new Error(`Not supported preferred output location: ${R}.`);if(g&&R!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${R}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);T.push(R)}}let x=null;return T.some(P=>P==="gpu-buffer"||P==="ml-tensor")&&(a=o._OrtCreateBinding(n),a===0&&Ht("Can't create IO binding."),x={handle:a,outputPreferredLocations:T,outputPreferredLocationsEncoded:T.map(P=>Vc(P))}),rn.set(n,[n,c,p,x,g,!1]),[n,M,$,v,y]}catch(b){throw c.forEach(k=>o._OrtFree(k)),p.forEach(k=>o._OrtFree(k)),a!==0&&o._OrtReleaseBinding(a)!==0&&Ht("Can't release IO binding."),n!==0&&o._OrtReleaseSession(n)!==0&&Ht("Can't release session."),b}finally{o._free(t),i!==0&&o._OrtReleaseSessionOptions(i)!==0&&Ht("Can't release session options."),l.forEach(b=>o._free(b)),(_=o.unmountExternalData)==null||_.call(o)}},$u=e=>{var l,c,p;let r=Jt(),t=rn.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,o,n,i,a]=t;i&&(a&&r._OrtClearBoundOutputs(i.handle)!==0&&Ht("Can't clear bound outputs."),r._OrtReleaseBinding(i.handle)!==0&&Ht("Can't release IO binding.")),(l=r.jsepOnReleaseSession)==null||l.call(r,e),(c=r.webnnOnReleaseSession)==null||c.call(r,e),(p=r.webgpuOnReleaseSession)==null||p.call(r,e),o.forEach(d=>r._OrtFree(d)),n.forEach(d=>r._OrtFree(d)),r._OrtReleaseSession(s)!==0&&Ht("Can't release session."),rn.delete(e)},Dc=async(e,r,t,s,o,n,i=!1)=>{if(!e){r.push(0);return}let a=Jt(),l=a.PTR_SIZE,c=e[0],p=e[1],d=e[3],u=d,f,_;if(c==="string"&&(d==="gpu-buffer"||d==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(i&&d!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${n} when enableGraphCapture is true.`);if(d==="gpu-buffer"){let g=e[2].gpuBuffer;_=kn(eo(c),p);{let M=a.jsepRegisterBuffer;if(!M)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');f=M(s,n,g,_)}}else if(d==="ml-tensor"){let g=e[2].mlTensor;_=kn(eo(c),p);let M=a.webnnRegisterMLTensor;if(!M)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');f=M(s,g,eo(c),p)}else{let g=e[2];if(Array.isArray(g)){_=l*g.length,f=a._malloc(_),t.push(f);for(let M=0;M<g.length;M++){if(typeof g[M]!="string")throw new TypeError(`tensor data at index ${M} is not a string`);a.setValue(f+M*l,Ts(g[M],t),"*")}}else{let M=a.webnnIsGraphInput;if(c!=="string"&&M){let $=a.UTF8ToString(o);if(M(s,$)){let v=eo(c);_=kn(v,p),u="ml-tensor";let y=a.webnnCreateTemporaryTensor,T=a.webnnUploadTensor;if(!y||!T)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let x=await y(s,v,p);T(x,new Uint8Array(g.buffer,g.byteOffset,g.byteLength)),f=x}else _=g.byteLength,f=a._malloc(_),t.push(f),a.HEAPU8.set(new Uint8Array(g.buffer,g.byteOffset,_),f)}else _=g.byteLength,f=a._malloc(_),t.push(f),a.HEAPU8.set(new Uint8Array(g.buffer,g.byteOffset,_),f)}}let b=a.stackSave(),k=a.stackAlloc(4*p.length);try{p.forEach((M,$)=>a.setValue(k+$*l,M,l===4?"i32":"i64"));let g=a._OrtCreateTensor(eo(c),f,_,k,p.length,Vc(u));g===0&&Ht(`Can't create tensor for input/output. session=${s}, index=${n}.`),r.push(g)}finally{a.stackRestore(b)}},ku=async(e,r,t,s,o,n)=>{var G,K,R,te;let i=Jt(),a=i.PTR_SIZE,l=rn.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let c=l[0],p=l[1],d=l[2],u=l[3],f=l[4],_=l[5],b=r.length,k=s.length,g=0,M=[],$=[],v=[],y=[],T=i.stackSave(),x=i.stackAlloc(b*a),P=i.stackAlloc(b*a),O=i.stackAlloc(k*a),L=i.stackAlloc(k*a);try{[g,M]=ob(n);for(let Z=0;Z<b;Z++)await Dc(t[Z],$,y,e,p[r[Z]],r[Z],f);for(let Z=0;Z<k;Z++)await Dc(o[Z],v,y,e,d[s[Z]],b+s[Z],f);for(let Z=0;Z<b;Z++)i.setValue(x+Z*a,$[Z],"*"),i.setValue(P+Z*a,p[r[Z]],"*");for(let Z=0;Z<k;Z++)i.setValue(O+Z*a,v[Z],"*"),i.setValue(L+Z*a,d[s[Z]],"*");if(u&&!_){let{handle:Z,outputPreferredLocations:ne,outputPreferredLocationsEncoded:he}=u;if(p.length!==b)throw new Error(`input count from feeds (${b}) is expected to be always equal to model's input count (${p.length}).`);for(let ue=0;ue<b;ue++){let j=r[ue];await i._OrtBindInput(Z,p[j],$[ue])!==0&&Ht(`Can't bind input[${ue}] for session=${e}.`)}for(let ue=0;ue<k;ue++){let j=s[ue];(G=o[ue])!=null&&G[3]?i._OrtBindOutput(Z,d[j],v[ue],0)!==0&&Ht(`Can't bind pre-allocated output[${ue}] for session=${e}.`):i._OrtBindOutput(Z,d[j],0,he[j])!==0&&Ht(`Can't bind output[${ue}] to ${ne[ue]} for session=${e}.`)}rn.set(e,[c,p,d,u,f,!0])}(K=i.jsepOnRunStart)==null||K.call(i,c),(R=i.webnnOnRunStart)==null||R.call(i,c);let H;u?H=await i._OrtRunWithBinding(c,u.handle,k,O,g):H=await i._OrtRun(c,P,x,b,L,k,O,g),H!==0&&Ht("failed to call OrtRun().");let ee=[];for(let Z=0;Z<k;Z++){let ne=Number(i.getValue(O+Z*a,"*"));if(ne===v[Z]){ee.push(o[Z]);continue}let he=i.stackSave(),ue=i.stackAlloc(4*a),j=!1,F,U=0;try{i._OrtGetTensorData(ne,ue,ue+a,ue+2*a,ue+3*a)!==0&&Ht(`Can't access output tensor data on index ${Z}.`);let se=a===4?"i32":"i64",_e=Number(i.getValue(ue,se));U=i.getValue(ue+a,"*");let ie=i.getValue(ue+a*2,"*"),ve=Number(i.getValue(ue+a*3,se)),ze=[];for(let X=0;X<ve;X++)ze.push(Number(i.getValue(ie+X*a,se)));i._OrtFree(ie)!==0&&Ht("Can't free memory for tensor dims.");let Ge=ze.reduce((X,ae)=>X*ae,1);F=Ns(_e);let Ie=u==null?void 0:u.outputPreferredLocations[s[Z]];if(F==="string"){if(Ie==="gpu-buffer"||Ie==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let X=[];for(let ae=0;ae<Ge;ae++){let W=i.getValue(U+ae*a,"*"),be=i.getValue(U+(ae+1)*a,"*"),ke=ae===Ge-1?void 0:be-W;X.push(i.UTF8ToString(W,ke))}ee.push([F,ze,X,"cpu"])}else if(Ie==="gpu-buffer"&&Ge>0){let X=i.jsepGetBuffer;if(!X)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let ae=X(U),W=kn(_e,Ge);if(W===void 0||!du(F))throw new Error(`Unsupported data type: ${F}`);j=!0,ee.push([F,ze,{gpuBuffer:ae,download:i.jsepCreateDownloader(ae,W,F),dispose:()=>{i._OrtReleaseTensor(ne)!==0&&Ht("Can't release tensor.")}},"gpu-buffer"])}else if(Ie==="ml-tensor"&&Ge>0){let X=i.webnnEnsureTensor,ae=i.webnnIsInt64Supported;if(!X||!ae)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(kn(_e,Ge)===void 0||!pu(F))throw new Error(`Unsupported data type: ${F}`);if(F==="int64"&&!ae(e))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let W=await X(e,U,_e,ze,!1);j=!0,ee.push([F,ze,{mlTensor:W,download:i.webnnCreateMLTensorDownloader(U,F),dispose:()=>{i.webnnReleaseTensorId(U),i._OrtReleaseTensor(ne)}},"ml-tensor"])}else{let X=uu(F),ae=new X(Ge);new Uint8Array(ae.buffer,ae.byteOffset,ae.byteLength).set(i.HEAPU8.subarray(U,U+ae.byteLength)),ee.push([F,ze,ae,"cpu"])}}finally{i.stackRestore(he),F==="string"&&U&&i._free(U),j||i._OrtReleaseTensor(ne),(te=i.webnnOnRunEnd)==null||te.call(i,c)}}return u&&!f&&(i._OrtClearBoundOutputs(u.handle)!==0&&Ht("Can't clear bound outputs."),rn.set(e,[c,p,d,u,f,!1])),ee}finally{i.stackRestore(T),$.forEach(H=>i._OrtReleaseTensor(H)),v.forEach(H=>i._OrtReleaseTensor(H)),y.forEach(H=>i._free(H)),g!==0&&i._OrtReleaseRunOptions(g),M.forEach(H=>i._free(H))}},Iu=e=>{let r=Jt(),t=rn.get(e);if(!t)throw new Error("invalid session id");let s=t[0],o=r._OrtEndProfiling(s);o===0&&Ht("Can't get an profile file name."),r._OrtFree(o)},Au=e=>{let r=[];for(let t of e){let s=t[2];!Array.isArray(s)&&"buffer"in s&&r.push(s.buffer)}return r}}),sn,ts,Yn,Vo,Uo,sa,Lc,na,Pn,Cn,PM,ov,iv,av,lv,cv,uv,dv,pv=Ve(()=>{Ss(),nv(),Dn(),au(),sn=()=>!!Zt.wasm.proxy&&typeof document<"u",Yn=!1,Vo=!1,Uo=!1,na=new Map,Pn=(e,r)=>{let t=na.get(e);t?t.push(r):na.set(e,[r])},Cn=()=>{if(Yn||!Vo||Uo||!ts)throw new Error("worker not ready")},PM=e=>{switch(e.data.type){case"init-wasm":Yn=!1,e.data.err?(Uo=!0,Lc[1](e.data.err)):(Vo=!0,Lc[0]()),sa&&(URL.revokeObjectURL(sa),sa=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=na.get(e.data.type);e.data.err?r.shift()[1](e.data.err):r.shift()[0](e.data.out);break}}},ov=async()=>{if(!Vo){if(Yn)throw new Error("multiple calls to 'initWasm()' detected.");if(Uo)throw new Error("previous call to 'initWasm()' failed.");if(Yn=!0,sn())return new Promise((e,r)=>{ts==null||ts.terminate(),sb().then(([t,s])=>{try{ts=s,ts.onerror=n=>r(n),ts.onmessage=PM,Lc=[e,r];let o={type:"init-wasm",in:Zt};!o.in.wasm.wasmPaths&&(t||Nc)&&(o.in.wasm.wasmPaths={wasm:new URL("https://solidsnail.github.io/llmini.js/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href}),ts.postMessage(o),sa=t}catch(o){r(o)}},r)});try{await lu(Zt.wasm),await Pu(Zt),Vo=!0}catch(e){throw Uo=!0,e}finally{Yn=!1}}},iv=async e=>{if(sn())return Cn(),new Promise((r,t)=>{Pn("init-ep",[r,t]);let s={type:"init-ep",in:{epName:e,env:Zt}};ts.postMessage(s)});await Cu(Zt,e)},av=async e=>sn()?(Cn(),new Promise((r,t)=>{Pn("copy-from",[r,t]);let s={type:"copy-from",in:{buffer:e}};ts.postMessage(s,[e.buffer])})):fa(e),lv=async(e,r)=>{if(sn()){if(r!=null&&r.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Cn(),new Promise((t,s)=>{Pn("create",[t,s]);let o={type:"create",in:{model:e,options:{...r}}},n=[];e instanceof Uint8Array&&n.push(e.buffer),ts.postMessage(o,n)})}else return Su(e,r)},cv=async e=>{if(sn())return Cn(),new Promise((r,t)=>{Pn("release",[r,t]);let s={type:"release",in:e};ts.postMessage(s)});$u(e)},uv=async(e,r,t,s,o,n)=>{if(sn()){if(t.some(i=>i[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(i=>i))throw new Error("pre-allocated output tensor is not supported for proxy.");return Cn(),new Promise((i,a)=>{Pn("run",[i,a]);let l=t,c={type:"run",in:{sessionId:e,inputIndices:r,inputs:l,outputIndices:s,options:n}};ts.postMessage(c,Au(l))})}else return ku(e,r,t,s,o,n)},dv=async e=>{if(sn())return Cn(),new Promise((r,t)=>{Pn("end-profiling",[r,t]);let s={type:"end-profiling",in:e};ts.postMessage(s)});Iu(e)}}),zc,CM,mv,gT=Ve(()=>{Ss(),pv(),gt(),iu(),ab(),zc=(e,r)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${r()}`)}},CM=e=>{switch(e[3]){case"cpu":return new Es(e[0],e[2],e[1]);case"gpu-buffer":{let r=e[0];if(!du(r))throw new Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:t,download:s,dispose:o}=e[2];return Es.fromGpuBuffer(t,{dataType:r,dims:e[1],download:s,dispose:o})}case"ml-tensor":{let r=e[0];if(!pu(r))throw new Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:t,download:s,dispose:o}=e[2];return Es.fromMLTensor(t,{dataType:r,dims:e[1],download:s,dispose:o})}default:throw new Error(`invalid data location: ${e[3]}`)}},mv=class{async fetchModelAndCopyToWasmMemory(e){return av(await mu(e))}async loadModel(e,r){Cs();let t;typeof e=="string"?t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await lv(t,r),ps()}async dispose(){return cv(this.sessionId)}async run(e,r,t){Cs();let s=[],o=[];Object.entries(e).forEach(d=>{let u=d[0],f=d[1],_=this.inputNames.indexOf(u);if(_===-1)throw new Error(`invalid input '${u}'`);s.push(f),o.push(_)});let n=[],i=[];Object.entries(r).forEach(d=>{let u=d[0],f=d[1],_=this.outputNames.indexOf(u);if(_===-1)throw new Error(`invalid output '${u}'`);n.push(f),i.push(_)});let a=s.map((d,u)=>zc(d,()=>`input "${this.inputNames[o[u]]}"`)),l=n.map((d,u)=>d?zc(d,()=>`output "${this.outputNames[i[u]]}"`):null),c=await uv(this.sessionId,o,a,i,l,t),p={};for(let d=0;d<c.length;d++)p[this.outputNames[i[d]]]=n[d]??CM(c[d]);return ps(),p}startProfiling(){}endProfiling(){dv(this.sessionId)}}}),hv={};oo(hv,{OnnxruntimeWebAssemblyBackend:()=>ru,initializeFlags:()=>tu,wasmBackend:()=>_v});var tu,ru,_v,wT=Ve(()=>{Ss(),pv(),gT(),tu=()=>{(typeof Zt.wasm.initTimeout!="number"||Zt.wasm.initTimeout<0)&&(Zt.wasm.initTimeout=0);let e=Zt.wasm.simd;if(typeof e!="boolean"&&e!==void 0&&e!=="fixed"&&e!=="relaxed"&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${e}". Reset it to \`false\` and ignore SIMD feature checking.`),Zt.wasm.simd=!1),typeof Zt.wasm.proxy!="boolean"&&(Zt.wasm.proxy=!1),typeof Zt.wasm.trace!="boolean"&&(Zt.wasm.trace=!1),typeof Zt.wasm.numThreads!="number"||!Number.isInteger(Zt.wasm.numThreads)||Zt.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)Zt.wasm.numThreads=1;else{let r=typeof navigator>"u"?nx("node:os").cpus().length:navigator.hardwareConcurrency;Zt.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},ru=class{async init(e){tu(),await ov(),await iv(e)}async createInferenceSessionHandler(e,r){let t=new mv;return await t.loadModel(e,r),t}},_v=new ru});Ss();Ss();Ss();var MT="1.22.0-dev.20250409-89f8206ba4",bT=JM;{let e=(wT(),Qo(hv)).wasmBackend;In("webgpu",e,5),In("webnn",e,5),In("cpu",e,10),In("wasm",e,10)}Object.defineProperty(Zt.versions,"web",{value:MT,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var yT=Object.freeze({__proto__:null,get InferenceSession(){return ou},get TRACE(){return Xo},get TRACE_FUNC_BEGIN(){return Cs},get TRACE_FUNC_END(){return ps},get Tensor(){return Es},default:bT,get env(){return Zt},get registerBackend(){return In}}),js={},vT={"onnxruntime-common":e=>{e.exports=ex},"onnxruntime-web":e=>{e.exports=yT},"?2ce3":()=>{},"?7992":()=>{},"?5af5":()=>{},"?2b25":()=>{},"?db59":()=>{},"?383f":()=>{},"?fa4b":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,r,t)=>{t.r(r),t.d(r,{Environment:()=>Oe,Interpreter:()=>ot,Template:()=>Qt,parse:()=>ie,tokenize:()=>p});var s=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Comment:"Comment"}),o=class{constructor(S,Q){this.value=S,this.type=Q}};function n(S){return/\w/.test(S)}function i(S){return/[0-9]/.test(S)}var a=[["{%",s.OpenStatement],["%}",s.CloseStatement],["{{",s.OpenExpression],["}}",s.CloseExpression],["(",s.OpenParen],[")",s.CloseParen],["{",s.OpenCurlyBracket],["}",s.CloseCurlyBracket],["[",s.OpenSquareBracket],["]",s.CloseSquareBracket],[",",s.Comma],[".",s.Dot],[":",s.Colon],["|",s.Pipe],["<=",s.ComparisonBinaryOperator],[">=",s.ComparisonBinaryOperator],["==",s.ComparisonBinaryOperator],["!=",s.ComparisonBinaryOperator],["<",s.ComparisonBinaryOperator],[">",s.ComparisonBinaryOperator],["+",s.AdditiveBinaryOperator],["-",s.AdditiveBinaryOperator],["~",s.AdditiveBinaryOperator],["*",s.MultiplicativeBinaryOperator],["/",s.MultiplicativeBinaryOperator],["%",s.MultiplicativeBinaryOperator],["=",s.Equals]],l=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function c(S,Q={}){return S.endsWith(`
`)&&(S=S.slice(0,-1)),Q.lstrip_blocks&&(S=S.replace(/^[ \t]*({[#%-])/gm,"$1")),Q.trim_blocks&&(S=S.replace(/([#%-]})\n/g,"$1")),S.replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{").replace(/-#}\s*/g,"#}").replace(/\s*{#-/g,"{#").replace(/{%\s*(end)?generation\s*%}/gs,"")}function p(S,Q={}){var rt,ft;const B=[],q=c(S,Q);let re=0,ge=0;const Fe=mt=>{let vt="";for(;mt(q[re]);){if(q[re]==="\\"){if(++re,re>=q.length)throw new SyntaxError("Unexpected end of input");const st=q[re++],zt=l.get(st);if(zt===void 0)throw new SyntaxError(`Unexpected escaped character: ${st}`);vt+=zt;continue}if(vt+=q[re++],re>=q.length)throw new SyntaxError("Unexpected end of input")}return vt};e:for(;re<q.length;){const mt=(rt=B.at(-1))==null?void 0:rt.type;if(mt===void 0||mt===s.CloseStatement||mt===s.CloseExpression||mt===s.Comment){let st="";for(;re<q.length&&!(q[re]==="{"&&(q[re+1]==="%"||q[re+1]==="{"||q[re+1]==="#"));)st+=q[re++];if(st.length>0){B.push(new o(st,s.Text));continue}}if(q[re]==="{"&&q[re+1]==="#"){re+=2;let st="";for(;q[re]!=="#"||q[re+1]!=="}";){if(re+2>=q.length)throw new SyntaxError("Missing end of comment tag");st+=q[re++]}B.push(new o(st,s.Comment)),re+=2;continue}Fe(st=>/\s/.test(st));const vt=q[re];if(vt==="-"||vt==="+"){const st=(ft=B.at(-1))==null?void 0:ft.type;if(st===s.Text||st===void 0)throw new SyntaxError(`Unexpected character: ${vt}`);switch(st){case s.Identifier:case s.NumericLiteral:case s.StringLiteral:case s.CloseParen:case s.CloseSquareBracket:break;default:{++re;const zt=Fe(i);B.push(new o(`${vt}${zt}`,zt.length>0?s.NumericLiteral:s.UnaryOperator));continue}}}for(const[st,zt]of a){if(st==="}}"&&ge>0)continue;if(q.slice(re,re+st.length)===st){B.push(new o(st,zt)),zt===s.OpenExpression?ge=0:zt===s.OpenCurlyBracket?++ge:zt===s.CloseCurlyBracket&&--ge,re+=st.length;continue e}}if(vt==="'"||vt==='"'){++re;const st=Fe(zt=>zt!==vt);B.push(new o(st,s.StringLiteral)),++re;continue}if(i(vt)){let st=Fe(i);if(q[re]==="."&&i(q[re+1])){++re;const zt=Fe(i);st=`${st}.${zt}`}B.push(new o(st,s.NumericLiteral));continue}if(n(vt)){const st=Fe(n);B.push(new o(st,s.Identifier));continue}throw new SyntaxError(`Unexpected character: ${vt}`)}return B}var d=class{constructor(){J(this,"type","Statement")}},u=class extends d{constructor(Q){super();J(this,"type","Program");this.body=Q}},f=class extends d{constructor(Q,B,q){super();J(this,"type","If");this.test=Q,this.body=B,this.alternate=q}},_=class extends d{constructor(Q,B,q,re){super();J(this,"type","For");this.loopvar=Q,this.iterable=B,this.body=q,this.defaultBlock=re}},b=class extends d{constructor(){super(...arguments);J(this,"type","Break")}},k=class extends d{constructor(){super(...arguments);J(this,"type","Continue")}},g=class extends d{constructor(Q,B,q){super();J(this,"type","Set");this.assignee=Q,this.value=B,this.body=q}},M=class extends d{constructor(Q,B,q){super();J(this,"type","Macro");this.name=Q,this.args=B,this.body=q}},$=class extends d{constructor(Q){super();J(this,"type","Comment");this.value=Q}},v=class extends d{constructor(){super(...arguments);J(this,"type","Expression")}},y=class extends v{constructor(Q,B,q){super();J(this,"type","MemberExpression");this.object=Q,this.property=B,this.computed=q}},T=class extends v{constructor(Q,B){super();J(this,"type","CallExpression");this.callee=Q,this.args=B}},x=class extends v{constructor(Q){super();J(this,"type","Identifier");this.value=Q}},P=class extends v{constructor(Q){super();J(this,"type","Literal");this.value=Q}},O=class extends P{constructor(){super(...arguments);J(this,"type","IntegerLiteral")}},L=class extends P{constructor(){super(...arguments);J(this,"type","FloatLiteral")}},G=class extends P{constructor(){super(...arguments);J(this,"type","StringLiteral")}},K=class extends P{constructor(){super(...arguments);J(this,"type","ArrayLiteral")}},R=class extends P{constructor(){super(...arguments);J(this,"type","TupleLiteral")}},te=class extends P{constructor(){super(...arguments);J(this,"type","ObjectLiteral")}},H=class extends v{constructor(Q,B,q){super();J(this,"type","BinaryExpression");this.operator=Q,this.left=B,this.right=q}},ee=class extends v{constructor(Q,B){super();J(this,"type","FilterExpression");this.operand=Q,this.filter=B}},Z=class extends d{constructor(Q,B){super();J(this,"type","FilterStatement");this.filter=Q,this.body=B}},ne=class extends v{constructor(Q,B){super();J(this,"type","SelectExpression");this.lhs=Q,this.test=B}},he=class extends v{constructor(Q,B,q){super();J(this,"type","TestExpression");this.operand=Q,this.negate=B,this.test=q}},ue=class extends v{constructor(Q,B){super();J(this,"type","UnaryExpression");this.operator=Q,this.argument=B}},j=class extends v{constructor(Q=void 0,B=void 0,q=void 0){super();J(this,"type","SliceExpression");this.start=Q,this.stop=B,this.step=q}},F=class extends v{constructor(Q,B){super();J(this,"type","KeywordArgumentExpression");this.key=Q,this.value=B}},U=class extends v{constructor(Q){super();J(this,"type","SpreadExpression");this.argument=Q}},se=class extends d{constructor(Q,B,q){super();J(this,"type","CallStatement");this.call=Q,this.callerArgs=B,this.body=q}},_e=class extends v{constructor(Q,B,q){super();J(this,"type","Ternary");this.condition=Q,this.trueExpr=B,this.falseExpr=q}};function ie(S){const Q=new u([]);let B=0;function q(Re,je){const et=S[B++];if(!et||et.type!==Re)throw new Error(`Parser Error: ${je}. ${et.type} !== ${Re}.`);return et}function re(Re){if(!ft(Re))throw new SyntaxError(`Expected ${Re}`);++B}function ge(){switch(S[B].type){case s.Comment:return new $(S[B++].value);case s.Text:return mt();case s.OpenStatement:return vt();case s.OpenExpression:return st();default:throw new SyntaxError(`Unexpected token type: ${S[B].type}`)}}function Fe(...Re){return B+Re.length<=S.length&&Re.every((je,et)=>je===S[B+et].type)}function rt(...Re){var je,et,Xt;return((je=S[B])==null?void 0:je.type)===s.OpenStatement&&((et=S[B+1])==null?void 0:et.type)===s.Identifier&&Re.includes((Xt=S[B+1])==null?void 0:Xt.value)}function ft(...Re){return B+Re.length<=S.length&&Re.every((je,et)=>S[B+et].type==="Identifier"&&je===S[B+et].value)}function mt(){return new G(q(s.Text,"Expected text token").value)}function vt(){if(q(s.OpenStatement,"Expected opening statement token"),S[B].type!==s.Identifier)throw new SyntaxError(`Unknown statement, got ${S[B].type}`);const Re=S[B].value;let je;switch(Re){case"set":++B,je=zt();break;case"if":++B,je=Nt(),q(s.OpenStatement,"Expected {% token"),re("endif"),q(s.CloseStatement,"Expected %} token");break;case"macro":++B,je=jr(),q(s.OpenStatement,"Expected {% token"),re("endmacro"),q(s.CloseStatement,"Expected %} token");break;case"for":++B,je=rr(),q(s.OpenStatement,"Expected {% token"),re("endfor"),q(s.CloseStatement,"Expected %} token");break;case"call":{++B;let et=null;Fe(s.OpenParen)&&(et=Zr());const Xt=Wr();if(Xt.type!=="Identifier")throw new SyntaxError("Expected identifier following call statement");const Ls=Zr();q(s.CloseStatement,"Expected closing statement token");const hs=[];for(;!rt("endcall");)hs.push(ge());q(s.OpenStatement,"Expected '{%'"),re("endcall"),q(s.CloseStatement,"Expected closing statement token");const zs=new T(Xt,Ls);je=new se(zs,et,hs);break}case"break":++B,q(s.CloseStatement,"Expected closing statement token"),je=new b;break;case"continue":++B,q(s.CloseStatement,"Expected closing statement token"),je=new k;break;case"filter":{++B;let et=Wr();et instanceof x&&Fe(s.OpenParen)&&(et=Ur(et)),q(s.CloseStatement,"Expected closing statement token");const Xt=[];for(;!rt("endfilter");)Xt.push(ge());q(s.OpenStatement,"Expected '{%'"),re("endfilter"),q(s.CloseStatement,"Expected '%}'"),je=new Z(et,Xt);break}default:throw new SyntaxError(`Unknown statement type: ${Re}`)}return je}function st(){q(s.OpenExpression,"Expected opening expression token");const Re=Cr();return q(s.CloseExpression,"Expected closing expression token"),Re}function zt(){const Re=qr();let je=null;const et=[];if(Fe(s.Equals))++B,je=qr();else{for(q(s.CloseStatement,"Expected %} token");!rt("endset");)et.push(ge());q(s.OpenStatement,"Expected {% token"),re("endset")}return q(s.CloseStatement,"Expected closing statement token"),new g(Re,je,et)}function Nt(){const Re=Cr();q(s.CloseStatement,"Expected closing statement token");const je=[],et=[];for(;!rt("elif","else","endif");)je.push(ge());if(rt("elif")){++B,++B;const Xt=Nt();et.push(Xt)}else if(rt("else"))for(++B,++B,q(s.CloseStatement,"Expected closing statement token");!rt("endif");)et.push(ge());return new f(Re,je,et)}function jr(){const Re=Wr();if(Re.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const je=Zr();q(s.CloseStatement,"Expected closing statement token");const et=[];for(;!rt("endmacro");)et.push(ge());return new M(Re,je,et)}function qr(Re=!1){const je=Re?Wr:Cr,et=[je()],Xt=Fe(s.Comma);for(;Xt&&(++B,et.push(je()),!!Fe(s.Comma)););return Xt?new R(et):et[0]}function rr(){const Re=qr(!0);if(!(Re instanceof x||Re instanceof R))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Re.type} instead`);if(!ft("in"))throw new SyntaxError("Expected `in` keyword following loop variable");++B;const je=Cr();q(s.CloseStatement,"Expected closing statement token");const et=[];for(;!rt("endfor","else");)et.push(ge());const Xt=[];if(rt("else"))for(++B,++B,q(s.CloseStatement,"Expected closing statement token");!rt("endfor");)Xt.push(ge());return new _(Re,je,et,Xt)}function Cr(){return Sr()}function Sr(){const Re=Nr();if(ft("if")){++B;const je=Nr();if(ft("else")){++B;const et=Sr();return new _e(je,Re,et)}else return new ne(Re,je)}return Re}function Nr(){let Re=as();for(;ft("or");){const je=S[B];++B;const et=as();Re=new H(je,Re,et)}return Re}function as(){let Re=$r();for(;ft("and");){const je=S[B];++B;const et=$r();Re=new H(je,Re,et)}return Re}function $r(){let Re;for(;ft("not");){const je=S[B];++B;const et=$r();Re=new ue(je,et)}return Re??Is()}function Is(){let Re=As();for(;;){let je;if(ft("not","in"))je=new o("not in",s.Identifier),B+=2;else if(ft("in"))je=S[B++];else if(Fe(s.ComparisonBinaryOperator))je=S[B++];else break;const et=As();Re=new H(je,Re,et)}return Re}function As(){let Re=hr();for(;Fe(s.AdditiveBinaryOperator);){const je=S[B];++B;const et=hr();Re=new H(je,Re,et)}return Re}function Vr(){const Re=pr(Wr());return Fe(s.OpenParen)?Ur(Re):Re}function Ur(Re){let je=new T(Re,Zr());return je=pr(je),Fe(s.OpenParen)&&(je=Ur(je)),je}function Zr(){q(s.OpenParen,"Expected opening parenthesis for arguments list");const Re=Or();return q(s.CloseParen,"Expected closing parenthesis for arguments list"),Re}function Or(){const Re=[];for(;!Fe(s.CloseParen);){let je;if(S[B].type===s.MultiplicativeBinaryOperator&&S[B].value==="*"){++B;const et=Cr();je=new U(et)}else if(je=Cr(),Fe(s.Equals)){if(++B,!(je instanceof x))throw new SyntaxError("Expected identifier for keyword argument");const et=Cr();je=new F(je,et)}Re.push(je),Fe(s.Comma)&&++B}return Re}function ms(){const Re=[];let je=!1;for(;!Fe(s.CloseSquareBracket);)Fe(s.Colon)?(Re.push(void 0),++B,je=!0):(Re.push(Cr()),Fe(s.Colon)&&(++B,je=!0));if(Re.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(je){if(Re.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new j(...Re)}return Re[0]}function pr(Re){for(;Fe(s.Dot)||Fe(s.OpenSquareBracket);){const je=S[B];++B;let et;const Xt=je.type===s.OpenSquareBracket;if(Xt)et=ms(),q(s.CloseSquareBracket,"Expected closing square bracket");else if(et=Wr(),et.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Re=new y(Re,et,Xt)}return Re}function hr(){let Re=Qr();for(;Fe(s.MultiplicativeBinaryOperator);){const je=S[B++],et=Qr();Re=new H(je,Re,et)}return Re}function Qr(){let Re=Ds();for(;ft("is");){++B;const je=ft("not");je&&++B;const et=Wr();if(!(et instanceof x))throw new SyntaxError("Expected identifier for the test");Re=new he(Re,je,et)}return Re}function Ds(){let Re=Vr();for(;Fe(s.Pipe);){++B;let je=Wr();if(!(je instanceof x))throw new SyntaxError("Expected identifier for the filter");Fe(s.OpenParen)&&(je=Ur(je)),Re=new ee(Re,je)}return Re}function Wr(){const Re=S[B++];switch(Re.type){case s.NumericLiteral:{const je=Re.value;return je.includes(".")?new L(Number(je)):new O(Number(je))}case s.StringLiteral:{let je=Re.value;for(;Fe(s.StringLiteral);)je+=S[B++].value;return new G(je)}case s.Identifier:return new x(Re.value);case s.OpenParen:{const je=qr();return q(s.CloseParen,"Expected closing parenthesis, got ${tokens[current].type} instead."),je}case s.OpenSquareBracket:{const je=[];for(;!Fe(s.CloseSquareBracket);)je.push(Cr()),Fe(s.Comma)&&++B;return++B,new K(je)}case s.OpenCurlyBracket:{const je=new Map;for(;!Fe(s.CloseCurlyBracket);){const et=Cr();q(s.Colon,"Expected colon between key and value in object literal");const Xt=Cr();je.set(et,Xt),Fe(s.Comma)&&++B}return++B,new te(je)}default:throw new SyntaxError(`Unexpected token: ${Re.type}`)}}for(;B<S.length;)Q.body.push(ge());return Q}function ve(S,Q,B=1){Q===void 0&&(Q=S,S=0);const q=[];for(let re=S;re<Q;re+=B)q.push(re);return q}function ze(S,Q,B,q=1){const re=Math.sign(q);re>=0?(Q=(Q??(Q=0))<0?Math.max(S.length+Q,0):Math.min(Q,S.length),B=(B??(B=S.length))<0?Math.max(S.length+B,0):Math.min(B,S.length)):(Q=(Q??(Q=S.length-1))<0?Math.max(S.length+Q,-1):Math.min(Q,S.length-1),B=(B??(B=-1))<-1?Math.max(S.length+B,-1):Math.min(B,S.length-1));const ge=[];for(let Fe=Q;re*Fe<re*B;Fe+=q)ge.push(S[Fe]);return ge}function Ge(S){return S.replace(/\b\w/g,Q=>Q.toUpperCase())}function Ie(S){return X(new Date,S)}function X(S,Q){const B=new Intl.DateTimeFormat(void 0,{month:"long"}),q=new Intl.DateTimeFormat(void 0,{month:"short"}),re=ge=>ge<10?"0"+ge:ge.toString();return Q.replace(/%[YmdbBHM%]/g,ge=>{switch(ge){case"%Y":return S.getFullYear().toString();case"%m":return re(S.getMonth()+1);case"%d":return re(S.getDate());case"%b":return q.format(S);case"%B":return B.format(S);case"%H":return re(S.getHours());case"%M":return re(S.getMinutes());case"%%":return"%";default:return ge}})}function ae(S){return S.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function W(S,Q,B,q){if(q===0)return S;let re=q==null||q<0?1/0:q;const ge=Q.length===0?new RegExp("(?=)","gu"):new RegExp(ae(Q),"gu");return S.replaceAll(ge,Fe=>re>0?(--re,B):Fe)}var be=class extends Error{},ke=class extends Error{},Ee=class{constructor(S=void 0){J(this,"type","RuntimeValue");J(this,"value");J(this,"builtins",new Map);this.value=S}__bool__(){return new Ae(!!this.value)}toString(){return String(this.value)}},Me=class extends Ee{constructor(){super(...arguments);J(this,"type","IntegerValue")}},Se=class extends Ee{constructor(){super(...arguments);J(this,"type","FloatValue")}toString(){return this.value%1===0?this.value.toFixed(1):this.value.toString()}},we=class extends Ee{constructor(){super(...arguments);J(this,"type","StringValue");J(this,"builtins",new Map([["upper",new Ke(()=>new we(this.value.toUpperCase()))],["lower",new Ke(()=>new we(this.value.toLowerCase()))],["strip",new Ke(()=>new we(this.value.trim()))],["title",new Ke(()=>new we(Ge(this.value)))],["capitalize",new Ke(()=>new we(this.value.charAt(0).toUpperCase()+this.value.slice(1)))],["length",new Me(this.value.length)],["rstrip",new Ke(()=>new we(this.value.trimEnd()))],["lstrip",new Ke(()=>new we(this.value.trimStart()))],["startswith",new Ke(Q=>{if(Q.length===0)throw new Error("startswith() requires at least one argument");const B=Q[0];if(B instanceof we)return new Ae(this.value.startsWith(B.value));if(B instanceof xe){for(const q of B.value){if(!(q instanceof we))throw new Error("startswith() tuple elements must be strings");if(this.value.startsWith(q.value))return new Ae(!0)}return new Ae(!1)}throw new Error("startswith() argument must be a string or tuple of strings")})],["endswith",new Ke(Q=>{if(Q.length===0)throw new Error("endswith() requires at least one argument");const B=Q[0];if(B instanceof we)return new Ae(this.value.endsWith(B.value));if(B instanceof xe){for(const q of B.value){if(!(q instanceof we))throw new Error("endswith() tuple elements must be strings");if(this.value.endsWith(q.value))return new Ae(!0)}return new Ae(!1)}throw new Error("endswith() argument must be a string or tuple of strings")})],["split",new Ke(Q=>{const B=Q[0]??new nt;if(!(B instanceof we||B instanceof nt))throw new Error("sep argument must be a string or null");const q=Q[1]??new Me(-1);if(!(q instanceof Me))throw new Error("maxsplit argument must be a number");let re=[];if(B instanceof nt){const ge=this.value.trimStart();for(const{0:Fe,index:rt}of ge.matchAll(/\S+/g)){if(q.value!==-1&&re.length>=q.value&&rt!==void 0){re.push(Fe+ge.slice(rt+Fe.length));break}re.push(Fe)}}else{if(B.value==="")throw new Error("empty separator");re=this.value.split(B.value),q.value!==-1&&re.length>q.value&&re.push(re.splice(q.value).join(B.value))}return new xe(re.map(ge=>new we(ge)))})],["replace",new Ke(Q=>{if(Q.length<2)throw new Error("replace() requires at least two arguments");const B=Q[0],q=Q[1];if(!(B instanceof we&&q instanceof we))throw new Error("replace() arguments must be strings");let re;if(Q.length>2?Q[2].type==="KeywordArgumentsValue"?re=Q[2].value.get("count")??new nt:re=Q[2]:re=new nt,!(re instanceof Me||re instanceof nt))throw new Error("replace() count argument must be a number or null");return new we(W(this.value,B.value,q.value,re.value))})]]))}},Ae=class extends Ee{constructor(){super(...arguments);J(this,"type","BooleanValue")}},Be=class extends Ee{constructor(){super(...arguments);J(this,"type","ObjectValue");J(this,"builtins",new Map([["get",new Ke(([Q,B])=>{if(!(Q instanceof we))throw new Error(`Object key must be a string: got ${Q.type}`);return this.value.get(Q.value)??B??new nt})],["items",new Ke(()=>this.items())],["keys",new Ke(()=>this.keys())],["values",new Ke(()=>this.values())]]))}__bool__(){return new Ae(this.value.size>0)}items(){return new xe(Array.from(this.value.entries()).map(([Q,B])=>new xe([new we(Q),B])))}keys(){return new xe(Array.from(this.value.keys()).map(Q=>new we(Q)))}values(){return new xe(Array.from(this.value.values()))}},Qe=class extends Be{constructor(){super(...arguments);J(this,"type","KeywordArgumentsValue")}},xe=class extends Ee{constructor(){super(...arguments);J(this,"type","ArrayValue");J(this,"builtins",new Map([["length",new Me(this.value.length)]]))}__bool__(){return new Ae(this.value.length>0)}},Ze=class extends xe{constructor(){super(...arguments);J(this,"type","TupleValue")}},Ke=class extends Ee{constructor(){super(...arguments);J(this,"type","FunctionValue")}},nt=class extends Ee{constructor(){super(...arguments);J(this,"type","NullValue")}},Je=class extends Ee{constructor(){super(...arguments);J(this,"type","UndefinedValue")}},Oe=class{constructor(S){J(this,"variables",new Map([["namespace",new Ke(S=>{if(S.length===0)return new Be(new Map);if(S.length!==1||!(S[0]instanceof Be))throw new Error("`namespace` expects either zero arguments or a single object argument");return S[0]})]]));J(this,"tests",new Map([["boolean",S=>S.type==="BooleanValue"],["callable",S=>S instanceof Ke],["odd",S=>{if(!(S instanceof Me))throw new Error(`cannot odd on ${S.type}`);return S.value%2!==0}],["even",S=>{if(!(S instanceof Me))throw new Error(`cannot even on ${S.type}`);return S.value%2===0}],["false",S=>S.type==="BooleanValue"&&!S.value],["true",S=>S.type==="BooleanValue"&&S.value],["none",S=>S.type==="NullValue"],["string",S=>S.type==="StringValue"],["number",S=>S instanceof Me||S instanceof Se],["integer",S=>S instanceof Me],["iterable",S=>S.type==="ArrayValue"||S.type==="StringValue"],["mapping",S=>S.type==="ObjectValue"],["lower",S=>{const Q=S.value;return S.type==="StringValue"&&Q===Q.toLowerCase()}],["upper",S=>{const Q=S.value;return S.type==="StringValue"&&Q===Q.toUpperCase()}],["none",S=>S.type==="NullValue"],["defined",S=>S.type!=="UndefinedValue"],["undefined",S=>S.type==="UndefinedValue"],["equalto",(S,Q)=>S.value===Q.value],["eq",(S,Q)=>S.value===Q.value]]));this.parent=S}set(S,Q){return this.declareVariable(S,It(Q))}declareVariable(S,Q){if(this.variables.has(S))throw new SyntaxError(`Variable already declared: ${S}`);return this.variables.set(S,Q),Q}setVariable(S,Q){return this.variables.set(S,Q),Q}resolve(S){if(this.variables.has(S))return this;if(this.parent)return this.parent.resolve(S);throw new Error(`Unknown variable: ${S}`)}lookupVariable(S){try{return this.resolve(S).variables.get(S)??new Je}catch{return new Je}}};function Ye(S){S.set("false",!1),S.set("true",!0),S.set("none",null),S.set("raise_exception",Q=>{throw new Error(Q)}),S.set("range",ve),S.set("strftime_now",Ie),S.set("True",!0),S.set("False",!1),S.set("None",null)}var ot=class{constructor(S){J(this,"global");this.global=S??new Oe}run(S){return this.evaluate(S,this.global)}evaluateBinaryExpression(S,Q){const B=this.evaluate(S.left,Q);switch(S.operator.value){case"and":return B.__bool__().value?this.evaluate(S.right,Q):B;case"or":return B.__bool__().value?B:this.evaluate(S.right,Q)}const q=this.evaluate(S.right,Q);switch(S.operator.value){case"==":return new Ae(B.value==q.value);case"!=":return new Ae(B.value!=q.value)}if(B instanceof Je||q instanceof Je){if(q instanceof Je&&["in","not in"].includes(S.operator.value))return new Ae(S.operator.value==="not in");throw new Error(`Cannot perform operation ${S.operator.value} on undefined values`)}else{if(B instanceof nt||q instanceof nt)throw new Error("Cannot perform operation on null values");if(S.operator.value==="~")return new we(B.value.toString()+q.value.toString());if((B instanceof Me||B instanceof Se)&&(q instanceof Me||q instanceof Se)){const re=B.value,ge=q.value;switch(S.operator.value){case"+":case"-":case"*":{const Fe=S.operator.value==="+"?re+ge:S.operator.value==="-"?re-ge:re*ge;return B instanceof Se||q instanceof Se?new Se(Fe):new Me(Fe)}case"/":return new Se(re/ge);case"%":{const Fe=re%ge;return B instanceof Se||q instanceof Se?new Se(Fe):new Me(Fe)}case"<":return new Ae(re<ge);case">":return new Ae(re>ge);case">=":return new Ae(re>=ge);case"<=":return new Ae(re<=ge)}}else if(B instanceof xe&&q instanceof xe)switch(S.operator.value){case"+":return new xe(B.value.concat(q.value))}else if(q instanceof xe){const re=q.value.find(ge=>ge.value===B.value)!==void 0;switch(S.operator.value){case"in":return new Ae(re);case"not in":return new Ae(!re)}}}if(B instanceof we||q instanceof we)switch(S.operator.value){case"+":return new we(B.value.toString()+q.value.toString())}if(B instanceof we&&q instanceof we)switch(S.operator.value){case"in":return new Ae(q.value.includes(B.value));case"not in":return new Ae(!q.value.includes(B.value))}if(B instanceof we&&q instanceof Be)switch(S.operator.value){case"in":return new Ae(q.value.has(B.value));case"not in":return new Ae(!q.value.has(B.value))}throw new SyntaxError(`Unknown operator "${S.operator.value}" between ${B.type} and ${q.type}`)}evaluateArguments(S,Q){const B=[],q=new Map;for(const re of S)if(re.type==="SpreadExpression"){const ge=re,Fe=this.evaluate(ge.argument,Q);if(!(Fe instanceof xe))throw new Error(`Cannot unpack non-iterable type: ${Fe.type}`);for(const rt of Fe.value)B.push(rt)}else if(re.type==="KeywordArgumentExpression"){const ge=re;q.set(ge.key.value,this.evaluate(ge.value,Q))}else{if(q.size>0)throw new Error("Positional arguments must come before keyword arguments");B.push(this.evaluate(re,Q))}return[B,q]}applyFilter(S,Q,B){if(Q.type==="Identifier"){const q=Q;if(q.value==="tojson")return new we(St(S));if(S instanceof xe)switch(q.value){case"list":return S;case"first":return S.value[0];case"last":return S.value[S.value.length-1];case"length":return new Me(S.value.length);case"reverse":return new xe(S.value.reverse());case"sort":return new xe(S.value.sort((re,ge)=>{if(re.type!==ge.type)throw new Error(`Cannot compare different types: ${re.type} and ${ge.type}`);switch(re.type){case"IntegerValue":case"FloatValue":return re.value-ge.value;case"StringValue":return re.value.localeCompare(ge.value);default:throw new Error(`Cannot compare type: ${re.type}`)}}));case"join":return new we(S.value.map(re=>re.value).join(""));case"string":return new we(St(S));case"unique":{const re=new Set,ge=[];for(const Fe of S.value)re.has(Fe.value)||(re.add(Fe.value),ge.push(Fe));return new xe(ge)}default:throw new Error(`Unknown ArrayValue filter: ${q.value}`)}else if(S instanceof we)switch(q.value){case"length":case"upper":case"lower":case"title":case"capitalize":{const re=S.builtins.get(q.value);if(re instanceof Ke)return re.value([],B);if(re instanceof Me)return re;throw new Error(`Unknown StringValue filter: ${q.value}`)}case"trim":return new we(S.value.trim());case"indent":return new we(S.value.split(`
`).map((re,ge)=>ge===0||re.length===0?re:"    "+re).join(`
`));case"join":case"string":return S;case"int":{const re=parseInt(S.value,10);return new Me(isNaN(re)?0:re)}case"float":{const re=parseFloat(S.value);return new Se(isNaN(re)?0:re)}default:throw new Error(`Unknown StringValue filter: ${q.value}`)}else if(S instanceof Me||S instanceof Se)switch(q.value){case"abs":return S instanceof Me?new Me(Math.abs(S.value)):new Se(Math.abs(S.value));case"int":return new Me(Math.floor(S.value));case"float":return new Se(S.value);default:throw new Error(`Unknown NumericValue filter: ${q.value}`)}else if(S instanceof Be)switch(q.value){case"items":return new xe(Array.from(S.value.entries()).map(([re,ge])=>new xe([new we(re),ge])));case"length":return new Me(S.value.size);default:throw new Error(`Unknown ObjectValue filter: ${q.value}`)}else if(S instanceof Ae)switch(q.value){case"bool":return new Ae(S.value);case"int":return new Me(S.value?1:0);case"float":return new Se(S.value?1:0);case"string":return new we(S.value?"true":"false");default:throw new Error(`Unknown BooleanValue filter: ${q.value}`)}throw new Error(`Cannot apply filter "${q.value}" to type: ${S.type}`)}else if(Q.type==="CallExpression"){const q=Q;if(q.callee.type!=="Identifier")throw new Error(`Unknown filter: ${q.callee.type}`);const re=q.callee.value;if(re==="tojson"){const[,ge]=this.evaluateArguments(q.args,B),Fe=ge.get("indent")??new nt;if(!(Fe instanceof Me||Fe instanceof nt))throw new Error("If set, indent must be a number");return new we(St(S,Fe.value))}else if(re==="join"){let ge;if(S instanceof we)ge=Array.from(S.value);else if(S instanceof xe)ge=S.value.map(mt=>mt.value);else throw new Error(`Cannot apply filter "${re}" to type: ${S.type}`);const[Fe,rt]=this.evaluateArguments(q.args,B),ft=Fe.at(0)??rt.get("separator")??new we("");if(!(ft instanceof we))throw new Error("separator must be a string");return new we(ge.join(ft.value))}else if(re==="int"||re==="float"){const[ge,Fe]=this.evaluateArguments(q.args,B),rt=ge.at(0)??Fe.get("default")??(re==="int"?new Me(0):new Se(0));if(S instanceof we){const ft=re==="int"?parseInt(S.value,10):parseFloat(S.value);return isNaN(ft)?rt:re==="int"?new Me(ft):new Se(ft)}else{if(S instanceof Me||S instanceof Se)return S;if(S instanceof Ae)return re==="int"?new Me(S.value?1:0):new Se(S.value?1:0);throw new Error(`Cannot apply filter "${re}" to type: ${S.type}`)}}else if(re==="default"){const[ge,Fe]=this.evaluateArguments(q.args,B),rt=ge[0]??new we(""),ft=ge[1]??Fe.get("boolean")??new Ae(!1);if(!(ft instanceof Ae))throw new Error("`default` filter flag must be a boolean");return S instanceof Je||ft.value&&!S.__bool__().value?rt:S}if(S instanceof xe){switch(re){case"selectattr":case"rejectattr":{const ge=re==="selectattr";if(S.value.some(st=>!(st instanceof Be)))throw new Error(`\`${re}\` can only be applied to array of objects`);if(q.args.some(st=>st.type!=="StringLiteral"))throw new Error(`arguments of \`${re}\` must be strings`);const[Fe,rt,ft]=q.args.map(st=>this.evaluate(st,B));let mt;if(rt){const st=B.tests.get(rt.value);if(!st)throw new Error(`Unknown test: ${rt.value}`);mt=st}else mt=(...st)=>st[0].__bool__().value;const vt=S.value.filter(st=>{const zt=st.value.get(Fe.value),Nt=zt?mt(zt,ft):!1;return ge?Nt:!Nt});return new xe(vt)}case"map":{const[,ge]=this.evaluateArguments(q.args,B);if(ge.has("attribute")){const Fe=ge.get("attribute");if(!(Fe instanceof we))throw new Error("attribute must be a string");const rt=ge.get("default"),ft=S.value.map(mt=>{if(!(mt instanceof Be))throw new Error("items in map must be an object");return mt.value.get(Fe.value)??rt??new Je});return new xe(ft)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${re}`)}else if(S instanceof we){switch(re){case"indent":{const[ge,Fe]=this.evaluateArguments(q.args,B),rt=ge.at(0)??Fe.get("width")??new Me(4);if(!(rt instanceof Me))throw new Error("width must be a number");const ft=ge.at(1)??Fe.get("first")??new Ae(!1),mt=ge.at(2)??Fe.get("blank")??new Ae(!1),vt=S.value.split(`
`),st=" ".repeat(rt.value),zt=vt.map((Nt,jr)=>!ft.value&&jr===0||!mt.value&&Nt.length===0?Nt:st+Nt);return new we(zt.join(`
`))}case"replace":{const ge=S.builtins.get("replace");if(!(ge instanceof Ke))throw new Error("replace filter not available");const[Fe,rt]=this.evaluateArguments(q.args,B);return ge.value([...Fe,new Qe(rt)],B)}}throw new Error(`Unknown StringValue filter: ${re}`)}else throw new Error(`Cannot apply filter "${re}" to type: ${S.type}`)}throw new Error(`Unknown filter: ${Q.type}`)}evaluateFilterExpression(S,Q){const B=this.evaluate(S.operand,Q);return this.applyFilter(B,S.filter,Q)}evaluateTestExpression(S,Q){const B=this.evaluate(S.operand,Q),q=Q.tests.get(S.test.value);if(!q)throw new Error(`Unknown test: ${S.test.value}`);const re=q(B);return new Ae(S.negate?!re:re)}evaluateSelectExpression(S,Q){return this.evaluate(S.test,Q).__bool__().value?this.evaluate(S.lhs,Q):new Je}evaluateUnaryExpression(S,Q){const B=this.evaluate(S.argument,Q);switch(S.operator.value){case"not":return new Ae(!B.value);default:throw new SyntaxError(`Unknown operator: ${S.operator.value}`)}}evaluateTernaryExpression(S,Q){return this.evaluate(S.condition,Q).__bool__().value?this.evaluate(S.trueExpr,Q):this.evaluate(S.falseExpr,Q)}evalProgram(S,Q){return this.evaluateBlock(S.body,Q)}evaluateBlock(S,Q){let B="";for(const q of S){const re=this.evaluate(q,Q);re.type!=="NullValue"&&re.type!=="UndefinedValue"&&(B+=re.toString())}return new we(B)}evaluateIdentifier(S,Q){return Q.lookupVariable(S.value)}evaluateCallExpression(S,Q){const[B,q]=this.evaluateArguments(S.args,Q);q.size>0&&B.push(new Qe(q));const re=this.evaluate(S.callee,Q);if(re.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${re.type}`);return re.value(B,Q)}evaluateSliceExpression(S,Q,B){if(!(S instanceof xe||S instanceof we))throw new Error("Slice object must be an array or string");const q=this.evaluate(Q.start,B),re=this.evaluate(Q.stop,B),ge=this.evaluate(Q.step,B);if(!(q instanceof Me||q instanceof Je))throw new Error("Slice start must be numeric or undefined");if(!(re instanceof Me||re instanceof Je))throw new Error("Slice stop must be numeric or undefined");if(!(ge instanceof Me||ge instanceof Je))throw new Error("Slice step must be numeric or undefined");return S instanceof xe?new xe(ze(S.value,q.value,re.value,ge.value)):new we(ze(Array.from(S.value),q.value,re.value,ge.value).join(""))}evaluateMemberExpression(S,Q){const B=this.evaluate(S.object,Q);let q;if(S.computed){if(S.property.type==="SliceExpression")return this.evaluateSliceExpression(B,S.property,Q);q=this.evaluate(S.property,Q)}else q=new we(S.property.value);let re;if(B instanceof Be){if(!(q instanceof we))throw new Error(`Cannot access property with non-string: got ${q.type}`);re=B.value.get(q.value)??B.builtins.get(q.value)}else if(B instanceof xe||B instanceof we)if(q instanceof Me)re=B.value.at(q.value),B instanceof we&&(re=new we(B.value.at(q.value)));else if(q instanceof we)re=B.builtins.get(q.value);else throw new Error(`Cannot access property with non-string/non-number: got ${q.type}`);else{if(!(q instanceof we))throw new Error(`Cannot access property with non-string: got ${q.type}`);re=B.builtins.get(q.value)}return re instanceof Ee?re:new Je}evaluateSet(S,Q){const B=S.value?this.evaluate(S.value,Q):this.evaluateBlock(S.body,Q);if(S.assignee.type==="Identifier"){const q=S.assignee.value;Q.setVariable(q,B)}else if(S.assignee.type==="TupleLiteral"){const q=S.assignee;if(!(B instanceof xe))throw new Error(`Cannot unpack non-iterable type in set: ${B.type}`);const re=B.value;if(re.length!==q.value.length)throw new Error(`Too ${q.value.length>re.length?"few":"many"} items to unpack in set`);for(let ge=0;ge<q.value.length;++ge){const Fe=q.value[ge];if(Fe.type!=="Identifier")throw new Error(`Cannot unpack to non-identifier in set: ${Fe.type}`);Q.setVariable(Fe.value,re[ge])}}else if(S.assignee.type==="MemberExpression"){const q=S.assignee,re=this.evaluate(q.object,Q);if(!(re instanceof Be))throw new Error("Cannot assign to member of non-object");if(q.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");re.value.set(q.property.value,B)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(S.assignee)}`);return new nt}evaluateIf(S,Q){const B=this.evaluate(S.test,Q);return this.evaluateBlock(B.__bool__().value?S.body:S.alternate,Q)}evaluateFor(S,Q){const B=new Oe(Q);let q,re;if(S.iterable.type==="SelectExpression"){const mt=S.iterable;re=this.evaluate(mt.lhs,B),q=mt.test}else re=this.evaluate(S.iterable,B);if(!(re instanceof xe||re instanceof Be))throw new Error(`Expected iterable or object type in for loop: got ${re.type}`);re instanceof Be&&(re=re.keys());const ge=[],Fe=[];for(let mt=0;mt<re.value.length;++mt){const vt=new Oe(B),st=re.value[mt];let zt;if(S.loopvar.type==="Identifier")zt=Nt=>Nt.setVariable(S.loopvar.value,st);else if(S.loopvar.type==="TupleLiteral"){const Nt=S.loopvar;if(st.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${st.type}`);const jr=st;if(Nt.value.length!==jr.value.length)throw new Error(`Too ${Nt.value.length>jr.value.length?"few":"many"} items to unpack`);zt=qr=>{for(let rr=0;rr<Nt.value.length;++rr){if(Nt.value[rr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Nt.value[rr].type}`);qr.setVariable(Nt.value[rr].value,jr.value[rr])}}}else throw new Error(`Invalid loop variable(s): ${S.loopvar.type}`);q&&(zt(vt),!this.evaluate(q,vt).__bool__().value)||(ge.push(st),Fe.push(zt))}let rt="",ft=!0;for(let mt=0;mt<ge.length;++mt){const vt=new Map([["index",new Me(mt+1)],["index0",new Me(mt)],["revindex",new Me(ge.length-mt)],["revindex0",new Me(ge.length-mt-1)],["first",new Ae(mt===0)],["last",new Ae(mt===ge.length-1)],["length",new Me(ge.length)],["previtem",mt>0?ge[mt-1]:new Je],["nextitem",mt<ge.length-1?ge[mt+1]:new Je]]);B.setVariable("loop",new Be(vt)),Fe[mt](B);try{const st=this.evaluateBlock(S.body,B);rt+=st.value}catch(st){if(st instanceof ke)continue;if(st instanceof be)break;throw st}ft=!1}if(ft){const mt=this.evaluateBlock(S.defaultBlock,B);rt+=mt.value}return new we(rt)}evaluateMacro(S,Q){return Q.setVariable(S.name.value,new Ke((B,q)=>{var Fe;const re=new Oe(q);B=B.slice();let ge;((Fe=B.at(-1))==null?void 0:Fe.type)==="KeywordArgumentsValue"&&(ge=B.pop());for(let rt=0;rt<S.args.length;++rt){const ft=S.args[rt],mt=B[rt];if(ft.type==="Identifier"){const vt=ft;if(!mt)throw new Error(`Missing positional argument: ${vt.value}`);re.setVariable(vt.value,mt)}else if(ft.type==="KeywordArgumentExpression"){const vt=ft,st=mt??(ge==null?void 0:ge.value.get(vt.key.value))??this.evaluate(vt.value,re);re.setVariable(vt.key.value,st)}else throw new Error(`Unknown argument type: ${ft.type}`)}return this.evaluateBlock(S.body,re)})),new nt}evaluateCallStatement(S,Q){const B=new Ke((rt,ft)=>{const mt=new Oe(ft);if(S.callerArgs)for(let vt=0;vt<S.callerArgs.length;++vt){const st=S.callerArgs[vt];if(st.type!=="Identifier")throw new Error(`Caller parameter must be an identifier, got ${st.type}`);mt.setVariable(st.value,rt[vt]??new Je)}return this.evaluateBlock(S.body,mt)}),[q,re]=this.evaluateArguments(S.call.args,Q);q.push(new Qe(re));const ge=this.evaluate(S.call.callee,Q);if(ge.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${ge.type}`);const Fe=new Oe(Q);return Fe.setVariable("caller",B),ge.value(q,Fe)}evaluateFilterStatement(S,Q){const B=this.evaluateBlock(S.body,Q);return this.applyFilter(B,S.filter,Q)}evaluate(S,Q){if(!S)return new Je;switch(S.type){case"Program":return this.evalProgram(S,Q);case"Set":return this.evaluateSet(S,Q);case"If":return this.evaluateIf(S,Q);case"For":return this.evaluateFor(S,Q);case"Macro":return this.evaluateMacro(S,Q);case"CallStatement":return this.evaluateCallStatement(S,Q);case"Break":throw new be;case"Continue":throw new ke;case"IntegerLiteral":return new Me(S.value);case"FloatLiteral":return new Se(S.value);case"StringLiteral":return new we(S.value);case"ArrayLiteral":return new xe(S.value.map(B=>this.evaluate(B,Q)));case"TupleLiteral":return new Ze(S.value.map(B=>this.evaluate(B,Q)));case"ObjectLiteral":{const B=new Map;for(const[q,re]of S.value){const ge=this.evaluate(q,Q);if(!(ge instanceof we))throw new Error(`Object keys must be strings: got ${ge.type}`);B.set(ge.value,this.evaluate(re,Q))}return new Be(B)}case"Identifier":return this.evaluateIdentifier(S,Q);case"CallExpression":return this.evaluateCallExpression(S,Q);case"MemberExpression":return this.evaluateMemberExpression(S,Q);case"UnaryExpression":return this.evaluateUnaryExpression(S,Q);case"BinaryExpression":return this.evaluateBinaryExpression(S,Q);case"FilterExpression":return this.evaluateFilterExpression(S,Q);case"FilterStatement":return this.evaluateFilterStatement(S,Q);case"TestExpression":return this.evaluateTestExpression(S,Q);case"SelectExpression":return this.evaluateSelectExpression(S,Q);case"Ternary":return this.evaluateTernaryExpression(S,Q);case"Comment":return new nt;default:throw new SyntaxError(`Unknown node type: ${S.type}`)}}};function It(S){switch(typeof S){case"number":return Number.isInteger(S)?new Me(S):new Se(S);case"string":return new we(S);case"boolean":return new Ae(S);case"undefined":return new Je;case"object":return S===null?new nt:Array.isArray(S)?new xe(S.map(It)):new Be(new Map(Object.entries(S).map(([Q,B])=>[Q,It(B)])));case"function":return new Ke((Q,B)=>{const q=S(...Q.map(re=>re.value))??null;return It(q)});default:throw new Error(`Cannot convert to runtime value: ${S}`)}}function St(S,Q,B){const q=B??0;switch(S.type){case"NullValue":case"UndefinedValue":return"null";case"IntegerValue":case"FloatValue":case"StringValue":case"BooleanValue":return JSON.stringify(S.value);case"ArrayValue":case"ObjectValue":{const re=Q?" ".repeat(Q):"",ge=`
`+re.repeat(q),Fe=ge+re;if(S.type==="ArrayValue"){const rt=S.value.map(ft=>St(ft,Q,q+1));return Q?`[${Fe}${rt.join(`,${Fe}`)}${ge}]`:`[${rt.join(", ")}]`}else{const rt=Array.from(S.value.entries()).map(([ft,mt])=>{const vt=`"${ft}": ${St(mt,Q,q+1)}`;return Q?`${Fe}${vt}`:vt});return Q?`{${rt.join(",")}${ge}}`:`{${rt.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${S.type}`)}}var wt=`
`,Mr="{%- ",Er=" -%}";function Rr(S){switch(S.operator.type){case"MultiplicativeBinaryOperator":return 4;case"AdditiveBinaryOperator":return 3;case"ComparisonBinaryOperator":return 2;case"Identifier":return S.operator.value==="and"?1:S.operator.value==="in"||S.operator.value==="not in"?2:0}return 0}function is(S,Q="	"){const B=typeof Q=="number"?" ".repeat(Q):Q;return Pr(S.body,0,B).replace(/\n$/,"")}function qt(...S){return Mr+S.join(" ")+Er}function Pr(S,Q,B){return S.map(q=>Us(q,Q,B)).join(wt)}function Us(S,Q,B){const q=B.repeat(Q);switch(S.type){case"Program":return Pr(S.body,Q,B);case"If":return Ws(S,Q,B);case"For":return Gs(S,Q,B);case"Set":return Ks(S,Q,B);case"Macro":return pt(S,Q,B);case"Break":return q+qt("break");case"Continue":return q+qt("continue");case"CallStatement":return $s(S,Q,B);case"FilterStatement":return ks(S,Q,B);case"Comment":return q+"{# "+S.value+" #}";default:return q+"{{- "+Ct(S)+" -}}"}}function Ws(S,Q,B){const q=B.repeat(Q),re=[];let ge=S;for(;ge&&(re.push({test:ge.test,body:ge.body}),ge.alternate.length===1&&ge.alternate[0].type==="If");)ge=ge.alternate[0];let Fe=q+qt("if",Ct(re[0].test))+wt+Pr(re[0].body,Q+1,B);for(let rt=1;rt<re.length;++rt)Fe+=wt+q+qt("elif",Ct(re[rt].test))+wt+Pr(re[rt].body,Q+1,B);return ge&&ge.alternate.length>0&&(Fe+=wt+q+qt("else")+wt+Pr(ge.alternate,Q+1,B)),Fe+=wt+q+qt("endif"),Fe}function Gs(S,Q,B){const q=B.repeat(Q);let re="";if(S.iterable.type==="SelectExpression"){const Fe=S.iterable;re=`${Ct(Fe.lhs)} if ${Ct(Fe.test)}`}else re=Ct(S.iterable);let ge=q+qt("for",Ct(S.loopvar),"in",re)+wt+Pr(S.body,Q+1,B);return S.defaultBlock.length>0&&(ge+=wt+q+qt("else")+wt+Pr(S.defaultBlock,Q+1,B)),ge+=wt+q+qt("endfor"),ge}function Ks(S,Q,B){const q=B.repeat(Q),re=Ct(S.assignee),ge=S.value?Ct(S.value):"",Fe=q+qt("set",`${re}${S.value?" = "+ge:""}`);return S.body.length===0?Fe:Fe+wt+Pr(S.body,Q+1,B)+wt+q+qt("endset")}function pt(S,Q,B){const q=B.repeat(Q),re=S.args.map(Ct).join(", ");return q+qt("macro",`${S.name.value}(${re})`)+wt+Pr(S.body,Q+1,B)+wt+q+qt("endmacro")}function $s(S,Q,B){const q=B.repeat(Q),re=S.callerArgs&&S.callerArgs.length>0?`(${S.callerArgs.map(Ct).join(", ")})`:"",ge=Ct(S.call);let Fe=q+qt(`call${re}`,ge)+wt;return Fe+=Pr(S.body,Q+1,B)+wt,Fe+=q+qt("endcall"),Fe}function ks(S,Q,B){const q=B.repeat(Q),re=S.filter.type==="Identifier"?S.filter.value:Ct(S.filter);let ge=q+qt("filter",re)+wt;return ge+=Pr(S.body,Q+1,B)+wt,ge+=q+qt("endfilter"),ge}function Ct(S,Q=-1){switch(S.type){case"SpreadExpression":return`*${Ct(S.argument)}`;case"Identifier":return S.value;case"IntegerLiteral":return`${S.value}`;case"FloatLiteral":return`${S.value}`;case"StringLiteral":return JSON.stringify(S.value);case"BinaryExpression":{const B=S,q=Rr(B),re=Ct(B.left,q),ge=Ct(B.right,q+1),Fe=`${re} ${B.operator.value} ${ge}`;return q<Q?`(${Fe})`:Fe}case"UnaryExpression":{const B=S;return B.operator.value+(B.operator.value==="not"?" ":"")+Ct(B.argument,1/0)}case"CallExpression":{const B=S,q=B.args.map(Ct).join(", ");return`${Ct(B.callee)}(${q})`}case"MemberExpression":{const B=S;let q=Ct(B.object);["Identifier","MemberExpression","CallExpression","StringLiteral","IntegerLiteral","FloatLiteral","ArrayLiteral","TupleLiteral","ObjectLiteral"].includes(B.object.type)||(q=`(${q})`);let re=Ct(B.property);return!B.computed&&B.property.type!=="Identifier"&&(re=`(${re})`),B.computed?`${q}[${re}]`:`${q}.${re}`}case"FilterExpression":{const B=S,q=Ct(B.operand,1/0);return B.filter.type==="CallExpression"?`${q} | ${Ct(B.filter)}`:`${q} | ${B.filter.value}`}case"SelectExpression":{const B=S;return`${Ct(B.lhs)} if ${Ct(B.test)}`}case"TestExpression":{const B=S;return`${Ct(B.operand)} is${B.negate?" not":""} ${B.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const B=S.value.map(Ct),q=S.type==="ArrayLiteral"?"[]":"()";return`${q[0]}${B.join(", ")}${q[1]}`}case"ObjectLiteral":return`{${Array.from(S.value.entries()).map(([q,re])=>`${Ct(q)}: ${Ct(re)}`).join(", ")}}`;case"SliceExpression":{const B=S,q=B.start?Ct(B.start):"",re=B.stop?Ct(B.stop):"",ge=B.step?`:${Ct(B.step)}`:"";return`${q}:${re}${ge}`}case"KeywordArgumentExpression":{const B=S;return`${B.key.value}=${Ct(B.value)}`}case"Ternary":{const B=S,q=`${Ct(B.trueExpr)} if ${Ct(B.condition,0)} else ${Ct(B.falseExpr)}`;return Q>-1?`(${q})`:q}default:throw new Error(`Unknown expression type: ${S.type}`)}}var Qt=class{constructor(S){J(this,"parsed");const Q=p(S,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=ie(Q)}render(S){const Q=new Oe;if(Ye(Q),S)for(const[re,ge]of Object.entries(S))Q.set(re,ge);return new ot(Q).run(this.parsed).value}format(S){return is(this.parsed,(S==null?void 0:S.indent)||"	")}}},"./src/backends/onnx.js":(e,r,t)=>{var s;t.r(r),t.d(r,{Tensor:()=>a.Tensor,createInferenceSession:()=>k,deviceToExecutionProviders:()=>_,isONNXProxy:()=>$,isONNXTensor:()=>g});var o=t("./src/env.js"),n=t("?2ce3"),i=t("onnxruntime-web"),a=t("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),c=[];let p,d;const u=Symbol.for("onnxruntime");if(u in globalThis)d=globalThis[u];else if(o.apis.IS_NODE_ENV){switch(d=n??(s||(s=t.t(n,2))),process.platform){case"win32":c.push("dml");break;case"linux":process.arch==="x64"&&c.push("cuda");break}c.push("cpu"),p=["cpu"]}else d=i,o.apis.IS_WEBNN_AVAILABLE&&c.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),o.apis.IS_WEBGPU_AVAILABLE&&c.push("webgpu"),c.push("wasm"),p=["wasm"];const f=d.InferenceSession;function _(v=null){if(!v)return p;switch(v){case"auto":return c;case"gpu":return c.filter(y=>["webgpu","cuda","dml","webnn-gpu"].includes(y))}if(c.includes(v))return[l[v]??v];throw new Error(`Unsupported device: "${v}". Should be one of: ${c.join(", ")}.`)}let b=null;async function k(v,y,T){b&&await b;const x=f.create(v,y);b??(b=x);const P=await x;return P.config=T,P}function g(v){return v instanceof d.Tensor}const M=d==null?void 0:d.env;M!=null&&M.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!M.wasm.wasmPaths&&(M.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${o.env.version}/dist/`),M.wasm.proxy=!1),M!=null&&M.webgpu&&(M.webgpu.powerPreference="high-performance");function $(){var v;return(v=M==null?void 0:M.wasm)==null?void 0:v.proxy}o.env.backends.onnx=M},"./src/base/feature_extraction_utils.js":(e,r,t)=>{t.r(r),t.d(r,{FeatureExtractor:()=>i,validate_audio_inputs:()=>a});var s=t("./src/utils/constants.js"),o=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class i extends o.Callable{constructor(c){super(),this.config=c}static async from_pretrained(c,p={}){const d=await(0,n.getModelJSON)(c,s.FEATURE_EXTRACTOR_NAME,!0,p);return new this(d)}}function a(l,c){var p;if(!(l instanceof Float32Array||l instanceof Float64Array))throw new Error(`${c} expects input to be a Float32Array or a Float64Array, but got ${((p=l==null?void 0:l.constructor)==null?void 0:p.name)??typeof l} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,r,t)=>{t.r(r),t.d(r,{ImageProcessor:()=>v,center_to_corners_format:()=>d,post_process_instance_segmentation:()=>$,post_process_object_detection:()=>u,post_process_panoptic_segmentation:()=>M,post_process_semantic_segmentation:()=>f});var s=t("./src/utils/generic.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/utils/image.js");var i=t("./src/utils/core.js"),a=t("./src/utils/hub.js"),l=t("./src/utils/constants.js");function c(y,T,x=0,P=null){const O=y/T;let L=(0,n.bankers_round)(O)*T;return P!==null&&L>P&&(L=Math.floor(O)*T),L<x&&(L=Math.ceil(O)*T),L}function p([y,T],x){return[Math.max(Math.floor(y/x),1)*x,Math.max(Math.floor(T/x),1)*x]}function d([y,T,x,P]){return[y-x/2,T-P/2,y+x/2,T+P/2]}function u(y,T=.5,x=null,P=!1){const O=y.logits,L=y.pred_boxes,[G,K,R]=O.dims;if(x!==null&&x.length!==G)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let te=[];for(let H=0;H<G;++H){let ee=x!==null?x[H]:null,Z={boxes:[],classes:[],scores:[]},ne=O[H],he=L[H];for(let ue=0;ue<K;++ue){let j=ne[ue],F=[],U;if(P){U=j.sigmoid().data;for(let se=0;se<U.length;++se)U[se]>T&&F.push(se)}else{let se=(0,n.max)(j.data)[1];if(se===R-1||(U=(0,n.softmax)(j.data),U[se]<T))continue;F.push(se)}for(const se of F){let _e=he[ue].data;_e=d(_e),ee!==null&&(_e=_e.map((ie,ve)=>ie*ee[(ve+1)%2])),Z.boxes.push(_e),Z.classes.push(se),Z.scores.push(U[se])}}te.push(Z)}return te}function f(y,T=null){const x=y.logits,P=x.dims[0];if(T!==null&&T.length!==P)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const O=[];for(let L=0;L<P;++L){const G=T!==null?T[L]:null;let K=x[L];G!==null&&(K=(0,o.interpolate)(K,G,"bilinear",!1));const[R,te]=G??K.dims.slice(-2),H=new o.Tensor("int32",new Int32Array(R*te),[R,te]),ee=K[0].data,Z=H.data;for(let ue=1;ue<K.dims[0];++ue){const j=K[ue].data;for(let F=0;F<j.length;++F)j[F]>ee[F]&&(ee[F]=j[F],Z[F]=ue)}const ne=new Array(K.dims[0]);for(let ue=0;ue<Z.length;++ue){const j=Z[ue];ne[j]=j}const he=ne.filter(ue=>ue!==void 0);O.push({segmentation:H,labels:he})}return O}function _(y,T,x,P){const O=[],L=[],G=[];for(let K=0;K<y.dims[0];++K){const R=y[K],te=T[K],H=(0,n.max)(R.data)[1];if(H===P)continue;const Z=(0,n.softmax)(R.data)[H];Z>x&&(O.push(te),L.push(Z),G.push(H))}return[O,L,G]}function b(y,T,x,P=.5,O=.8){const L=[];let G=0,K=0;const R=T[x].data;for(let H=0;H<y.length;++H)y[H]===x&&(L.push(H),++G),R[H]>=P&&++K;let te=G>0&&K>0;return te&&(te=G/K>O),[te,L]}function k(y,T,x,P,O,L=null,G=null){const[K,R]=G??y[0].dims,te=new o.Tensor("int32",new Int32Array(K*R),[K,R]),H=[];if(G!==null)for(let ue=0;ue<y.length;++ue)y[ue]=(0,o.interpolate)(y[ue],G,"bilinear",!1);const ee=new Int32Array(y[0].data.length),Z=new Float32Array(y[0].data.length);for(let ue=0;ue<y.length;++ue){let j=T[ue];const F=y[ue].data;for(let U=0;U<F.length;++U)F[U]*=j,F[U]>Z[U]&&(ee[U]=ue,Z[U]=F[U])}let ne=0;const he=te.data;for(let ue=0;ue<x.length;++ue){const j=x[ue],[F,U]=b(ee,y,ue,P,O);if(F){++ne;for(const se of U)he[se]=ne;H.push({id:ne,label_id:j,score:T[ue]})}}return[te,H]}function g(y,T,x=28,P=3136,O=784*1280){if(y<x||T<x)throw new Error(`height:${y} or width:${T} must be larger than factor:${x}`);if(Math.max(y,T)/Math.min(y,T)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(y,T)/Math.min(y,T)}`);let L=Math.round(y/x)*x,G=Math.round(T/x)*x;if(L*G>O){const K=Math.sqrt(y*T/O);L=Math.floor(y/K/x)*x,G=Math.floor(T/K/x)*x}else if(L*G<P){const K=Math.sqrt(P/(y*T));L=Math.ceil(y*K/x)*x,G=Math.ceil(T*K/x)*x}return[L,G]}function M(y,T=.5,x=.5,P=.8,O=null,L=null){O===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),O=new Set);const G=y.class_queries_logits??y.logits,R=(y.masks_queries_logits??y.pred_masks).sigmoid();let[te,H,ee]=G.dims;if(ee-=1,L!==null&&L.length!==te)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Z=[];for(let ne=0;ne<te;++ne){let he=L!==null?L[ne]:null,ue=G[ne],j=R[ne],[F,U,se]=_(ue,j,T,ee);if(se.length===0){let[ve,ze]=he??j.dims.slice(-2),Ge=new o.Tensor("int32",new Int32Array(ve*ze).fill(-1),[ve,ze]);Z.push({segmentation:Ge,segments_info:[]});continue}let[_e,ie]=k(F,U,se,x,P,O,he);Z.push({segmentation:_e,segments_info:ie})}return Z}function $(y,T=.5,x=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class v extends s.Callable{constructor(T){super(),this.image_mean=T.image_mean??T.mean,this.image_std=T.image_std??T.std,this.resample=T.resample??2,this.do_rescale=T.do_rescale??!0,this.rescale_factor=T.rescale_factor??1/255,this.do_normalize=T.do_normalize,this.do_thumbnail=T.do_thumbnail,this.size=T.size??T.image_size,this.do_resize=T.do_resize??this.size!==void 0,this.size_divisibility=T.size_divisibility??T.size_divisor,this.do_center_crop=T.do_center_crop,this.crop_size=T.crop_size,this.do_convert_rgb=T.do_convert_rgb??!0,this.do_crop_margin=T.do_crop_margin,this.pad_size=T.pad_size,this.do_pad=T.do_pad,this.min_pixels=T.min_pixels,this.max_pixels=T.max_pixels,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=T.do_flip_channel_order??!1,this.config=T}async thumbnail(T,x,P=2){const O=T.height,L=T.width,G=x.height,K=x.width;let R=Math.min(O,G),te=Math.min(L,K);return R===O&&te===L?T:(O>L?te=Math.floor(L*R/O):L>O&&(R=Math.floor(O*te/L)),await T.resize(te,R,{resample:P}))}async crop_margin(T,x=200){const P=T.clone().grayscale(),O=(0,n.min)(P.data)[0],G=(0,n.max)(P.data)[0]-O;if(G===0)return T;const K=x/255;let R=P.width,te=P.height,H=0,ee=0;const Z=P.data;for(let ne=0;ne<P.height;++ne){const he=ne*P.width;for(let ue=0;ue<P.width;++ue)(Z[he+ue]-O)/G<K&&(R=Math.min(R,ue),te=Math.min(te,ne),H=Math.max(H,ue),ee=Math.max(ee,ne))}return T=await T.crop([R,te,H,ee]),T}pad_image(T,x,P,{mode:O="constant",center:L=!1,constant_values:G=0}={}){const[K,R,te]=x;let H,ee;if(typeof P=="number"?(H=P,ee=P):P==="square"?H=ee=Math.max(K,R):(H=P.width,ee=P.height),H!==R||ee!==K){const Z=new Float32Array(H*ee*te);if(Array.isArray(G))for(let ue=0;ue<Z.length;++ue)Z[ue]=G[ue%te];else G!==0&&Z.fill(G);const[ne,he]=L?[Math.floor((H-R)/2),Math.floor((ee-K)/2)]:[0,0];for(let ue=0;ue<K;++ue){const j=(ue+he)*H,F=ue*R;for(let U=0;U<R;++U){const se=(j+U+ne)*te,_e=(F+U)*te;for(let ie=0;ie<te;++ie)Z[se+ie]=T[_e+ie]}}if(O==="symmetric"){if(L)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const ue=K-1,j=R-1;for(let F=0;F<ee;++F){const U=F*H,se=(0,i.calculateReflectOffset)(F,ue)*R;for(let _e=0;_e<H;++_e){if(F<K&&_e<R)continue;const ie=(U+_e)*te,ve=(se+(0,i.calculateReflectOffset)(_e,j))*te;for(let ze=0;ze<te;++ze)Z[ie+ze]=T[ve+ze]}}}T=Z,x=[ee,H,te]}return[T,x]}rescale(T){for(let x=0;x<T.length;++x)T[x]=this.rescale_factor*T[x]}get_resize_output_image_size(T,x){const[P,O]=T.size;let L,G;if(this.do_thumbnail){const{height:K,width:R}=x;L=Math.min(K,R)}else Number.isInteger(x)?(L=x,G=this.config.max_size??L):x!==void 0&&(L=x.shortest_edge,G=x.longest_edge);if(L!==void 0||G!==void 0){const K=L===void 0?1:Math.max(L/P,L/O),R=P*K,te=O*K,H=G===void 0?1:Math.min(G/R,G/te);let ee=Math.floor(Number((R*H).toFixed(2))),Z=Math.floor(Number((te*H).toFixed(2)));return this.size_divisibility!==void 0&&([ee,Z]=p([ee,Z],this.size_divisibility)),[ee,Z]}else if(x!==void 0&&x.width!==void 0&&x.height!==void 0){let K=x.width,R=x.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let te=R/O,H=K/P;Math.abs(1-H)<Math.abs(1-te)?te=H:H=te,R=c(te*O,this.config.ensure_multiple_of),K=c(H*P,this.config.ensure_multiple_of)}return[K,R]}else{if(this.size_divisibility!==void 0)return p([P,O],this.size_divisibility);if(this.min_pixels!==void 0&&this.max_pixels!==void 0){const K=this.config.patch_size*this.config.merge_size;return g(O,P,K,this.min_pixels,this.max_pixels)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(x)}`)}}async resize(T){const[x,P]=this.get_resize_output_image_size(T,this.size);return await T.resize(x,P,{resample:this.resample})}async preprocess(T,{do_normalize:x=null,do_pad:P=null,do_convert_rgb:O=null,do_convert_grayscale:L=null,do_flip_channel_order:G=null}={}){this.do_crop_margin&&(T=await this.crop_margin(T));const[K,R]=T.size;if(O??this.do_convert_rgb?T=T.rgb():L&&(T=T.grayscale()),this.do_resize&&(T=await this.resize(T)),this.do_thumbnail&&(T=await this.thumbnail(T,this.size,this.resample)),this.do_center_crop){let ne,he;Number.isInteger(this.crop_size)?(ne=this.crop_size,he=this.crop_size):(ne=this.crop_size.width,he=this.crop_size.height),T=await T.center_crop(ne,he)}const te=[T.height,T.width];let H=Float32Array.from(T.data),ee=[T.height,T.width,T.channels];if(this.do_rescale&&this.rescale(H),x??this.do_normalize){let ne=this.image_mean;Array.isArray(this.image_mean)||(ne=new Array(T.channels).fill(ne));let he=this.image_std;if(Array.isArray(this.image_std)||(he=new Array(T.channels).fill(ne)),ne.length!==T.channels||he.length!==T.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${ne.length}) and \`image_std\` (${he.length}) must match the number of channels in the image (${T.channels}).`);for(let ue=0;ue<H.length;ue+=T.channels)for(let j=0;j<T.channels;++j)H[ue+j]=(H[ue+j]-ne[j])/he[j]}if(P??this.do_pad){if(this.pad_size)[H,ee]=this.pad_image(H,[T.height,T.width,T.channels],this.pad_size);else if(this.size_divisibility){const[ne,he]=p([ee[1],ee[0]],this.size_divisibility);[H,ee]=this.pad_image(H,ee,{width:ne,height:he})}}if(G??this.do_flip_channel_order){if(ee[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let ne=0;ne<H.length;ne+=3){const he=H[ne];H[ne]=H[ne+2],H[ne+2]=he}}const Z=new o.Tensor("float32",H,ee).permute(2,0,1);return{original_size:[R,K],reshaped_input_size:te,pixel_values:Z}}async _call(T,...x){Array.isArray(T)||(T=[T]);const P=await Promise.all(T.map(L=>this.preprocess(L)));return{pixel_values:(0,o.stack)(P.map(L=>L.pixel_values),0),original_sizes:P.map(L=>L.original_size),reshaped_input_sizes:P.map(L=>L.reshaped_input_size)}}static async from_pretrained(T,x={}){const P=await(0,a.getModelJSON)(T,l.IMAGE_PROCESSOR_NAME,!0,x);return new this(P)}}},"./src/base/processing_utils.js":(e,r,t)=>{t.r(r),t.d(r,{Processor:()=>i});var s=t("./src/utils/constants.js"),o=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class i extends o.Callable{constructor(l,c,p){super(),this.config=l,this.components=c,this.chat_template=p}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(l,c={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(l,{tokenize:!1,chat_template:this.chat_template??void 0,...c})}batch_decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...l)}decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...l)}async _call(l,...c){for(const p of[this.image_processor,this.feature_extractor,this.tokenizer])if(p)return p(l,...c);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(l,c={}){const[p,d,u]=await Promise.all([this.uses_processor_config?(0,n.getModelJSON)(l,s.PROCESSOR_NAME,!0,c):{},Promise.all(this.classes.filter(f=>f in this).map(async f=>{const _=await this[f].from_pretrained(l,c);return[f.replace(/_class$/,""),_]})).then(Object.fromEntries),this.uses_chat_template_file?(0,n.getModelText)(l,s.CHAT_TEMPLATE_NAME,!0,c):null]);return new this(p,d,u)}}J(i,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),J(i,"uses_processor_config",!1),J(i,"uses_chat_template_file",!1)},"./src/configs.js":(e,r,t)=>{t.r(r),t.d(r,{AutoConfig:()=>p,PretrainedConfig:()=>c,getCacheShapes:()=>a});var s=t("./src/utils/core.js"),o=t("./src/utils/hub.js");async function n(d,u){return await(0,o.getModelJSON)(d,"config.json",!0,u)}function i(d){const u={};let f={};switch(d.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"voxtral":case"smolvlm":case"gemma3n":f=i(d.text_config);break;case"moondream1":f=i(d.phi_config);break;case"musicgen":f=i(d.decoder);break;case"multi_modality":f=i(d.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":case"modernbert-decoder":u.num_heads="num_attention_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size";break;case"llama":case"arcee":case"lfm2":case"smollm3":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":case"llava_qwen2":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size",u.num_attention_heads="num_attention_heads",u.dim_kv="head_dim";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"gemma3n_text":case"glm":case"helium":case"ernie4_5":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.dim_kv="head_dim";break;case"openelm":u.num_heads="num_kv_heads",u.num_layers="num_transformer_layers",u.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":u.num_heads="num_heads",u.num_layers="num_layers",u.hidden_size="hidden_size";break;case"bloom":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="hidden_size";break;case"mpt":u.num_heads="n_heads",u.num_layers="n_layers",u.hidden_size="d_model";break;case"exaone":u.num_heads="num_key_value_heads",u.num_layers="num_layers",u.dim_kv="head_dim",u.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":u.num_decoder_layers="num_decoder_layers",u.num_decoder_heads="num_heads",u.decoder_dim_kv="d_kv",u.num_encoder_layers="num_layers",u.num_encoder_heads="num_heads",u.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="d_model",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="d_model";break;case"speecht5":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="hidden_size",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="hidden_size";break;case"trocr":u.num_encoder_layers=u.num_decoder_layers="decoder_layers",u.num_encoder_heads=u.num_decoder_heads="decoder_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="d_model";break;case"musicgen_decoder":u.num_encoder_layers=u.num_decoder_layers="num_hidden_layers",u.num_encoder_heads=u.num_decoder_heads="num_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"moonshine":u.num_decoder_layers="decoder_num_hidden_layers",u.num_decoder_heads="decoder_num_key_value_heads",u.num_encoder_layers="encoder_num_hidden_layers",u.num_encoder_heads="encoder_num_key_value_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const b=i(d.decoder),k="num_decoder_layers"in b,g=(0,s.pick)(d,["model_type","is_encoder_decoder"]);return k?(g.num_decoder_layers=b.num_decoder_layers,g.num_decoder_heads=b.num_decoder_heads,g.decoder_hidden_size=b.decoder_hidden_size,g.num_encoder_layers=b.num_encoder_layers,g.num_encoder_heads=b.num_encoder_heads,g.encoder_hidden_size=b.encoder_hidden_size):(g.num_layers=b.num_layers,g.num_heads=b.num_heads,g.hidden_size=b.hidden_size),g}const _={...f,...(0,s.pick)(d,["model_type","multi_query","is_encoder_decoder"])};for(const b in u)_[b]=d[u[b]];return _}function a(d,u){if(d.model_type==="lfm2"){const f=(u==null?void 0:u.prefix)??"past_key_values",_=f==="present"?"present":"past",b={},{layer_types:k,num_attention_heads:g,num_key_value_heads:M,hidden_size:$,conv_L_cache:v}=d,y=$/g,T=(u==null?void 0:u.batch_size)??1;for(let x=0;x<k.length;++x)if(k[x]==="full_attention")for(const P of["key","value"])b[`${f}.${x}.${P}`]=[T,M,0,y];else if(k[x]==="conv")b[`${_}_conv.${x}`]=[T,$,v];else throw new Error(`Unsupported layer type: ${k[x]}`);return b}return l(d,u)}function l(d,{prefix:u="past_key_values",batch_size:f=1}={}){const _={},b=d.normalized_config;if(b.is_encoder_decoder&&"num_encoder_heads"in b&&"num_decoder_heads"in b){const k=b.encoder_dim_kv??b.encoder_hidden_size/b.num_encoder_heads,g=b.decoder_dim_kv??b.decoder_hidden_size/b.num_decoder_heads,M=[f,b.num_encoder_heads,0,k],$=[f,b.num_decoder_heads,0,g];for(let v=0;v<b.num_decoder_layers;++v)_[`${u}.${v}.encoder.key`]=M,_[`${u}.${v}.encoder.value`]=M,_[`${u}.${v}.decoder.key`]=$,_[`${u}.${v}.decoder.value`]=$}else{const k=b.num_heads,g=b.num_layers,M=b.dim_kv??b.hidden_size/(b.num_attention_heads??k);if(b.model_type==="falcon"){const $=[f*k,0,M];for(let v=0;v<g;++v)_[`${u}.${v}.key`]=$,_[`${u}.${v}.value`]=$}else if(b.multi_query){const $=[f*k,0,2*M];for(let v=0;v<g;++v)_[`${u}.${v}.key_value`]=$}else if(b.model_type==="bloom"){const $=[f*k,M,0],v=[f*k,0,M];for(let y=0;y<g;++y)_[`${u}.${y}.key`]=$,_[`${u}.${y}.value`]=v}else if(b.model_type==="openelm")for(let $=0;$<g;++$){const v=[f,k[$],0,M];_[`${u}.${$}.key`]=v,_[`${u}.${$}.value`]=v}else{const $=[f,k,0,M];for(let v=0;v<g;++v)_[`${u}.${v}.key`]=$,_[`${u}.${v}.value`]=$}}return _}class c{constructor(u){J(this,"model_type",null);J(this,"is_encoder_decoder",!1);J(this,"max_position_embeddings");J(this,"transformers.js_config");Object.assign(this,u),this.normalized_config=i(this)}static async from_pretrained(u,{progress_callback:f=null,config:_=null,cache_dir:b=null,local_files_only:k=!1,revision:g="main"}={}){_&&!(_ instanceof c)&&(_=new c(_));const M=_??await n(u,{progress_callback:f,config:_,cache_dir:b,local_files_only:k,revision:g});return new this(M)}}class p{static async from_pretrained(...u){return c.from_pretrained(...u)}}},"./src/env.js":(e,r,t)=>{var O,L;t.r(r),t.d(r,{apis:()=>g,env:()=>x});var s=t("?db59"),o=t("?383f"),n=t("?fa4b");const i="3.7.1",a=typeof window<"u"&&typeof window.document<"u",l=typeof self<"u"&&["DedicatedWorkerGlobalScope","ServiceWorkerGlobalScope","SharedWorkerGlobalScope"].includes((O=self.constructor)==null?void 0:O.name),c=typeof self<"u"&&"caches"in self,p=typeof navigator<"u"&&"gpu"in navigator,d=typeof navigator<"u"&&"ml"in navigator,u=typeof process<"u",f=u&&((L=process==null?void 0:process.release)==null?void 0:L.name)==="node",_=!P(s),b=!P(o),k=typeof globalThis.Deno<"u",g=Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:c,IS_WEBGPU_AVAILABLE:p,IS_WEBNN_AVAILABLE:d,IS_PROCESS_AVAILABLE:u,IS_NODE_ENV:f,IS_FS_AVAILABLE:_,IS_PATH_AVAILABLE:b}),M=_&&b;let $="./";if(M){const G=Object(import.meta).url;G?$=o.dirname(o.dirname(n.fileURLToPath(G))):typeof __dirname<"u"&&($=o.dirname(__dirname))}const v=M?o.join($,"/.cache/"):null,y="/models/",T=M?o.join($,y):y,x={version:i,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(a||l),localModelPath:T,useFS:_,useBrowserCache:c&&!k,useFSCache:_,cacheDir:v,useCustomCache:!1,customCache:null};function P(G){return Object.keys(G).length===0}},"./src/generation/configuration_utils.js":(e,r,t)=>{t.r(r),t.d(r,{GenerationConfig:()=>o});var s=t("./src/utils/core.js");class o{constructor(i){J(this,"max_length",20);J(this,"max_new_tokens",null);J(this,"min_length",0);J(this,"min_new_tokens",null);J(this,"early_stopping",!1);J(this,"max_time",null);J(this,"do_sample",!1);J(this,"num_beams",1);J(this,"num_beam_groups",1);J(this,"penalty_alpha",null);J(this,"use_cache",!0);J(this,"temperature",1);J(this,"top_k",50);J(this,"top_p",1);J(this,"typical_p",1);J(this,"epsilon_cutoff",0);J(this,"eta_cutoff",0);J(this,"diversity_penalty",0);J(this,"repetition_penalty",1);J(this,"encoder_repetition_penalty",1);J(this,"length_penalty",1);J(this,"no_repeat_ngram_size",0);J(this,"bad_words_ids",null);J(this,"force_words_ids",null);J(this,"renormalize_logits",!1);J(this,"constraints",null);J(this,"forced_bos_token_id",null);J(this,"forced_eos_token_id",null);J(this,"remove_invalid_values",!1);J(this,"exponential_decay_length_penalty",null);J(this,"suppress_tokens",null);J(this,"streamer",null);J(this,"begin_suppress_tokens",null);J(this,"forced_decoder_ids",null);J(this,"guidance_scale",null);J(this,"num_return_sequences",1);J(this,"output_attentions",!1);J(this,"output_hidden_states",!1);J(this,"output_scores",!1);J(this,"return_dict_in_generate",!1);J(this,"pad_token_id",null);J(this,"bos_token_id",null);J(this,"eos_token_id",null);J(this,"encoder_no_repeat_ngram_size",0);J(this,"decoder_start_token_id",null);J(this,"generation_kwargs",{});Object.assign(this,(0,s.pick)(i,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,r,t)=>{t.r(r),t.d(r,{ClassifierFreeGuidanceLogitsProcessor:()=>g,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>c,LogitsProcessor:()=>n,LogitsProcessorList:()=>a,LogitsWarper:()=>i,MinLengthLogitsProcessor:()=>_,MinNewTokensLengthLogitsProcessor:()=>b,NoBadWordsLogitsProcessor:()=>k,NoRepeatNGramLogitsProcessor:()=>u,RepetitionPenaltyLogitsProcessor:()=>f,SuppressTokensAtBeginLogitsProcessor:()=>p,TemperatureLogitsWarper:()=>M,TopKLogitsWarper:()=>v,TopPLogitsWarper:()=>$,WhisperTimeStampLogitsProcessor:()=>d});var s=t("./src/utils/generic.js");t("./src/utils/tensor.js");var o=t("./src/utils/maths.js");class n extends s.Callable{_call(T,x){throw Error("`_call` should be implemented in a subclass")}}class i extends s.Callable{_call(T,x){throw Error("`_call` should be implemented in a subclass")}}class a extends s.Callable{constructor(){super(),this.processors=[]}push(T){this.processors.push(T)}extend(T){this.processors.push(...T)}_call(T,x){let P=x;for(const O of this.processors)P=O(T,P);return P}[Symbol.iterator](){return this.processors.values()}}class l extends n{constructor(T){super(),this.bos_token_id=T}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length===1){const O=x[P].data;O.fill(-1/0),O[this.bos_token_id]=0}return x}}class c extends n{constructor(T,x){super(),this.max_length=T,this.eos_token_id=Array.isArray(x)?x:[x]}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length===this.max_length-1){const O=x[P].data;O.fill(-1/0);for(const L of this.eos_token_id)O[L]=0}return x}}class p extends n{constructor(T,x){super(),this.begin_suppress_tokens=T,this.begin_index=x}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length===this.begin_index){const O=x[P].data;for(const L of this.begin_suppress_tokens)O[L]=-1/0}return x}}class d extends n{constructor(T,x){super(),this.eos_token_id=Array.isArray(T.eos_token_id)?T.eos_token_id[0]:T.eos_token_id,this.no_timestamps_token_id=T.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=x.length,x.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=T.max_initial_timestamp_index}_call(T,x){for(let P=0;P<T.length;++P){const O=x[P].data;if(O[this.no_timestamps_token_id]=-1/0,T[P].length===this.begin_index-1){O.fill(-1/0),O[this.timestamp_begin]=0;continue}const L=T[P].slice(this.begin_index),G=L.length>=1&&L[L.length-1]>=this.timestamp_begin,K=L.length<2||L[L.length-2]>=this.timestamp_begin;if(G&&(K?O.subarray(this.timestamp_begin).fill(-1/0):O.subarray(0,this.eos_token_id).fill(-1/0)),T[P].length===this.begin_index&&this.max_initial_timestamp_index!==null){const ee=this.timestamp_begin+this.max_initial_timestamp_index;O.subarray(ee+1).fill(-1/0)}const R=(0,o.log_softmax)(O),te=Math.log(R.subarray(this.timestamp_begin).map(Math.exp).reduce((ee,Z)=>ee+Z)),H=(0,o.max)(R.subarray(0,this.timestamp_begin))[0];te>H&&O.subarray(0,this.timestamp_begin).fill(-1/0)}return x}}class u extends n{constructor(T){super(),this.no_repeat_ngram_size=T}getNgrams(T){const x=T.length,P=[];for(let L=0;L<x+1-this.no_repeat_ngram_size;++L){const G=[];for(let K=0;K<this.no_repeat_ngram_size;++K)G.push(T[L+K]);P.push(G.map(Number))}const O=new Map;for(const L of P){const G=L.slice(0,L.length-1),K=JSON.stringify(G),R=O.get(K)??[];R.push(L[L.length-1]),O.set(K,R)}return O}getGeneratedNgrams(T,x){const P=x.slice(x.length+1-this.no_repeat_ngram_size,x.length);return T.get(JSON.stringify(P.map(Number)))??[]}calcBannedNgramTokens(T){const x=[];if(T.length+1<this.no_repeat_ngram_size)return x;{const P=this.getNgrams(T);return this.getGeneratedNgrams(P,T)}}_call(T,x){for(let P=0;P<T.length;++P){const O=x[P].data,L=this.calcBannedNgramTokens(T[P]);for(const G of L)O[G]=-1/0}return x}}class f extends n{constructor(T){super(),this.penalty=T}_call(T,x){for(let P=0;P<T.length;++P){const O=x[P].data;for(const L of new Set(T[P])){const G=Number(L);O[G]<0?O[G]*=this.penalty:O[G]/=this.penalty}}return x}}class _ extends n{constructor(T,x){super(),this.min_length=T,this.eos_token_id=Array.isArray(x)?x:[x]}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length<this.min_length){const O=x[P].data;for(const L of this.eos_token_id)O[L]=-1/0}return x}}class b extends n{constructor(T,x,P){super(),this.prompt_length_to_skip=T,this.min_new_tokens=x,this.eos_token_id=Array.isArray(P)?P:[P]}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length-this.prompt_length_to_skip<this.min_new_tokens){const L=x[P].data;for(const G of this.eos_token_id)L[G]=-1/0}return x}}class k extends n{constructor(T,x){super(),this.bad_words_ids=T,this.eos_token_id=Array.isArray(x)?x:[x]}_call(T,x){for(let P=0;P<T.length;++P){const O=x[P].data,L=T[P];for(const G of this.bad_words_ids){if(L.length<G.length-1)continue;let K=!0;for(let R=1;R<=G.length-1;++R)if(G.at(-R-1)!=L.at(-R)){K=!1;break}K&&(O[G.at(-1)]=-1/0)}}return x}}class g extends n{constructor(T){if(super(),T<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${T}.`);this.guidance_scale=T}_call(T,x){if(x.dims[0]!==2*T.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${x.dims[0]} for the logits and ${T.length} for the input ids.`);const P=T.length,O=x.slice([0,P],null),L=x.slice([P,x.dims[0]],null);for(let G=0;G<L.data.length;++G)L.data[G]+=(O.data[G]-L.data[G])*this.guidance_scale;return L}}class M extends i{constructor(T){super(),this.temperature=T}_call(T,x){const P=x.data;for(let O=0;O<P.length;++O)P[O]/=this.temperature;return x}}class $ extends i{constructor(T,{filter_value:x=-1/0,min_tokens_to_keep:P=1}={}){if(super(),T<0||T>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${T}`);if(!Number.isInteger(P)||P<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${P}`);this.top_p=T,this.filter_value=x,this.min_tokens_to_keep=P}}class v extends i{constructor(T,{filter_value:x=-1/0,min_tokens_to_keep:P=1}={}){if(super(),!Number.isInteger(T)||T<0)throw new Error(`\`top_k\` must be a positive integer, but is ${T}`);this.top_k=Math.max(T,P),this.filter_value=x}}},"./src/generation/logits_sampler.js":(e,r,t)=>{t.r(r),t.d(r,{LogitsSampler:()=>i});var s=t("./src/utils/generic.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/generation/configuration_utils.js");class i extends s.Callable{constructor(d){super(),this.generation_config=d}async _call(d){return this.sample(d)}async sample(d){throw Error("sample should be implemented in subclasses.")}getLogits(d,u){let f=d.dims.at(-1),_=d.data;if(u===-1)_=_.slice(-f);else{let b=u*f;_=_.slice(b,b+f)}return _}randomSelect(d){let u=0;for(let _=0;_<d.length;++_)u+=d[_];let f=Math.random()*u;for(let _=0;_<d.length;++_)if(f-=d[_],f<=0)return _;return 0}static getSampler(d){if(d.do_sample)return new l(d);if(d.num_beams>1)return new c(d);if(d.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${d.num_return_sequences}.`);return new a(d)}}class a extends i{async sample(d){const u=(0,n.max)(d.data)[1];return[[BigInt(u),0]]}}class l extends i{async sample(d){let u=d.dims.at(-1);this.generation_config.top_k>0&&(u=Math.min(this.generation_config.top_k,u));const[f,_]=await(0,o.topk)(d,u),b=(0,n.softmax)(f.data);return Array.from({length:this.generation_config.num_beams},()=>{const k=this.randomSelect(b);return[_.data[k],Math.log(b[k])]})}}class c extends i{async sample(d){let u=d.dims.at(-1);this.generation_config.top_k>0&&(u=Math.min(this.generation_config.top_k,u));const[f,_]=await(0,o.topk)(d,u),b=(0,n.softmax)(f.data);return Array.from({length:this.generation_config.num_beams},(k,g)=>[_.data[g],Math.log(b[g])])}}},"./src/generation/stopping_criteria.js":(e,r,t)=>{t.r(r),t.d(r,{EosTokenCriteria:()=>a,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>i,StoppingCriteria:()=>o,StoppingCriteriaList:()=>n});var s=t("./src/utils/generic.js");class o extends s.Callable{_call(p,d){throw Error("StoppingCriteria needs to be subclassed")}}class n extends s.Callable{constructor(){super(),this.criteria=[]}push(p){this.criteria.push(p)}extend(p){p instanceof n?p=p.criteria:p instanceof o&&(p=[p]),this.criteria.push(...p)}_call(p,d){const u=new Array(p.length).fill(!1);for(const f of this.criteria){const _=f(p,d);for(let b=0;b<u.length;++b)u[b]||(u[b]=_[b])}return u}[Symbol.iterator](){return this.criteria.values()}}class i extends o{constructor(p,d=null){super(),this.max_length=p,this.max_position_embeddings=d}_call(p){return p.map(d=>d.length>=this.max_length)}}class a extends o{constructor(p){super(),Array.isArray(p)||(p=[p]),this.eos_token_id=p}_call(p,d){return p.map(u=>{const f=u.at(-1);return this.eos_token_id.some(_=>f==_)})}}class l extends o{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(p,d){return new Array(p.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,r,t)=>{t.r(r),t.d(r,{BaseStreamer:()=>i,TextStreamer:()=>l,WhisperTextStreamer:()=>c});var s=t("./src/utils/core.js"),o=t("./src/tokenizers.js"),n=t("./src/env.js");class i{put(d){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const a=n.apis.IS_PROCESS_AVAILABLE?p=>process.stdout.write(p):p=>console.log(p);class l extends i{constructor(d,{skip_prompt:u=!1,callback_function:f=null,token_callback_function:_=null,skip_special_tokens:b=!0,decode_kwargs:k={},...g}={}){super(),this.tokenizer=d,this.skip_prompt=u,this.callback_function=f??a,this.token_callback_function=_,this.decode_kwargs={skip_special_tokens:b,...k,...g},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(d){var k;if(d.length>1)throw Error("TextStreamer only supports batch size of 1");const u=this.next_tokens_are_prompt;if(u&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const f=d[0];(k=this.token_callback_function)==null||k.call(this,f),this.token_cache=(0,s.mergeArrays)(this.token_cache,f);const _=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let b;u||_.endsWith(`
`)?(b=_.slice(this.print_len),this.token_cache=[],this.print_len=0):_.length>0&&(0,o.is_chinese_char)(_.charCodeAt(_.length-1))?(b=_.slice(this.print_len),this.print_len+=b.length):(b=_.slice(this.print_len,_.lastIndexOf(" ")+1),this.print_len+=b.length),this.on_finalized_text(b,!1)}end(){let d;this.token_cache.length>0?(d=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):d="",this.next_tokens_are_prompt=!0,this.on_finalized_text(d,!0)}on_finalized_text(d,u){var f,_;d.length>0&&((f=this.callback_function)==null||f.call(this,d)),u&&this.callback_function===a&&n.apis.IS_PROCESS_AVAILABLE&&((_=this.callback_function)==null||_.call(this,`
`))}}class c extends l{constructor(d,{skip_prompt:u=!1,callback_function:f=null,token_callback_function:_=null,on_chunk_start:b=null,on_chunk_end:k=null,on_finalize:g=null,time_precision:M=.02,skip_special_tokens:$=!0,decode_kwargs:v={}}={}){super(d,{skip_prompt:u,skip_special_tokens:$,callback_function:f,token_callback_function:_,decode_kwargs:v}),this.timestamp_begin=d.timestamp_begin,this.on_chunk_start=b,this.on_chunk_end=k,this.on_finalize=g,this.time_precision=M,this.waiting_for_timestamp=!1}put(d){var f,_,b;if(d.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const u=d[0];if(u.length===1){const k=Number(u[0])-this.timestamp_begin;if(k>=0){const g=k*this.time_precision;this.waiting_for_timestamp?(f=this.on_chunk_end)==null||f.call(this,g):(_=this.on_chunk_start)==null||_.call(this,g),this.waiting_for_timestamp=!this.waiting_for_timestamp,(b=this.token_callback_function)==null||b.call(this,u);return}}return super.put(d)}end(){var d;super.end(),(d=this.on_finalize)==null||d.call(this)}}},"./src/models.js":(e,r,t)=>{t.r(r),t.d(r,{ASTForAudioClassification:()=>po,ASTModel:()=>ci,ASTPreTrainedModel:()=>uo,AlbertForMaskedLM:()=>Mt,AlbertForQuestionAnswering:()=>tt,AlbertForSequenceClassification:()=>We,AlbertModel:()=>qe,AlbertPreTrainedModel:()=>Ne,ArceeForCausalLM:()=>xt,ArceeModel:()=>it,ArceePreTrainedModel:()=>He,AutoModel:()=>Il,AutoModelForAudioClassification:()=>I_,AutoModelForAudioFrameClassification:()=>F_,AutoModelForAudioTextToText:()=>V_,AutoModelForCTC:()=>k_,AutoModelForCausalLM:()=>M_,AutoModelForDepthEstimation:()=>z_,AutoModelForDocumentQuestionAnswering:()=>O_,AutoModelForImageClassification:()=>x_,AutoModelForImageFeatureExtraction:()=>j_,AutoModelForImageMatting:()=>D_,AutoModelForImageSegmentation:()=>T_,AutoModelForImageTextToText:()=>N_,AutoModelForImageToImage:()=>L_,AutoModelForMaskGeneration:()=>$_,AutoModelForMaskedLM:()=>b_,AutoModelForNormalEstimation:()=>B_,AutoModelForObjectDetection:()=>C_,AutoModelForPoseEstimation:()=>R_,AutoModelForQuestionAnswering:()=>y_,AutoModelForSemanticSegmentation:()=>E_,AutoModelForSeq2SeqLM:()=>__,AutoModelForSequenceClassification:()=>m_,AutoModelForSpeechSeq2Seq:()=>f_,AutoModelForTextToSpectrogram:()=>g_,AutoModelForTextToWaveform:()=>w_,AutoModelForTokenClassification:()=>h_,AutoModelForUniversalSegmentation:()=>P_,AutoModelForVision2Seq:()=>v_,AutoModelForXVector:()=>A_,AutoModelForZeroShotObjectDetection:()=>S_,BartForConditionalGeneration:()=>gr,BartForSequenceClassification:()=>Gr,BartModel:()=>Yt,BartPretrainedModel:()=>Xr,BaseModelOutput:()=>ke,BeitForImageClassification:()=>Hd,BeitModel:()=>Kd,BeitPreTrainedModel:()=>Ka,BertForMaskedLM:()=>Se,BertForQuestionAnswering:()=>Be,BertForSequenceClassification:()=>we,BertForTokenClassification:()=>Ae,BertModel:()=>Me,BertPreTrainedModel:()=>Ee,BlenderbotForConditionalGeneration:()=>nr,BlenderbotModel:()=>mr,BlenderbotPreTrainedModel:()=>ir,BlenderbotSmallForConditionalGeneration:()=>zn,BlenderbotSmallModel:()=>Bs,BlenderbotSmallPreTrainedModel:()=>Kr,BloomForCausalLM:()=>_d,BloomModel:()=>hd,BloomPreTrainedModel:()=>Oa,CLIPModel:()=>go,CLIPPreTrainedModel:()=>gs,CLIPSegForImageSegmentation:()=>Un,CLIPSegModel:()=>_n,CLIPSegPreTrainedModel:()=>es,CLIPTextModel:()=>bi,CLIPTextModelWithProjection:()=>wo,CLIPVisionModel:()=>yi,CLIPVisionModelWithProjection:()=>Mo,CamembertForMaskedLM:()=>mt,CamembertForQuestionAnswering:()=>zt,CamembertForSequenceClassification:()=>vt,CamembertForTokenClassification:()=>st,CamembertModel:()=>ft,CamembertPreTrainedModel:()=>rt,CausalLMOutput:()=>Mn,CausalLMOutputWithPast:()=>kv,ChineseCLIPModel:()=>dt,ChineseCLIPPreTrainedModel:()=>mn,ClapAudioModelWithProjection:()=>Qm,ClapModel:()=>Hm,ClapPreTrainedModel:()=>ki,ClapTextModelWithProjection:()=>qm,CodeGenForCausalLM:()=>V,CodeGenModel:()=>z,CodeGenPreTrainedModel:()=>A,CohereForCausalLM:()=>Qu,CohereModel:()=>qu,CoherePreTrainedModel:()=>Ea,ConvBertForMaskedLM:()=>ks,ConvBertForQuestionAnswering:()=>S,ConvBertForSequenceClassification:()=>Ct,ConvBertForTokenClassification:()=>Qt,ConvBertModel:()=>$s,ConvBertPreTrainedModel:()=>pt,ConvNextForImageClassification:()=>Np,ConvNextModel:()=>jp,ConvNextPreTrainedModel:()=>al,ConvNextV2ForImageClassification:()=>Up,ConvNextV2Model:()=>Vp,ConvNextV2PreTrainedModel:()=>ll,DFineForObjectDetection:()=>ip,DFineModel:()=>op,DFinePreTrainedModel:()=>Ya,DPTForDepthEstimation:()=>vp,DPTModel:()=>yp,DPTPreTrainedModel:()=>nl,DacDecoderModel:()=>zh,DacDecoderOutput:()=>Oh,DacEncoderModel:()=>Lh,DacEncoderOutput:()=>Fh,DacModel:()=>Dh,DacPreTrainedModel:()=>zi,DebertaForMaskedLM:()=>qr,DebertaForQuestionAnswering:()=>Sr,DebertaForSequenceClassification:()=>rr,DebertaForTokenClassification:()=>Cr,DebertaModel:()=>jr,DebertaPreTrainedModel:()=>Nt,DebertaV2ForMaskedLM:()=>$r,DebertaV2ForQuestionAnswering:()=>Vr,DebertaV2ForSequenceClassification:()=>Is,DebertaV2ForTokenClassification:()=>As,DebertaV2Model:()=>as,DebertaV2PreTrainedModel:()=>Nr,DecisionTransformerModel:()=>fh,DecisionTransformerPreTrainedModel:()=>_h,DeiTForImageClassification:()=>dp,DeiTModel:()=>up,DeiTPreTrainedModel:()=>el,DepthAnythingForDepthEstimation:()=>Tp,DepthAnythingPreTrainedModel:()=>xp,DepthProForDepthEstimation:()=>$p,DepthProPreTrainedModel:()=>Sp,DetrForObjectDetection:()=>Qd,DetrForSegmentation:()=>Ha,DetrModel:()=>qd,DetrObjectDetectionOutput:()=>qa,DetrPreTrainedModel:()=>Ti,DetrSegmentationOutput:()=>Xd,Dinov2ForImageClassification:()=>Gp,Dinov2Model:()=>Wp,Dinov2PreTrainedModel:()=>cl,Dinov2WithRegistersForImageClassification:()=>Hp,Dinov2WithRegistersModel:()=>Kp,Dinov2WithRegistersPreTrainedModel:()=>ul,DistilBertForMaskedLM:()=>hr,DistilBertForQuestionAnswering:()=>pr,DistilBertForSequenceClassification:()=>Or,DistilBertForTokenClassification:()=>ms,DistilBertModel:()=>Zr,DistilBertPreTrainedModel:()=>Ur,DonutSwinModel:()=>Rp,DonutSwinPreTrainedModel:()=>Bp,EfficientNetForImageClassification:()=>rh,EfficientNetModel:()=>th,EfficientNetPreTrainedModel:()=>yl,ElectraForMaskedLM:()=>q,ElectraForQuestionAnswering:()=>Fe,ElectraForSequenceClassification:()=>re,ElectraForTokenClassification:()=>ge,ElectraModel:()=>B,ElectraPreTrainedModel:()=>Q,Ernie4_5_ForCausalLM:()=>Vm,Ernie4_5_Model:()=>Nm,Ernie4_5_PretrainedModel:()=>fl,EsmForMaskedLM:()=>Wr,EsmForSequenceClassification:()=>Re,EsmForTokenClassification:()=>je,EsmModel:()=>Ds,EsmPreTrainedModel:()=>Qr,ExaoneForCausalLM:()=>Ru,ExaoneModel:()=>Bu,ExaonePreTrainedModel:()=>ba,FalconForCausalLM:()=>Km,FalconModel:()=>Gm,FalconPreTrainedModel:()=>wl,FastViTForImageClassification:()=>Dd,FastViTModel:()=>Od,FastViTPreTrainedModel:()=>Na,Florence2ForConditionalGeneration:()=>hi,Florence2PreTrainedModel:()=>mi,GLPNForDepthEstimation:()=>zp,GLPNModel:()=>Lp,GLPNPreTrainedModel:()=>il,GPT2LMHeadModel:()=>Eo,GPT2Model:()=>To,GPT2PreTrainedModel:()=>Wn,GPTBigCodeForCausalLM:()=>E,GPTBigCodeModel:()=>m,GPTBigCodePreTrainedModel:()=>qn,GPTJForCausalLM:()=>Io,GPTJModel:()=>ko,GPTJPreTrainedModel:()=>Hn,GPTNeoForCausalLM:()=>Kn,GPTNeoModel:()=>gn,GPTNeoPreTrainedModel:()=>Gn,GPTNeoXForCausalLM:()=>$o,GPTNeoXModel:()=>So,GPTNeoXPreTrainedModel:()=>wn,Gemma2ForCausalLM:()=>Zu,Gemma2Model:()=>Yu,Gemma2PreTrainedModel:()=>Ca,Gemma3ForCausalLM:()=>td,Gemma3Model:()=>ed,Gemma3PreTrainedModel:()=>Sa,Gemma3nForConditionalGeneration:()=>Js,Gemma3nPreTrainedModel:()=>wi,GemmaForCausalLM:()=>Ju,GemmaModel:()=>Xu,GemmaPreTrainedModel:()=>Pa,GlmForCausalLM:()=>zu,GlmModel:()=>Lu,GlmPreTrainedModel:()=>Ma,GraniteForCausalLM:()=>Hu,GraniteModel:()=>Ku,GranitePreTrainedModel:()=>Ta,GroundingDinoForObjectDetection:()=>Qp,GroundingDinoPreTrainedModel:()=>qp,GroupViTModel:()=>Fd,GroupViTPreTrainedModel:()=>Ad,HeliumForCausalLM:()=>Du,HeliumModel:()=>Ou,HeliumPreTrainedModel:()=>wa,HieraForImageClassification:()=>mp,HieraModel:()=>pp,HieraPreTrainedModel:()=>tl,HubertForCTC:()=>Em,HubertForSequenceClassification:()=>Pm,HubertModel:()=>Tm,HubertPreTrainedModel:()=>fv,IJepaForImageClassification:()=>xd,IJepaModel:()=>vd,IJepaPreTrainedModel:()=>Ba,Idefics3ForConditionalGeneration:()=>dn,Idefics3PreTrainedModel:()=>Ys,ImageMattingOutput:()=>W_,JAISLMHeadModel:()=>Co,JAISModel:()=>Po,JAISPreTrainedModel:()=>fn,JinaCLIPModel:()=>vo,JinaCLIPPreTrainedModel:()=>Vn,JinaCLIPTextModel:()=>xo,JinaCLIPVisionModel:()=>hn,Lfm2ForCausalLM:()=>yr,Lfm2Model:()=>Gt,Lfm2PreTrainedModel:()=>Ot,LiteWhisperForConditionalGeneration:()=>ho,LlamaForCausalLM:()=>De,LlamaModel:()=>Pe,LlamaPreTrainedModel:()=>ce,LlavaForConditionalGeneration:()=>jn,LlavaOnevisionForConditionalGeneration:()=>di,LlavaPreTrainedModel:()=>Rn,LlavaQwen2ForCausalLM:()=>gi,LongT5ForConditionalGeneration:()=>br,LongT5Model:()=>_r,LongT5PreTrainedModel:()=>Wt,M2M100ForConditionalGeneration:()=>om,M2M100Model:()=>nm,M2M100PreTrainedModel:()=>ml,MBartForCausalLM:()=>cr,MBartForConditionalGeneration:()=>kr,MBartForSequenceClassification:()=>ls,MBartModel:()=>fs,MBartPreTrainedModel:()=>zr,MPNetForMaskedLM:()=>ln,MPNetForQuestionAnswering:()=>I,MPNetForSequenceClassification:()=>cn,MPNetForTokenClassification:()=>pe,MPNetModel:()=>an,MPNetPreTrainedModel:()=>_s,MT5ForConditionalGeneration:()=>Dr,MT5Model:()=>fr,MT5PreTrainedModel:()=>or,MarianMTModel:()=>sm,MarianModel:()=>rm,MarianPreTrainedModel:()=>pl,MaskFormerForInstanceSegmentation:()=>Dp,MaskFormerModel:()=>Op,MaskFormerPreTrainedModel:()=>ol,MaskedLMOutput:()=>Ir,Metric3DForDepthEstimation:()=>Ip,Metric3DPreTrainedModel:()=>kp,Metric3Dv2ForDepthEstimation:()=>Fp,Metric3Dv2PreTrainedModel:()=>Ap,MgpstrForSceneTextRecognition:()=>yh,MgpstrModelOutput:()=>Mh,MgpstrPreTrainedModel:()=>bh,MimiDecoderModel:()=>Ah,MimiDecoderOutput:()=>$h,MimiEncoderModel:()=>Ih,MimiEncoderOutput:()=>Sh,MimiModel:()=>kh,MimiPreTrainedModel:()=>Li,MistralForCausalLM:()=>jm,MistralModel:()=>Rm,MistralPreTrainedModel:()=>_l,MobileBertForMaskedLM:()=>Ls,MobileBertForQuestionAnswering:()=>zs,MobileBertForSequenceClassification:()=>hs,MobileBertModel:()=>Xt,MobileBertPreTrainedModel:()=>et,MobileLLMForCausalLM:()=>Nu,MobileLLMModel:()=>ju,MobileLLMPreTrainedModel:()=>ya,MobileNetV1ForImageClassification:()=>nh,MobileNetV1ForSemanticSegmentation:()=>oh,MobileNetV1Model:()=>sh,MobileNetV1PreTrainedModel:()=>Ai,MobileNetV2ForImageClassification:()=>ah,MobileNetV2ForSemanticSegmentation:()=>lh,MobileNetV2Model:()=>ih,MobileNetV2PreTrainedModel:()=>Fi,MobileNetV3ForImageClassification:()=>uh,MobileNetV3ForSemanticSegmentation:()=>dh,MobileNetV3Model:()=>ch,MobileNetV3PreTrainedModel:()=>Oi,MobileNetV4ForImageClassification:()=>mh,MobileNetV4ForSemanticSegmentation:()=>hh,MobileNetV4Model:()=>ph,MobileNetV4PreTrainedModel:()=>Di,MobileViTForImageClassification:()=>Rd,MobileViTModel:()=>Bd,MobileViTPreTrainedModel:()=>Va,MobileViTV2ForImageClassification:()=>Nd,MobileViTV2Model:()=>jd,MobileViTV2PreTrainedModel:()=>Ua,ModelOutput:()=>be,ModernBertDecoderForCausalLM:()=>Er,ModernBertDecoderModel:()=>Mr,ModernBertDecoderPreTrainedModel:()=>wt,ModernBertForMaskedLM:()=>ot,ModernBertForSequenceClassification:()=>It,ModernBertForTokenClassification:()=>St,ModernBertModel:()=>Ye,ModernBertPreTrainedModel:()=>Oe,Moondream1ForConditionalGeneration:()=>pi,MoonshineForConditionalGeneration:()=>ui,MoonshineModel:()=>ga,MoonshinePreTrainedModel:()=>_o,MptForCausalLM:()=>gd,MptModel:()=>fd,MptPreTrainedModel:()=>Da,MultiModalityCausalLM:()=>wh,MultiModalityPreTrainedModel:()=>gh,MusicgenForCausalLM:()=>bv,MusicgenForConditionalGeneration:()=>xl,MusicgenModel:()=>Mv,MusicgenPreTrainedModel:()=>vl,NeoBertForMaskedLM:()=>Ze,NeoBertForQuestionAnswering:()=>Je,NeoBertForSequenceClassification:()=>Ke,NeoBertForTokenClassification:()=>nt,NeoBertModel:()=>xe,NeoBertPreTrainedModel:()=>Qe,NomicBertModel:()=>is,NomicBertPreTrainedModel:()=>Rr,OPTForCausalLM:()=>Md,OPTModel:()=>wd,OPTPreTrainedModel:()=>La,Olmo2ForCausalLM:()=>Gu,Olmo2Model:()=>Wu,Olmo2PreTrainedModel:()=>xa,OlmoForCausalLM:()=>Uu,OlmoModel:()=>Vu,OlmoPreTrainedModel:()=>va,OpenELMForCausalLM:()=>sd,OpenELMModel:()=>rd,OpenELMPreTrainedModel:()=>$a,OwlViTForObjectDetection:()=>Ud,OwlViTModel:()=>Vd,OwlViTPreTrainedModel:()=>Wa,Owlv2ForObjectDetection:()=>Gd,Owlv2Model:()=>Wd,Owlv2PreTrainedModel:()=>Ga,PaliGemmaForConditionalGeneration:()=>fi,PaliGemmaPreTrainedModel:()=>_i,PatchTSMixerForPrediction:()=>Eh,PatchTSMixerModel:()=>Th,PatchTSMixerPreTrainedModel:()=>El,PatchTSTForPrediction:()=>xh,PatchTSTModel:()=>vh,PatchTSTPreTrainedModel:()=>Tl,Phi3ForCausalLM:()=>md,Phi3Model:()=>pd,Phi3PreTrainedModel:()=>Fa,Phi3VForCausalLM:()=>pn,Phi3VPreTrainedModel:()=>Mi,PhiForCausalLM:()=>dd,PhiModel:()=>ud,PhiPreTrainedModel:()=>Aa,PreTrainedModel:()=>W,PretrainedMixin:()=>Rt,PvtForImageClassification:()=>Cd,PvtModel:()=>Pd,PvtPreTrainedModel:()=>Ra,PyAnnoteForAudioFrameClassification:()=>dm,PyAnnoteModel:()=>um,PyAnnotePreTrainedModel:()=>hl,QuestionAnsweringModelOutput:()=>Br,Qwen2ForCausalLM:()=>od,Qwen2Model:()=>nd,Qwen2PreTrainedModel:()=>ka,Qwen2VLForConditionalGeneration:()=>cd,Qwen2VLPreTrainedModel:()=>ld,Qwen3ForCausalLM:()=>ad,Qwen3Model:()=>id,Qwen3PreTrainedModel:()=>Ia,RFDetrForObjectDetection:()=>sp,RFDetrModel:()=>rp,RFDetrObjectDetectionOutput:()=>np,RFDetrPreTrainedModel:()=>Ja,RTDetrForObjectDetection:()=>Yd,RTDetrModel:()=>Jd,RTDetrObjectDetectionOutput:()=>Ao,RTDetrPreTrainedModel:()=>Qa,RTDetrV2ForObjectDetection:()=>ep,RTDetrV2Model:()=>Zd,RTDetrV2ObjectDetectionOutput:()=>tp,RTDetrV2PreTrainedModel:()=>Xa,ResNetForImageClassification:()=>_p,ResNetModel:()=>hp,ResNetPreTrainedModel:()=>rl,RoFormerForMaskedLM:()=>Us,RoFormerForQuestionAnswering:()=>Ks,RoFormerForSequenceClassification:()=>Ws,RoFormerForTokenClassification:()=>Gs,RoFormerModel:()=>Pr,RoFormerPreTrainedModel:()=>qt,RobertaForMaskedLM:()=>io,RobertaForQuestionAnswering:()=>ti,RobertaForSequenceClassification:()=>Zo,RobertaForTokenClassification:()=>ei,RobertaModel:()=>Yo,RobertaPreTrainedModel:()=>Hs,SamImageSegmentationOutput:()=>tm,SamModel:()=>em,SamPreTrainedModel:()=>Zp,SapiensForDepthEstimation:()=>Pp,SapiensForNormalEstimation:()=>Cp,SapiensForSemanticSegmentation:()=>Ep,SapiensPreTrainedModel:()=>Pi,SegformerForImageClassification:()=>Jm,SegformerForSemanticSegmentation:()=>Ym,SegformerModel:()=>wv,SegformerPreTrainedModel:()=>Ii,Seq2SeqLMOutput:()=>$v,SequenceClassifierOutput:()=>Tt,SiglipModel:()=>vi,SiglipPreTrainedModel:()=>Nn,SiglipTextModel:()=>bo,SiglipVisionModel:()=>yo,SmolLM3ForCausalLM:()=>Fu,SmolLM3Model:()=>xi,SmolLM3PreTrainedModel:()=>Fs,SmolVLMForConditionalGeneration:()=>fo,SnacDecoderModel:()=>jh,SnacEncoderModel:()=>Rh,SnacModel:()=>Bh,SnacPreTrainedModel:()=>Bi,SpeechT5ForSpeechToText:()=>Om,SpeechT5ForTextToSpeech:()=>Dm,SpeechT5HifiGan:()=>Lm,SpeechT5Model:()=>gv,SpeechT5PreTrainedModel:()=>$i,SqueezeBertForMaskedLM:()=>le,SqueezeBertForQuestionAnswering:()=>Te,SqueezeBertForSequenceClassification:()=>de,SqueezeBertModel:()=>Y,SqueezeBertPreTrainedModel:()=>N,StableLmForCausalLM:()=>eh,StableLmModel:()=>Zm,StableLmPreTrainedModel:()=>bl,Starcoder2ForCausalLM:()=>Wm,Starcoder2Model:()=>Um,Starcoder2PreTrainedModel:()=>gl,StyleTextToSpeech2Model:()=>Fm,StyleTextToSpeech2PreTrainedModel:()=>Am,Swin2SRForImageSuperResolution:()=>bp,Swin2SRModel:()=>Mp,Swin2SRPreTrainedModel:()=>sl,SwinForImageClassification:()=>gp,SwinForSemanticSegmentation:()=>wp,SwinModel:()=>fp,SwinPreTrainedModel:()=>Ei,T5ForConditionalGeneration:()=>sr,T5Model:()=>Dt,T5PreTrainedModel:()=>Bt,TableTransformerForObjectDetection:()=>lp,TableTransformerModel:()=>ap,TableTransformerObjectDetectionOutput:()=>cp,TableTransformerPreTrainedModel:()=>Za,TokenClassifierOutput:()=>vr,TrOCRForCausalLM:()=>Bm,TrOCRPreTrainedModel:()=>zm,UltravoxModel:()=>Pl,UltravoxPreTrainedModel:()=>Ph,UniSpeechForCTC:()=>_m,UniSpeechForSequenceClassification:()=>fm,UniSpeechModel:()=>hm,UniSpeechPreTrainedModel:()=>Ci,UniSpeechSatForAudioFrameClassification:()=>bm,UniSpeechSatForCTC:()=>wm,UniSpeechSatForSequenceClassification:()=>Mm,UniSpeechSatModel:()=>gm,UniSpeechSatPreTrainedModel:()=>Fo,ViTForImageClassification:()=>yd,ViTMAEModel:()=>$d,ViTMAEPreTrainedModel:()=>Sd,ViTMSNForImageClassification:()=>Id,ViTMSNModel:()=>kd,ViTMSNPreTrainedModel:()=>ja,ViTModel:()=>bd,ViTPreTrainedModel:()=>za,VisionEncoderDecoderModel:()=>un,VitMatteForImageMatting:()=>zd,VitMattePreTrainedModel:()=>Ld,VitPoseForPoseEstimation:()=>Ed,VitPosePreTrainedModel:()=>Td,VitsModel:()=>Ml,VitsModelOutput:()=>G_,VitsPreTrainedModel:()=>Xm,VoxtralForConditionalGeneration:()=>Ch,Wav2Vec2BertForCTC:()=>vm,Wav2Vec2BertForSequenceClassification:()=>xm,Wav2Vec2BertModel:()=>ym,Wav2Vec2BertPreTrainedModel:()=>Si,Wav2Vec2ForAudioFrameClassification:()=>cm,Wav2Vec2ForCTC:()=>am,Wav2Vec2ForSequenceClassification:()=>lm,Wav2Vec2Model:()=>im,Wav2Vec2PreTrainedModel:()=>Zs,WavLMForAudioFrameClassification:()=>Im,WavLMForCTC:()=>Sm,WavLMForSequenceClassification:()=>$m,WavLMForXVector:()=>km,WavLMModel:()=>Cm,WavLMPreTrainedModel:()=>Qn,WeSpeakerResNetModel:()=>mm,WeSpeakerResNetPreTrainedModel:()=>pm,WhisperForConditionalGeneration:()=>mo,WhisperModel:()=>Xs,WhisperPreTrainedModel:()=>Bn,XLMForQuestionAnswering:()=>ii,XLMForSequenceClassification:()=>ni,XLMForTokenClassification:()=>oi,XLMModel:()=>ri,XLMPreTrainedModel:()=>qs,XLMRobertaForMaskedLM:()=>li,XLMRobertaForQuestionAnswering:()=>co,XLMRobertaForSequenceClassification:()=>ao,XLMRobertaForTokenClassification:()=>lo,XLMRobertaModel:()=>ai,XLMRobertaPreTrainedModel:()=>Qs,XLMWithLMHeadModel:()=>si,XVectorOutput:()=>U_,YolosForObjectDetection:()=>Jp,YolosModel:()=>Xp,YolosObjectDetectionOutput:()=>Yp,YolosPreTrainedModel:()=>dl});var s=t("./src/configs.js"),o=t("./src/backends/onnx.js"),n=t("./src/utils/dtypes.js"),i=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/hub.js"),c=t("./src/utils/constants.js"),p=t("./src/generation/logits_process.js"),d=t("./src/generation/configuration_utils.js"),u=t("./src/utils/tensor.js"),f=t("./src/utils/image.js"),_=t("./src/utils/maths.js"),b=t("./src/generation/stopping_criteria.js"),k=t("./src/generation/logits_sampler.js"),g=t("./src/env.js"),M=t("./src/models/whisper/generation_whisper.js"),$=t("./src/models/whisper/common_whisper.js");const v={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11,ImageAudioTextToText:12},y=new Map,T=new Map,x=new Map;async function P(w,C,D){var Ar;let oe=((Ar=D.config)==null?void 0:Ar["transformers.js_config"])??{},fe=D.device??oe.device;fe&&typeof fe!="string"&&(fe.hasOwnProperty(C)?fe=fe[C]:(console.warn(`device not specified for "${C}". Using the default device.`),fe=null));const me=fe??(g.apis.IS_NODE_ENV?"cpu":"wasm"),Ce=(0,o.deviceToExecutionProviders)(me),Le=oe.device_config??{};Le.hasOwnProperty(me)&&(oe={...oe,...Le[me]});let Ue=D.dtype??oe.dtype;if(typeof Ue!="string"&&(Ue&&Ue.hasOwnProperty(C)?Ue=Ue[C]:(Ue=n.DEFAULT_DEVICE_DTYPE_MAPPING[me]??n.DATA_TYPES.fp32,console.warn(`dtype not specified for "${C}". Using the default dtype (${Ue}) for this device (${me}).`))),Ue===n.DATA_TYPES.auto){let kt=oe.dtype;typeof kt!="string"&&(kt=kt==null?void 0:kt[C]),kt&&kt!==n.DATA_TYPES.auto&&n.DATA_TYPES.hasOwnProperty(kt)?Ue=kt:Ue=n.DEFAULT_DEVICE_DTYPE_MAPPING[me]??n.DATA_TYPES.fp32}const Xe=Ue;if(n.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Xe)){if(Xe===n.DATA_TYPES.fp16&&me==="webgpu"&&!await(0,n.isWebGpuFp16Supported)())throw new Error(`The device (${me}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Xe}. Should be one of: ${Object.keys(n.DATA_TYPES).join(", ")}`);const ht=oe.kv_cache_dtype,bt=ht?typeof ht=="string"?ht:ht[Xe]??"float32":void 0;if(bt&&!["float32","float16"].includes(bt))throw new Error(`Invalid kv_cache_dtype: ${bt}. Should be one of: float32, float16`);const yt={dtype:Xe,kv_cache_dtype:bt,device:me},Ft=n.DEFAULT_DTYPE_SUFFIX_MAPPING[Xe],_t=`${C}${Ft}.onnx`,$t=`${D.subfolder??""}/${_t}`,ut={...D.session_options};ut.executionProviders??(ut.executionProviders=Ce);const At=oe.free_dimension_overrides;At?ut.freeDimensionOverrides??(ut.freeDimensionOverrides=At):me.startsWith("webnn")&&!ut.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${me}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);const Kt=g.apis.IS_NODE_ENV&&g.env.useFSCache,er=(0,l.getModelFile)(w,$t,!0,D,Kt),ur=D.use_external_data_format??oe.use_external_data_format;let ar=[];if(ur){let kt;typeof ur=="object"?ur.hasOwnProperty(_t)?kt=ur[_t]:ur.hasOwnProperty(C)?kt=ur[C]:kt=!1:kt=ur;const xr=+kt;if(xr>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${xr}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let rs=0;rs<xr;++rs){const bn=`${_t}_data${rs===0?"":"_"+rs}`,Jr=`${D.subfolder??""}/${bn}`;ar.push(new Promise(async(cs,Ri)=>{const yn=await(0,l.getModelFile)(w,Jr,!0,D,Kt);cs(yn instanceof Uint8Array?{path:bn,data:yn}:bn)}))}}else ut.externalData!==void 0&&(ar=ut.externalData.map(async kt=>{if(typeof kt.data=="string"){const xr=await(0,l.getModelFile)(w,kt.data,!0,D);return{...kt,data:xr}}return kt}));if(ar.length>0){const kt=await Promise.all(ar);g.apis.IS_NODE_ENV||(ut.externalData=kt)}if(me==="webgpu"){const kt=(0,s.getCacheShapes)(D.config,{prefix:"present"});if(Object.keys(kt).length>0&&!(0,o.isONNXProxy)()){const xr={};for(const rs in kt)xr[rs]="gpu-buffer";ut.preferredOutputLocation=xr}}return{buffer_or_path:await er,session_options:ut,session_config:yt}}async function O(w,C,D){return Object.fromEntries(await Promise.all(Object.keys(C).map(async oe=>{const{buffer_or_path:fe,session_options:me,session_config:Ce}=await P(w,C[oe],D),Le=await(0,o.createInferenceSession)(fe,me,Ce);return[oe,Le]})))}async function L(w,C,D){return Object.fromEntries(await Promise.all(Object.keys(C).map(async oe=>{const fe=await(0,l.getModelJSON)(w,C[oe],!1,D);return[oe,fe]})))}function G(w,C){const D=Object.create(null),oe=[];for(const Ce of w.inputNames){const Le=C[Ce];if(!(Le instanceof u.Tensor)){oe.push(Ce);continue}D[Ce]=(0,o.isONNXProxy)()?Le.clone():Le}if(oe.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${oe.join(", ")}.`);const fe=Object.keys(C).length,me=w.inputNames.length;if(fe>me){let Ce=Object.keys(C).filter(Le=>!w.inputNames.includes(Le));console.warn(`WARNING: Too many inputs were provided (${fe} > ${me}). The following inputs will be ignored: "${Ce.join(", ")}".`)}return D}let K=Promise.resolve();async function R(w,C){const D=G(w,C);try{const oe=Object.fromEntries(Object.entries(D).map(([Ce,Le])=>[Ce,Le.ort_tensor])),fe=()=>w.run(oe),me=await(g.apis.IS_BROWSER_ENV||g.apis.IS_WEBWORKER_ENV?K=K.then(fe):fe());return te(me)}catch(oe){const fe=Object.fromEntries(Object.entries(D).map(([me,Ce])=>{const Le={type:Ce.type,dims:Ce.dims,location:Ce.location};return Le.location!=="gpu-buffer"&&(Le.data=Ce.data),[me,Le]}));throw console.error(`An error occurred during model execution: "${oe}".`),console.error("Inputs given to model:",fe),oe}}function te(w){for(let C in w)(0,o.isONNXTensor)(w[C])?w[C]=new u.Tensor(w[C]):typeof w[C]=="object"&&te(w[C]);return w}function H(w){if(w instanceof u.Tensor)return w;if(w.length===0)throw Error("items must be non-empty");if(Array.isArray(w[0])){if(w.some(C=>C.length!==w[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new u.Tensor("int64",BigInt64Array.from(w.flat().map(C=>BigInt(C))),[w.length,w[0].length])}else return new u.Tensor("int64",BigInt64Array.from(w.map(C=>BigInt(C))),[1,w.length])}function ee(w){return new u.Tensor("bool",[w],[1])}async function Z(w,C){let{encoder_outputs:D,input_ids:oe,decoder_input_ids:fe,...me}=C;if(!D){const Le=(0,a.pick)(C,w.sessions.model.inputNames);D=(await ne(w,Le)).last_hidden_state}return me.input_ids=fe,me.encoder_hidden_states=D,w.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(me.encoder_attention_mask=C.attention_mask),await ue(w,me,!0)}async function ne(w,C){const D=w.sessions.model,oe=(0,a.pick)(C,D.inputNames);if(D.inputNames.includes("inputs_embeds")&&!oe.inputs_embeds){if(!C.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");oe.inputs_embeds=await w.encode_text({input_ids:C.input_ids})}if(D.inputNames.includes("token_type_ids")&&!oe.token_type_ids){if(!oe.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");oe.token_type_ids=(0,u.zeros_like)(oe.input_ids)}if(D.inputNames.includes("pixel_mask")&&!oe.pixel_mask){if(!oe.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const fe=oe.pixel_values.dims;oe.pixel_mask=(0,u.ones)([fe[0],fe[2],fe[3]])}return await R(D,oe)}async function he(w,C){const D=await w.encode(C);return await w.decode(D)}async function ue(w,C,D=!1){const oe=w.sessions[D?"decoder_model_merged":"model"],{past_key_values:fe,...me}=C;if(oe.inputNames.includes("use_cache_branch")&&(me.use_cache_branch=ee(!!fe)),oe.inputNames.includes("position_ids")&&me.attention_mask&&!me.position_ids){const Le=["paligemma","gemma3_text","gemma3"].includes(w.config.model_type)?1:0;me.position_ids=ze(me,fe,Le)}w.addPastKeyValues(me,fe);const Ce=(0,a.pick)(me,oe.inputNames);return await R(oe,Ce)}function j({modality_token_id:w,inputs_embeds:C,modality_features:D,input_ids:oe,attention_mask:fe}){const me=oe.tolist().map(Xe=>Xe.reduce((ht,bt,yt)=>(bt==w&&ht.push(yt),ht),[])),Ce=me.reduce((Xe,ht)=>Xe+ht.length,0),Le=D.dims[0];if(Ce!==Le)throw new Error(`Number of tokens and features do not match: tokens: ${Ce}, features ${Le}`);let Ue=0;for(let Xe=0;Xe<me.length;++Xe){const ht=me[Xe],bt=C[Xe];for(let yt=0;yt<ht.length;++yt)bt[ht[yt]].data.set(D[Ue++].data)}return{inputs_embeds:C,attention_mask:fe}}function F({image_token_id:w,inputs_embeds:C,image_features:D,input_ids:oe,attention_mask:fe}){return j({modality_token_id:w,inputs_embeds:C,modality_features:D,input_ids:oe,attention_mask:fe})}function U({audio_token_id:w,inputs_embeds:C,audio_features:D,input_ids:oe,attention_mask:fe}){return j({modality_token_id:w,inputs_embeds:C,modality_features:D,input_ids:oe,attention_mask:fe})}async function se(w,{encode_function:C,merge_function:D,modality_input_name:oe,modality_output_name:fe,input_ids:me=null,attention_mask:Ce=null,position_ids:Le=null,inputs_embeds:Ue=null,past_key_values:Xe=null,generation_config:ht=null,logits_processor:bt=null,...yt}){const Ft=yt[oe];if(!Ue){if(Ue=await w.encode_text({input_ids:me,...yt}),Ft&&me.dims[1]!==1){const $t=await C({[oe]:Ft,...yt});({inputs_embeds:Ue,attention_mask:Ce}=D({[fe]:$t,inputs_embeds:Ue,input_ids:me,attention_mask:Ce}))}else if(Xe&&Ft&&me.dims[1]===1){const $t=me.dims[1],ut=Object.values(Xe)[0].dims.at(-2);Ce=(0,u.cat)([(0,u.ones)([me.dims[0],ut]),Ce.slice(null,[Ce.dims[1]-$t,Ce.dims[1]])],1)}}if(!Le&&w.config.model_type==="qwen2_vl"){const{image_grid_thw:$t,video_grid_thw:ut}=yt;[Le]=w.get_rope_index(me,$t,ut,Ce)}return await ue(w,{inputs_embeds:Ue,past_key_values:Xe,attention_mask:Ce,position_ids:Le,generation_config:ht,logits_processor:bt},!0)}async function _e(w,C){return await se(w,{...C,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:w.encode_audio.bind(w),merge_function:w._merge_input_ids_with_audio_features.bind(w)})}async function ie(w,C){return await se(w,{...C,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:w.encode_image.bind(w),merge_function:w._merge_input_ids_with_image_features.bind(w)})}function ve(w,C=0){const[D,oe]=w.dims,fe=w.data,me=new BigInt64Array(fe.length);for(let Ce=0;Ce<D;++Ce){const Le=Ce*oe;let Ue=BigInt(C);for(let Xe=0;Xe<oe;++Xe){const ht=Le+Xe;fe[ht]===0n?me[ht]=BigInt(1):(me[ht]=Ue,Ue+=fe[ht])}}return{data:me,dims:w.dims}}function ze(w,C=null,D=0){const{input_ids:oe,inputs_embeds:fe,attention_mask:me}=w,{data:Ce,dims:Le}=ve(me,D);let Ue=new u.Tensor("int64",Ce,Le);if(C){const Xe=-(oe??fe).dims.at(1);Ue=Ue.slice(null,[Xe,null])}return Ue}function Ge(w,C,D,oe){const fe=D.past_key_values?Object.values(D.past_key_values)[0].dims.at(-2):0;if(!D.attention_mask){let me;for(const Ce of["input_ids","inputs_embeds","position_ids"])if(D[Ce]){me=D[Ce].dims;break}if(!me)throw new Error("attention_mask is not provided, and unable to infer its shape from model inputs.");D.attention_mask=(0,u.ones)([me[0],fe+me[1]])}if(D.past_key_values){const{input_ids:me,attention_mask:Ce}=D;Ce&&Ce.dims[1]>me.dims[1]||fe<me.dims[1]&&(D.input_ids=me.slice(null,[fe,null]))}return D}function Ie(w,C,D,oe){return D.past_key_values&&(C=C.map(fe=>[fe.at(-1)])),{...D,decoder_input_ids:H(C)}}function X(w,...C){return w.config.is_encoder_decoder?Ie(w,...C):Ge(w,...C)}function ae(w,C,D,oe){const fe=!!D.past_key_values;return oe.guidance_scale!==null&&oe.guidance_scale>1&&(fe?D.input_ids=(0,u.cat)([D.input_ids,D.input_ids],0):(D.input_ids=(0,u.cat)([D.input_ids,(0,u.full_like)(D.input_ids,BigInt(oe.pad_token_id))],0),D.attention_mask=(0,u.cat)([D.attention_mask,(0,u.full_like)(D.attention_mask,0n)],0))),(fe||!D.pixel_values)&&(D.pixel_values=(0,u.full)([0,0,3,384,384],1)),fe&&(D.images_seq_mask=new u.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),D.images_emb_mask=new u.Tensor("bool",new Array(0).fill(!1),[1,1,0])),D}class W extends i.Callable{constructor(D,oe,fe){super();J(this,"main_input_name","input_ids");J(this,"forward_params",["input_ids","attention_mask"]);this.config=D,this.sessions=oe,this.configs=fe;const me=x.get(this.constructor),Ce=y.get(me);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,Ce){case v.DecoderOnly:this.can_generate=!0,this._forward=ue,this._prepare_inputs_for_generation=Ge;break;case v.Seq2Seq:case v.Vision2Seq:case v.Musicgen:this.can_generate=!0,this._forward=Z,this._prepare_inputs_for_generation=Ie;break;case v.EncoderDecoder:this._forward=Z;break;case v.ImageTextToText:this.can_generate=!0,this._forward=ie,this._prepare_inputs_for_generation=X;break;case v.AudioTextToText:this.can_generate=!0,this._forward=_e,this._prepare_inputs_for_generation=X;break;case v.Phi3V:case v.ImageAudioTextToText:this.can_generate=!0,this._prepare_inputs_for_generation=X;break;case v.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=ae;break;case v.AutoEncoder:this._forward=he;break;default:this._forward=ne;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var oe;const D=[];for(const fe of Object.values(this.sessions))(oe=fe==null?void 0:fe.handler)!=null&&oe.dispose&&D.push(fe.handler.dispose());return await Promise.all(D)}static async from_pretrained(D,{progress_callback:oe=null,config:fe=null,cache_dir:me=null,local_files_only:Ce=!1,revision:Le="main",model_file_name:Ue=null,subfolder:Xe="onnx",device:ht=null,dtype:bt=null,use_external_data_format:yt=null,session_options:Ft={}}={}){let _t={progress_callback:oe,config:fe,cache_dir:me,local_files_only:Ce,revision:Le,model_file_name:Ue,subfolder:Xe,device:ht,dtype:bt,use_external_data_format:yt,session_options:Ft};const $t=x.get(this),ut=y.get($t);fe=_t.config=await s.AutoConfig.from_pretrained(D,_t);let At;if(ut===v.DecoderOnly)At=await Promise.all([O(D,{model:_t.model_file_name??"model"},_t),L(D,{generation_config:"generation_config.json"},_t)]);else if(ut===v.Seq2Seq||ut===v.Vision2Seq)At=await Promise.all([O(D,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},_t),L(D,{generation_config:"generation_config.json"},_t)]);else if(ut===v.MaskGeneration)At=await Promise.all([O(D,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},_t)]);else if(ut===v.EncoderDecoder)At=await Promise.all([O(D,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},_t)]);else if(ut===v.ImageTextToText){const Kt={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};fe.is_encoder_decoder&&(Kt.model="encoder_model"),At=await Promise.all([O(D,Kt,_t),L(D,{generation_config:"generation_config.json"},_t)])}else if(ut===v.AudioTextToText){const Kt={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};At=await Promise.all([O(D,Kt,_t),L(D,{generation_config:"generation_config.json"},_t)])}else if(ut===v.ImageAudioTextToText){const Kt={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};At=await Promise.all([O(D,Kt,_t),L(D,{generation_config:"generation_config.json"},_t)])}else if(ut===v.Musicgen)At=await Promise.all([O(D,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},_t),L(D,{generation_config:"generation_config.json"},_t)]);else if(ut===v.MultiModality)At=await Promise.all([O(D,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},_t),L(D,{generation_config:"generation_config.json"},_t)]);else if(ut===v.Phi3V)At=await Promise.all([O(D,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},_t),L(D,{generation_config:"generation_config.json"},_t)]);else if(ut===v.AutoEncoder)At=await Promise.all([O(D,{encoder_model:"encoder_model",decoder_model:"decoder_model"},_t)]);else{if(ut!==v.EncoderOnly){const Kt=$t??(fe==null?void 0:fe.model_type);Kt!=="custom"&&console.warn(`Model type for '${Kt}' not found, assuming encoder-only architecture. Please report this at ${c.GITHUB_ISSUE_URL}.`)}At=await Promise.all([O(D,{model:_t.model_file_name??"model"},_t)])}return new this(fe,...At)}async _call(D){return await this.forward(D)}async forward(D){return await this._forward(this,D)}get generation_config(){var D;return((D=this.configs)==null?void 0:D.generation_config)??null}_get_logits_warper(D){const oe=new p.LogitsProcessorList;return D.temperature!==null&&D.temperature!==1&&oe.push(new p.TemperatureLogitsWarper(D.temperature)),D.top_k!==null&&D.top_k!==0&&oe.push(new p.TopKLogitsWarper(D.top_k)),D.top_p!==null&&D.top_p<1&&oe.push(new p.TopPLogitsWarper(D.top_p)),oe}_get_logits_processor(D,oe,fe=null){const me=new p.LogitsProcessorList;if(D.repetition_penalty!==null&&D.repetition_penalty!==1&&me.push(new p.RepetitionPenaltyLogitsProcessor(D.repetition_penalty)),D.no_repeat_ngram_size!==null&&D.no_repeat_ngram_size>0&&me.push(new p.NoRepeatNGramLogitsProcessor(D.no_repeat_ngram_size)),D.bad_words_ids!==null&&me.push(new p.NoBadWordsLogitsProcessor(D.bad_words_ids,D.eos_token_id)),D.min_length!==null&&D.eos_token_id!==null&&D.min_length>0&&me.push(new p.MinLengthLogitsProcessor(D.min_length,D.eos_token_id)),D.min_new_tokens!==null&&D.eos_token_id!==null&&D.min_new_tokens>0&&me.push(new p.MinNewTokensLengthLogitsProcessor(oe,D.min_new_tokens,D.eos_token_id)),D.forced_bos_token_id!==null&&me.push(new p.ForcedBOSTokenLogitsProcessor(D.forced_bos_token_id)),D.forced_eos_token_id!==null&&me.push(new p.ForcedEOSTokenLogitsProcessor(D.max_length,D.forced_eos_token_id)),D.begin_suppress_tokens!==null){const Ce=oe>1||D.forced_bos_token_id===null?oe:oe+1;me.push(new p.SuppressTokensAtBeginLogitsProcessor(D.begin_suppress_tokens,Ce))}return D.guidance_scale!==null&&D.guidance_scale>1&&me.push(new p.ClassifierFreeGuidanceLogitsProcessor(D.guidance_scale)),fe!==null&&me.extend(fe),me}_prepare_generation_config(D,oe,fe=d.GenerationConfig){const me={...this.config};for(const Le of["decoder","generator","text_config"])Le in me&&Object.assign(me,me[Le]);const Ce=new fe(me);return Object.assign(Ce,this.generation_config??{}),D&&Object.assign(Ce,D),oe&&Object.assign(Ce,(0,a.pick)(oe,Object.getOwnPropertyNames(Ce))),Ce}_get_stopping_criteria(D,oe=null){const fe=new b.StoppingCriteriaList;return D.max_length!==null&&fe.push(new b.MaxLengthCriteria(D.max_length,this.config.max_position_embeddings??null)),D.eos_token_id!==null&&fe.push(new b.EosTokenCriteria(D.eos_token_id)),oe&&fe.extend(oe),fe}_validate_model_class(){if(!this.can_generate){const D=[$l,kl,Sl,Cl],oe=x.get(this.constructor),fe=new Set,me=this.config.model_type;for(const Le of D){const Ue=Le.get(me);Ue&&fe.add(Ue[0])}let Ce=`The current model class (${oe}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw fe.size>0&&(Ce+=` Please use the following class instead: ${[...fe].join(", ")}`),Error(Ce)}}prepare_inputs_for_generation(...D){return this._prepare_inputs_for_generation(this,...D)}_update_model_kwargs_for_generation({generated_input_ids:D,outputs:oe,model_inputs:fe,is_encoder_decoder:me}){return fe.past_key_values=this.getPastKeyValues(oe,fe.past_key_values),fe.input_ids=new u.Tensor("int64",D.flat(),[D.length,1]),me||(fe.attention_mask=(0,u.cat)([fe.attention_mask,(0,u.ones)([fe.attention_mask.dims[0],1])],1)),fe.position_ids=null,fe}_prepare_model_inputs({inputs:D,bos_token_id:oe,model_kwargs:fe}){const me=(0,a.pick)(fe,this.forward_params),Ce=this.main_input_name;if(Ce in me){if(D)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else me[Ce]=D;return{inputs_tensor:me[Ce],model_inputs:me,model_input_name:Ce}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:D,model_inputs:oe,model_input_name:fe,generation_config:me}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!oe.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:Le,pixel_values:Ue,attention_mask:Xe,...ht}=oe,bt=await this._prepare_inputs_embeds(oe);oe={...ht,...(0,a.pick)(bt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:Ce}=await ne(this,oe);if(me.guidance_scale!==null&&me.guidance_scale>1)Ce=(0,u.cat)([Ce,(0,u.full_like)(Ce,0)],0),"attention_mask"in oe&&(oe.attention_mask=(0,u.cat)([oe.attention_mask,(0,u.zeros_like)(oe.attention_mask)],0));else if(oe.decoder_input_ids){const Le=H(oe.decoder_input_ids).dims[0];if(Le!==Ce.dims[0]){if(Ce.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${Ce.dims[0]}) than the decoder inputs (${Le}).`);Ce=(0,u.cat)(Array.from({length:Le},()=>Ce),0)}}return oe.encoder_outputs=Ce,oe}_prepare_decoder_input_ids_for_generation({batch_size:D,model_input_name:oe,model_kwargs:fe,decoder_start_token_id:me,bos_token_id:Ce,generation_config:Le}){let{decoder_input_ids:Ue,...Xe}=fe;if(!(Ue instanceof u.Tensor)){if(Ue)Array.isArray(Ue[0])||(Ue=Array.from({length:D},()=>Ue));else if(me??(me=Ce),this.config.model_type==="musicgen")Ue=Array.from({length:D*this.config.decoder.num_codebooks},()=>[me]);else if(Array.isArray(me)){if(me.length!==D)throw new Error(`\`decoder_start_token_id\` expcted to have length ${D} but got ${me.length}`);Ue=me}else Ue=Array.from({length:D},()=>[me]);Ue=H(Ue)}return fe.decoder_attention_mask=(0,u.ones_like)(Ue),{input_ids:Ue,model_inputs:Xe}}async generate({inputs:D=null,generation_config:oe=null,logits_processor:fe=null,stopping_criteria:me=null,streamer:Ce=null,...Le}){this._validate_model_class(),oe=this._prepare_generation_config(oe,Le);let{inputs_tensor:Ue,model_inputs:Xe,model_input_name:ht}=this._prepare_model_inputs({inputs:D,model_kwargs:Le});const bt=this.config.is_encoder_decoder;bt&&("encoder_outputs"in Xe||(Xe=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ue,model_inputs:Xe,model_input_name:ht,generation_config:oe})));let yt;bt?{input_ids:yt,model_inputs:Xe}=this._prepare_decoder_input_ids_for_generation({batch_size:Xe[ht].dims.at(0),model_input_name:ht,model_kwargs:Xe,decoder_start_token_id:oe.decoder_start_token_id,bos_token_id:oe.bos_token_id,generation_config:oe}):yt=Xe[ht];let Ft=yt.dims.at(-1);oe.max_new_tokens!==null&&(oe.max_length=Ft+oe.max_new_tokens);const _t=this._get_logits_processor(oe,Ft,fe),$t=this._get_stopping_criteria(oe,me),ut=Xe[ht].dims.at(0),At=k.LogitsSampler.getSampler(oe),Kt=new Array(ut).fill(0),er=yt.tolist();Ce&&Ce.put(er);let ur,ar={};for(;;){if(Xe=this.prepare_inputs_for_generation(er,Xe,oe),ur=await this.forward(Xe),oe.output_attentions&&oe.return_dict_in_generate){const Jr=this.getAttentions(ur);for(const cs in Jr)cs in ar||(ar[cs]=[]),ar[cs].push(Jr[cs])}const kt=ur.logits.slice(null,-1,null),xr=_t(er,kt),rs=[];for(let Jr=0;Jr<xr.dims.at(0);++Jr){const cs=xr[Jr],Ri=await At(cs);for(const[yn,ji]of Ri){const Ni=BigInt(yn);Kt[Jr]+=ji,er[Jr].push(Ni),rs.push([Ni]);break}}if(Ce&&Ce.put(rs),$t(er).every(Jr=>Jr))break;Xe=this._update_model_kwargs_for_generation({generated_input_ids:rs,outputs:ur,model_inputs:Xe,is_encoder_decoder:bt})}Ce&&Ce.end();const wr=this.getPastKeyValues(ur,Xe.past_key_values,!0),Ar=new u.Tensor("int64",er.flat(),[er.length,er[0].length]);if(oe.return_dict_in_generate)return{sequences:Ar,past_key_values:wr,...ar};for(const kt of Object.values(ur))kt.location==="gpu-buffer"&&kt.dispose();return Ar}getPastKeyValues(D,oe,fe=!1){const me=Object.create(null);for(const Ce in D)if(Ce.startsWith("present")){const Le=Ce.replace("present_conv","past_conv").replace("present","past_key_values"),Ue=Ce.includes("encoder");if(Ue&&oe?me[Le]=oe[Le]:me[Le]=D[Ce],oe&&(!Ue||fe)){const Xe=oe[Le];Xe.location==="gpu-buffer"&&Xe.dispose()}}return me}getAttentions(D){const oe={};for(const fe of["cross_attentions","encoder_attentions","decoder_attentions"])for(const me in D)me.startsWith(fe)&&(fe in oe||(oe[fe]=[]),oe[fe].push(D[me]));return oe}addPastKeyValues(D,oe){var fe,me,Ce;if(oe)Object.assign(D,oe);else{const Le=this.sessions.decoder_model_merged??this.sessions.model,Ue=((me=(fe=D[this.main_input_name]??D.attention_mask)==null?void 0:fe.dims)==null?void 0:me[0])??1,Xe=((Ce=Le==null?void 0:Le.config)==null?void 0:Ce.kv_cache_dtype)??"float32",ht=Xe==="float16"?u.DataTypeMap.float16:u.DataTypeMap.float32,bt=(0,s.getCacheShapes)(this.config,{batch_size:Ue});for(const yt in bt){const Ft=bt[yt].reduce((_t,$t)=>_t*$t,1);D[yt]=new u.Tensor(Xe,new ht(Ft),bt[yt])}}}async encode_image({pixel_values:D}){return(await R(this.sessions.vision_encoder,{pixel_values:D})).image_features}async encode_text({input_ids:D}){return(await R(this.sessions.embed_tokens,{input_ids:D})).inputs_embeds}async encode_audio({audio_values:D}){return(await R(this.sessions.audio_encoder,{audio_values:D})).audio_features}}class be{}class ke extends be{constructor({last_hidden_state:C,hidden_states:D=null,attentions:oe=null}){super(),this.last_hidden_state=C,this.hidden_states=D,this.attentions=oe}}class Ee extends W{}class Me extends Ee{}class Se extends Ee{async _call(C){return new Ir(await super._call(C))}}class we extends Ee{async _call(C){return new Tt(await super._call(C))}}class Ae extends Ee{async _call(C){return new vr(await super._call(C))}}class Be extends Ee{async _call(C){return new Br(await super._call(C))}}class Qe extends W{}class xe extends Qe{}class Ze extends Qe{async _call(C){return new Ir(await super._call(C))}}class Ke extends Qe{async _call(C){return new Tt(await super._call(C))}}class nt extends Qe{async _call(C){return new vr(await super._call(C))}}class Je extends Qe{async _call(C){return new Br(await super._call(C))}}class Oe extends W{}class Ye extends Oe{}class ot extends Oe{async _call(C){return new Ir(await super._call(C))}}class It extends Oe{async _call(C){return new Tt(await super._call(C))}}class St extends Oe{async _call(C){return new vr(await super._call(C))}}class wt extends W{}class Mr extends wt{}class Er extends wt{}class Rr extends W{}class is extends Rr{}class qt extends W{}class Pr extends qt{}class Us extends qt{async _call(C){return new Ir(await super._call(C))}}class Ws extends qt{async _call(C){return new Tt(await super._call(C))}}class Gs extends qt{async _call(C){return new vr(await super._call(C))}}class Ks extends qt{async _call(C){return new Br(await super._call(C))}}class pt extends W{}class $s extends pt{}class ks extends pt{async _call(C){return new Ir(await super._call(C))}}class Ct extends pt{async _call(C){return new Tt(await super._call(C))}}class Qt extends pt{async _call(C){return new vr(await super._call(C))}}class S extends pt{async _call(C){return new Br(await super._call(C))}}class Q extends W{}class B extends Q{}class q extends Q{async _call(C){return new Ir(await super._call(C))}}class re extends Q{async _call(C){return new Tt(await super._call(C))}}class ge extends Q{async _call(C){return new vr(await super._call(C))}}class Fe extends Q{async _call(C){return new Br(await super._call(C))}}class rt extends W{}class ft extends rt{}class mt extends rt{async _call(C){return new Ir(await super._call(C))}}class vt extends rt{async _call(C){return new Tt(await super._call(C))}}class st extends rt{async _call(C){return new vr(await super._call(C))}}class zt extends rt{async _call(C){return new Br(await super._call(C))}}class Nt extends W{}class jr extends Nt{}class qr extends Nt{async _call(C){return new Ir(await super._call(C))}}class rr extends Nt{async _call(C){return new Tt(await super._call(C))}}class Cr extends Nt{async _call(C){return new vr(await super._call(C))}}class Sr extends Nt{async _call(C){return new Br(await super._call(C))}}class Nr extends W{}class as extends Nr{}class $r extends Nr{async _call(C){return new Ir(await super._call(C))}}class Is extends Nr{async _call(C){return new Tt(await super._call(C))}}class As extends Nr{async _call(C){return new vr(await super._call(C))}}class Vr extends Nr{async _call(C){return new Br(await super._call(C))}}class Ur extends W{}class Zr extends Ur{}class Or extends Ur{async _call(C){return new Tt(await super._call(C))}}class ms extends Ur{async _call(C){return new vr(await super._call(C))}}class pr extends Ur{async _call(C){return new Br(await super._call(C))}}class hr extends Ur{async _call(C){return new Ir(await super._call(C))}}class Qr extends W{}class Ds extends Qr{}class Wr extends Qr{async _call(C){return new Ir(await super._call(C))}}class Re extends Qr{async _call(C){return new Tt(await super._call(C))}}class je extends Qr{async _call(C){return new vr(await super._call(C))}}class et extends W{}class Xt extends et{}class Ls extends et{async _call(C){return new Ir(await super._call(C))}}class hs extends et{async _call(C){return new Tt(await super._call(C))}}class zs extends et{async _call(C){return new Br(await super._call(C))}}class _s extends W{}class an extends _s{}class ln extends _s{async _call(C){return new Ir(await super._call(C))}}class cn extends _s{async _call(C){return new Tt(await super._call(C))}}class pe extends _s{async _call(C){return new vr(await super._call(C))}}class I extends _s{async _call(C){return new Br(await super._call(C))}}class N extends W{}class Y extends N{}class le extends N{async _call(C){return new Ir(await super._call(C))}}class de extends N{async _call(C){return new Tt(await super._call(C))}}class Te extends N{async _call(C){return new Br(await super._call(C))}}class Ne extends W{}class qe extends Ne{}class We extends Ne{async _call(C){return new Tt(await super._call(C))}}class tt extends Ne{async _call(C){return new Br(await super._call(C))}}class Mt extends Ne{async _call(C){return new Ir(await super._call(C))}}class Bt extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Dt extends Bt{}class sr extends Bt{}class Wt extends W{}class _r extends Wt{}class br extends Wt{}class or extends W{}class fr extends or{}class Dr extends or{}class Xr extends W{}class Yt extends Xr{}class gr extends Xr{}class Gr extends Xr{async _call(C){return new Tt(await super._call(C))}}class zr extends W{}class fs extends zr{}class kr extends zr{}class ls extends zr{async _call(C){return new Tt(await super._call(C))}}class cr extends zr{}class ir extends W{}class mr extends ir{}class nr extends ir{}class Kr extends W{}class Bs extends Kr{}class zn extends Kr{}class Hs extends W{}class Yo extends Hs{}class io extends Hs{async _call(C){return new Ir(await super._call(C))}}class Zo extends Hs{async _call(C){return new Tt(await super._call(C))}}class ei extends Hs{async _call(C){return new vr(await super._call(C))}}class ti extends Hs{async _call(C){return new Br(await super._call(C))}}class qs extends W{}class ri extends qs{}class si extends qs{async _call(C){return new Ir(await super._call(C))}}class ni extends qs{async _call(C){return new Tt(await super._call(C))}}class oi extends qs{async _call(C){return new vr(await super._call(C))}}class ii extends qs{async _call(C){return new Br(await super._call(C))}}class Qs extends W{}class ai extends Qs{}class li extends Qs{async _call(C){return new Ir(await super._call(C))}}class ao extends Qs{async _call(C){return new Tt(await super._call(C))}}class lo extends Qs{async _call(C){return new vr(await super._call(C))}}class co extends Qs{async _call(C){return new Br(await super._call(C))}}class uo extends W{}class ci extends uo{}class po extends uo{}class Bn extends W{constructor(){super(...arguments);J(this,"requires_attention_mask",!1);J(this,"main_input_name","input_features");J(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Xs extends Bn{}class mo extends Bn{_prepare_generation_config(C,D){return super._prepare_generation_config(C,D,M.WhisperGenerationConfig)}_retrieve_init_tokens(C){const D=[C.decoder_start_token_id];let oe=C.language;const fe=C.task;if(C.is_multilingual){oe||(console.warn("No language specified - defaulting to English (en)."),oe="en");const Ce=`<|${(0,$.whisper_language_to_code)(oe)}|>`;D.push(C.lang_to_id[Ce]),D.push(C.task_to_id[fe??"transcribe"])}else if(oe||fe)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!C.return_timestamps&&C.no_timestamps_token_id&&D.at(-1)!==C.no_timestamps_token_id?D.push(C.no_timestamps_token_id):C.return_timestamps&&D.at(-1)===C.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),D.pop()),D.filter(me=>me!=null)}async generate({inputs:C=null,generation_config:D=null,logits_processor:oe=null,stopping_criteria:fe=null,...me}){D=this._prepare_generation_config(D,me);const Ce=me.decoder_input_ids??this._retrieve_init_tokens(D);if(D.return_timestamps&&(oe??(oe=new p.LogitsProcessorList),oe.push(new p.WhisperTimeStampLogitsProcessor(D,Ce))),D.begin_suppress_tokens&&(oe??(oe=new p.LogitsProcessorList),oe.push(new p.SuppressTokensAtBeginLogitsProcessor(D.begin_suppress_tokens,Ce.length))),D.return_token_timestamps){if(!D.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");D.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),D.output_attentions=!0,D.return_dict_in_generate=!0}const Le=await super.generate({inputs:C,generation_config:D,logits_processor:oe,decoder_input_ids:Ce,...me});return D.return_token_timestamps&&(Le.token_timestamps=this._extract_token_timestamps(Le,D.alignment_heads,D.num_frames)),Le}_extract_token_timestamps(C,D,oe=null,fe=.02){if(!C.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");oe==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let me=this.config.median_filter_width;me===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),me=7);const Ce=C.cross_attentions,Le=Array.from({length:this.config.decoder_layers},($t,ut)=>(0,u.cat)(Ce.map(At=>At[ut]),2)),Ue=(0,u.stack)(D.map(([$t,ut])=>{if($t>=Le.length)throw new Error(`Layer index ${$t} is out of bounds for cross attentions (length ${Le.length}).`);return oe?Le[$t].slice(null,ut,null,[0,oe]):Le[$t].slice(null,ut)})).transpose(1,0,2,3),[Xe,ht]=(0,u.std_mean)(Ue,-2,0,!0),bt=Ue.clone();for(let $t=0;$t<bt.dims[0];++$t){const ut=bt[$t];for(let At=0;At<ut.dims[0];++At){const Kt=ut[At],er=Xe[$t][At][0].data,ur=ht[$t][At][0].data;for(let ar=0;ar<Kt.dims[0];++ar){let wr=Kt[ar].data;for(let Ar=0;Ar<wr.length;++Ar)wr[Ar]=(wr[Ar]-ur[Ar])/er[Ar];wr.set((0,_.medianFilter)(wr,me))}}}const yt=[(0,u.mean)(bt,1)],Ft=C.sequences.dims,_t=new u.Tensor("float32",new Float32Array(Ft[0]*Ft[1]),Ft);for(let $t=0;$t<Ft[0];++$t){const ut=yt[$t].neg().squeeze_(0),[At,Kt]=(0,_.dynamic_time_warping)(ut.tolist()),er=Array.from({length:At.length-1},(wr,Ar)=>At[Ar+1]-At[Ar]),ur=(0,a.mergeArrays)([1],er).map(wr=>!!wr),ar=[];for(let wr=0;wr<ur.length;++wr)ur[wr]&&ar.push(Kt[wr]*fe);_t[$t].data.set(ar,1)}return _t}}class ho extends mo{}class _o extends W{constructor(){super(...arguments);J(this,"requires_attention_mask",!1);J(this,"main_input_name","input_values");J(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class ga extends _o{}class ui extends _o{}class un extends W{constructor(){super(...arguments);J(this,"main_input_name","pixel_values");J(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class Rn extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class jn extends Rn{_merge_input_ids_with_image_features(C){const D=C.image_features.dims.at(-1),oe=C.image_features.view(-1,D);return F({image_token_id:this.config.image_token_index,...C,image_features:oe})}}class di extends jn{}class pi extends jn{}class mi extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);J(this,"main_input_name","inputs_embeds")}}class hi extends mi{_merge_input_ids_with_image_features({inputs_embeds:C,image_features:D,input_ids:oe,attention_mask:fe}){return{inputs_embeds:(0,u.cat)([D,C],1),attention_mask:(0,u.cat)([(0,u.ones)(D.dims.slice(0,2)),fe],1)}}async _prepare_inputs_embeds({input_ids:C,pixel_values:D,inputs_embeds:oe,attention_mask:fe}){if(!C&&!D)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let me,Ce;return C&&(me=await this.encode_text({input_ids:C})),D&&(Ce=await this.encode_image({pixel_values:D})),me&&Ce?{inputs_embeds:oe,attention_mask:fe}=this._merge_input_ids_with_image_features({inputs_embeds:me,image_features:Ce,input_ids:C,attention_mask:fe}):oe=me||Ce,{inputs_embeds:oe,attention_mask:fe}}async forward({input_ids:C,pixel_values:D,attention_mask:oe,decoder_input_ids:fe,decoder_attention_mask:me,encoder_outputs:Ce,past_key_values:Le,inputs_embeds:Ue,decoder_inputs_embeds:Xe}){if(Ue||({inputs_embeds:Ue,attention_mask:oe}=await this._prepare_inputs_embeds({input_ids:C,pixel_values:D,inputs_embeds:Ue,attention_mask:oe})),!Ce){let{last_hidden_state:yt}=await ne(this,{inputs_embeds:Ue,attention_mask:oe});Ce=yt}if(!Xe){if(!fe)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Xe=await this.encode_text({input_ids:fe})}return await ue(this,{inputs_embeds:Xe,attention_mask:me,encoder_attention_mask:oe,encoder_hidden_states:Ce,past_key_values:Le},!0)}}class _i extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class fi extends _i{_merge_input_ids_with_image_features(C){const D=C.image_features.dims.at(-1),oe=C.image_features.view(-1,D);return F({image_token_id:this.config.image_token_index,...C,image_features:oe})}}class gi extends Rn{_merge_input_ids_with_image_features(C){const D=C.image_features.dims.at(-1),oe=C.image_features.view(-1,D);return F({image_token_id:this.config.image_token_index,...C,image_features:oe})}}class wi extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","inputs_embeds","per_layer_inputs","position_ids","pixel_values","input_features","input_features_mask","past_key_values"])}}class Js extends wi{async forward({input_ids:C=null,attention_mask:D=null,pixel_values:oe=null,input_features:fe=null,input_features_mask:me=null,position_ids:Ce=null,inputs_embeds:Le=null,per_layer_inputs:Ue=null,past_key_values:Xe=null,generation_config:ht=null,logits_processor:bt=null,...yt}){if((!Le||!Ue)&&({inputs_embeds:Le,per_layer_inputs:Ue}=await R(this.sessions.embed_tokens,{input_ids:C}),C.dims[1]!==1)){if(oe){const{image_features:_t}=await R(this.sessions.vision_encoder,{pixel_values:oe});({inputs_embeds:Le,attention_mask:D}=this._merge_input_ids_with_image_features({image_features:_t,inputs_embeds:Le,input_ids:C,attention_mask:D}))}if(fe){const{audio_features:_t}=await R(this.sessions.audio_encoder,{input_features:fe,input_features_mask:me});({inputs_embeds:Le,attention_mask:D}=this._merge_input_ids_with_audio_features({audio_features:_t,inputs_embeds:Le,input_ids:C,attention_mask:D}))}}return await ue(this,{inputs_embeds:Le,per_layer_inputs:Ue,past_key_values:Xe,attention_mask:D,position_ids:Ce,generation_config:ht,logits_processor:bt},!0)}_merge_input_ids_with_image_features(C){const D=C.image_features.dims.at(-1),oe=C.image_features.view(-1,D);return F({image_token_id:this.config.image_token_id,...C,image_features:oe})}_merge_input_ids_with_audio_features(C){const D=C.audio_features.dims.at(-1),oe=C.audio_features.view(-1,D);return U({audio_token_id:this.config.audio_token_id,...C,audio_features:oe})}}class Ys extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class dn extends Ys{async encode_image({pixel_values:C,pixel_attention_mask:D}){return(await R(this.sessions.vision_encoder,{pixel_values:C,pixel_attention_mask:D})).image_features}_merge_input_ids_with_image_features(C){const D=C.image_features.dims.at(-1),oe=C.image_features.view(-1,D);return F({image_token_id:this.config.image_token_id,...C,image_features:oe})}}class fo extends dn{}class Mi extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class pn extends Mi{async forward({input_ids:C=null,attention_mask:D=null,pixel_values:oe=null,image_sizes:fe=null,position_ids:me=null,inputs_embeds:Ce=null,past_key_values:Le=null,generation_config:Ue=null,logits_processor:Xe=null,...ht}){if(!Ce){let yt;if(oe&&C.dims[1]!==1){if(!fe)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:yt}=await R(this.sessions.vision_encoder,{pixel_values:oe,image_sizes:fe}))}else{const Ft=this.config.normalized_config.hidden_size;yt=new u.Tensor("float32",[],[0,Ft])}({inputs_embeds:Ce}=await R(this.sessions.prepare_inputs_embeds,{input_ids:C,image_features:yt}))}return await ue(this,{inputs_embeds:Ce,past_key_values:Le,attention_mask:D,position_ids:me,generation_config:Ue,logits_processor:Xe},!1)}}class gs extends W{}class go extends gs{}class bi extends gs{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"text_model"})}}class wo extends gs{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"text_model"})}}class yi extends gs{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"vision_model"})}}class Mo extends gs{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"vision_model"})}}class Nn extends W{}class vi extends Nn{}class bo extends Nn{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"text_model"})}}class yo extends gs{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"vision_model"})}}class mn extends W{}class dt extends mn{}class Vn extends W{}class vo extends Vn{async forward(C){const D=!C.input_ids,oe=!C.pixel_values;if(D&&oe)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(D&&(C.input_ids=(0,u.ones)([C.pixel_values.dims[0],1])),oe){const{image_size:Xe}=this.config.vision_config;C.pixel_values=(0,u.full)([0,3,Xe,Xe],0)}const{text_embeddings:fe,image_embeddings:me,l2norm_text_embeddings:Ce,l2norm_image_embeddings:Le}=await super.forward(C),Ue={};return D||(Ue.text_embeddings=fe,Ue.l2norm_text_embeddings=Ce),oe||(Ue.image_embeddings=me,Ue.l2norm_image_embeddings=Le),Ue}}class xo extends Vn{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"text_model"})}}class hn extends Vn{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"vision_model"})}}class es extends W{}class _n extends es{}class Un extends es{}class Wn extends W{}class To extends Wn{}class Eo extends Wn{}class fn extends W{}class Po extends fn{}class Co extends fn{}class Gn extends W{}class gn extends Gn{}class Kn extends Gn{}class wn extends W{}class So extends wn{}class $o extends wn{}class Hn extends W{}class ko extends Hn{}class Io extends Hn{}class qn extends W{}class m extends qn{}class E extends qn{}class A extends W{}class z extends A{}class V extends A{}class ce extends W{}class Pe extends ce{}class De extends ce{}class He extends W{}class it extends He{}class xt extends He{}class Ot extends W{}class Gt extends Ot{}class yr extends Ot{}class Fs extends W{}class xi extends Fs{}class Fu extends Fs{}class wa extends W{}class Ou extends wa{}class Du extends wa{}class Ma extends W{}class Lu extends Ma{}class zu extends Ma{}class ba extends W{}class Bu extends ba{}class Ru extends ba{}class ya extends W{}class ju extends ya{}class Nu extends ya{}class va extends W{}class Vu extends va{}class Uu extends va{}class xa extends W{}class Wu extends xa{}class Gu extends xa{}class Ta extends W{}class Ku extends Ta{}class Hu extends Ta{}class Ea extends W{}class qu extends Ea{}class Qu extends Ea{}class Pa extends W{}class Xu extends Pa{}class Ju extends Pa{}class Ca extends W{}class Yu extends Ca{}class Zu extends Ca{}class Sa extends W{}class ed extends Sa{}class td extends Sa{}class $a extends W{}class rd extends $a{}class sd extends $a{}class ka extends W{}class nd extends ka{}class od extends ka{}class Ia extends W{}class id extends Ia{}class ad extends Ia{}class ld extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class cd extends ld{get_rope_index(C,D,oe,fe){const{vision_config:me,image_token_id:Ce,video_token_id:Le,vision_start_token_id:Ue}=this.config,Xe=me.spatial_merge_size??2,ht=[];if(D||oe){let bt=C.tolist();fe||(fe=(0,u.ones_like)(C));const yt=fe.tolist(),Ft=Array.from({length:3},Kt=>Array.from({length:C.dims[0]},er=>Array.from({length:C.dims[1]},ur=>1))),_t=D?D.tolist():[],$t=oe?oe.tolist():[];let ut=0,At=0;for(let Kt=0;Kt<bt.length;++Kt){const er=bt[Kt].filter((tr,Tr)=>yt[Kt][Tr]==1),ar=er.reduce((tr,Tr,en)=>(Tr==Ue&&tr.push(en),tr),[]).map(tr=>er[tr+1]),wr=ar.filter(tr=>tr==Ce).length,Ar=ar.filter(tr=>tr==Le).length;let kt=[],xr=0,rs=wr,bn=Ar;for(let tr=0;tr<ar.length;++tr){const Tr=er.findIndex((xn,ws)=>ws>xr&&xn==Ce),en=er.findIndex((xn,ws)=>ws>xr&&xn==Le),vn=rs>0&&Tr!==-1?Tr:er.length+1,Jn=bn>0&&en!==-1?en:er.length+1;let Vi,Al,Fl,Ol;vn<Jn?([Al,Fl,Ol]=_t[ut],++ut,--rs,Vi=vn):([Al,Fl,Ol]=$t[At],++At,--bn,Vi=Jn);const[Iv,Dl,Ui]=[Number(Al),Math.floor(Number(Fl)/Xe),Math.floor(Number(Ol)/Xe)],Ll=Vi-xr,K_=kt.length>0?(0,_.max)(kt.at(-1))[0]+1:0;kt.push(Array.from({length:3*Ll},(xn,ws)=>K_+ws%Ll));const zl=Ll+K_,Wi=Iv*Dl*Ui,Av=Array.from({length:Wi},(xn,ws)=>zl+Math.floor(ws/(Dl*Ui))),Fv=Array.from({length:Wi},(xn,ws)=>zl+Math.floor(ws/Ui)%Dl),Ov=Array.from({length:Wi},(xn,ws)=>zl+ws%Ui);kt.push([Av,Fv,Ov].flat()),xr=Vi+Wi}if(xr<er.length){const tr=kt.length>0?(0,_.max)(kt.at(-1))[0]+1:0,Tr=er.length-xr;kt.push(Array.from({length:3*Tr},(en,vn)=>tr+vn%Tr))}const Jr=kt.reduce((tr,Tr)=>tr+Tr.length,0),cs=new Array(Jr);let Ri=0;for(let tr=0;tr<3;++tr)for(let Tr=0;Tr<kt.length;++Tr){const en=kt[Tr],vn=en.length/3;for(let Jn=tr*vn;Jn<(tr+1)*vn;++Jn)cs[Ri++]=en[Jn]}let yn=0;const ji=yt[Kt];for(let tr=0;tr<ji.length;++tr)if(ji[tr]==1){for(let Tr=0;Tr<3;++Tr)Ft[Tr][Kt][tr]=cs[Tr*Jr/3+yn];++yn}const Ni=(0,_.max)(cs)[0];ht.push(Ni+1-bt[Kt].length)}return[new u.Tensor("int64",Ft.flat(1/0),[3,C.dims[0],C.dims[1]]),new u.Tensor("int64",ht,[ht.length,1])]}else if(fe){const{data:bt,dims:yt}=ve(fe),Ft=BigInt64Array.from({length:3*bt.length},($t,ut)=>bt[ut%bt.length]),_t=Array.from({length:yt[0]},($t,ut)=>(0,_.max)(bt.subarray(yt[1]*ut,yt[1]*(ut+1)))[0]+1n+BigInt(yt[1]));return[new u.Tensor("int64",Ft,[3,...yt]),new u.Tensor("int64",_t,[_t.length,1])]}else{const[bt,yt]=C.dims,Ft=BigInt64Array.from({length:3*bt*yt},(_t,$t)=>BigInt(Math.floor($t%yt/bt)));return[new u.Tensor("int64",Ft,[3,...C.dims]),(0,u.zeros)([bt,1])]}}async encode_image({pixel_values:C,image_grid_thw:D}){return(await R(this.sessions.vision_encoder,{pixel_values:C,grid_thw:D})).image_features}_merge_input_ids_with_image_features(C){return F({image_token_id:this.config.image_token_id,...C})}prepare_inputs_for_generation(C,D,oe){if(D.attention_mask&&!D.position_ids)if(!D.past_key_values)[D.position_ids,D.rope_deltas]=this.get_rope_index(D.input_ids,D.image_grid_thw,D.video_grid_thw,D.attention_mask);else{D.pixel_values=null;const fe=BigInt(Object.values(D.past_key_values)[0].dims.at(-2)),me=D.rope_deltas.map(Ce=>fe+Ce);D.position_ids=(0,u.stack)([me,me,me],0)}return D}}class Aa extends W{}class ud extends Aa{}class dd extends Aa{}class Fa extends W{}class pd extends Fa{}class md extends Fa{}class Oa extends W{}class hd extends Oa{}class _d extends Oa{}class Da extends W{}class fd extends Da{}class gd extends Da{}class La extends W{}class wd extends La{}class Md extends La{}class za extends W{}class bd extends za{}class yd extends za{async _call(C){return new Tt(await super._call(C))}}class Ba extends W{}class vd extends Ba{}class xd extends Ba{async _call(C){return new Tt(await super._call(C))}}class Td extends W{}class Ed extends Td{}class Ra extends W{}class Pd extends Ra{}class Cd extends Ra{async _call(C){return new Tt(await super._call(C))}}class Sd extends W{}class $d extends Sd{}class ja extends W{}class kd extends ja{}class Id extends ja{async _call(C){return new Tt(await super._call(C))}}class Ad extends W{}class Fd extends Ad{}class Na extends W{}class Od extends Na{}class Dd extends Na{async _call(C){return new Tt(await super._call(C))}}class Ld extends W{}class zd extends Ld{async _call(C){return new W_(await super._call(C))}}class Va extends W{}class Bd extends Va{}class Rd extends Va{async _call(C){return new Tt(await super._call(C))}}class Ua extends W{}class jd extends Ua{}class Nd extends Ua{async _call(C){return new Tt(await super._call(C))}}class Wa extends W{}class Vd extends Wa{}class Ud extends Wa{}class Ga extends W{}class Wd extends Ga{}class Gd extends Ga{}class Ka extends W{}class Kd extends Ka{}class Hd extends Ka{async _call(C){return new Tt(await super._call(C))}}class Ti extends W{}class qd extends Ti{}class Qd extends Ti{async _call(C){return new qa(await super._call(C))}}class Ha extends Ti{async _call(C){return new Xd(await super._call(C))}}class qa extends be{constructor({logits:C,pred_boxes:D}){super(),this.logits=C,this.pred_boxes=D}}class Xd extends be{constructor({logits:C,pred_boxes:D,pred_masks:oe}){super(),this.logits=C,this.pred_boxes=D,this.pred_masks=oe}}class Qa extends W{}class Jd extends Qa{}class Yd extends Qa{async _call(C){return new Ao(await super._call(C))}}class Ao extends be{constructor({logits:C,pred_boxes:D}){super(),this.logits=C,this.pred_boxes=D}}class Xa extends W{}class Zd extends Xa{}class ep extends Xa{async _call(C){return new tp(await super._call(C))}}class tp extends Ao{}class Ja extends W{}class rp extends Ja{}class sp extends Ja{async _call(C){return new np(await super._call(C))}}class np extends Ao{}class Ya extends W{}class op extends Ya{}class ip extends Ya{async _call(C){return new Ao(await super._call(C))}}class Za extends W{}class ap extends Za{}class lp extends Za{async _call(C){return new cp(await super._call(C))}}class cp extends qa{}class el extends W{}class up extends el{}class dp extends el{async _call(C){return new Tt(await super._call(C))}}class tl extends W{}class pp extends tl{}class mp extends tl{async _call(C){return new Tt(await super._call(C))}}class rl extends W{}class hp extends rl{}class _p extends rl{async _call(C){return new Tt(await super._call(C))}}class Ei extends W{}class fp extends Ei{}class gp extends Ei{async _call(C){return new Tt(await super._call(C))}}class wp extends Ei{}class sl extends W{}class Mp extends sl{}class bp extends sl{}class nl extends W{}class yp extends nl{}class vp extends nl{}class xp extends W{}class Tp extends xp{}class Pi extends W{}class Ep extends Pi{}class Pp extends Pi{}class Cp extends Pi{}class Sp extends W{}class $p extends Sp{}class kp extends W{}class Ip extends kp{}class Ap extends W{}class Fp extends Ap{}class ol extends W{}class Op extends ol{}class Dp extends ol{}class il extends W{}class Lp extends il{}class zp extends il{}class Bp extends W{}class Rp extends Bp{}class al extends W{}class jp extends al{}class Np extends al{async _call(C){return new Tt(await super._call(C))}}class ll extends W{}class Vp extends ll{}class Up extends ll{async _call(C){return new Tt(await super._call(C))}}class cl extends W{}class Wp extends cl{}class Gp extends cl{async _call(C){return new Tt(await super._call(C))}}class ul extends W{}class Kp extends ul{}class Hp extends ul{async _call(C){return new Tt(await super._call(C))}}class qp extends W{}class Qp extends qp{}class dl extends W{}class Xp extends dl{}class Jp extends dl{async _call(C){return new Yp(await super._call(C))}}class Yp extends be{constructor({logits:C,pred_boxes:D}){super(),this.logits=C,this.pred_boxes=D}}class Zp extends W{}class em extends Zp{async get_image_embeddings({pixel_values:C}){return await ne(this,{pixel_values:C})}async forward(C){if((!C.image_embeddings||!C.image_positional_embeddings)&&(C={...C,...await this.get_image_embeddings(C)}),!C.input_labels&&C.input_points){const oe=C.input_points.dims.slice(0,-1),fe=oe.reduce((me,Ce)=>me*Ce,1);C.input_labels=new u.Tensor("int64",new BigInt64Array(fe).fill(1n),oe)}const D={image_embeddings:C.image_embeddings,image_positional_embeddings:C.image_positional_embeddings};return C.input_points&&(D.input_points=C.input_points),C.input_labels&&(D.input_labels=C.input_labels),C.input_boxes&&(D.input_boxes=C.input_boxes),await R(this.sessions.prompt_encoder_mask_decoder,D)}async _call(C){return new tm(await super._call(C))}}class tm extends be{constructor({iou_scores:C,pred_masks:D}){super(),this.iou_scores=C,this.pred_masks=D}}class pl extends W{}class rm extends pl{}class sm extends pl{}class ml extends W{}class nm extends ml{}class om extends ml{}class Zs extends W{}class im extends Zs{}class am extends Zs{async _call(C){return new Mn(await super._call(C))}}class lm extends Zs{async _call(C){return new Tt(await super._call(C))}}class cm extends Zs{async _call(C){return new vr(await super._call(C))}}class hl extends W{}class um extends hl{}class dm extends hl{async _call(C){return new vr(await super._call(C))}}class pm extends W{}class mm extends pm{}class Ci extends W{}class hm extends Ci{}class _m extends Ci{async _call(C){return new Mn(await super._call(C))}}class fm extends Ci{async _call(C){return new Tt(await super._call(C))}}class Fo extends W{}class gm extends Fo{}class wm extends Fo{async _call(C){return new Mn(await super._call(C))}}class Mm extends Fo{async _call(C){return new Tt(await super._call(C))}}class bm extends Fo{async _call(C){return new vr(await super._call(C))}}class Si extends W{}class ym extends Si{}class vm extends Si{async _call(C){return new Mn(await super._call(C))}}class xm extends Si{async _call(C){return new Tt(await super._call(C))}}class fv extends W{}class Tm extends Zs{}class Em extends Zs{async _call(C){return new Mn(await super._call(C))}}class Pm extends Zs{async _call(C){return new Tt(await super._call(C))}}class Qn extends W{}class Cm extends Qn{}class Sm extends Qn{async _call(C){return new Mn(await super._call(C))}}class $m extends Qn{async _call(C){return new Tt(await super._call(C))}}class km extends Qn{async _call(C){return new U_(await super._call(C))}}class Im extends Qn{async _call(C){return new vr(await super._call(C))}}class Am extends W{}class Fm extends Am{}class $i extends W{}class gv extends $i{}class Om extends $i{}class Dm extends $i{async generate_speech(C,D,{threshold:oe=.5,minlenratio:fe=0,maxlenratio:me=20,vocoder:Ce=null}={}){const Le={input_ids:C},{encoder_outputs:Ue,encoder_attention_mask:Xe}=await ne(this,Le),ht=Ue.dims[1]/this.config.reduction_factor,bt=Math.floor(ht*me),yt=Math.floor(ht*fe),Ft=this.config.num_mel_bins;let _t=[],$t=null,ut=null,At=0;for(;;){++At;const ur=ee(!!ut);let ar;ut?ar=ut.output_sequence_out:ar=new u.Tensor("float32",new Float32Array(Ft),[1,1,Ft]);let wr={use_cache_branch:ur,output_sequence:ar,encoder_attention_mask:Xe,speaker_embeddings:D,encoder_hidden_states:Ue};this.addPastKeyValues(wr,$t),ut=await R(this.sessions.decoder_model_merged,wr),$t=this.getPastKeyValues(ut,$t);const{prob:Ar,spectrum:kt}=ut;if(_t.push(kt),At>=yt&&(Array.from(Ar.data).filter(xr=>xr>=oe).length>0||At>=bt))break}const Kt=(0,u.cat)(_t),{waveform:er}=await R(Ce.sessions.model,{spectrogram:Kt});return{spectrogram:Kt,waveform:er}}}class Lm extends W{constructor(){super(...arguments);J(this,"main_input_name","spectrogram")}}class zm extends W{}class Bm extends zm{}class _l extends W{}class Rm extends _l{}class jm extends _l{}class fl extends W{}class Nm extends fl{}class Vm extends fl{}class gl extends W{}class Um extends gl{}class Wm extends gl{}class wl extends W{}class Gm extends wl{}class Km extends wl{}class ki extends W{}class Hm extends ki{}class qm extends ki{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"text_model"})}}class Qm extends ki{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"audio_model"})}}class Xm extends W{}class Ml extends Xm{async _call(C){return new G_(await super._call(C))}}class Ii extends W{}class wv extends Ii{}class Jm extends Ii{}class Ym extends Ii{}class bl extends W{}class Zm extends bl{}class eh extends bl{}class yl extends W{}class th extends yl{}class rh extends yl{async _call(C){return new Tt(await super._call(C))}}class vl extends W{}class Mv extends vl{}class bv extends vl{}class xl extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(D){const[oe,fe]=D.dims,me=this.config.decoder.num_codebooks,Ce=fe-me;let Le=0;for(let ht=0;ht<D.size;++ht){if(D.data[ht]===this.config.decoder.pad_token_id)continue;const bt=ht%fe,yt=Math.floor(ht/fe)%me,Ft=bt-yt;Ft>0&&Ft<=Ce&&(D.data[Le++]=D.data[ht])}const Ue=Math.floor(oe/me),Xe=Le/(Ue*me);return new u.Tensor(D.type,D.data.slice(0,Le),[Ue,me,Xe])}prepare_inputs_for_generation(D,oe,fe){let me=structuredClone(D);for(let Le=0;Le<me.length;++Le)for(let Ue=0;Ue<me[Le].length;++Ue)Le%this.config.decoder.num_codebooks>=Ue&&(me[Le][Ue]=BigInt(this.config.decoder.pad_token_id));return fe.guidance_scale!==null&&fe.guidance_scale>1&&(me=me.concat(me)),super.prepare_inputs_for_generation(me,oe,fe)}async generate(D){const oe=await super.generate(D),fe=this._apply_and_filter_by_delay_pattern_mask(oe).unsqueeze_(0),{audio_values:me}=await R(this.sessions.encodec_decode,{audio_codes:fe});return me}}class Ai extends W{}class sh extends Ai{}class nh extends Ai{async _call(C){return new Tt(await super._call(C))}}class oh extends Ai{}class Fi extends W{}class ih extends Fi{}class ah extends Fi{async _call(C){return new Tt(await super._call(C))}}class lh extends Fi{}class Oi extends W{}class ch extends Oi{}class uh extends Oi{async _call(C){return new Tt(await super._call(C))}}class dh extends Oi{}class Di extends W{}class ph extends Di{}class mh extends Di{async _call(C){return new Tt(await super._call(C))}}class hh extends Di{}class _h extends W{}class fh extends _h{}class gh extends W{}class wh extends gh{constructor(...D){super(...D);J(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(D){const oe=this._generation_mode??"text";let fe;if(oe==="text"||!D.past_key_values){const Xe=this.sessions.prepare_inputs_embeds,ht=(0,a.pick)(D,Xe.inputNames);fe=await R(Xe,ht)}else{const Xe=this.sessions.gen_img_embeds,ht=(0,a.pick)({image_ids:D.input_ids},Xe.inputNames);fe=await R(Xe,ht)}const me={...D,...fe},Ce=await ue(this,me),Le=this.sessions[oe==="text"?"lm_head":"gen_head"];if(!Le)throw new Error(`Unable to find "${Le}" generation head`);const Ue=await R(Le,(0,a.pick)(Ce,Le.inputNames));return{...fe,...Ce,...Ue}}async generate(D){return this._generation_mode="text",super.generate(D)}async generate_images(D){this._generation_mode="image";const oe=(D.inputs??D[this.main_input_name]).dims[1],me=(await super.generate(D)).slice(null,[oe,null]),Ce=this.sessions.image_decode,{decoded_image:Le}=await R(Ce,{generated_tokens:me}),Ue=Le.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Xe=[];for(const ht of Ue){const bt=f.RawImage.fromTensor(ht);Xe.push(bt)}return Xe}}class Mh extends be{constructor({char_logits:C,bpe_logits:D,wp_logits:oe}){super(),this.char_logits=C,this.bpe_logits=D,this.wp_logits=oe}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class bh extends W{}class yh extends bh{async _call(C){return new Mh(await super._call(C))}}class Tl extends W{}class vh extends Tl{}class xh extends Tl{}class El extends W{}class Th extends El{}class Eh extends El{}class Ph extends W{constructor(){super(...arguments);J(this,"forward_params",["input_ids","attention_mask","position_ids","audio_values","past_key_values"])}}class Pl extends Ph{_merge_input_ids_with_audio_features(C){const D=C.audio_features.dims.at(-1),oe=C.audio_features.view(-1,D);return U({audio_token_id:this.config.ignore_index??this.config.audio_token_id,...C,audio_features:oe})}}class Ch extends Pl{}class Li extends W{constructor(){super(...arguments);J(this,"main_input_name","input_values");J(this,"forward_params",["input_values"])}}class Sh extends be{constructor({audio_codes:C}){super(),this.audio_codes=C}}class $h extends be{constructor({audio_values:C}){super(),this.audio_values=C}}class kh extends Li{async encode(C){return new Sh(await R(this.sessions.encoder_model,C))}async decode(C){return new $h(await R(this.sessions.decoder_model,C))}}class Ih extends Li{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"encoder_model"})}}class Ah extends Li{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"decoder_model"})}}class zi extends W{constructor(){super(...arguments);J(this,"main_input_name","input_values");J(this,"forward_params",["input_values"])}}class Fh extends be{constructor({audio_codes:C}){super(),this.audio_codes=C}}class Oh extends be{constructor({audio_values:C}){super(),this.audio_values=C}}class Dh extends zi{async encode(C){return new Fh(await R(this.sessions.encoder_model,C))}async decode(C){return new Oh(await R(this.sessions.decoder_model,C))}}class Lh extends zi{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"encoder_model"})}}class zh extends zi{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"decoder_model"})}}class Bi extends W{constructor(){super(...arguments);J(this,"main_input_name","input_values");J(this,"forward_params",["input_values"])}}class Bh extends Bi{async encode(C){return await R(this.sessions.encoder_model,C)}async decode(C){return await R(this.sessions.decoder_model,C)}}class Rh extends Bi{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"encoder_model"})}}class jh extends Bi{static async from_pretrained(C,D={}){return super.from_pretrained(C,{...D,model_file_name:D.model_file_name??"decoder_model"})}}class Rt{static async from_pretrained(C,{progress_callback:D=null,config:oe=null,cache_dir:fe=null,local_files_only:me=!1,revision:Ce="main",model_file_name:Le=null,subfolder:Ue="onnx",device:Xe=null,dtype:ht=null,use_external_data_format:bt=null,session_options:yt={}}={}){const Ft={progress_callback:D,config:oe,cache_dir:fe,local_files_only:me,revision:Ce,model_file_name:Le,subfolder:Ue,device:Xe,dtype:ht,use_external_data_format:bt,session_options:yt};if(Ft.config=await s.AutoConfig.from_pretrained(C,Ft),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const _t=Ft.config.model_type;for(const $t of this.MODEL_CLASS_MAPPINGS){let ut=$t.get(_t);if(!ut){for(const At of $t.values())if(At[0]===_t){ut=At;break}if(!ut)continue}return await ut[1].from_pretrained(C,Ft)}if(this.BASE_IF_FAIL)return p_.has(_t)||console.warn(`Unknown model class "${_t}", attempting to construct from base class.`),await W.from_pretrained(C,Ft);throw Error(`Unsupported model type: ${_t}`)}}J(Rt,"MODEL_CLASS_MAPPINGS",null),J(Rt,"BASE_IF_FAIL",!1);const yv=new Map([["bert",["BertModel",Me]],["neobert",["NeoBertModel",xe]],["modernbert",["ModernBertModel",Ye]],["nomic_bert",["NomicBertModel",is]],["roformer",["RoFormerModel",Pr]],["electra",["ElectraModel",B]],["esm",["EsmModel",Ds]],["convbert",["ConvBertModel",$s]],["camembert",["CamembertModel",ft]],["deberta",["DebertaModel",jr]],["deberta-v2",["DebertaV2Model",as]],["mpnet",["MPNetModel",an]],["albert",["AlbertModel",qe]],["distilbert",["DistilBertModel",Zr]],["roberta",["RobertaModel",Yo]],["xlm",["XLMModel",ri]],["xlm-roberta",["XLMRobertaModel",ai]],["clap",["ClapModel",Hm]],["clip",["CLIPModel",go]],["clipseg",["CLIPSegModel",_n]],["chinese_clip",["ChineseCLIPModel",dt]],["siglip",["SiglipModel",vi]],["jina_clip",["JinaCLIPModel",vo]],["mobilebert",["MobileBertModel",Xt]],["squeezebert",["SqueezeBertModel",Y]],["wav2vec2",["Wav2Vec2Model",im]],["wav2vec2-bert",["Wav2Vec2BertModel",ym]],["unispeech",["UniSpeechModel",hm]],["unispeech-sat",["UniSpeechSatModel",gm]],["hubert",["HubertModel",Tm]],["wavlm",["WavLMModel",Cm]],["audio-spectrogram-transformer",["ASTModel",ci]],["vits",["VitsModel",Ml]],["pyannote",["PyAnnoteModel",um]],["wespeaker-resnet",["WeSpeakerResNetModel",mm]],["detr",["DetrModel",qd]],["rt_detr",["RTDetrModel",Jd]],["rt_detr_v2",["RTDetrV2Model",Zd]],["rf_detr",["RFDetrModel",rp]],["d_fine",["DFineModel",op]],["table-transformer",["TableTransformerModel",ap]],["vit",["ViTModel",bd]],["ijepa",["IJepaModel",vd]],["pvt",["PvtModel",Pd]],["vit_msn",["ViTMSNModel",kd]],["vit_mae",["ViTMAEModel",$d]],["groupvit",["GroupViTModel",Fd]],["fastvit",["FastViTModel",Od]],["mobilevit",["MobileViTModel",Bd]],["mobilevitv2",["MobileViTV2Model",jd]],["owlvit",["OwlViTModel",Vd]],["owlv2",["Owlv2Model",Wd]],["beit",["BeitModel",Kd]],["deit",["DeiTModel",up]],["hiera",["HieraModel",pp]],["convnext",["ConvNextModel",jp]],["convnextv2",["ConvNextV2Model",Vp]],["dinov2",["Dinov2Model",Wp]],["dinov2_with_registers",["Dinov2WithRegistersModel",Kp]],["resnet",["ResNetModel",hp]],["swin",["SwinModel",fp]],["swin2sr",["Swin2SRModel",Mp]],["donut-swin",["DonutSwinModel",Rp]],["yolos",["YolosModel",Xp]],["dpt",["DPTModel",yp]],["glpn",["GLPNModel",Lp]],["hifigan",["SpeechT5HifiGan",Lm]],["efficientnet",["EfficientNetModel",th]],["decision_transformer",["DecisionTransformerModel",fh]],["patchtst",["PatchTSTForPrediction",vh]],["patchtsmixer",["PatchTSMixerForPrediction",Th]],["mobilenet_v1",["MobileNetV1Model",sh]],["mobilenet_v2",["MobileNetV2Model",ih]],["mobilenet_v3",["MobileNetV3Model",ch]],["mobilenet_v4",["MobileNetV4Model",ph]],["maskformer",["MaskFormerModel",Op]],["mgp-str",["MgpstrForSceneTextRecognition",yh]],["style_text_to_speech_2",["StyleTextToSpeech2Model",Fm]]]),vv=new Map([["t5",["T5Model",Dt]],["longt5",["LongT5Model",_r]],["mt5",["MT5Model",fr]],["bart",["BartModel",Yt]],["mbart",["MBartModel",fs]],["marian",["MarianModel",rm]],["whisper",["WhisperModel",Xs]],["m2m_100",["M2M100Model",nm]],["blenderbot",["BlenderbotModel",mr]],["blenderbot-small",["BlenderbotSmallModel",Bs]]]),xv=new Map([["mimi",["MimiModel",kh]],["dac",["DacModel",Dh]],["snac",["SnacModel",Bh]]]),Tv=new Map([["bloom",["BloomModel",hd]],["jais",["JAISModel",Po]],["gpt2",["GPT2Model",To]],["gptj",["GPTJModel",ko]],["gpt_bigcode",["GPTBigCodeModel",m]],["gpt_neo",["GPTNeoModel",gn]],["gpt_neox",["GPTNeoXModel",So]],["codegen",["CodeGenModel",z]],["llama",["LlamaModel",Pe]],["arcee",["ArceeModel",it]],["lfm2",["Lfm2Model",Gt]],["smollm3",["SmolLM3Model",xi]],["exaone",["ExaoneModel",Bu]],["olmo",["OlmoModel",Vu]],["olmo2",["Olmo2Model",Wu]],["mobilellm",["MobileLLMModel",ju]],["granite",["GraniteModel",Ku]],["cohere",["CohereModel",qu]],["gemma",["GemmaModel",Xu]],["gemma2",["Gemma2Model",Yu]],["gemma3_text",["Gemma3Model",ed]],["helium",["HeliumModel",Ou]],["glm",["GlmModel",Lu]],["openelm",["OpenELMModel",rd]],["qwen2",["Qwen2Model",nd]],["qwen3",["Qwen3Model",id]],["phi",["PhiModel",ud]],["phi3",["Phi3Model",pd]],["mpt",["MptModel",fd]],["opt",["OPTModel",wd]],["mistral",["MistralModel",Rm]],["ernie4_5",["Ernie4_5_Model",Nm]],["starcoder2",["Starcoder2Model",Um]],["falcon",["FalconModel",Gm]],["stablelm",["StableLmModel",Zm]],["modernbert-decoder",["ModernBertDecoderModel",Mr]]]),Cl=new Map([["speecht5",["SpeechT5ForSpeechToText",Om]],["whisper",["WhisperForConditionalGeneration",mo]],["lite-whisper",["LiteWhisperForConditionalGeneration",ho]],["moonshine",["MoonshineForConditionalGeneration",ui]]]),Nh=new Map([["speecht5",["SpeechT5ForTextToSpeech",Dm]]]),Vh=new Map([["vits",["VitsModel",Ml]],["musicgen",["MusicgenForConditionalGeneration",xl]]]),Uh=new Map([["bert",["BertForSequenceClassification",we]],["neobert",["NeoBertForSequenceClassification",Ke]],["modernbert",["ModernBertForSequenceClassification",It]],["roformer",["RoFormerForSequenceClassification",Ws]],["electra",["ElectraForSequenceClassification",re]],["esm",["EsmForSequenceClassification",Re]],["convbert",["ConvBertForSequenceClassification",Ct]],["camembert",["CamembertForSequenceClassification",vt]],["deberta",["DebertaForSequenceClassification",rr]],["deberta-v2",["DebertaV2ForSequenceClassification",Is]],["mpnet",["MPNetForSequenceClassification",cn]],["albert",["AlbertForSequenceClassification",We]],["distilbert",["DistilBertForSequenceClassification",Or]],["roberta",["RobertaForSequenceClassification",Zo]],["xlm",["XLMForSequenceClassification",ni]],["xlm-roberta",["XLMRobertaForSequenceClassification",ao]],["bart",["BartForSequenceClassification",Gr]],["mbart",["MBartForSequenceClassification",ls]],["mobilebert",["MobileBertForSequenceClassification",hs]],["squeezebert",["SqueezeBertForSequenceClassification",de]]]),Wh=new Map([["bert",["BertForTokenClassification",Ae]],["neobert",["NeoBertForTokenClassification",nt]],["modernbert",["ModernBertForTokenClassification",St]],["roformer",["RoFormerForTokenClassification",Gs]],["electra",["ElectraForTokenClassification",ge]],["esm",["EsmForTokenClassification",je]],["convbert",["ConvBertForTokenClassification",Qt]],["camembert",["CamembertForTokenClassification",st]],["deberta",["DebertaForTokenClassification",Cr]],["deberta-v2",["DebertaV2ForTokenClassification",As]],["mpnet",["MPNetForTokenClassification",pe]],["distilbert",["DistilBertForTokenClassification",ms]],["roberta",["RobertaForTokenClassification",ei]],["xlm",["XLMForTokenClassification",oi]],["xlm-roberta",["XLMRobertaForTokenClassification",lo]]]),Sl=new Map([["t5",["T5ForConditionalGeneration",sr]],["longt5",["LongT5ForConditionalGeneration",br]],["mt5",["MT5ForConditionalGeneration",Dr]],["bart",["BartForConditionalGeneration",gr]],["mbart",["MBartForConditionalGeneration",kr]],["marian",["MarianMTModel",sm]],["m2m_100",["M2M100ForConditionalGeneration",om]],["blenderbot",["BlenderbotForConditionalGeneration",nr]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",zn]]]),$l=new Map([["bloom",["BloomForCausalLM",_d]],["gpt2",["GPT2LMHeadModel",Eo]],["jais",["JAISLMHeadModel",Co]],["gptj",["GPTJForCausalLM",Io]],["gpt_bigcode",["GPTBigCodeForCausalLM",E]],["gpt_neo",["GPTNeoForCausalLM",Kn]],["gpt_neox",["GPTNeoXForCausalLM",$o]],["codegen",["CodeGenForCausalLM",V]],["llama",["LlamaForCausalLM",De]],["arcee",["ArceeForCausalLM",xt]],["lfm2",["Lfm2ForCausalLM",yr]],["smollm3",["SmolLM3ForCausalLM",Fu]],["exaone",["ExaoneForCausalLM",Ru]],["olmo",["OlmoForCausalLM",Uu]],["olmo2",["Olmo2ForCausalLM",Gu]],["mobilellm",["MobileLLMForCausalLM",Nu]],["granite",["GraniteForCausalLM",Hu]],["cohere",["CohereForCausalLM",Qu]],["gemma",["GemmaForCausalLM",Ju]],["gemma2",["Gemma2ForCausalLM",Zu]],["gemma3_text",["Gemma3ForCausalLM",td]],["helium",["HeliumForCausalLM",Du]],["glm",["GlmForCausalLM",zu]],["openelm",["OpenELMForCausalLM",sd]],["qwen2",["Qwen2ForCausalLM",od]],["qwen3",["Qwen3ForCausalLM",ad]],["phi",["PhiForCausalLM",dd]],["phi3",["Phi3ForCausalLM",md]],["mpt",["MptForCausalLM",gd]],["opt",["OPTForCausalLM",Md]],["mbart",["MBartForCausalLM",cr]],["mistral",["MistralForCausalLM",jm]],["ernie4_5",["Ernie4_5_ForCausalLM",Vm]],["starcoder2",["Starcoder2ForCausalLM",Wm]],["falcon",["FalconForCausalLM",Km]],["trocr",["TrOCRForCausalLM",Bm]],["stablelm",["StableLmForCausalLM",eh]],["modernbert-decoder",["ModernBertDecoderForCausalLM",Er]],["phi3_v",["Phi3VForCausalLM",pn]]]),Ev=new Map([["multi_modality",["MultiModalityCausalLM",wh]]]),Gh=new Map([["bert",["BertForMaskedLM",Se]],["neobert",["NeoBertForMaskedLM",Ze]],["modernbert",["ModernBertForMaskedLM",ot]],["roformer",["RoFormerForMaskedLM",Us]],["electra",["ElectraForMaskedLM",q]],["esm",["EsmForMaskedLM",Wr]],["convbert",["ConvBertForMaskedLM",ks]],["camembert",["CamembertForMaskedLM",mt]],["deberta",["DebertaForMaskedLM",qr]],["deberta-v2",["DebertaV2ForMaskedLM",$r]],["mpnet",["MPNetForMaskedLM",ln]],["albert",["AlbertForMaskedLM",Mt]],["distilbert",["DistilBertForMaskedLM",hr]],["roberta",["RobertaForMaskedLM",io]],["xlm",["XLMWithLMHeadModel",si]],["xlm-roberta",["XLMRobertaForMaskedLM",li]],["mobilebert",["MobileBertForMaskedLM",Ls]],["squeezebert",["SqueezeBertForMaskedLM",le]]]),Kh=new Map([["bert",["BertForQuestionAnswering",Be]],["neobert",["NeoBertForQuestionAnswering",Je]],["roformer",["RoFormerForQuestionAnswering",Ks]],["electra",["ElectraForQuestionAnswering",Fe]],["convbert",["ConvBertForQuestionAnswering",S]],["camembert",["CamembertForQuestionAnswering",zt]],["deberta",["DebertaForQuestionAnswering",Sr]],["deberta-v2",["DebertaV2ForQuestionAnswering",Vr]],["mpnet",["MPNetForQuestionAnswering",I]],["albert",["AlbertForQuestionAnswering",tt]],["distilbert",["DistilBertForQuestionAnswering",pr]],["roberta",["RobertaForQuestionAnswering",ti]],["xlm",["XLMForQuestionAnswering",ii]],["xlm-roberta",["XLMRobertaForQuestionAnswering",co]],["mobilebert",["MobileBertForQuestionAnswering",zs]],["squeezebert",["SqueezeBertForQuestionAnswering",Te]]]),kl=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",un]],["idefics3",["Idefics3ForConditionalGeneration",dn]],["smolvlm",["SmolVLMForConditionalGeneration",fo]]]),Hh=new Map([["llava",["LlavaForConditionalGeneration",jn]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",di]],["moondream1",["Moondream1ForConditionalGeneration",pi]],["florence2",["Florence2ForConditionalGeneration",hi]],["qwen2-vl",["Qwen2VLForConditionalGeneration",cd]],["idefics3",["Idefics3ForConditionalGeneration",dn]],["smolvlm",["SmolVLMForConditionalGeneration",fo]],["paligemma",["PaliGemmaForConditionalGeneration",fi]],["llava_qwen2",["LlavaQwen2ForCausalLM",gi]],["gemma3n",["Gemma3nForConditionalGeneration",Js]]]),qh=new Map([["ultravox",["UltravoxModel",Pl]],["voxtral",["VoxtralForConditionalGeneration",Ch]]]),Pv=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",un]]]),Qh=new Map([["vit",["ViTForImageClassification",yd]],["ijepa",["IJepaForImageClassification",xd]],["pvt",["PvtForImageClassification",Cd]],["vit_msn",["ViTMSNForImageClassification",Id]],["fastvit",["FastViTForImageClassification",Dd]],["mobilevit",["MobileViTForImageClassification",Rd]],["mobilevitv2",["MobileViTV2ForImageClassification",Nd]],["beit",["BeitForImageClassification",Hd]],["deit",["DeiTForImageClassification",dp]],["hiera",["HieraForImageClassification",mp]],["convnext",["ConvNextForImageClassification",Np]],["convnextv2",["ConvNextV2ForImageClassification",Up]],["dinov2",["Dinov2ForImageClassification",Gp]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",Hp]],["resnet",["ResNetForImageClassification",_p]],["swin",["SwinForImageClassification",gp]],["segformer",["SegformerForImageClassification",Jm]],["efficientnet",["EfficientNetForImageClassification",rh]],["mobilenet_v1",["MobileNetV1ForImageClassification",nh]],["mobilenet_v2",["MobileNetV2ForImageClassification",ah]],["mobilenet_v3",["MobileNetV3ForImageClassification",uh]],["mobilenet_v4",["MobileNetV4ForImageClassification",mh]]]),Xh=new Map([["detr",["DetrForObjectDetection",Qd]],["rt_detr",["RTDetrForObjectDetection",Yd]],["rt_detr_v2",["RTDetrV2ForObjectDetection",ep]],["rf_detr",["RFDetrForObjectDetection",sp]],["d_fine",["DFineForObjectDetection",ip]],["table-transformer",["TableTransformerForObjectDetection",lp]],["yolos",["YolosForObjectDetection",Jp]]]),Jh=new Map([["owlvit",["OwlViTForObjectDetection",Ud]],["owlv2",["Owlv2ForObjectDetection",Gd]],["grounding-dino",["GroundingDinoForObjectDetection",Qp]]]),Xn=new Map([["detr",["DetrForSegmentation",Ha]],["clipseg",["CLIPSegForImageSegmentation",Un]]]),Yh=new Map([["segformer",["SegformerForSemanticSegmentation",Ym]],["sapiens",["SapiensForSemanticSegmentation",Ep]],["swin",["SwinForSemanticSegmentation",wp]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",oh]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",lh]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",dh]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",hh]]]),Zh=new Map([["detr",["DetrForSegmentation",Ha]],["maskformer",["MaskFormerForInstanceSegmentation",Dp]]]),e_=new Map([["sam",["SamModel",em]]]),t_=new Map([["wav2vec2",["Wav2Vec2ForCTC",am]],["wav2vec2-bert",["Wav2Vec2BertForCTC",vm]],["unispeech",["UniSpeechForCTC",_m]],["unispeech-sat",["UniSpeechSatForCTC",wm]],["wavlm",["WavLMForCTC",Sm]],["hubert",["HubertForCTC",Em]]]),r_=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",lm]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",xm]],["unispeech",["UniSpeechForSequenceClassification",fm]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Mm]],["wavlm",["WavLMForSequenceClassification",$m]],["hubert",["HubertForSequenceClassification",Pm]],["audio-spectrogram-transformer",["ASTForAudioClassification",po]]]),s_=new Map([["wavlm",["WavLMForXVector",km]]]),n_=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",bm]],["wavlm",["WavLMForAudioFrameClassification",Im]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",cm]],["pyannote",["PyAnnoteForAudioFrameClassification",dm]]]),o_=new Map([["vitmatte",["VitMatteForImageMatting",zd]]]),Cv=new Map([["patchtst",["PatchTSTForPrediction",xh]],["patchtsmixer",["PatchTSMixerForPrediction",Eh]]]),i_=new Map([["swin2sr",["Swin2SRForImageSuperResolution",bp]]]),a_=new Map([["dpt",["DPTForDepthEstimation",vp]],["depth_anything",["DepthAnythingForDepthEstimation",Tp]],["glpn",["GLPNForDepthEstimation",zp]],["sapiens",["SapiensForDepthEstimation",Pp]],["depth_pro",["DepthProForDepthEstimation",$p]],["metric3d",["Metric3DForDepthEstimation",Ip]],["metric3dv2",["Metric3Dv2ForDepthEstimation",Fp]]]),l_=new Map([["sapiens",["SapiensForNormalEstimation",Cp]]]),c_=new Map([["vitpose",["VitPoseForPoseEstimation",Ed]]]),u_=new Map([["clip",["CLIPVisionModelWithProjection",Mo]],["siglip",["SiglipVisionModel",yo]],["jina_clip",["JinaCLIPVisionModel",hn]]]),d_=[[yv,v.EncoderOnly],[vv,v.EncoderDecoder],[Tv,v.DecoderOnly],[xv,v.AutoEncoder],[Uh,v.EncoderOnly],[Wh,v.EncoderOnly],[Sl,v.Seq2Seq],[Cl,v.Seq2Seq],[$l,v.DecoderOnly],[Ev,v.MultiModality],[Gh,v.EncoderOnly],[Kh,v.EncoderOnly],[kl,v.Vision2Seq],[Hh,v.ImageTextToText],[qh,v.AudioTextToText],[Qh,v.EncoderOnly],[Xn,v.EncoderOnly],[Zh,v.EncoderOnly],[Yh,v.EncoderOnly],[o_,v.EncoderOnly],[Cv,v.EncoderOnly],[i_,v.EncoderOnly],[a_,v.EncoderOnly],[l_,v.EncoderOnly],[c_,v.EncoderOnly],[Xh,v.EncoderOnly],[Jh,v.EncoderOnly],[e_,v.MaskGeneration],[t_,v.EncoderOnly],[r_,v.EncoderOnly],[Nh,v.Seq2Seq],[Vh,v.EncoderOnly],[s_,v.EncoderOnly],[n_,v.EncoderOnly],[u_,v.EncoderOnly]];for(const[w,C]of d_)for(const[D,oe]of w.values())y.set(D,C),x.set(oe,D),T.set(D,oe);const Sv=[["MusicgenForConditionalGeneration",xl,v.Musicgen],["Phi3VForCausalLM",pn,v.Phi3V],["CLIPTextModelWithProjection",wo,v.EncoderOnly],["SiglipTextModel",bo,v.EncoderOnly],["JinaCLIPTextModel",xo,v.EncoderOnly],["ClapTextModelWithProjection",qm,v.EncoderOnly],["ClapAudioModelWithProjection",Qm,v.EncoderOnly],["DacEncoderModel",Lh,v.EncoderOnly],["DacDecoderModel",zh,v.EncoderOnly],["MimiEncoderModel",Ih,v.EncoderOnly],["MimiDecoderModel",Ah,v.EncoderOnly],["SnacEncoderModel",Rh,v.EncoderOnly],["SnacDecoderModel",jh,v.EncoderOnly],["Gemma3nForConditionalGeneration",Js,v.ImageAudioTextToText]];for(const[w,C,D]of Sv)y.set(w,D),x.set(C,w),T.set(w,C);const p_=new Map([["modnet",Xn],["birefnet",Xn],["isnet",Xn],["ben",Xn]]);for(const[w,C]of p_.entries())C.set(w,["PreTrainedModel",W]),y.set(w,v.EncoderOnly),x.set(W,w),T.set(w,W);class Il extends Rt{}J(Il,"MODEL_CLASS_MAPPINGS",d_.map(C=>C[0])),J(Il,"BASE_IF_FAIL",!0);class m_ extends Rt{}J(m_,"MODEL_CLASS_MAPPINGS",[Uh]);class h_ extends Rt{}J(h_,"MODEL_CLASS_MAPPINGS",[Wh]);class __ extends Rt{}J(__,"MODEL_CLASS_MAPPINGS",[Sl]);class f_ extends Rt{}J(f_,"MODEL_CLASS_MAPPINGS",[Cl]);class g_ extends Rt{}J(g_,"MODEL_CLASS_MAPPINGS",[Nh]);class w_ extends Rt{}J(w_,"MODEL_CLASS_MAPPINGS",[Vh]);class M_ extends Rt{}J(M_,"MODEL_CLASS_MAPPINGS",[$l]);class b_ extends Rt{}J(b_,"MODEL_CLASS_MAPPINGS",[Gh]);class y_ extends Rt{}J(y_,"MODEL_CLASS_MAPPINGS",[Kh]);class v_ extends Rt{}J(v_,"MODEL_CLASS_MAPPINGS",[kl]);class x_ extends Rt{}J(x_,"MODEL_CLASS_MAPPINGS",[Qh]);class T_ extends Rt{}J(T_,"MODEL_CLASS_MAPPINGS",[Xn]);class E_ extends Rt{}J(E_,"MODEL_CLASS_MAPPINGS",[Yh]);class P_ extends Rt{}J(P_,"MODEL_CLASS_MAPPINGS",[Zh]);class C_ extends Rt{}J(C_,"MODEL_CLASS_MAPPINGS",[Xh]);class S_ extends Rt{}J(S_,"MODEL_CLASS_MAPPINGS",[Jh]);class $_ extends Rt{}J($_,"MODEL_CLASS_MAPPINGS",[e_]);class k_ extends Rt{}J(k_,"MODEL_CLASS_MAPPINGS",[t_]);class I_ extends Rt{}J(I_,"MODEL_CLASS_MAPPINGS",[r_]);class A_ extends Rt{}J(A_,"MODEL_CLASS_MAPPINGS",[s_]);class F_ extends Rt{}J(F_,"MODEL_CLASS_MAPPINGS",[n_]);class O_ extends Rt{}J(O_,"MODEL_CLASS_MAPPINGS",[Pv]);class D_ extends Rt{}J(D_,"MODEL_CLASS_MAPPINGS",[o_]);class L_ extends Rt{}J(L_,"MODEL_CLASS_MAPPINGS",[i_]);class z_ extends Rt{}J(z_,"MODEL_CLASS_MAPPINGS",[a_]);class B_ extends Rt{}J(B_,"MODEL_CLASS_MAPPINGS",[l_]);class R_ extends Rt{}J(R_,"MODEL_CLASS_MAPPINGS",[c_]);class j_ extends Rt{}J(j_,"MODEL_CLASS_MAPPINGS",[u_]);class N_ extends Rt{}J(N_,"MODEL_CLASS_MAPPINGS",[Hh]);class V_ extends Rt{}J(V_,"MODEL_CLASS_MAPPINGS",[qh]);class $v extends be{constructor({logits:C,past_key_values:D,encoder_outputs:oe,decoder_attentions:fe=null,cross_attentions:me=null}){super(),this.logits=C,this.past_key_values=D,this.encoder_outputs=oe,this.decoder_attentions=fe,this.cross_attentions=me}}class Tt extends be{constructor({logits:C,...D}){super(),this.logits=C;const oe=Object.values(D);oe.length>0&&(this.attentions=oe)}}class U_ extends be{constructor({logits:C,embeddings:D}){super(),this.logits=C,this.embeddings=D}}class vr extends be{constructor({logits:C}){super(),this.logits=C}}class Ir extends be{constructor({logits:C}){super(),this.logits=C}}class Br extends be{constructor({start_logits:C,end_logits:D}){super(),this.start_logits=C,this.end_logits=D}}class Mn extends be{constructor({logits:C}){super(),this.logits=C}}class kv extends be{constructor({logits:C,past_key_values:D}){super(),this.logits=C,this.past_key_values=D}}class W_ extends be{constructor({alphas:C}){super(),this.alphas=C}}class G_ extends be{constructor({waveform:C,spectrogram:D}){super(),this.waveform=C,this.spectrogram=D}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var o=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,o.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=c,this.window=(0,o.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(a,l){return(0,o.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:l,transpose:!0})}async _call(a){(0,s.validate_audio_inputs)(a,"ASTFeatureExtractor");const l=await this._extract_fbank_features(a,this.config.max_length);if(this.config.do_normalize){const c=this.std*2,p=l.data;for(let d=0;d<p.length;++d)p[d]=(p[d]-this.mean)/c}return{input_values:l.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoFeatureExtractor:()=>i});var s=t("./src/utils/constants.js"),o=t("./src/utils/hub.js");t("./src/base/feature_extraction_utils.js");var n=t("./src/models/feature_extractors.js");class i{static async from_pretrained(l,c={}){const p=await(0,o.getModelJSON)(l,s.FEATURE_EXTRACTOR_NAME,!0,c),d=p.feature_extractor_type,u=n[d];if(!u)throw new Error(`Unknown feature_extractor_type: '${d}'. Please report this at ${s.GITHUB_ISSUE_URL}.`);return new u(p)}}},"./src/models/auto/image_processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoImageProcessor:()=>a});var s=t("./src/utils/constants.js"),o=t("./src/utils/hub.js"),n=t("./src/base/image_processors_utils.js"),i=t("./src/models/image_processors.js");class a{static async from_pretrained(c,p={}){const d=await(0,o.getModelJSON)(c,s.IMAGE_PROCESSOR_NAME,!0,p),u=d.image_processor_type??d.feature_extractor_type;let f=i[u==null?void 0:u.replace(/Fast$/,"")];return f||(u!==void 0&&console.warn(`Image processor type '${u}' not found, assuming base ImageProcessor. Please report this at ${s.GITHUB_ISSUE_URL}.`),f=n.ImageProcessor),new f(d)}}},"./src/models/auto/processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoProcessor:()=>c});var s=t("./src/utils/constants.js"),o=t("./src/utils/hub.js"),n=t("./src/base/processing_utils.js"),i=t("./src/models/processors.js"),a=t("./src/models/image_processors.js"),l=t("./src/models/feature_extractors.js");class c{static async from_pretrained(d,u={}){const f=await(0,o.getModelJSON)(d,s.IMAGE_PROCESSOR_NAME,!0,u),{image_processor_type:_,feature_extractor_type:b,processor_class:k}=f;if(k&&i[k])return i[k].from_pretrained(d,u);if(!_&&!b)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const g={};if(_){const $=a[_.replace(/Fast$/,"")];if(!$)throw new Error(`Unknown image_processor_type: '${_}'.`);g.image_processor=new $(f)}if(b){const $=a[b];if($)g.image_processor=new $(f);else{const v=l[b];if(!v)throw new Error(`Unknown feature_extractor_type: '${b}'.`);g.feature_extractor=new v(f)}}const M={};return new n.Processor(M,g,null)}}},"./src/models/beit/image_processing_beit.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,r,t)=>{t.r(r),t.d(r,{BitImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,r,t)=>{t.r(r),t.d(r,{ChineseCLIPFeatureExtractor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,r,t)=>{t.r(r),t.d(r,{ClapFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var o=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(a){super(a),this.mel_filters=(0,o.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,o.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,o.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(a,l,c,p){let d;const u=a.length-l;if(u>0)if(c==="rand_trunc"){const f=Math.floor(Math.random()*(u+1));a=a.subarray(f,f+l),d=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${c}" not implemented`);else{if(u<0){let f=new Float64Array(l);if(f.set(a),p==="repeat")for(let _=a.length;_<l;_+=a.length)f.set(a.subarray(0,Math.min(a.length,l-_)),_);else if(p==="repeatpad")for(let _=a.length;_<-u;_+=a.length)f.set(a,_);a=f}if(c==="fusion")throw new Error(`Truncation strategy "${c}" not implemented`);d=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}return d.unsqueeze_(0)}async _extract_fbank_features(a,l,c=null){return(0,o.spectrogram)(a,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:l,log_mel:"dB",max_num_frames:c,do_pad:!1,transpose:!0})}async _call(a,{max_length:l=null}={}){return(0,s.validate_audio_inputs)(a,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(a,l??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,r,t)=>{t.r(r),t.d(r,{CLIPFeatureExtractor:()=>n,CLIPImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/convnext/image_processing_convnext.js":(e,r,t)=>{t.r(r),t.d(r,{ConvNextFeatureExtractor:()=>n,ConvNextImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{constructor(a){super(a),this.crop_pct=this.config.crop_pct??224/256}async resize(a){var c;const l=(c=this.size)==null?void 0:c.shortest_edge;if(l===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(l<384){const p=Math.floor(l/this.crop_pct),[d,u]=this.get_resize_output_image_size(a,{shortest_edge:p});a=await a.resize(d,u,{resample:this.resample}),a=await a.center_crop(l,l)}else a=await a.resize(l,l,{resample:this.resample});return a}}class n extends o{}},"./src/models/dac/feature_extraction_dac.js":(e,r,t)=>{t.r(r),t.d(r,{DacFeatureExtractor:()=>o});var s=t("./src/models/encodec/feature_extraction_encodec.js");class o extends s.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(e,r,t)=>{t.r(r),t.d(r,{DeiTFeatureExtractor:()=>n,DeiTImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/detr/image_processing_detr.js":(e,r,t)=>{t.r(r),t.d(r,{DetrFeatureExtractor:()=>i,DetrImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(l){const c=await super._call(l),p=[c.pixel_values.dims[0],64,64],d=(0,o.full)(p,1n);return{...c,pixel_mask:d}}post_process_object_detection(...l){return(0,s.post_process_object_detection)(...l)}post_process_panoptic_segmentation(...l){return(0,s.post_process_panoptic_segmentation)(...l)}post_process_instance_segmentation(...l){return(0,s.post_process_instance_segmentation)(...l)}}class i extends n{}},"./src/models/donut/image_processing_donut.js":(e,r,t)=>{t.r(r),t.d(r,{DonutFeatureExtractor:()=>n,DonutImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{pad_image(a,l,c,p={}){const[d,u,f]=l;let _=this.image_mean;Array.isArray(this.image_mean)||(_=new Array(f).fill(_));let b=this.image_std;Array.isArray(b)||(b=new Array(f).fill(_));const k=_.map((g,M)=>-g/b[M]);return super.pad_image(a,l,c,{center:!0,constant_values:k,...p})}}class n extends o{}},"./src/models/dpt/image_processing_dpt.js":(e,r,t)=>{t.r(r),t.d(r,{DPTFeatureExtractor:()=>n,DPTImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,r,t)=>{t.r(r),t.d(r,{EfficientNetImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{constructor(i){super(i),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(a=>a*a))}}},"./src/models/encodec/feature_extraction_encodec.js":(e,r,t)=>{t.r(r),t.d(r,{EncodecFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"EncodecFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=this.config.feature_size;if(a.length%l!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${l}).`);const c=[1,l,a.length/l];return{input_values:new o.Tensor("float32",a,c)}}}},"./src/models/feature_extractors.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>s.ASTFeatureExtractor,ClapFeatureExtractor:()=>n.ClapFeatureExtractor,DacFeatureExtractor:()=>i.DacFeatureExtractor,EncodecFeatureExtractor:()=>o.EncodecFeatureExtractor,Gemma3nAudioFeatureExtractor:()=>a.Gemma3nAudioFeatureExtractor,ImageFeatureExtractor:()=>k.ImageProcessor,MoonshineFeatureExtractor:()=>l.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>c.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>p.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>d.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>u.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>f.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>_.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>b.WhisperFeatureExtractor});var s=t("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),o=t("./src/models/encodec/feature_extraction_encodec.js"),n=t("./src/models/clap/feature_extraction_clap.js"),i=t("./src/models/dac/feature_extraction_dac.js"),a=t("./src/models/gemma3n/feature_extraction_gemma3n.js"),l=t("./src/models/moonshine/feature_extraction_moonshine.js"),c=t("./src/models/pyannote/feature_extraction_pyannote.js"),p=t("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),d=t("./src/models/snac/feature_extraction_snac.js"),u=t("./src/models/speecht5/feature_extraction_speecht5.js"),f=t("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),_=t("./src/models/wespeaker/feature_extraction_wespeaker.js"),b=t("./src/models/whisper/feature_extraction_whisper.js"),k=t("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>i});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends s.Processor{constructor(l,c,p){super(l,c,p);const{tasks_answer_post_processing_type:d,task_prompts_without_inputs:u,task_prompts_with_input:f}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(d??{})),this.task_prompts_without_inputs=new Map(Object.entries(u??{})),this.task_prompts_with_input=new Map(Object.entries(f??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(l){typeof l=="string"&&(l=[l]);const c=[];for(const p of l)if(this.task_prompts_without_inputs.has(p))c.push(this.task_prompts_without_inputs.get(p));else{for(const[d,u]of this.task_prompts_with_input)if(p.includes(d)){c.push(u.replaceAll("{input}",p).replaceAll(d,""));break}c.length!==l.length&&c.push(p)}return c}post_process_generation(l,c,p){const d=this.tasks_answer_post_processing_type.get(c)??"pure_text";l=l.replaceAll("<s>","").replaceAll("</s>","");let u;switch(d){case"pure_text":u=l;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const f=d==="ocr"?"quad_boxes":"bboxes",_=l.matchAll(this.regexes[f]),b=[],k=[];for(const[g,M,...$]of _)b.push(M?M.trim():b.at(-1)??""),k.push($.map((v,y)=>(Number(v)+.5)/this.size_per_bin*p[y%2]));u={labels:b,[f]:k};break;default:throw new Error(`Task "${c}" (of type "${d}") not yet implemented.`)}return{[c]:u}}async _call(l,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const d=await this.image_processor(l,p),u=c?this.tokenizer(this.construct_prompts(c),p):{};return{...d,...u}}}J(i,"tokenizer_class",n.AutoTokenizer),J(i,"image_processor_class",o.AutoImageProcessor)},"./src/models/gemma3n/feature_extraction_gemma3n.js":(e,r,t)=>{t.r(r),t.d(r,{Gemma3nAudioFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/audio.js");class i extends s.FeatureExtractor{constructor(l){super(l);const{fft_length:c,feature_size:p,min_frequency:d,max_frequency:u,sampling_rate:f,frame_length:_}=this.config,b=(0,n.mel_filter_bank)(Math.floor(1+c/2),p,d,u,f,null,"htk",!1);this.mel_filters=b,this.window=(0,n.window_function)(_,"hann")}async _extract_fbank_features(l,c){return(0,n.spectrogram)(l,this.window,this.config.frame_length,this.config.hop_length,{fft_length:this.config.fft_length,center:!1,onesided:!0,preemphasis:this.config.preemphasis,preemphasis_htk_flavor:this.config.preemphasis_htk_flavor,mel_filters:this.mel_filters,log_mel:"log",mel_floor:this.config.mel_floor,remove_dc_offset:!1,transpose:!0})}async _call(l,{max_length:c=48e4,truncation:p=!0,padding:d=!0,pad_to_multiple_of:u=128}={}){if((0,s.validate_audio_inputs)(l,"Gemma3nAudioFeatureExtractor"),p&&l.length>c&&(l=l.slice(0,c)),d&&l.length%u!==0){const b=u-l.length%u,k=new Float64Array(l.length+b);k.set(l),this.config.padding_value!==0&&k.fill(this.config.padding_value,l.length),l=k}const f=await this._extract_fbank_features(l,this.config.max_length),_=(0,o.full)([1,f.dims[0]],!0);return{input_features:f.unsqueeze_(0),input_features_mask:_}}}},"./src/models/gemma3n/processing_gemma3n.js":(e,r,t)=>{t.r(r),t.d(r,{Gemma3nProcessor:()=>a});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/tokenizers.js");t("./src/utils/image.js"),t("./src/utils/audio.js");class a extends s.Processor{constructor(c,p,d){super(c,p,d),this.audio_seq_length=this.config.audio_seq_length,this.image_seq_length=this.config.image_seq_length;const{audio_token_id:u,boa_token:f,audio_token:_,eoa_token:b,image_token_id:k,boi_token:g,image_token:M,eoi_token:$}=this.tokenizer.config;this.audio_token_id=u,this.boa_token=f,this.audio_token=_;const v=_.repeat(this.audio_seq_length);this.full_audio_sequence=`

${f}${v}${b}

`,this.image_token_id=k,this.boi_token=g,this.image_token=M;const y=M.repeat(this.image_seq_length);this.full_image_sequence=`

${g}${y}${$}

`}async _call(c,p=null,d=null,u={}){typeof c=="string"&&(c=[c]);let f;d&&(f=await this.feature_extractor(d,u),c=c.map(k=>k.replaceAll(this.audio_token,this.full_audio_sequence)));let _;return p&&(_=await this.image_processor(p,u),c=c.map(k=>k.replaceAll(this.image_token,this.full_image_sequence))),{...this.tokenizer(c,u),..._,...f}}}J(a,"image_processor_class",o.AutoImageProcessor),J(a,"feature_extractor_class",n.AutoFeatureExtractor),J(a,"tokenizer_class",i.AutoTokenizer),J(a,"uses_processor_config",!0),J(a,"uses_chat_template_file",!0)},"./src/models/glpn/image_processing_glpn.js":(e,r,t)=>{t.r(r),t.d(r,{GLPNFeatureExtractor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(a){const l=await super._call(a),c=l.pixel_values.dims,p=(0,o.ones)([c[0],c[2],c[3]]);return{...l,pixel_mask:p}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoProcessor:()=>l});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/image_processors_utils.js");function a(c,p){const u=c.dims.at(-1)-1,f=c.tolist();f.fill(!1,0,1),f.fill(!1,u);const _=p.tolist();return f.map((b,k)=>b?k:null).filter(b=>b!==null).map(b=>_[b])}class l extends s.Processor{async _call(p,d,u={}){const f=p?await this.image_processor(p,u):{};return{...d?this.tokenizer(d,u):{},...f}}post_process_grounded_object_detection(p,d,{box_threshold:u=.25,text_threshold:f=.25,target_sizes:_=null}={}){const{logits:b,pred_boxes:k}=p,g=b.dims[0];if(_!==null&&_.length!==g)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const M=b.dims.at(1),$=b.sigmoid(),v=$.max(-1).tolist(),y=k.tolist().map(x=>x.map(P=>(0,i.center_to_corners_format)(P))),T=[];for(let x=0;x<g;++x){const P=_!==null?_[x]:null;P!==null&&(y[x]=y[x].map(R=>R.map((te,H)=>te*P[(H+1)%2])));const O=v[x],L=[],G=[],K=[];for(let R=0;R<M;++R){const te=O[R];if(te<=u)continue;const H=y[x][R],ee=$[x][R];L.push(te),K.push(H);const Z=a(ee.gt(f),d[x]);G.push(Z)}T.push({scores:L,boxes:K,labels:this.batch_decode(G)})}return T}}J(l,"tokenizer_class",n.AutoTokenizer),J(l,"image_processor_class",o.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends s.ImageProcessor{constructor(a){super(a),this.do_image_splitting=a.do_image_splitting??!0,this.max_image_size=a.max_image_size}get_resize_for_vision_encoder(a,l){let[c,p]=a.dims.slice(-2);const d=p/c;return p>=c?(p=Math.ceil(p/l)*l,c=Math.floor(p/d),c=Math.ceil(c/l)*l):(c=Math.ceil(c/l)*l,p=Math.floor(c*d),p=Math.ceil(p/l)*l),{height:c,width:p}}async _call(a,{do_image_splitting:l=null,return_row_col_info:c=!1}={}){let p;if(!Array.isArray(a))p=[[a]];else{if(a.length===0||!a[0])throw new Error("No images provided.");Array.isArray(a[0])?p=a:p=[a]}let d=[],u=[],f=[];const _=[],b=[];for(const x of p){let P=await Promise.all(x.map(G=>this.preprocess(G)));_.push(...P.map(G=>G.original_size)),b.push(...P.map(G=>G.reshaped_input_size)),P.forEach(G=>G.pixel_values.unsqueeze_(0));const{longest_edge:O}=this.max_image_size;let L;if(l??this.do_image_splitting){let G=new Array(P.length),K=new Array(P.length);L=await Promise.all(P.map(async(R,te)=>{const H=this.get_resize_for_vision_encoder(R.pixel_values,O),ee=await(0,o.interpolate_4d)(R.pixel_values,{size:[H.height,H.width]}),{frames:Z,num_splits_h:ne,num_splits_w:he}=await this.split_image(ee,this.max_image_size);return G[te]=ne,K[te]=he,(0,o.cat)(Z,0)})),u.push(G),f.push(K)}else{const G=[O,O];L=await Promise.all(P.map(K=>(0,o.interpolate_4d)(K.pixel_values,{size:G}))),u.push(new Array(P.length).fill(0)),f.push(new Array(P.length).fill(0))}d.push((0,o.cat)(L,0))}const k=d.length,[g,M,$,v]=d[0].dims;let y,T;if(k===1)y=d[0].unsqueeze_(0),T=(0,o.full)([k,g,$,v],!0);else{const x=Math.max(...d.map(L=>L.dims.at(0)));T=(0,o.full)([k,x,$,v],!0);const P=T.data,O=x*$*v;for(let L=0;L<k;++L){const G=d[L].dims[0];if(G<x){d[L]=(0,o.cat)([d[L],(0,o.full)([x-G,M,$,v],0)],0);const K=L*O+G*$*v,R=(L+1)*O;P.fill(!1,K,R)}}y=(0,o.stack)(d,0)}return{pixel_values:y,pixel_attention_mask:T,original_sizes:_,reshaped_input_sizes:b,...c?{rows:u,cols:f}:{}}}async split_image(a,{longest_edge:l}){const c=l,p=l,d=[],[u,f]=a.dims.slice(-2);let _=0,b=0;if(u>c||f>p){_=Math.ceil(u/c),b=Math.ceil(f/p);const k=Math.ceil(u/_),g=Math.ceil(f/b);for(let v=0;v<_;++v)for(let y=0;y<b;++y){let T,x,P,O;v===_-1?(x=u-k,O=u):(x=v*k,O=(v+1)*k),y===b-1?(T=f-g,P=f):(T=y*g,P=(y+1)*g);const L=[x,T],G=[O,P],K=await(0,o.slice)(a,L,G,[2,3]);d.push(K)}const M=c,$=p;(u!==M||f!==$)&&(a=await(0,o.interpolate_4d)(a,{size:[M,$]}))}return d.push(a),{frames:d,num_splits_h:_,num_splits_w:b}}}},"./src/models/idefics3/processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3Processor:()=>p});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");var i=t("./src/utils/core.js");function a(d,u,f,_,b,k){let g="";for(let M=0;M<u;++M){for(let $=0;$<f;++$)g+=_+`<row_${M+1}_col_${$+1}>`+b.repeat(d);g+=`
`}return g+=`
${_}${k}`+b.repeat(d)+`${_}`,g}function l(d,u,f,_){return`${u}${_}`+f.repeat(d)+`${u}`}function c(d,u,f,_,b,k){return d===0&&u===0?l(f,_,b,k):a(f,d,u,_,b,k)}class p extends s.Processor{constructor(){super(...arguments);J(this,"fake_image_token","<fake_token_around_image>");J(this,"image_token","<image>");J(this,"global_img_token","<global-img>")}async _call(f,_=null,b={}){b.return_row_col_info??(b.return_row_col_info=!0);let k;_&&(k=await this.image_processor(_,b)),Array.isArray(f)||(f=[f]);const g=k.rows??[new Array(f.length).fill(0)],M=k.cols??[new Array(f.length).fill(0)],$=this.config.image_seq_len,v=[],y=[];for(let x=0;x<f.length;++x){const P=f[x],O=g[x],L=M[x];v.push((0,i.count)(P,this.image_token));const G=O.map((te,H)=>c(te,L[H],$,this.fake_image_token,this.image_token,this.global_img_token)),K=P.split(this.image_token);if(K.length===0)throw new Error("The image token should be present in the text.");let R=K[0];for(let te=0;te<G.length;++te)R+=G[te]+K[te+1];y.push(R)}return{...this.tokenizer(y),...k}}}J(p,"image_processor_class",o.AutoImageProcessor),J(p,"tokenizer_class",n.AutoTokenizer),J(p,"uses_processor_config",!0)},"./src/models/image_processors.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>s.BeitFeatureExtractor,BitImageProcessor:()=>o.BitImageProcessor,CLIPFeatureExtractor:()=>i.CLIPFeatureExtractor,CLIPImageProcessor:()=>i.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>n.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>a.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>a.ConvNextImageProcessor,DPTFeatureExtractor:()=>d.DPTFeatureExtractor,DPTImageProcessor:()=>d.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>c.DetrFeatureExtractor,DetrImageProcessor:()=>c.DetrImageProcessor,DonutFeatureExtractor:()=>p.DonutFeatureExtractor,DonutImageProcessor:()=>p.DonutImageProcessor,EfficientNetImageProcessor:()=>u.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>f.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>_.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>b.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>g.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>M.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>$.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>v.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>v.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>y.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>y.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>T.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>T.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>x.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>x.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>P.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>P.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>O.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>O.MobileViTImageProcessor,NougatImageProcessor:()=>L.NougatImageProcessor,OwlViTFeatureExtractor:()=>K.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>K.OwlViTImageProcessor,Owlv2ImageProcessor:()=>G.Owlv2ImageProcessor,Phi3VImageProcessor:()=>R.Phi3VImageProcessor,PvtImageProcessor:()=>te.PvtImageProcessor,Qwen2VLImageProcessor:()=>H.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>ee.RTDetrImageProcessor,SamImageProcessor:()=>Z.SamImageProcessor,SegformerFeatureExtractor:()=>ne.SegformerFeatureExtractor,SegformerImageProcessor:()=>ne.SegformerImageProcessor,SiglipImageProcessor:()=>he.SiglipImageProcessor,SmolVLMImageProcessor:()=>ue.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>j.Swin2SRImageProcessor,VLMImageProcessor:()=>k.VLMImageProcessor,ViTFeatureExtractor:()=>F.ViTFeatureExtractor,ViTImageProcessor:()=>F.ViTImageProcessor,VitMatteImageProcessor:()=>U.VitMatteImageProcessor,VitPoseImageProcessor:()=>se.VitPoseImageProcessor,YolosFeatureExtractor:()=>_e.YolosFeatureExtractor,YolosImageProcessor:()=>_e.YolosImageProcessor});var s=t("./src/models/beit/image_processing_beit.js"),o=t("./src/models/bit/image_processing_bit.js"),n=t("./src/models/chinese_clip/image_processing_chinese_clip.js"),i=t("./src/models/clip/image_processing_clip.js"),a=t("./src/models/convnext/image_processing_convnext.js"),l=t("./src/models/deit/image_processing_deit.js"),c=t("./src/models/detr/image_processing_detr.js"),p=t("./src/models/donut/image_processing_donut.js"),d=t("./src/models/dpt/image_processing_dpt.js"),u=t("./src/models/efficientnet/image_processing_efficientnet.js"),f=t("./src/models/glpn/image_processing_glpn.js"),_=t("./src/models/grounding_dino/image_processing_grounding_dino.js"),b=t("./src/models/idefics3/image_processing_idefics3.js"),k=t("./src/models/janus/image_processing_janus.js"),g=t("./src/models/jina_clip/image_processing_jina_clip.js"),M=t("./src/models/llava_onevision/image_processing_llava_onevision.js"),$=t("./src/models/mask2former/image_processing_mask2former.js"),v=t("./src/models/maskformer/image_processing_maskformer.js"),y=t("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),T=t("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),x=t("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),P=t("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),O=t("./src/models/mobilevit/image_processing_mobilevit.js"),L=t("./src/models/nougat/image_processing_nougat.js"),G=t("./src/models/owlv2/image_processing_owlv2.js"),K=t("./src/models/owlvit/image_processing_owlvit.js"),R=t("./src/models/phi3_v/image_processing_phi3_v.js"),te=t("./src/models/pvt/image_processing_pvt.js"),H=t("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),ee=t("./src/models/rt_detr/image_processing_rt_detr.js"),Z=t("./src/models/sam/image_processing_sam.js"),ne=t("./src/models/segformer/image_processing_segformer.js"),he=t("./src/models/siglip/image_processing_siglip.js"),ue=t("./src/models/smolvlm/image_processing_smolvlm.js"),j=t("./src/models/swin2sr/image_processing_swin2sr.js"),F=t("./src/models/vit/image_processing_vit.js"),U=t("./src/models/vitmatte/image_processing_vitmatte.js"),se=t("./src/models/vitpose/image_processing_vitpose.js"),_e=t("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLMImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{constructor(i){super({do_pad:!0,pad_size:{width:i.image_size,height:i.image_size},...i}),this.constant_values=this.config.background_color.map(a=>a*this.rescale_factor)}pad_image(i,a,l,c){return super.pad_image(i,a,l,{constant_values:this.constant_values,center:!0,...c})}}},"./src/models/janus/processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLChatProcessor:()=>c});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/utils/core.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/image.js");class c extends s.Processor{constructor(d,u,f){super(d,u,f),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(d,{images:u=null,chat_template:f="default"}={}){u?Array.isArray(u)||(u=[u]):u=await Promise.all(d.filter(L=>L.images).flatMap(L=>L.images).map(L=>l.RawImage.read(L)));const _=this.tokenizer,b=_.apply_chat_template(d,{tokenize:!1,add_generation_prompt:!0,chat_template:f}),k=L=>_.encode(L,{add_special_tokens:!1}),g=b.split(this.image_tag),M=g.length-1;if(u.length!==M)throw new Error(`Number of images provided (${u.length}) does not match number of "${this.image_tag}" image tags (${M})`);const[$,v,y]=_.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let T=k(g[0]),x=new Array(T.length).fill(!1);for(let L=1;L<g.length;++L){const G=new Array(this.num_image_tokens).fill($),K=k(g[L]);T=(0,i.mergeArrays)(T,[v],G,[y],K);const R=new Array(this.num_image_tokens).fill(!0);x=(0,i.mergeArrays)(x,[!1],R,[!1],new Array(K.length).fill(!1))}const P=[1,T.length],O={input_ids:new a.Tensor("int64",T,P),attention_mask:new a.Tensor("int64",new Array(T.length).fill(1),P),images_seq_mask:new a.Tensor("bool",x,P),images_emb_mask:new a.Tensor("bool",new Array(M*this.num_image_tokens).fill(!0),[1,M,this.num_image_tokens])};if(u&&u.length>0){const L=await this.image_processor(u);return L.pixel_values.unsqueeze_(0),{...O,...L}}return O}}J(c,"image_processor_class",o.AutoImageProcessor),J(c,"tokenizer_class",n.AutoTokenizer),J(c,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{constructor(i){const{resize_mode:a,fill_color:l,interpolation:c,size:p,...d}=i,u=a==="squash"?{width:p,height:p}:a==="shortest"?{shortest_edge:p}:{longest_edge:p},f=c==="bicubic"?3:2;super({...d,size:u,resample:f,do_center_crop:!0,crop_size:p,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPProcessor:()=>i});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends s.Processor{async _call(l=null,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const d=l?this.tokenizer(l,p):{},u=c?await this.image_processor(c,p):{};return{...d,...u}}}J(i,"tokenizer_class",n.AutoTokenizer),J(i,"image_processor_class",o.AutoImageProcessor)},"./src/models/llava/processing_llava.js":(e,r,t)=>{t.r(r),t.d(r,{LlavaProcessor:()=>i});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends s.Processor{async _call(l,c=null,p={}){const d=await this.image_processor(l,p);if(c){const[f,_]=d.pixel_values.dims.slice(-2),{image_token:b,patch_size:k,num_additional_image_tokens:g}=this.config,M=Math.floor(f/k)*Math.floor(_/k)+g;c=structuredClone(c),Array.isArray(c)||(c=[c]);for(let $=0;$<c.length;++$)c[$]=c[$].replace(b,b.repeat(M))}const u=c?this.tokenizer(c,p):{};return{...d,...u}}}J(i,"tokenizer_class",n.AutoTokenizer),J(i,"image_processor_class",o.AutoImageProcessor),J(i,"uses_processor_config",!0)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,r,t)=>{t.r(r),t.d(r,{LlavaOnevisionImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,r,t)=>{t.r(r),t.d(r,{Mask2FormerImageProcessor:()=>o});var s=t("./src/models/maskformer/image_processing_maskformer.js");class o extends s.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,r,t)=>{t.r(r),t.d(r,{MaskFormerFeatureExtractor:()=>n,MaskFormerImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{post_process_panoptic_segmentation(...a){return(0,s.post_process_panoptic_segmentation)(...a)}post_process_instance_segmentation(...a){return(0,s.post_process_instance_segmentation)(...a)}}class n extends o{}},"./src/models/mgp_str/processing_mgp_str.js":(e,r,t)=>{t.r(r),t.d(r,{MgpstrProcessor:()=>l});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/utils/maths.js");const a={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends s.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(p,d){if(!a.hasOwnProperty(d))throw new Error(`Format ${d} is not supported.`);const[u,f]=a[d],_=this[u].bind(this),[b,k]=p.dims,g=[],M=[],$=p.tolist();for(let y=0;y<b;++y){const T=$[y],x=[],P=[];for(let L=1;L<k;++L){const[G,K]=(0,i.max)((0,i.softmax)(T[L]));if(P.push(G),K==f)break;x.push(K)}const O=P.length>0?P.reduce((L,G)=>L*G,1):0;M.push(x),g.push(O)}return[_(M),g]}char_decode(p){return this.char_tokenizer.batch_decode(p).map(d=>d.replaceAll(" ",""))}bpe_decode(p){return this.bpe_tokenizer.batch_decode(p)}wp_decode(p){return this.wp_tokenizer.batch_decode(p).map(d=>d.replaceAll(" ",""))}batch_decode([p,d,u]){const[f,_]=this._decode_helper(p,"char"),[b,k]=this._decode_helper(d,"bpe"),[g,M]=this._decode_helper(u,"wp"),$=[],v=[];for(let y=0;y<f.length;++y){const[T,x]=(0,i.max)([_[y],k[y],M[y]]);$.push([f[y],b[y],g[y]][x]),v.push(T)}return{generated_text:$,scores:v,char_preds:f,bpe_preds:b,wp_preds:g}}static async from_pretrained(...p){const d=await super.from_pretrained(...p),u=await n.AutoTokenizer.from_pretrained("Xenova/gpt2"),f=await n.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return d.components={image_processor:d.image_processor,char_tokenizer:d.tokenizer,bpe_tokenizer:u,wp_tokenizer:f},d}async _call(p,d=null){const u=await this.image_processor(p);return d&&(u.labels=this.tokenizer(d).input_ids),u}}J(l,"tokenizer_class",n.AutoTokenizer),J(l,"image_processor_class",o.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV1FeatureExtractor:()=>n,MobileNetV1ImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV2FeatureExtractor:()=>n,MobileNetV2ImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV3FeatureExtractor:()=>n,MobileNetV3ImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV4FeatureExtractor:()=>n,MobileNetV4ImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,r,t)=>{t.r(r),t.d(r,{MobileViTFeatureExtractor:()=>n,MobileViTImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"MoonshineFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=[1,a.length];return{input_values:new o.Tensor("float32",a,l)}}}},"./src/models/moonshine/processing_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}J(i,"tokenizer_class",o.AutoTokenizer),J(i,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(e,r,t)=>{t.r(r),t.d(r,{NougatImageProcessor:()=>o});var s=t("./src/models/donut/image_processing_donut.js");class o extends s.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,r,t)=>{t.r(r),t.d(r,{Owlv2ImageProcessor:()=>o});var s=t("./src/models/owlvit/image_processing_owlvit.js");class o extends s.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTFeatureExtractor:()=>n,OwlViTImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class n extends o{}},"./src/models/owlvit/processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTProcessor:()=>i});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class i extends s.Processor{}J(i,"tokenizer_class",n.AutoTokenizer),J(i,"image_processor_class",o.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(e,r,t)=>{t.r(r),t.d(r,{PaliGemmaProcessor:()=>l});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");const i="<image>";function a(c,p,d,u,f){return`${u.repeat(d*f)}${p}${c}
`}class l extends s.Processor{async _call(p,d=null,u={}){d||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),d=""),Array.isArray(p)||(p=[p]),Array.isArray(d)||(d=[d]);const f=this.tokenizer.bos_token,_=this.image_processor.config.image_seq_length;let b;d.some(M=>M.includes(i))?b=d.map(M=>{const $=M.replaceAll(i,i.repeat(_)),v=$.lastIndexOf(i),y=v===-1?0:v+i.length;return $.slice(0,y)+f+$.slice(y)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),b=d.map(M=>a(M,f,_,i,p.length)));const k=this.tokenizer(b,u);return{...await this.image_processor(p,u),...k}}}J(l,"tokenizer_class",n.AutoTokenizer),J(l,"image_processor_class",o.AutoImageProcessor),J(l,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VImageProcessor:()=>p});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");const n=336,i=[2,3],{ceil:a,floor:l,sqrt:c}=Math;class p extends s.ImageProcessor{constructor(u){super({...u,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=u.num_crops}calc_num_image_tokens_from_image_size(u,f){const{num_img_tokens:_}=this.config;return l((l(f/n)*l(u/n)+1)*_+1+(l(f/n)+1)*c(_))}get_resize_output_image_size(u,f){const _=this._num_crops,[b,k]=u.size;let g=b/k,M=1;for(;M*Math.ceil(M/g)<=_;)M+=1;M-=1;const $=Math.floor(M*336),v=Math.floor($/g);return[$,v]}pad_image(u,f,_,b={}){const[k,g]=f,M=n*a(k/n),$=n*a(g/n),v=[1,1,1].map((y,T)=>(y-this.image_mean[T])/this.image_std[T]);return super.pad_image(u,f,{width:$,height:M},{center:!0,constant_values:v,...b})}async _call(u,{num_crops:f=null}={}){if(this._num_crops=f??(f=this.config.num_crops),f<4||c(f)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(u)||(u=[u]);const _=u.length,b=await Promise.all(u.map(x=>this.preprocess(x))),k=b.map(x=>x.original_size),g=b.map(x=>x.reshaped_input_size),M=[];for(const{pixel_values:x}of b){x.unsqueeze_(0);const[P,O]=x.dims.slice(-2),L=await(0,o.interpolate_4d)(x,{size:[n,n],mode:"bicubic"});if(f>0){const G=[],K=c(f),R=l(O/K),te=l(P/K);for(let ee=0;ee<K;++ee)for(let Z=0;Z<K;++Z){let ne,he,ue,j;ee===K-1?(he=P-te,j=P):(he=ee*te,j=(ee+1)*te),Z===K-1?(ne=O-R,ue=O):(ne=Z*R,ue=(Z+1)*R);const F=[he,ne],U=[j,ue],se=await(0,o.slice)(x,F,U,i);G.push(se)}const H=await(0,o.interpolate_4d)((0,o.cat)(G,0),{size:[n,n],mode:"bicubic"});M.push((0,o.cat)([L,H],0))}else M.push(L)}const $=(0,o.stack)(M,0),v=g.map(x=>x.map(P=>n*a(P/n))),y=new o.Tensor("int64",v.flat(),[_,2]),T=v.map(([x,P])=>this.calc_num_image_tokens_from_image_size(P,x));return{pixel_values:$,original_sizes:k,reshaped_input_sizes:g,image_sizes:y,num_img_tokens:T}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VProcessor:()=>l});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");const i="<|image|>",a=/<\|image_\d+\|>/g;class l extends s.Processor{async _call(p,d=null,{padding:u=!0,truncation:f=!0,num_crops:_=null}={}){Array.isArray(p)||(p=[p]);let b,k;if(d){k=await this.image_processor(d,{num_crops:_});const{num_img_tokens:g}=k,M=p.map((v,y)=>v.split(a).join(i.repeat(g[y])));b=this.tokenizer(M,{padding:u,truncation:f});const $=this.tokenizer.model.convert_tokens_to_ids([i])[0];b.input_ids.map_(v=>v==$?-v:v)}else b=this.tokenizer(p);return{...b,...k}}}J(l,"image_processor_class",o.AutoImageProcessor),J(l,"tokenizer_class",n.AutoTokenizer)},"./src/models/processors.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>s.Florence2Processor,Gemma3nProcessor:()=>o.Gemma3nProcessor,GroundingDinoProcessor:()=>n.GroundingDinoProcessor,Idefics3Processor:()=>i.Idefics3Processor,JinaCLIPProcessor:()=>l.JinaCLIPProcessor,LlavaProcessor:()=>c.LlavaProcessor,MgpstrProcessor:()=>p.MgpstrProcessor,MoonshineProcessor:()=>d.MoonshineProcessor,OwlViTProcessor:()=>u.OwlViTProcessor,PaliGemmaProcessor:()=>_.PaliGemmaProcessor,Phi3VProcessor:()=>f.Phi3VProcessor,PyAnnoteProcessor:()=>b.PyAnnoteProcessor,Qwen2VLProcessor:()=>k.Qwen2VLProcessor,SamProcessor:()=>g.SamProcessor,SmolVLMProcessor:()=>M.SmolVLMProcessor,SpeechT5Processor:()=>$.SpeechT5Processor,UltravoxProcessor:()=>v.UltravoxProcessor,VLChatProcessor:()=>a.VLChatProcessor,VoxtralProcessor:()=>y.VoxtralProcessor,Wav2Vec2Processor:()=>T.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>x.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>P.WhisperProcessor});var s=t("./src/models/florence2/processing_florence2.js"),o=t("./src/models/gemma3n/processing_gemma3n.js"),n=t("./src/models/grounding_dino/processing_grounding_dino.js"),i=t("./src/models/idefics3/processing_idefics3.js"),a=t("./src/models/janus/processing_janus.js"),l=t("./src/models/jina_clip/processing_jina_clip.js"),c=t("./src/models/llava/processing_llava.js"),p=t("./src/models/mgp_str/processing_mgp_str.js"),d=t("./src/models/moonshine/processing_moonshine.js"),u=t("./src/models/owlvit/processing_owlvit.js"),f=t("./src/models/phi3_v/processing_phi3_v.js"),_=t("./src/models/paligemma/processing_paligemma.js"),b=t("./src/models/pyannote/processing_pyannote.js"),k=t("./src/models/qwen2_vl/processing_qwen2_vl.js"),g=t("./src/models/sam/processing_sam.js"),M=t("./src/models/smolvlm/processing_smolvlm.js"),$=t("./src/models/speecht5/processing_speecht5.js"),v=t("./src/models/ultravox/processing_ultravox.js"),y=t("./src/models/voxtral/processing_voxtral.js"),T=t("./src/models/wav2vec2/processing_wav2vec2.js"),x=t("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),P=t("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,r,t)=>{t.r(r),t.d(r,{PvtImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");class i extends s.FeatureExtractor{async _call(l){(0,s.validate_audio_inputs)(l,"PyAnnoteFeatureExtractor"),l instanceof Float64Array&&(l=new Float32Array(l));const c=[1,1,l.length];return{input_values:new o.Tensor("float32",l,c)}}samples_to_frames(l){return(l-this.config.offset)/this.config.step}post_process_speaker_diarization(l,c){const p=c/this.samples_to_frames(c)/this.config.sampling_rate,d=[];for(const u of l.tolist()){const f=[];let _=-1;for(let b=0;b<u.length;++b){const k=(0,n.softmax)(u[b]),[g,M]=(0,n.max)(k),[$,v]=[b,b+1];M!==_?(_=M,f.push({id:M,start:$,end:v,score:g})):(f.at(-1).end=v,f.at(-1).score+=g)}d.push(f.map(({id:b,start:k,end:g,score:M})=>({id:b,start:k*p,end:g*p,confidence:M/(g-k)})))}return d}}},"./src/models/pyannote/processing_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteProcessor:()=>n});var s=t("./src/base/processing_utils.js"),o=t("./src/models/pyannote/feature_extraction_pyannote.js");class n extends s.Processor{async _call(a){return await this.feature_extractor(a)}post_process_speaker_diarization(...a){return this.feature_extractor.post_process_speaker_diarization(...a)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}J(n,"feature_extractor_class",o.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(a,...l){const{pixel_values:c,original_sizes:p,reshaped_input_sizes:d}=await super._call(a,...l);let u=c;const{temporal_patch_size:f,merge_size:_,patch_size:b}=this.config;u.dims[0]===1&&(u=(0,o.cat)(Array.from({length:f},()=>u),0));const k=u.dims[0]/f,g=u.dims[1],M=Math.floor(u.dims[2]/b),$=Math.floor(u.dims[3]/b),v=u.view(k,f,g,Math.floor(M/_),_,b,Math.floor($/_),_,b).permute(0,3,6,4,7,2,1,5,8).view(k*M*$,g*f*b*b),y=new o.Tensor("int64",[k,M,$],[1,3]);return{pixel_values:v,image_grid_thw:y,original_sizes:p,reshaped_input_sizes:d}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLProcessor:()=>i});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");class i extends s.Processor{async _call(l,c=null,...p){Array.isArray(l)||(l=[l]);let d,u;if(c&&(d=await this.image_processor(c),u=d.image_grid_thw),u){let _=this.image_processor.config.merge_size**2,b=0;const k=u.tolist();l=l.map(g=>{for(;g.includes("<|image_pad|>");){const M=Number(k[b++].reduce(($,v)=>$*v,1n));g=g.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(M/_)))}return g.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(l),...d}}}J(i,"image_processor_class",o.AutoImageProcessor),J(i,"tokenizer_class",n.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(e,r,t)=>{t.r(r),t.d(r,{RTDetrImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{post_process_object_detection(...i){return(0,s.post_process_object_detection)(...i)}}},"./src/models/sam/image_processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/core.js"),n=t("./src/utils/tensor.js");class i extends s.ImageProcessor{reshape_input_points(l,c,p,d=!1){l=structuredClone(l);let u=(0,o.calculateDimensions)(l);if(u.length===3)d||(u=[1,...u]),l=[l];else if(u.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let f=0;f<l.length;++f){let _=c[f],b=p[f],k=[b[0]/_[0],b[1]/_[1]];for(let g=0;g<l[f].length;++g)for(let M=0;M<l[f][g].length;++M)for(let $=0;$<l[f][g][M].length;++$)l[f][g][M][$]*=k[$%2]}return new n.Tensor("float32",Float32Array.from(l.flat(1/0)),u)}add_input_labels(l,c){let p=(0,o.calculateDimensions)(l);if(p.length===2)p=[1,...p],l=[l];else if(p.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(p.some((d,u)=>d!==c.dims[u]))throw Error(`The first ${p.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new n.Tensor("int64",l.flat(1/0).map(BigInt),p)}async _call(l,{input_points:c=null,input_labels:p=null,input_boxes:d=null}={}){const u=await super._call(l);if(c&&(u.input_points=this.reshape_input_points(c,u.original_sizes,u.reshaped_input_sizes)),p){if(!u.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");u.input_labels=this.add_input_labels(p,u.input_points)}return d&&(u.input_boxes=this.reshape_input_points(d,u.original_sizes,u.reshaped_input_sizes,!0)),u}async post_process_masks(l,c,p,{mask_threshold:d=0,binarize:u=!0,pad_size:f=null}={}){const _=[];f=f??this.pad_size;const b=[f.height,f.width];for(let k=0;k<c.length;++k){const g=c[k],M=p[k];let $=await(0,n.interpolate_4d)(l[k],{mode:"bilinear",size:b});if($=$.slice(null,null,[0,M[0]],[0,M[1]]),$=await(0,n.interpolate_4d)($,{mode:"bilinear",size:g}),u){const v=$.data,y=new Uint8Array(v.length);for(let T=0;T<v.length;++T)v[T]>d&&(y[T]=1);$=new n.Tensor("bool",y,$.dims)}_.push($)}return _}generate_crop_boxes(l,c,{crop_n_layers:p=0,overlap_ratio:d=512/1500,points_per_crop:u=32,crop_n_points_downscale_factor:f=1}={}){}}},"./src/models/sam/processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamProcessor:()=>n});var s=t("./src/base/processing_utils.js"),o=t("./src/models/auto/image_processing_auto.js");class n extends s.Processor{async _call(...a){return await this.image_processor(...a)}post_process_masks(...a){return this.image_processor.post_process_masks(...a)}reshape_input_points(...a){return this.image_processor.reshape_input_points(...a)}}J(n,"image_processor_class",o.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,r,t)=>{t.r(r),t.d(r,{SeamlessM4TFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js"),n=t("./src/utils/audio.js");class i extends s.FeatureExtractor{constructor(l){super(l);const c=this.config.sampling_rate,p=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(c/2),c,null,"kaldi",!0);this.mel_filters=p,this.window=(0,n.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(l,c){return l=l.map(p=>p*32768),(0,n.spectrogram)(l,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:c,transpose:!0})}async _call(l,{padding:c=!0,pad_to_multiple_of:p=2,do_normalize_per_mel_bins:d=!0,return_attention_mask:u=!0}={}){(0,s.validate_audio_inputs)(l,"SeamlessM4TFeatureExtractor");let f=await this._extract_fbank_features(l,this.config.max_length);if(d){const[y,T]=f.dims,x=f.data;for(let P=0;P<T;++P){let O=0;for(let R=0;R<y;++R)O+=x[R*T+P];const L=O/y;let G=0;for(let R=0;R<y;++R)G+=(x[R*T+P]-L)**2;G/=y-1;const K=Math.sqrt(G+1e-7);for(let R=0;R<y;++R){const te=R*T+P;x[te]=(x[te]-L)/K}}}let _;if(c){const[y,T]=f.dims,x=f.data,P=y%p;if(P>0){const O=new Float32Array(T*(y+P));O.set(x),O.fill(this.config.padding_value,x.length);const L=y+P;f=new o.Tensor(f.type,O,[L,T]),u&&(_=new o.Tensor("int64",new BigInt64Array(L),[1,L]),_.data.fill(1n,0,y))}}const[b,k]=f.dims,g=this.config.stride;if(b%g!==0)throw new Error(`The number of frames (${b}) must be a multiple of the stride (${g}).`);const $=f.view(1,Math.floor(b/g),k*g),v={input_features:$};if(u){const y=$.dims[1],T=new BigInt64Array(y);if(_){const x=_.data;for(let P=1,O=0;P<b;P+=g,++O)T[O]=x[P]}else T.fill(1n);v.attention_mask=new o.Tensor("int64",T,[1,y])}return v}}},"./src/models/segformer/image_processing_segformer.js":(e,r,t)=>{t.r(r),t.d(r,{SegformerFeatureExtractor:()=>n,SegformerImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{post_process_semantic_segmentation(...a){return(0,s.post_process_semantic_segmentation)(...a)}}class n extends o{}},"./src/models/siglip/image_processing_siglip.js":(e,r,t)=>{t.r(r),t.d(r,{SiglipImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMImageProcessor:()=>s.Idefics3ImageProcessor});var s=t("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMProcessor:()=>s.Idefics3Processor});var s=t("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(e,r,t)=>{t.r(r),t.d(r,{SnacFeatureExtractor:()=>o});var s=t("./src/models/dac/feature_extraction_dac.js");class o extends s.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5FeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js");class o extends s.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5Processor:()=>i});var s=t("./src/base/processing_utils.js"),o=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js");class i extends s.Processor{async _call(l){return await this.feature_extractor(l)}}J(i,"tokenizer_class",o.AutoTokenizer),J(i,"feature_extractor_class",n.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(e,r,t)=>{t.r(r),t.d(r,{Swin2SRImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{pad_image(i,a,l,c={}){const[p,d,u]=a;return super.pad_image(i,a,{width:d+(l-d%l)%l,height:p+(l-p%l)%l},{mode:"symmetric",center:!1,constant_values:-1,...c})}}},"./src/models/ultravox/processing_ultravox.js":(e,r,t)=>{t.r(r),t.d(r,{UltravoxProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l,c=null,p={}){if(Array.isArray(l))throw new Error("Batched inputs are not supported yet.");let d={};if(c){const f=c.length,{input_features:_}=await this.feature_extractor(c,{...p,max_length:f}),b=Math.round(f/this.config.encoder_ds_factor+1e-4),k=1+Math.ceil(b/this.config.stack_factor);d.audio_token_len=[k],d.audio_values=_;const g=this.config.audio_placeholder;if(!l.includes(g))throw new Error(`The input text does not contain the image token ${g}.`);l=l.replaceAll(g,g.repeat(k))}return{...this.tokenizer(l,{add_special_tokens:!1,...p}),...d}}}J(i,"tokenizer_class",o.AutoTokenizer),J(i,"feature_extractor_class",s.AutoFeatureExtractor),J(i,"uses_processor_config",!0)},"./src/models/vit/image_processing_vit.js":(e,r,t)=>{t.r(r),t.d(r,{ViTFeatureExtractor:()=>n,ViTImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{}class n extends o{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,r,t)=>{t.r(r),t.d(r,{VitMatteImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),o=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(a,l){Array.isArray(a)||(a=[a]),Array.isArray(l)||(l=[l]);const c=await Promise.all(a.map(u=>this.preprocess(u))),p=await Promise.all(l.map(u=>this.preprocess(u,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,o.stack)(c.map((u,f)=>(0,o.cat)([u.pixel_values,p[f].pixel_values],0)),0),original_sizes:c.map(u=>u.original_size),reshaped_input_sizes:c.map(u=>u.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,r,t)=>{t.r(r),t.d(r,{VitPoseImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{post_process_pose_estimation(i,a,{threshold:l=null}={}){const c=i.tolist(),[p,d,u,f]=i.dims,_=[];for(let b=0;b<p;++b){const k=c[b],g=a[b],M=[];for(let $=0;$<g.length;++$){const v=g[$],y=[],T=[],x=[],P=v.at(-2)/f,O=v.at(-1)/u;for(let L=0;L<k.length;++L){let[G,K]=[0,0],R=0,te=-1/0;const H=k[L];for(let Z=0;Z<H.length;++Z){const ne=H[Z];for(let he=0;he<ne.length;++he){const ue=ne[he];R+=ue,te=Math.max(te,ue),G+=(he+.5)*ue,K+=Z*ue}}if(l!=null&&te<l)continue;const ee=[P*G/R,O*K/R];y.push(ee),x.push(L),T.push(te)}M.push({bbox:v,scores:T,labels:x,keypoints:y})}_.push(M)}return _}}},"./src/models/voxtral/processing_voxtral.js":(e,r,t)=>{t.r(r),t.d(r,{VoxtralProcessor:()=>d});var s=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js"),i=t("./src/utils/tensor.js");const a="[AUDIO]",l="[BEGIN_AUDIO]",c=375;function p(u,f){const _=[];for(let b=0;b<u.length;b+=f)_.push(u.subarray(b,Math.min(b+f,u.length)));return _}class d extends n.Processor{async _call(f,_=null,b={}){if(Array.isArray(f))throw new Error("Batched inputs are not supported yet.");const k={};if(_){if(!f.includes(a))throw new Error(`The input text does not contain the audio token ${a}.`);Array.isArray(_)||(_=[_]);const M=f.split(a),$=M.length-1;if($!==_.length)throw new Error(`The number of audio inputs (${_.length}) does not match the number of audio tokens in the text (${$}).`);const v=this.feature_extractor.config.n_samples,y=_.map(L=>p(L,v)),T=y.map(L=>L.length),x=y.flat(),P=(await Promise.all(x.map(L=>this.feature_extractor(L,b)))).map(L=>L.input_features);k.audio_values=P.length>1?(0,i.cat)(P,0):P[0];let O=M[0];for(let L=0;L<T.length;++L){O+=l;for(let G=0;G<T[L];++G)O+=a.repeat(c);O+=M[L+1]}f=O}return{...this.tokenizer(f,{add_special_tokens:!1,...b}),...k}}}J(d,"tokenizer_class",o.AutoTokenizer),J(d,"feature_extractor_class",s.AutoFeatureExtractor),J(d,"uses_processor_config",!1)},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2FeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),o=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{_zero_mean_unit_var_norm(a){const c=a.reduce((d,u)=>d+u,0)/a.length,p=a.reduce((d,u)=>d+(u-c)**2,0)/a.length;return a.map(d=>(d-c)/Math.sqrt(p+1e-7))}async _call(a){(0,s.validate_audio_inputs)(a,"Wav2Vec2FeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));let l=a;this.config.do_normalize&&(l=this._zero_mean_unit_var_norm(l));const c=[1,l.length];return{input_values:new o.Tensor("float32",l,c),attention_mask:new o.Tensor("int64",new BigInt64Array(l.length).fill(1n),c)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2Processor:()=>i});var s=t("./src/tokenizers.js"),o=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}J(i,"tokenizer_class",s.AutoTokenizer),J(i,"feature_extractor_class",o.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2ProcessorWithLM:()=>i});var s=t("./src/tokenizers.js"),o=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}J(i,"tokenizer_class",s.AutoTokenizer),J(i,"feature_extractor_class",o.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,r,t)=>{t.r(r),t.d(r,{WeSpeakerFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var o=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,o.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=c,this.window=(0,o.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(a){return a=a.map(l=>l*32768),(0,o.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(a){(0,s.validate_audio_inputs)(a,"WeSpeakerFeatureExtractor");const l=(await this._extract_fbank_features(a)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const c=l.mean(1).data,p=l.data,[d,u,f]=l.dims;for(let _=0;_<d;++_){const b=_*u*f,k=_*f;for(let g=0;g<u;++g){const M=b+g*f;for(let $=0;$<f;++$)p[M+$]-=c[k+$]}}}return{input_features:l}}}},"./src/models/whisper/common_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WHISPER_LANGUAGE_MAPPING:()=>o,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>n,whisper_language_to_code:()=>i});const s=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],o=new Map(s),n=new Map([...s.map(([a,l])=>[l,a]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function i(a){a=a.toLowerCase();let l=n.get(a);if(l===void 0){const c=a.match(/^<\|([a-z]{2})\|>$/);if(c&&(a=c[1]),o.has(a))l=a;else{const d=a.length===2?o.keys():o.values();throw new Error(`Language "${a}" is not supported. Must be one of: ${JSON.stringify(Array.from(d))}`)}}return l}},"./src/models/whisper/feature_extraction_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var o=t("./src/utils/audio.js"),n=t("./src/utils/maths.js");class i extends s.FeatureExtractor{constructor(l){var c;super(l),(c=this.config).mel_filters??(c.mel_filters=(0,o.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,o.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(l){const c=await(0,o.spectrogram)(l,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(l.length/this.config.hop_length),this.config.nb_max_frames)}),p=c.data,d=(0,n.max)(p)[0];for(let u=0;u<p.length;++u)p[u]=(Math.max(p[u],d-8)+4)/4;return c}async _call(l,{max_length:c=null}={}){(0,s.validate_audio_inputs)(l,"WhisperFeatureExtractor");let p;const d=c??this.config.n_samples;return l.length>d?(l.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),p=l.slice(0,d)):(p=new Float32Array(d),p.set(l)),{input_features:(await this._extract_fbank_features(p)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperGenerationConfig:()=>o});var s=t("./src/generation/configuration_utils.js");class o extends s.GenerationConfig{constructor(){super(...arguments);J(this,"return_timestamps",null);J(this,"return_token_timestamps",null);J(this,"num_frames",null);J(this,"alignment_heads",null);J(this,"task",null);J(this,"language",null);J(this,"no_timestamps_token_id",null);J(this,"prompt_ids",null);J(this,"is_multilingual",null);J(this,"lang_to_id",null);J(this,"task_to_id",null);J(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperProcessor:()=>i});var s=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class i extends n.Processor{async _call(l){return await this.feature_extractor(l)}}J(i,"tokenizer_class",o.AutoTokenizer),J(i,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(e,r,t)=>{t.r(r),t.d(r,{YolosFeatureExtractor:()=>n,YolosImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js");class o extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class n extends o{}},"./src/ops/registry.js":(e,r,t)=>{t.r(r),t.d(r,{TensorOpRegistry:()=>l});var s=t("./src/backends/onnx.js"),o=t("./src/utils/tensor.js"),n=t("./src/env.js");const i=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV,a=async(c,p,d)=>{const u=await(0,s.createInferenceSession)(new Uint8Array(c),p);let f=Promise.resolve();return async _=>{const b=(0,s.isONNXProxy)(),k=Object.fromEntries(Object.entries(_).map(([M,$])=>[M,(b?$.clone():$).ort_tensor])),g=await(f=i?f.then(()=>u.run(k)):u.run(k));return Array.isArray(d)?d.map(M=>new o.Tensor(g[M])):new o.Tensor(g[d])}};class l{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=a([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=a([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=a([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=a([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=a([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=a([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=a([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=a([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}J(l,"session_options",{})},"./src/pipelines.js":(e,r,t)=>{t.r(r),t.d(r,{AudioClassificationPipeline:()=>K,AutomaticSpeechRecognitionPipeline:()=>te,BackgroundRemovalPipeline:()=>ne,DepthEstimationPipeline:()=>_e,DocumentQuestionAnsweringPipeline:()=>F,FeatureExtractionPipeline:()=>L,FillMaskPipeline:()=>$,ImageClassificationPipeline:()=>ee,ImageFeatureExtractionPipeline:()=>G,ImageSegmentationPipeline:()=>Z,ImageToImagePipeline:()=>se,ImageToTextPipeline:()=>H,ObjectDetectionPipeline:()=>ue,Pipeline:()=>b,QuestionAnsweringPipeline:()=>M,SummarizationPipeline:()=>y,Text2TextGenerationPipeline:()=>v,TextClassificationPipeline:()=>k,TextGenerationPipeline:()=>P,TextToAudioPipeline:()=>U,TokenClassificationPipeline:()=>g,TranslationPipeline:()=>T,ZeroShotAudioClassificationPipeline:()=>R,ZeroShotClassificationPipeline:()=>O,ZeroShotImageClassificationPipeline:()=>he,ZeroShotObjectDetectionPipeline:()=>j,pipeline:()=>ze});var s=t("./src/tokenizers.js"),o=t("./src/models.js"),n=t("./src/models/auto/processing_auto.js");t("./src/base/processing_utils.js");var i=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/maths.js"),c=t("./src/utils/audio.js"),p=t("./src/utils/tensor.js"),d=t("./src/utils/image.js");async function u(Ie){return Array.isArray(Ie)||(Ie=[Ie]),await Promise.all(Ie.map(X=>d.RawImage.read(X)))}async function f(Ie,X){return Array.isArray(Ie)||(Ie=[Ie]),await Promise.all(Ie.map(ae=>typeof ae=="string"||ae instanceof URL?(0,c.read_audio)(ae,X):ae instanceof Float64Array?new Float32Array(ae):ae))}function _(Ie,X){X&&(Ie=Ie.map(Ee=>Ee|0));const[ae,W,be,ke]=Ie;return{xmin:ae,ymin:W,xmax:be,ymax:ke}}class b extends i.Callable{constructor({task:X,model:ae,tokenizer:W=null,processor:be=null}){super(),this.task=X,this.model=ae,this.tokenizer=W,this.processor=be}async dispose(){await this.model.dispose()}}class k extends b{constructor(X){super(X)}async _call(X,{top_k:ae=1}={}){const W=this.tokenizer(X,{padding:!0,truncation:!0}),be=await this.model(W),ke=this.model.config.problem_type==="multi_label_classification"?Se=>Se.sigmoid():Se=>new p.Tensor("float32",(0,l.softmax)(Se.data),Se.dims),Ee=this.model.config.id2label,Me=[];for(const Se of be.logits){const we=ke(Se),Ae=await(0,p.topk)(we,ae),Be=Ae[0].tolist(),xe=Ae[1].tolist().map((Ze,Ke)=>({label:Ee?Ee[Ze]:`LABEL_${Ze}`,score:Be[Ke]}));ae===1?Me.push(...xe):Me.push(xe)}return Array.isArray(X)||ae===1?Me:Me[0]}}class g extends b{constructor(X){super(X)}async _call(X,{ignore_labels:ae=["O"]}={}){const W=Array.isArray(X),be=this.tokenizer(W?X:[X],{padding:!0,truncation:!0}),Ee=(await this.model(be)).logits,Me=this.model.config.id2label,Se=[];for(let we=0;we<Ee.dims[0];++we){const Ae=be.input_ids[we],Be=Ee[we],Qe=[];for(let xe=0;xe<Be.dims[0];++xe){const Ze=Be[xe],Ke=(0,l.max)(Ze.data)[1],nt=Me?Me[Ke]:`LABEL_${Ke}`;if(ae.includes(nt))continue;const Je=this.tokenizer.decode([Ae[xe].item()],{skip_special_tokens:!0});if(Je==="")continue;const Oe=(0,l.softmax)(Ze.data);Qe.push({entity:nt,score:Oe[Ke],index:xe,word:Je})}Se.push(Qe)}return W?Se:Se[0]}}class M extends b{constructor(X){super(X)}async _call(X,ae,{top_k:W=1}={}){const be=this.tokenizer(X,{text_pair:ae,padding:!0,truncation:!0}),{start_logits:ke,end_logits:Ee}=await this.model(be),Me=be.input_ids.tolist(),Se=be.attention_mask.tolist(),we=this.tokenizer.all_special_ids,Ae=[];for(let Be=0;Be<ke.dims[0];++Be){const Qe=Me[Be],xe=Qe.findIndex(Ye=>Ye==this.tokenizer.sep_token_id);Se[Be].map((Ye,ot)=>Ye==1&&(ot===0||ot>xe&&we.findIndex(It=>It==Qe[ot])===-1));const Ze=ke[Be].tolist(),Ke=Ee[Be].tolist();for(let Ye=1;Ye<Ze.length;++Ye)(Se[Be]==0||Ye<=xe||we.findIndex(ot=>ot==Qe[Ye])!==-1)&&(Ze[Ye]=-1/0,Ke[Ye]=-1/0);const nt=(0,l.softmax)(Ze).map((Ye,ot)=>[Ye,ot]),Je=(0,l.softmax)(Ke).map((Ye,ot)=>[Ye,ot]);nt[0][0]=0,Je[0][0]=0;const Oe=(0,a.product)(nt,Je).filter(Ye=>Ye[0][1]<=Ye[1][1]).map(Ye=>[Ye[0][1],Ye[1][1],Ye[0][0]*Ye[1][0]]).sort((Ye,ot)=>ot[2]-Ye[2]);for(let Ye=0;Ye<Math.min(Oe.length,W);++Ye){const[ot,It,St]=Oe[Ye],wt=Qe.slice(ot,It+1),Mr=this.tokenizer.decode(wt,{skip_special_tokens:!0});Ae.push({answer:Mr,score:St})}}return W===1?Ae[0]:Ae}}class $ extends b{constructor(X){super(X)}async _call(X,{top_k:ae=5}={}){const W=this.tokenizer(X,{padding:!0,truncation:!0}),{logits:be}=await this.model(W),ke=[],Ee=W.input_ids.tolist();for(let Me=0;Me<Ee.length;++Me){const Se=Ee[Me],we=Se.findIndex(Ze=>Ze==this.tokenizer.mask_token_id);if(we===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Ae=be[Me][we],Be=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Ae.data),Ae.dims),ae),Qe=Be[0].tolist(),xe=Be[1].tolist();ke.push(xe.map((Ze,Ke)=>{const nt=Se.slice();return nt[we]=Ze,{score:Qe[Ke],token:Number(Ze),token_str:this.tokenizer.decode([Ze]),sequence:this.tokenizer.decode(nt,{skip_special_tokens:!0})}}))}return Array.isArray(X)?ke:ke[0]}}class v extends b{constructor(ae){super(ae);J(this,"_key","generated_text")}async _call(ae,W={}){Array.isArray(ae)||(ae=[ae]),this.model.config.prefix&&(ae=ae.map(we=>this.model.config.prefix+we));const be=this.model.config.task_specific_params;be&&be[this.task]&&be[this.task].prefix&&(ae=ae.map(we=>be[this.task].prefix+we));const ke=this.tokenizer,Ee={padding:!0,truncation:!0};let Me;this instanceof T&&"_build_translation_inputs"in ke?Me=ke._build_translation_inputs(ae,Ee,W):Me=ke(ae,Ee);const Se=await this.model.generate({...Me,...W});return ke.batch_decode(Se,{skip_special_tokens:!0}).map(we=>({[this._key]:we}))}}class y extends v{constructor(ae){super(ae);J(this,"_key","summary_text")}}class T extends v{constructor(ae){super(ae);J(this,"_key","translation_text")}}function x(Ie){return Array.isArray(Ie)&&Ie.every(X=>"role"in X&&"content"in X)}class P extends b{constructor(X){super(X)}async _call(X,ae={}){let W=!1,be=!1,ke=ae.add_special_tokens??(this.tokenizer.add_bos_token||this.tokenizer.add_eos_token)??!1,Ee;if(typeof X=="string")Ee=X=[X];else if(Array.isArray(X)&&X.every(xe=>typeof xe=="string"))W=!0,Ee=X;else{if(x(X))X=[X];else if(Array.isArray(X)&&X.every(x))W=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");be=!0,Ee=X.map(xe=>this.tokenizer.apply_chat_template(xe,{tokenize:!1,add_generation_prompt:!0})),ke=!1}const Me=be?!1:ae.return_full_text??!0;this.tokenizer.padding_side="left";const Se=this.tokenizer(Ee,{add_special_tokens:ke,padding:!0,truncation:!0}),we=await this.model.generate({...Se,...ae}),Ae=this.tokenizer.batch_decode(we,{skip_special_tokens:!0});let Be;!Me&&Se.input_ids.dims.at(-1)>0&&(Be=this.tokenizer.batch_decode(Se.input_ids,{skip_special_tokens:!0}).map(xe=>xe.length));const Qe=Array.from({length:X.length},xe=>[]);for(let xe=0;xe<Ae.length;++xe){const Ze=Math.floor(xe/we.dims[0]*X.length);Be&&(Ae[xe]=Ae[xe].slice(Be[Ze])),Qe[Ze].push({generated_text:be?[...X[Ze],{role:"assistant",content:Ae[xe]}]:Ae[xe]})}return!W&&Qe.length===1?Qe[0]:Qe}}class O extends b{constructor(X){super(X),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([ae,W])=>[ae.toLowerCase(),W])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(X,ae,{hypothesis_template:W="This example is {}.",multi_label:be=!1}={}){const ke=Array.isArray(X);ke||(X=[X]),Array.isArray(ae)||(ae=[ae]);const Ee=ae.map(we=>W.replace("{}",we)),Me=be||ae.length===1,Se=[];for(const we of X){const Ae=[];for(const xe of Ee){const Ze=this.tokenizer(we,{text_pair:xe,padding:!0,truncation:!0}),Ke=await this.model(Ze);Me?Ae.push([Ke.logits.data[this.contradiction_id],Ke.logits.data[this.entailment_id]]):Ae.push(Ke.logits.data[this.entailment_id])}const Qe=(Me?Ae.map(xe=>(0,l.softmax)(xe)[1]):(0,l.softmax)(Ae)).map((xe,Ze)=>[xe,Ze]).sort((xe,Ze)=>Ze[0]-xe[0]);Se.push({sequence:we,labels:Qe.map(xe=>ae[xe[1]]),scores:Qe.map(xe=>xe[0])})}return ke?Se:Se[0]}}class L extends b{constructor(X){super(X)}async _call(X,{pooling:ae="none",normalize:W=!1,quantize:be=!1,precision:ke="binary"}={}){const Ee=this.tokenizer(X,{padding:!0,truncation:!0}),Me=await this.model(Ee);let Se=Me.last_hidden_state??Me.logits??Me.token_embeddings;switch(ae){case"none":break;case"mean":Se=(0,p.mean_pooling)(Se,Ee.attention_mask);break;case"first_token":case"cls":Se=Se.slice(null,0);break;case"last_token":case"eos":Se=Se.slice(null,-1);break;default:throw Error(`Pooling method '${ae}' not supported.`)}return W&&(Se=Se.normalize(2,-1)),be&&(Se=(0,p.quantize_embeddings)(Se,ke)),Se}}class G extends b{constructor(X){super(X)}async _call(X,{pool:ae=null}={}){const W=await u(X),{pixel_values:be}=await this.processor(W),ke=await this.model({pixel_values:be});let Ee;if(ae){if(!("pooler_output"in ke))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Ee=ke.pooler_output}else Ee=ke.last_hidden_state??ke.logits??ke.image_embeds;return Ee}}class K extends b{constructor(X){super(X)}async _call(X,{top_k:ae=5}={}){const W=this.processor.feature_extractor.config.sampling_rate,be=await f(X,W),ke=this.model.config.id2label,Ee=[];for(const Me of be){const Se=await this.processor(Me),Ae=(await this.model(Se)).logits[0],Be=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Ae.data),Ae.dims),ae),Qe=Be[0].tolist(),Ze=Be[1].tolist().map((Ke,nt)=>({label:ke?ke[Ke]:`LABEL_${Ke}`,score:Qe[nt]}));Ee.push(Ze)}return Array.isArray(X)?Ee:Ee[0]}}class R extends b{constructor(X){super(X)}async _call(X,ae,{hypothesis_template:W="This is a sound of {}."}={}){const be=!Array.isArray(X);be&&(X=[X]);const ke=ae.map(Ae=>W.replace("{}",Ae)),Ee=this.tokenizer(ke,{padding:!0,truncation:!0}),Me=this.processor.feature_extractor.config.sampling_rate,Se=await f(X,Me),we=[];for(const Ae of Se){const Be=await this.processor(Ae),Qe=await this.model({...Ee,...Be}),xe=(0,l.softmax)(Qe.logits_per_audio.data);we.push([...xe].map((Ze,Ke)=>({score:Ze,label:ae[Ke]})))}return be?we[0]:we}}class te extends b{constructor(X){super(X)}async _call(X,ae={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(X,ae);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(X,ae);case"moonshine":return this._call_moonshine(X,ae);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(X,ae){ae.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),ae.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const W=!Array.isArray(X);W&&(X=[X]);const be=this.processor.feature_extractor.config.sampling_rate,ke=await f(X,be),Ee=[];for(const Me of ke){const Se=await this.processor(Me),Ae=(await this.model(Se)).logits[0],Be=[];for(const xe of Ae)Be.push((0,l.max)(xe.data)[1]);const Qe=this.tokenizer.decode(Be);Ee.push({text:Qe})}return W?Ee[0]:Ee}async _call_whisper(X,ae){const W=ae.return_timestamps??!1,be=ae.chunk_length_s??0,ke=ae.force_full_sequences??!1;let Ee=ae.stride_length_s??null;const Me={...ae};W==="word"&&(Me.return_token_timestamps=!0,Me.return_timestamps=!1);const Se=!Array.isArray(X);Se&&(X=[X]);const we=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Ae=this.processor.feature_extractor.config.hop_length,Be=this.processor.feature_extractor.config.sampling_rate,Qe=await f(X,Be),xe=[];for(const Ze of Qe){let Ke=[];if(be>0){if(Ee===null)Ee=be/6;else if(be<=Ee)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const Oe=Be*be,Ye=Be*Ee,ot=Oe-2*Ye;let It=0;for(;;){const St=It+Oe,wt=Ze.subarray(It,St),Mr=await this.processor(wt),Er=It===0,Rr=St>=Ze.length;if(Ke.push({stride:[wt.length,Er?0:Ye,Rr?0:Ye],input_features:Mr.input_features,is_last:Rr}),Rr)break;It+=ot}}else Ke=[{stride:[Ze.length,0,0],input_features:(await this.processor(Ze)).input_features,is_last:!0}];for(const Oe of Ke){Me.num_frames=Math.floor(Oe.stride[0]/Ae);const Ye=await this.model.generate({inputs:Oe.input_features,...Me});W==="word"?(Oe.tokens=Ye.sequences.tolist()[0],Oe.token_timestamps=Ye.token_timestamps.tolist()[0].map(ot=>(0,l.round)(ot,2))):Oe.tokens=Ye[0].tolist(),Oe.stride=Oe.stride.map(ot=>ot/Be)}const[nt,Je]=this.tokenizer._decode_asr(Ke,{time_precision:we,return_timestamps:W,force_full_sequences:ke});xe.push({text:nt,...Je})}return Se?xe[0]:xe}async _call_moonshine(X,ae){const W=!Array.isArray(X);W&&(X=[X]);const be=this.processor.feature_extractor.config.sampling_rate,ke=await f(X,be),Ee=[];for(const Me of ke){const Se=await this.processor(Me),we=Math.floor(Me.length/be)*6,Ae=await this.model.generate({max_new_tokens:we,...ae,...Se}),Be=this.processor.batch_decode(Ae,{skip_special_tokens:!0})[0];Ee.push({text:Be})}return W?Ee[0]:Ee}}class H extends b{constructor(X){super(X)}async _call(X,ae={}){const W=Array.isArray(X),be=await u(X),{pixel_values:ke}=await this.processor(be),Ee=[];for(const Me of ke){Me.dims=[1,...Me.dims];const Se=await this.model.generate({inputs:Me,...ae}),we=this.tokenizer.batch_decode(Se,{skip_special_tokens:!0}).map(Ae=>({generated_text:Ae.trim()}));Ee.push(we)}return W?Ee:Ee[0]}}class ee extends b{constructor(X){super(X)}async _call(X,{top_k:ae=5}={}){const W=await u(X),{pixel_values:be}=await this.processor(W),ke=await this.model({pixel_values:be}),Ee=this.model.config.id2label,Me=[];for(const Se of ke.logits){const we=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Se.data),Se.dims),ae),Ae=we[0].tolist(),Qe=we[1].tolist().map((xe,Ze)=>({label:Ee?Ee[xe]:`LABEL_${xe}`,score:Ae[Ze]}));Me.push(Qe)}return Array.isArray(X)?Me:Me[0]}}class Z extends b{constructor(X){super(X),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(X,{threshold:ae=.5,mask_threshold:W=.5,overlap_mask_area_threshold:be=.8,label_ids_to_fuse:ke=null,target_sizes:Ee=null,subtask:Me=null}={}){if(Array.isArray(X)&&X.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const we=await u(X),Ae=we.map(Oe=>[Oe.height,Oe.width]),Be=await this.processor(we),{inputNames:Qe,outputNames:xe}=this.model.sessions.model;if(!Qe.includes("pixel_values")){if(Qe.length!==1)throw Error(`Expected a single input name, but got ${Qe.length} inputs: ${Qe}.`);const Oe=Qe[0];if(Oe in Be)throw Error(`Input name ${Oe} already exists in the inputs.`);Be[Oe]=Be.pixel_values}const Ze=await this.model(Be);let Ke=null;if(Me!==null)Ke=this.subtasks_mapping[Me];else if(this.processor.image_processor){for(const[Oe,Ye]of Object.entries(this.subtasks_mapping))if(Ye in this.processor.image_processor){Ke=this.processor.image_processor[Ye].bind(this.processor.image_processor),Me=Oe;break}}const nt=this.model.config.id2label,Je=[];if(Me)if(Me==="panoptic"||Me==="instance"){const Oe=Ke(Ze,ae,W,be,ke,Ee??Ae)[0],Ye=Oe.segmentation;for(const ot of Oe.segments_info){const It=new Uint8ClampedArray(Ye.data.length);for(let wt=0;wt<Ye.data.length;++wt)Ye.data[wt]===ot.id&&(It[wt]=255);const St=new d.RawImage(It,Ye.dims[1],Ye.dims[0],1);Je.push({score:ot.score,label:nt[ot.label_id],mask:St})}}else if(Me==="semantic"){const{segmentation:Oe,labels:Ye}=Ke(Ze,Ee??Ae)[0];for(const ot of Ye){const It=new Uint8ClampedArray(Oe.data.length);for(let wt=0;wt<Oe.data.length;++wt)Oe.data[wt]===ot&&(It[wt]=255);const St=new d.RawImage(It,Oe.dims[1],Oe.dims[0],1);Je.push({score:null,label:nt[ot],mask:St})}}else throw Error(`Subtask ${Me} not supported.`);else{const Ye=Ze[xe[0]];for(let ot=0;ot<Ae.length;++ot){const It=Ae[ot],St=Ye[ot];St.data.some(Mr=>Mr<-1e-5||Mr>1+1e-5)&&St.sigmoid_();const wt=await d.RawImage.fromTensor(St.mul_(255).to("uint8")).resize(It[1],It[0]);Je.push({label:null,score:null,mask:wt})}}return Je}}class ne extends Z{constructor(X){super(X)}async _call(X,ae={}){if(Array.isArray(X)&&X.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const be=await u(X),ke=await super._call(X,ae);return be.map((Me,Se)=>{const we=Me.clone();return we.putAlpha(ke[Se].mask),we})}}class he extends b{constructor(X){super(X)}async _call(X,ae,{hypothesis_template:W="This is a photo of {}"}={}){const be=Array.isArray(X),ke=await u(X),Ee=ae.map(Qe=>W.replace("{}",Qe)),Me=this.tokenizer(Ee,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:Se}=await this.processor(ke),we=await this.model({...Me,pixel_values:Se}),Ae=this.model.config.model_type==="siglip"?Qe=>Qe.sigmoid().data:Qe=>(0,l.softmax)(Qe.data),Be=[];for(const Qe of we.logits_per_image){const Ze=[...Ae(Qe)].map((Ke,nt)=>({score:Ke,label:ae[nt]}));Ze.sort((Ke,nt)=>nt.score-Ke.score),Be.push(Ze)}return be?Be:Be[0]}}class ue extends b{constructor(X){super(X)}async _call(X,{threshold:ae=.9,percentage:W=!1}={}){const be=Array.isArray(X);if(be&&X.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const ke=await u(X),Ee=W?null:ke.map(xe=>[xe.height,xe.width]),{pixel_values:Me,pixel_mask:Se}=await this.processor(ke),we=await this.model({pixel_values:Me,pixel_mask:Se}),Ae=this.processor.image_processor.post_process_object_detection(we,ae,Ee),Be=this.model.config.id2label,Qe=Ae.map(xe=>xe.boxes.map((Ze,Ke)=>({score:xe.scores[Ke],label:Be[xe.classes[Ke]],box:_(Ze,!W)})));return be?Qe:Qe[0]}}class j extends b{constructor(X){super(X)}async _call(X,ae,{threshold:W=.1,top_k:be=null,percentage:ke=!1}={}){const Ee=Array.isArray(X),Me=await u(X),Se=this.tokenizer(ae,{padding:!0,truncation:!0}),we=await this.processor(Me),Ae=[];for(let Be=0;Be<Me.length;++Be){const Qe=Me[Be],xe=ke?null:[[Qe.height,Qe.width]],Ze=we.pixel_values[Be].unsqueeze_(0),Ke=await this.model({...Se,pixel_values:Ze});let nt;if("post_process_grounded_object_detection"in this.processor){const Je=this.processor.post_process_grounded_object_detection(Ke,Se.input_ids,{box_threshold:W,text_threshold:W,target_sizes:xe})[0];nt=Je.boxes.map((Oe,Ye)=>({score:Je.scores[Ye],label:Je.labels[Ye],box:_(Oe,!ke)}))}else{const Je=this.processor.image_processor.post_process_object_detection(Ke,W,xe,!0)[0];nt=Je.boxes.map((Oe,Ye)=>({score:Je.scores[Ye],label:ae[Je.classes[Ye]],box:_(Oe,!ke)}))}nt.sort((Je,Oe)=>Oe.score-Je.score),be!==null&&(nt=nt.slice(0,be)),Ae.push(nt)}return Ee?Ae:Ae[0]}}class F extends b{constructor(X){super(X)}async _call(X,ae,W={}){const be=(await u(X))[0],{pixel_values:ke}=await this.processor(be),Ee=`<s_docvqa><s_question>${ae}</s_question><s_answer>`,Me=this.tokenizer(Ee,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,Se=await this.model.generate({inputs:ke,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:Me,...W}),Ae=this.tokenizer.batch_decode(Se)[0].match(/<s_answer>(.*?)<\/s_answer>/);let Be=null;return Ae&&Ae.length>=2&&(Be=Ae[1].trim()),[{answer:Be}]}}class U extends b{constructor(ae){super(ae);J(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=ae.vocoder??null}async _call(ae,{speaker_embeddings:W=null}={}){return this.processor?this._call_text_to_spectrogram(ae,{speaker_embeddings:W}):this._call_text_to_waveform(ae)}async _call_text_to_waveform(ae){const W=this.tokenizer(ae,{padding:!0,truncation:!0}),{waveform:be}=await this.model(W),ke=this.model.config.sampling_rate;return new c.RawAudio(be.data,ke)}async _call_text_to_spectrogram(ae,{speaker_embeddings:W}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await o.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof W=="string"||W instanceof URL)&&(W=new Float32Array(await(await fetch(W)).arrayBuffer())),W instanceof Float32Array)W=new p.Tensor("float32",W,[1,W.length]);else if(!(W instanceof p.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:be}=this.tokenizer(ae,{padding:!0,truncation:!0}),{waveform:ke}=await this.model.generate_speech(be,W,{vocoder:this.vocoder}),Ee=this.processor.feature_extractor.config.sampling_rate;return new c.RawAudio(ke.data,Ee)}}class se extends b{constructor(X){super(X)}async _call(X){const ae=await u(X),W=await this.processor(ae),be=await this.model(W),ke=[];for(const Ee of be.reconstruction){const Me=Ee.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");ke.push(d.RawImage.fromTensor(Me))}return ke.length>1?ke:ke[0]}}class _e extends b{constructor(X){super(X)}async _call(X){const ae=await u(X),W=await this.processor(ae),{predicted_depth:be}=await this.model(W),ke=[];for(let Ee=0;Ee<ae.length;++Ee){const Me=be[Ee],[Se,we]=Me.dims.slice(-2),[Ae,Be]=ae[Ee].size,Qe=(await(0,p.interpolate_4d)(Me.view(1,1,Se,we),{size:[Be,Ae],mode:"bilinear"})).view(Be,Ae),xe=Qe.min().item(),Ze=Qe.max().item(),Ke=Qe.sub(xe).div_(Ze-xe).mul_(255).to("uint8").unsqueeze(0),nt=d.RawImage.fromTensor(Ke);ke.push({predicted_depth:Qe,depth:nt})}return ke.length>1?ke:ke[0]}}const ie=Object.freeze({"text-classification":{tokenizer:s.AutoTokenizer,pipeline:k,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:s.AutoTokenizer,pipeline:g,model:o.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:s.AutoTokenizer,pipeline:M,model:o.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:s.AutoTokenizer,pipeline:$,model:o.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:s.AutoTokenizer,pipeline:y,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:s.AutoTokenizer,pipeline:T,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:s.AutoTokenizer,pipeline:v,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:s.AutoTokenizer,pipeline:P,model:o.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:s.AutoTokenizer,pipeline:O,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:K,model:o.AutoModelForAudioClassification,processor:n.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:s.AutoTokenizer,pipeline:R,model:o.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:s.AutoTokenizer,pipeline:te,model:[o.AutoModelForSpeechSeq2Seq,o.AutoModelForCTC],processor:n.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:s.AutoTokenizer,pipeline:U,model:[o.AutoModelForTextToWaveform,o.AutoModelForTextToSpectrogram],processor:[n.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:s.AutoTokenizer,pipeline:H,model:o.AutoModelForVision2Seq,processor:n.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:ee,model:o.AutoModelForImageClassification,processor:n.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Z,model:[o.AutoModelForImageSegmentation,o.AutoModelForSemanticSegmentation,o.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:ne,model:[o.AutoModelForImageSegmentation,o.AutoModelForSemanticSegmentation,o.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:s.AutoTokenizer,pipeline:he,model:o.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:ue,model:o.AutoModelForObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:s.AutoTokenizer,pipeline:j,model:o.AutoModelForZeroShotObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:s.AutoTokenizer,pipeline:F,model:o.AutoModelForDocumentQuestionAnswering,processor:n.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:se,model:o.AutoModelForImageToImage,processor:n.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:_e,model:o.AutoModelForDepthEstimation,processor:n.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:s.AutoTokenizer,pipeline:L,model:o.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:n.AutoProcessor,pipeline:G,model:[o.AutoModelForImageFeatureExtraction,o.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),ve=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function ze(Ie,X=null,{progress_callback:ae=null,config:W=null,cache_dir:be=null,local_files_only:ke=!1,revision:Ee="main",device:Me=null,dtype:Se=null,subfolder:we="onnx",use_external_data_format:Ae=null,model_file_name:Be=null,session_options:Qe={}}={}){Ie=ve[Ie]??Ie;const xe=ie[Ie.split("_",1)[0]];if(!xe)throw Error(`Unsupported pipeline: ${Ie}. Must be one of [${Object.keys(ie)}]`);X||(X=xe.default.model,console.log(`No model specified. Using default model: "${X}".`));const Ze={progress_callback:ae,config:W,cache_dir:be,local_files_only:ke,revision:Ee,device:Me,dtype:Se,subfolder:we,use_external_data_format:Ae,model_file_name:Be,session_options:Qe},Ke=new Map([["tokenizer",xe.tokenizer],["model",xe.model],["processor",xe.processor]]),nt=await Ge(Ke,X,Ze);nt.task=Ie,(0,a.dispatchCallback)(ae,{status:"ready",task:Ie,model:X});const Je=xe.pipeline;return new Je(nt)}async function Ge(Ie,X,ae){const W=Object.create(null),be=[];for(const[ke,Ee]of Ie.entries()){if(!Ee)continue;let Me;Array.isArray(Ee)?Me=new Promise(async(Se,we)=>{var Be,Qe;let Ae;for(const xe of Ee){if(xe===null){Se(null);return}try{Se(await xe.from_pretrained(X,ae));return}catch(Ze){if((Be=Ze.message)!=null&&Be.includes("Unsupported model type"))Ae=Ze;else if((Qe=Ze.message)!=null&&Qe.includes("Could not locate file"))Ae=Ze;else{we(Ze);return}}}we(Ae)}):Me=Ee.from_pretrained(X,ae),W[ke]=Me,be.push(Me)}await Promise.all(be);for(const[ke,Ee]of Object.entries(W))W[ke]=await Ee;return W}},"./src/tokenizers.js":(e,r,t)=>{t.r(r),t.d(r,{AlbertTokenizer:()=>ks,AutoTokenizer:()=>cn,BartTokenizer:()=>st,BertTokenizer:()=>$s,BlenderbotSmallTokenizer:()=>Xt,BlenderbotTokenizer:()=>et,BloomTokenizer:()=>qr,CLIPTokenizer:()=>Ds,CamembertTokenizer:()=>Fe,CodeGenTokenizer:()=>Qr,CodeLlamaTokenizer:()=>Sr,CohereTokenizer:()=>_s,ConvBertTokenizer:()=>q,DebertaTokenizer:()=>S,DebertaV2Tokenizer:()=>Q,DistilBertTokenizer:()=>ge,ElectraTokenizer:()=>ft,Ernie4_5_Tokenizer:()=>ln,EsmTokenizer:()=>As,FalconTokenizer:()=>$r,GPT2Tokenizer:()=>vt,GPTNeoXTokenizer:()=>Is,GemmaTokenizer:()=>Ur,Grok1Tokenizer:()=>Zr,HerbertTokenizer:()=>B,LlamaTokenizer:()=>Cr,M2M100Tokenizer:()=>pr,MBart50Tokenizer:()=>Nt,MBartTokenizer:()=>zt,MPNetTokenizer:()=>as,MarianTokenizer:()=>Re,MgpstrTokenizer:()=>an,MobileBertTokenizer:()=>Ct,NllbTokenizer:()=>ms,NougatTokenizer:()=>hs,PreTrainedTokenizer:()=>pt,Qwen2Tokenizer:()=>Vr,RoFormerTokenizer:()=>re,RobertaTokenizer:()=>jr,SiglipTokenizer:()=>Wr,SpeechT5Tokenizer:()=>Ls,SqueezeBertTokenizer:()=>Qt,T5Tokenizer:()=>mt,TokenizerModel:()=>G,VitsTokenizer:()=>zs,Wav2Vec2CTCTokenizer:()=>je,WhisperTokenizer:()=>hr,XLMRobertaTokenizer:()=>Nr,XLMTokenizer:()=>rt,is_chinese_char:()=>$});var s=t("./src/utils/generic.js"),o=t("./src/utils/core.js"),n=t("./src/utils/hub.js"),i=t("./src/utils/maths.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/data-structures.js"),c=t("./node_modules/@huggingface/jinja/dist/index.js"),p=t("./src/models/whisper/common_whisper.js");async function d(pe,I){const N=await Promise.all([(0,n.getModelJSON)(pe,"tokenizer.json",!0,I),(0,n.getModelJSON)(pe,"tokenizer_config.json",!0,I)]);return I.legacy!==null&&(N[1].legacy=I.legacy),N}function u(pe,I){const N=[];let Y=0;for(const le of pe.matchAll(I)){const de=le[0];Y<le.index&&N.push(pe.slice(Y,le.index)),de.length>0&&N.push(de),Y=le.index+de.length}return Y<pe.length&&N.push(pe.slice(Y)),N}function f(pe,I=!0){if(pe.Regex!==void 0){let N=pe.Regex.replace(/\\([#&~])/g,"$1");for(const[Y,le]of O)N=N.replaceAll(Y,le);return new RegExp(N,"gu")}else if(pe.String!==void 0){const N=(0,o.escapeRegExp)(pe.String);return new RegExp(I?N:`(${N})`,"gu")}else return console.warn("Unknown pattern type:",pe),null}function _(pe){return new Map(Object.entries(pe))}function b(pe){const I=pe.dims;switch(I.length){case 1:return pe.tolist();case 2:if(I[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return pe.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${I.length}.`)}}function k(pe){return pe.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function g(pe){return pe.replace(new RegExp("\\p{M}","gu"),"")}function M(pe){return g(pe.toLowerCase())}function $(pe){return pe>=19968&&pe<=40959||pe>=13312&&pe<=19903||pe>=131072&&pe<=173791||pe>=173824&&pe<=177983||pe>=177984&&pe<=178207||pe>=178208&&pe<=183983||pe>=63744&&pe<=64255||pe>=194560&&pe<=195103}function v(pe,I,N){const Y=[];let le=0;for(;le<pe.length;){if(Y.push(pe[le]),(I.get(pe[le])??N)!==N){++le;continue}for(;++le<pe.length&&(I.get(pe[le])??N)===N;)I.get(Y.at(-1))!==N&&(Y[Y.length-1]+=pe[le])}return Y}function y(pe){return pe.match(/\S+/g)||[]}const T="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",x=new RegExp(`^[${T}]+$`,"gu"),P=".,!?…。，、।۔،",O=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${P}])]+`,` ?[^\\s${P}]+`]]);class L{constructor(I){this.content=I.content,this.id=I.id,this.single_word=I.single_word??!1,this.lstrip=I.lstrip??!1,this.rstrip=I.rstrip??!1,this.special=I.special??!1,this.normalized=I.normalized??null}}class G extends s.Callable{constructor(I){super(),this.config=I,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(I,...N){switch(I.type){case"WordPiece":return new K(I);case"Unigram":return new R(I,...N);case"BPE":return new ee(I);default:if(I.vocab)return Array.isArray(I.vocab)?new R(I,...N):Object.hasOwn(I,"continuing_subword_prefix")&&Object.hasOwn(I,"unk_token")?Object.hasOwn(I,"merges")?new ee(I):new K(I):new Z(I,...N);throw new Error(`Unknown TokenizerModel type: ${I.type}`)}}_call(I){return I=this.encode(I),this.fuse_unk&&(I=v(I,this.tokens_to_ids,this.unk_token_id)),I}encode(I){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(I){return I.map(N=>this.tokens_to_ids.get(N)??this.unk_token_id)}convert_ids_to_tokens(I){return I.map(N=>this.vocab[N]??this.unk_token)}}class K extends G{constructor(I){super(I),this.tokens_to_ids=_(I.vocab),this.unk_token_id=this.tokens_to_ids.get(I.unk_token),this.unk_token=I.unk_token,this.max_input_chars_per_word=I.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[N,Y]of this.tokens_to_ids)this.vocab[Y]=N}encode(I){const N=[];for(const Y of I){const le=[...Y];if(le.length>this.max_input_chars_per_word){N.push(this.unk_token);continue}let de=!1,Te=0;const Ne=[];for(;Te<le.length;){let qe=le.length,We=null;for(;Te<qe;){let tt=le.slice(Te,qe).join("");if(Te>0&&(tt=this.config.continuing_subword_prefix+tt),this.tokens_to_ids.has(tt)){We=tt;break}--qe}if(We===null){de=!0;break}Ne.push(We),Te=qe}de?N.push(this.unk_token):N.push(...Ne)}return N}}class R extends G{constructor(I,N){super(I);const Y=I.vocab.length;this.vocab=new Array(Y),this.scores=new Array(Y);for(let le=0;le<Y;++le)[this.vocab[le],this.scores[le]]=I.vocab[le];this.unk_token_id=I.unk_id,this.unk_token=this.vocab[I.unk_id],this.tokens_to_ids=new Map(this.vocab.map((le,de)=>[le,de])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=N.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,i.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(I){const N=I.chars,Y=1;let le=0;for(;le<N.length;){let de=!1;const Te=N.slice(le).join(""),Ne=this.trie.commonPrefixSearch(Te);for(const qe of Ne){const We=this.tokens_to_ids.get(qe),tt=this.scores[We],Mt=(0,o.len)(qe);I.insert(le,Mt,tt,We),!de&&Mt===Y&&(de=!0)}de||I.insert(le,Y,this.unk_score,this.unk_token_id),le+=Y}}tokenize(I){const N=new l.TokenLattice(I,this.bos_token_id,this.eos_token_id);return this.populateNodes(N),N.tokens()}encode(I){const N=[];for(const Y of I){const le=this.tokenize(Y);N.push(...le)}return N}}const te=(()=>{const pe=[...Array.from({length:94},(le,de)=>de+33),...Array.from({length:12},(le,de)=>de+161),...Array.from({length:82},(le,de)=>de+174)],I=pe.slice();let N=0;for(let le=0;le<256;++le)pe.includes(le)||(pe.push(le),I.push(256+N),N+=1);const Y=I.map(le=>String.fromCharCode(le));return Object.fromEntries(pe.map((le,de)=>[le,Y[de]]))})(),H=(0,o.reverseDictionary)(te);class ee extends G{constructor(I){super(I),this.tokens_to_ids=_(I.vocab),this.unk_token_id=this.tokens_to_ids.get(I.unk_token),this.unk_token=I.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[Y,le]of this.tokens_to_ids)this.vocab[le]=Y;const N=Array.isArray(I.merges[0]);this.merges=N?I.merges:I.merges.map(Y=>Y.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((Y,le)=>[JSON.stringify(Y),le])),this.end_of_word_suffix=I.end_of_word_suffix,this.continuing_subword_suffix=I.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new l.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(I){if(I.length===0)return[];const N=this.cache.get(I);if(N!==void 0)return N;const Y=Array.from(I);this.end_of_word_suffix&&(Y[Y.length-1]+=this.end_of_word_suffix);let le=[];if(Y.length>1){const de=new l.PriorityQueue((qe,We)=>qe.score<We.score);let Te={token:Y[0],bias:0,prev:null,next:null},Ne=Te;for(let qe=1;qe<Y.length;++qe){const We={bias:qe/Y.length,token:Y[qe],prev:Ne,next:null};Ne.next=We,this._add_node(de,Ne),Ne=We}for(;!de.isEmpty();){const qe=de.pop();if(qe.deleted||!qe.next||qe.next.deleted)continue;if(qe.deleted=!0,qe.next.deleted=!0,qe.prev){const tt={...qe.prev};qe.prev.deleted=!0,qe.prev=tt,tt.prev?tt.prev.next=tt:Te=tt}const We={token:qe.token+qe.next.token,bias:qe.bias,prev:qe.prev,next:qe.next.next};We.prev?(We.prev.next=We,this._add_node(de,We.prev)):Te=We,We.next&&(We.next.prev=We,this._add_node(de,We))}for(let qe=Te;qe!==null;qe=qe.next)le.push(qe.token)}else le=Y;if(this.continuing_subword_suffix)for(let de=0;de<le.length-1;++de)le[de]+=this.continuing_subword_suffix;return I.length<this.max_length_to_cache&&this.cache.put(I,le),le}_add_node(I,N){const Y=this.bpe_ranks.get(JSON.stringify([N.token,N.next.token]));Y!==void 0&&(N.score=Y+N.bias,I.push(N))}encode(I){const N=[];for(const Y of I){if(this.ignore_merges&&this.tokens_to_ids.has(Y)){N.push(Y);continue}const le=this.bpe(Y);for(const de of le)if(this.tokens_to_ids.has(de))N.push(de);else if(this.byte_fallback){const Te=Array.from(this.text_encoder.encode(de)).map(Ne=>`<0x${Ne.toString(16).toUpperCase().padStart(2,"0")}>`);Te.every(Ne=>this.tokens_to_ids.has(Ne))?N.push(...Te):N.push(this.unk_token)}else N.push(this.unk_token)}return N}}class Z extends G{constructor(I,N){super(I),this.tokens_to_ids=_(N.target_lang?I.vocab[N.target_lang]:I.vocab),this.bos_token=N.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=N.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=N.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=N.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[Y,le]of this.tokens_to_ids)this.vocab[le]=Y}encode(I){return I}}class ne extends s.Callable{constructor(I){super(),this.config=I}static fromConfig(I){if(I===null)return null;switch(I.type){case"BertNormalizer":return new Ie(I);case"Precompiled":return new Rr(I);case"Sequence":return new Ge(I);case"Replace":return new he(I);case"NFC":return new j(I);case"NFD":return new F(I);case"NFKC":return new U(I);case"NFKD":return new se(I);case"Strip":return new _e(I);case"StripAccents":return new ie(I);case"Lowercase":return new ve(I);case"Prepend":return new ze(I);default:throw new Error(`Unknown Normalizer type: ${I.type}`)}}normalize(I){throw Error("normalize should be implemented in subclass.")}_call(I){return this.normalize(I)}}class he extends ne{normalize(I){const N=f(this.config.pattern);return N===null?I:I.replaceAll(N,this.config.content)}}class ue extends ne{constructor(){super(...arguments);J(this,"form")}normalize(N){return N=N.normalize(this.form),N}}class j extends ue{constructor(){super(...arguments);J(this,"form","NFC")}}class F extends ue{constructor(){super(...arguments);J(this,"form","NFD")}}class U extends ue{constructor(){super(...arguments);J(this,"form","NFKC")}}class se extends ue{constructor(){super(...arguments);J(this,"form","NFKD")}}class _e extends ne{normalize(I){return this.config.strip_left&&this.config.strip_right?I=I.trim():(this.config.strip_left&&(I=I.trimStart()),this.config.strip_right&&(I=I.trimEnd())),I}}class ie extends ne{normalize(I){return I=g(I),I}}class ve extends ne{normalize(I){return I=I.toLowerCase(),I}}class ze extends ne{normalize(I){return I=this.config.prepend+I,I}}class Ge extends ne{constructor(I){super(I),this.normalizers=I.normalizers.map(N=>ne.fromConfig(N))}normalize(I){return this.normalizers.reduce((N,Y)=>Y.normalize(N),I)}}class Ie extends ne{_tokenize_chinese_chars(I){const N=[];for(let Y=0;Y<I.length;++Y){const le=I[Y],de=le.charCodeAt(0);$(de)?(N.push(" "),N.push(le),N.push(" ")):N.push(le)}return N.join("")}stripAccents(I){return I.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(I){switch(I){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(I)}}_clean_text(I){const N=[];for(const Y of I){const le=Y.charCodeAt(0);le===0||le===65533||this._is_control(Y)||(/^\s$/.test(Y)?N.push(" "):N.push(Y))}return N.join("")}normalize(I){return this.config.clean_text&&(I=this._clean_text(I)),this.config.handle_chinese_chars&&(I=this._tokenize_chinese_chars(I)),this.config.lowercase?(I=I.toLowerCase(),this.config.strip_accents!==!1&&(I=this.stripAccents(I))):this.config.strip_accents&&(I=this.stripAccents(I)),I}}class X extends s.Callable{static fromConfig(I){if(I===null)return null;switch(I.type){case"BertPreTokenizer":return new ae(I);case"Sequence":return new is(I);case"Whitespace":return new qt(I);case"WhitespaceSplit":return new Pr(I);case"Metaspace":return new Mr(I);case"ByteLevel":return new W(I);case"Split":return new be(I);case"Punctuation":return new ke(I);case"Digits":return new Ee(I);case"Replace":return new Us(I);default:throw new Error(`Unknown PreTokenizer type: ${I.type}`)}}pre_tokenize_text(I,N){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(I,N){return(Array.isArray(I)?I.map(Y=>this.pre_tokenize_text(Y,N)):this.pre_tokenize_text(I,N)).flat()}_call(I,N){return this.pre_tokenize(I,N)}}class ae extends X{constructor(I){super(),this.pattern=new RegExp(`[^\\s${T}]+|[${T}]`,"gu")}pre_tokenize_text(I,N){return I.trim().match(this.pattern)||[]}}class W extends X{constructor(I){super(),this.config=I,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=te,this.text_encoder=new TextEncoder}pre_tokenize_text(I,N){return this.add_prefix_space&&!I.startsWith(" ")&&(I=" "+I),(this.use_regex?I.match(this.pattern)||[]:[I]).map(le=>Array.from(this.text_encoder.encode(le),de=>this.byte_encoder[de]).join(""))}}class be extends X{constructor(I){super(),this.config=I,this.pattern=f(this.config.pattern,this.config.invert)}pre_tokenize_text(I,N){var Y;return this.pattern===null?[]:this.config.invert?I.match(this.pattern)||[]:((Y=this.config.behavior)==null?void 0:Y.toLowerCase())==="removed"?I.split(this.pattern).filter(le=>le):u(I,this.pattern)}}class ke extends X{constructor(I){super(),this.config=I,this.pattern=new RegExp(`[^${T}]+|[${T}]+`,"gu")}pre_tokenize_text(I,N){return I.match(this.pattern)||[]}}class Ee extends X{constructor(I){super(),this.config=I;const N=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(N,"gu")}pre_tokenize_text(I,N){return I.match(this.pattern)||[]}}class Me extends s.Callable{constructor(I){super(),this.config=I}static fromConfig(I){if(I===null)return null;switch(I.type){case"TemplateProcessing":return new Ae(I);case"ByteLevel":return new Be(I);case"RobertaProcessing":return new we(I);case"BertProcessing":return new Se(I);case"Sequence":return new Qe(I);default:throw new Error(`Unknown PostProcessor type: ${I.type}`)}}post_process(I,...N){throw Error("post_process should be implemented in subclass.")}_call(I,...N){return this.post_process(I,...N)}}class Se extends Me{constructor(I){super(I),this.cls=I.cls[0],this.sep=I.sep[0]}post_process(I,N=null,{add_special_tokens:Y=!0}={}){Y&&(I=(0,o.mergeArrays)([this.cls],I,[this.sep]));let le=new Array(I.length).fill(0);if(N!==null){const de=Y&&this instanceof we?[this.sep]:[],Te=Y?[this.sep]:[];I=(0,o.mergeArrays)(I,de,N,Te),le=(0,o.mergeArrays)(le,new Array(N.length+de.length+Te.length).fill(1))}return{tokens:I,token_type_ids:le}}}class we extends Se{}class Ae extends Me{constructor(I){super(I),this.single=I.single,this.pair=I.pair}post_process(I,N=null,{add_special_tokens:Y=!0}={}){const le=N===null?this.single:this.pair;let de=[],Te=[];for(const Ne of le)"SpecialToken"in Ne?Y&&(de.push(Ne.SpecialToken.id),Te.push(Ne.SpecialToken.type_id)):"Sequence"in Ne&&(Ne.Sequence.id==="A"?(de=(0,o.mergeArrays)(de,I),Te=(0,o.mergeArrays)(Te,new Array(I.length).fill(Ne.Sequence.type_id))):Ne.Sequence.id==="B"&&(de=(0,o.mergeArrays)(de,N),Te=(0,o.mergeArrays)(Te,new Array(N.length).fill(Ne.Sequence.type_id))));return{tokens:de,token_type_ids:Te}}}class Be extends Me{post_process(I,N=null){return N&&(I=(0,o.mergeArrays)(I,N)),{tokens:I}}}class Qe extends Me{constructor(I){super(I),this.processors=I.processors.map(N=>Me.fromConfig(N))}post_process(I,N=null,Y={}){let le;for(const de of this.processors)if(de instanceof Be)I=de.post_process(I).tokens,N&&(N=de.post_process(N).tokens);else{const Te=de.post_process(I,N,Y);I=Te.tokens,le=Te.token_type_ids}return{tokens:I,token_type_ids:le}}}class xe extends s.Callable{constructor(I){super(),this.config=I,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=I.trim_offsets}static fromConfig(I){if(I===null)return null;switch(I.type){case"WordPiece":return new Oe(I);case"Metaspace":return new Er(I);case"ByteLevel":return new Ye(I);case"Replace":return new Ze(I);case"ByteFallback":return new Ke(I);case"Fuse":return new nt(I);case"Strip":return new Je(I);case"Sequence":return new It(I);case"CTC":return new ot(I);case"BPEDecoder":return new St(I);default:throw new Error(`Unknown Decoder type: ${I.type}`)}}_call(I){return this.decode(I)}decode(I){return this.decode_chain(I).join("")}decode_chain(I){throw Error("`decode_chain` should be implemented in subclass.")}}class Ze extends xe{decode_chain(I){const N=f(this.config.pattern);return N===null?I:I.map(Y=>Y.replaceAll(N,this.config.content))}}class Ke extends xe{constructor(I){super(I),this.text_decoder=new TextDecoder}decode_chain(I){const N=[];let Y=[];for(const le of I){let de=null;if(le.length===6&&le.startsWith("<0x")&&le.endsWith(">")){const Te=parseInt(le.slice(3,5),16);isNaN(Te)||(de=Te)}if(de!==null)Y.push(de);else{if(Y.length>0){const Te=this.text_decoder.decode(Uint8Array.from(Y));N.push(Te),Y=[]}N.push(le)}}if(Y.length>0){const le=this.text_decoder.decode(Uint8Array.from(Y));N.push(le),Y=[]}return N}}class nt extends xe{decode_chain(I){return[I.join("")]}}class Je extends xe{constructor(I){super(I),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(I){return I.map(N=>{let Y=0;for(let de=0;de<this.start&&N[de]===this.content;++de){Y=de+1;continue}let le=N.length;for(let de=0;de<this.stop;++de){const Te=N.length-de-1;if(N[Te]===this.content){le=Te;continue}else break}return N.slice(Y,le)})}}class Oe extends xe{constructor(I){super(I),this.cleanup=I.cleanup}decode_chain(I){return I.map((N,Y)=>(Y!==0&&(N.startsWith(this.config.prefix)?N=N.replace(this.config.prefix,""):N=" "+N),this.cleanup&&(N=k(N)),N))}}class Ye extends xe{constructor(I){super(I),this.byte_decoder=H,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(I){const N=I.join(""),Y=new Uint8Array([...N].map(de=>this.byte_decoder[de]));return this.text_decoder.decode(Y)}decode_chain(I){const N=[];let Y=[];for(const le of I)this.added_tokens.find(de=>de.content===le)!==void 0?(Y.length>0&&(N.push(this.convert_tokens_to_string(Y)),Y=[]),N.push(le)):Y.push(le);return Y.length>0&&N.push(this.convert_tokens_to_string(Y)),N}}class ot extends xe{constructor(I){super(I),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(I){if(I.length===0)return"";const N=[I[0]];for(let de=1;de<I.length;++de)I[de]!==N.at(-1)&&N.push(I[de]);let le=N.filter(de=>de!==this.pad_token).join("");return this.cleanup&&(le=k(le).replaceAll(this.word_delimiter_token," ").trim()),le}decode_chain(I){return[this.convert_tokens_to_string(I)]}}class It extends xe{constructor(I){super(I),this.decoders=I.decoders.map(N=>xe.fromConfig(N))}decode_chain(I){return this.decoders.reduce((N,Y)=>Y.decode_chain(N),I)}}class St extends xe{constructor(I){super(I),this.suffix=this.config.suffix}decode_chain(I){return I.map((N,Y)=>N.replaceAll(this.suffix,Y===I.length-1?"":" "))}}class wt extends xe{decode_chain(I){let N="";for(let Y=1;Y<I.length;Y+=2)N+=I[Y];return[N]}}class Mr extends X{constructor(I){super(),this.addPrefixSpace=I.add_prefix_space,this.replacement=I.replacement,this.strRep=I.str_rep||this.replacement,this.prepend_scheme=I.prepend_scheme??"always"}pre_tokenize_text(I,{section_index:N=void 0}={}){let Y=I.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!Y.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&N===0)&&(Y=this.strRep+Y),[Y]}}class Er extends xe{constructor(I){super(I),this.addPrefixSpace=I.add_prefix_space,this.replacement=I.replacement}decode_chain(I){const N=[];for(let Y=0;Y<I.length;++Y){let le=I[Y].replaceAll(this.replacement," ");this.addPrefixSpace&&Y==0&&le.startsWith(" ")&&(le=le.substring(1)),N.push(le)}return N}}class Rr extends ne{constructor(I){super(I),this.charsmap=I.precompiled_charsmap}normalize(I){return I=I.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),I=I.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),I.includes("～")?I=I.split("～").map(Y=>Y.normalize("NFKC")).join("～"):I=I.normalize("NFKC"),I}}class is extends X{constructor(I){super(),this.tokenizers=I.pretokenizers.map(N=>X.fromConfig(N))}pre_tokenize_text(I,N){return this.tokenizers.reduce((Y,le)=>le.pre_tokenize(Y,N),[I])}}class qt extends X{constructor(I){super()}pre_tokenize_text(I,N){return I.match(/\w+|[^\w\s]+/g)||[]}}class Pr extends X{constructor(I){super()}pre_tokenize_text(I,N){return y(I)}}class Us extends X{constructor(I){super(),this.config=I,this.pattern=f(this.config.pattern),this.content=this.config.content}pre_tokenize_text(I,N){return this.pattern===null?[I]:[I.replaceAll(this.pattern,this.config.content)]}}const Ws=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Gs(pe,I,N,Y){for(const le of Object.keys(pe)){const de=I-pe[le].length,Te=N(le),Ne=new Array(de).fill(Te);pe[le]=Y==="right"?(0,o.mergeArrays)(pe[le],Ne):(0,o.mergeArrays)(Ne,pe[le])}}function Ks(pe,I){for(const N of Object.keys(pe))pe[N].length=I}class pt extends s.Callable{constructor(N,Y){super();J(this,"return_token_type_ids",!1);J(this,"padding_side","right");this.config=Y,this.normalizer=ne.fromConfig(N.normalizer),this.pre_tokenizer=X.fromConfig(N.pre_tokenizer),this.model=G.fromConfig(N.model,Y),this.post_processor=Me.fromConfig(N.post_processor),this.decoder=xe.fromConfig(N.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const le of N.added_tokens){const de=new L(le);this.added_tokens.push(de),this.model.tokens_to_ids.set(de.content,de.id),this.model.vocab[de.id]=de.content,de.special&&(this.special_tokens.push(de.content),this.all_special_ids.push(de.id))}if(this.additional_special_tokens=Y.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map(le=>le.content)),this.added_tokens_map=new Map(this.added_tokens.map(le=>[le.content,le])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=Y.model_max_length,this.remove_space=Y.remove_space,this.clean_up_tokenization_spaces=Y.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=Y.do_lowercase_and_remove_accent??!1,Y.padding_side&&(this.padding_side=Y.padding_side),this.add_bos_token=Y.add_bos_token,this.add_eos_token=Y.add_eos_token,this.legacy=!1,this.chat_template=Y.chat_template??null,Array.isArray(this.chat_template)){const le=Object.create(null);for(const{name:de,template:Te}of this.chat_template){if(typeof de!="string"||typeof Te!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');le[de]=Te}this.chat_template=le}this._compiled_template_cache=new Map}getToken(...N){for(const Y of N){const le=this.config[Y];if(le)if(typeof le=="object"){if(le.__type==="AddedToken")return le.content;throw Error(`Unknown token: ${le}`)}else return le}return null}static async from_pretrained(N,{progress_callback:Y=null,config:le=null,cache_dir:de=null,local_files_only:Te=!1,revision:Ne="main",legacy:qe=null}={}){const We=await d(N,{progress_callback:Y,config:le,cache_dir:de,local_files_only:Te,revision:Ne,legacy:qe});return new this(...We)}_call(N,{text_pair:Y=null,add_special_tokens:le=!0,padding:de=!1,truncation:Te=null,max_length:Ne=null,return_tensor:qe=!0,return_token_type_ids:We=null}={}){const tt=Array.isArray(N);let Mt;if(tt){if(N.length===0)throw Error("text array must be non-empty");if(Y!==null){if(Array.isArray(Y)){if(N.length!==Y.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");Mt=N.map((Dt,sr)=>this._encode_plus(Dt,{text_pair:Y[sr],add_special_tokens:le,return_token_type_ids:We}))}else Mt=N.map(Dt=>this._encode_plus(Dt,{add_special_tokens:le,return_token_type_ids:We}))}else{if(N==null)throw Error("text may not be null or undefined");if(Array.isArray(Y))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");Mt=[this._encode_plus(N,{text_pair:Y,add_special_tokens:le,return_token_type_ids:We})]}if(Ne===null?Ne=this.model_max_length:Te===null&&(de===!0?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),Ne=this.model_max_length):de===!1&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),Te=!0)),de===!0&&(Ne=Math.min((0,i.max)(Mt.map(Dt=>Dt.input_ids.length))[0],Ne??1/0)),Ne=Math.min(Ne,this.model_max_length??1/0),de||Te)for(let Dt=0;Dt<Mt.length;++Dt)Mt[Dt].input_ids.length!==Ne&&(Mt[Dt].input_ids.length>Ne?Te&&Ks(Mt[Dt],Ne):de&&Gs(Mt[Dt],Ne,sr=>sr==="input_ids"?this.pad_token_id:0,this.padding_side));const Bt={};if(qe){if(!(de&&Te)&&Mt.some(sr=>{var Wt;for(const _r of Object.keys(sr))if(sr[_r].length!==((Wt=Mt[0][_r])==null?void 0:Wt.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const Dt=[Mt.length,Mt[0].input_ids.length];for(const sr of Object.keys(Mt[0]))Bt[sr]=new a.Tensor("int64",BigInt64Array.from(Mt.flatMap(Wt=>Wt[sr]).map(BigInt)),Dt)}else{for(const Dt of Object.keys(Mt[0]))Bt[Dt]=Mt.map(sr=>sr[Dt]);if(!tt)for(const Dt of Object.keys(Bt))Bt[Dt]=Bt[Dt][0]}return Bt}_encode_text(N){if(N===null)return null;const Y=this.added_tokens_splitter.split(N);for(let de=0;de<Y.length;++de){const Te=this.added_tokens_map.get(Y[de]);Te&&(Te.lstrip&&de>0&&(Y[de-1]=Y[de-1].trimEnd()),Te.rstrip&&de<Y.length-1&&(Y[de+1]=Y[de+1].trimStart()))}return Y.flatMap((de,Te)=>{if(de.length===0)return[];if(this.added_tokens_map.has(de))return[de];if(this.remove_space===!0&&(de=de.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(de=M(de)),this.normalizer!==null&&(de=this.normalizer(de)),de.length===0)return[];const Ne=this.pre_tokenizer!==null?this.pre_tokenizer(de,{section_index:Te}):[de];return this.model(Ne)})}_encode_plus(N,{text_pair:Y=null,add_special_tokens:le=!0,return_token_type_ids:de=null}={}){const{tokens:Te,token_type_ids:Ne}=this._tokenize_helper(N,{pair:Y,add_special_tokens:le}),qe=this.model.convert_tokens_to_ids(Te),We={input_ids:qe,attention_mask:new Array(qe.length).fill(1)};return(de??this.return_token_type_ids)&&Ne&&(We.token_type_ids=Ne),We}_tokenize_helper(N,{pair:Y=null,add_special_tokens:le=!1}={}){const de=this._encode_text(N),Te=this._encode_text(Y);return this.post_processor?this.post_processor(de,Te,{add_special_tokens:le}):{tokens:(0,o.mergeArrays)(de??[],Te??[])}}tokenize(N,{pair:Y=null,add_special_tokens:le=!1}={}){return this._tokenize_helper(N,{pair:Y,add_special_tokens:le}).tokens}encode(N,{text_pair:Y=null,add_special_tokens:le=!0,return_token_type_ids:de=null}={}){return this._encode_plus(N,{text_pair:Y,add_special_tokens:le,return_token_type_ids:de}).input_ids}batch_decode(N,Y={}){return N instanceof a.Tensor&&(N=N.tolist()),N.map(le=>this.decode(le,Y))}decode(N,Y={}){if(N instanceof a.Tensor&&(N=b(N)),!Array.isArray(N)||N.length===0||!(0,o.isIntegralNumber)(N[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(N,Y)}decode_single(N,{skip_special_tokens:Y=!1,clean_up_tokenization_spaces:le=null}){let de=this.model.convert_ids_to_tokens(N);Y&&(de=de.filter(Ne=>!this.special_tokens.includes(Ne)));let Te=this.decoder?this.decoder(de):de.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Te=Te.replaceAll(this.decoder.end_of_word_suffix," "),Y&&(Te=Te.trim())),(le??this.clean_up_tokenization_spaces)&&(Te=k(Te)),Te}get_chat_template({chat_template:N=null,tools:Y=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const le=this.chat_template;if(N!==null&&Object.hasOwn(le,N))N=le[N];else if(N===null)if(Y!==null&&"tool_use"in le)N=le.tool_use;else if("default"in le)N=le.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(le).sort()}.`)}else if(N===null)if(this.chat_template)N=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return N}apply_chat_template(N,{tools:Y=null,documents:le=null,chat_template:de=null,add_generation_prompt:Te=!1,tokenize:Ne=!0,padding:qe=!1,truncation:We=!1,max_length:tt=null,return_tensor:Mt=!0,return_dict:Bt=!1,tokenizer_kwargs:Dt={},...sr}={}){if(de=this.get_chat_template({chat_template:de,tools:Y}),typeof de!="string")throw Error(`chat_template must be a string, but got ${typeof de}`);let Wt=this._compiled_template_cache.get(de);Wt===void 0&&(Wt=new c.Template(de),this._compiled_template_cache.set(de,Wt));const _r=Object.create(null);for(const or of Ws){const fr=this.getToken(or);fr&&(_r[or]=fr)}const br=Wt.render({messages:N,add_generation_prompt:Te,tools:Y,documents:le,..._r,...sr});if(Ne){const or=this._call(br,{add_special_tokens:!1,padding:qe,truncation:We,max_length:tt,return_tensor:Mt,...Dt});return Bt?or:or.input_ids}return br}}class $s extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class ks extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class Ct extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class Qt extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class S extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class Q extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class B extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class q extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class re extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class ge extends pt{}class Fe extends pt{}class rt extends pt{constructor(N,Y){super(N,Y);J(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class ft extends pt{constructor(){super(...arguments);J(this,"return_token_type_ids",!0)}}class mt extends pt{}class vt extends pt{}class st extends pt{}class zt extends pt{constructor(I,N){super(I,N),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(Y=>this.languageRegex.test(Y)),this.lang_to_token=Y=>Y}_build_translation_inputs(I,N,Y){return Or(this,I,N,Y)}}class Nt extends zt{}class jr extends pt{}class qr extends pt{}const rr="▁";class Cr extends pt{constructor(N,Y){super(N,Y);J(this,"padding_side","left");this.legacy=Y.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Mr({replacement:rr,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(N){if(N===null)return null;if(this.legacy||N.length===0)return super._encode_text(N);let Y=super._encode_text(rr+N.replaceAll(rr," "));return Y.length>1&&Y[0]===rr&&this.special_tokens.includes(Y[1])&&(Y=Y.slice(1)),Y}}class Sr extends pt{}class Nr extends pt{}class as extends pt{}class $r extends pt{}class Is extends pt{}class As extends pt{}class Vr extends pt{}class Ur extends pt{}class Zr extends pt{}function Or(pe,I,N,Y){if(!("language_codes"in pe)||!Array.isArray(pe.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in pe)||!(pe.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in pe)||typeof pe.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const le=Y.src_lang,de=Y.tgt_lang;if(!pe.language_codes.includes(de))throw new Error(`Target language code "${de}" is not valid. Must be one of: {${pe.language_codes.join(", ")}}`);if(le!==void 0){if(!pe.language_codes.includes(le))throw new Error(`Source language code "${le}" is not valid. Must be one of: {${pe.language_codes.join(", ")}}`);for(const Te of pe.post_processor.config.single)if("SpecialToken"in Te&&pe.languageRegex.test(Te.SpecialToken.id)){Te.SpecialToken.id=pe.lang_to_token(le);break}}return Y.forced_bos_token_id=pe.model.convert_tokens_to_ids([pe.lang_to_token(de)])[0],pe._call(I,N)}class ms extends pt{constructor(I,N){super(I,N),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(Y=>this.languageRegex.test(Y)),this.lang_to_token=Y=>Y}_build_translation_inputs(I,N,Y){return Or(this,I,N,Y)}}class pr extends pt{constructor(I,N){super(I,N),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(Y=>this.languageRegex.test(Y)).map(Y=>Y.slice(2,-2)),this.lang_to_token=Y=>`__${Y}__`}_build_translation_inputs(I,N,Y){return Or(this,I,N,Y)}}class hr extends pt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(I,{return_timestamps:N=!1,return_language:Y=!1,time_precision:le=null,force_full_sequences:de=!0}={}){if(le===null)throw Error("Must specify time_precision");let Te=null;const Ne=N==="word";function qe(){return{language:Te,timestamp:[null,null],text:""}}const We=[];let tt=qe(),Mt=0;const Bt=this.timestamp_begin,sr=Bt+1500;let Wt=[],_r=[],br=!1,or=null;const fr=new Set(this.all_special_ids);for(const Yt of I){const gr=Yt.tokens,Gr=Ne?Yt.token_timestamps:null;let zr=null,fs=Bt;if("stride"in Yt){const[cr,ir,mr]=Yt.stride;if(Mt-=ir,or=cr-mr,ir&&(fs=ir/le+Bt),mr)for(let nr=gr.length-1;nr>=0;--nr){const Kr=Number(gr[nr]);if(Kr>=Bt){if(zr!==null&&(Kr-Bt)*le<or)break;zr=Kr}}}let kr=[],ls=[];for(let cr=0;cr<gr.length;++cr){const ir=Number(gr[cr]);if(fr.has(ir)){const mr=this.decode([ir]),nr=p.WHISPER_LANGUAGE_MAPPING.get(mr.slice(2,-2));if(nr!==void 0){if(Te!==null&&nr!==Te&&!N){Wt.push(kr);const Kr=this.findLongestCommonSequence(Wt)[0],Bs=this.decode(Kr);tt.text=Bs,We.push(tt),Wt=[],kr=[],tt=qe()}Te=tt.language=nr}}else if(ir>=Bt&&ir<=sr){const mr=(ir-Bt)*le+Mt,nr=(0,i.round)(mr,2);if(zr!==null&&ir>=zr)br=!0;else if(br||Wt.length>0&&ir<fs)br=!1;else if(tt.timestamp[0]===null)tt.timestamp[0]=nr;else if(nr!==tt.timestamp[0]){tt.timestamp[1]=nr,Wt.push(kr),Ne&&_r.push(ls);const[Kr,Bs]=this.findLongestCommonSequence(Wt,_r),zn=this.decode(Kr);tt.text=zn,Ne&&(tt.words=this.collateWordTimestamps(Kr,Bs,Te)),We.push(tt),Wt=[],kr=[],_r=[],ls=[],tt=qe()}}else if(kr.push(ir),Ne){let mr=(0,i.round)(Gr[cr]+Mt,2),nr;if(cr+1<Gr.length){nr=(0,i.round)(Gr[cr+1]+Mt,2);const Kr=this.decode([ir]);x.test(Kr)&&(nr=(0,i.round)(Math.min(mr+le,nr),2))}else nr=null;ls.push([mr,nr])}}if("stride"in Yt){const[cr,ir,mr]=Yt.stride;Mt+=cr-mr}kr.length>0?(Wt.push(kr),Ne&&_r.push(ls)):Wt.every(cr=>cr.length===0)&&(tt=qe(),Wt=[],kr=[],_r=[],ls=[])}if(Wt.length>0){if(de&&N)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Yt,gr]=this.findLongestCommonSequence(Wt,_r),Gr=this.decode(Yt);tt.text=Gr,Ne&&(tt.words=this.collateWordTimestamps(Yt,gr,Te)),We.push(tt)}let Dr=Object.create(null);const Xr=We.map(Yt=>Yt.text).join("");if(N||Y){for(let Yt=0;Yt<We.length;++Yt){const gr=We[Yt];N||delete gr.timestamp,Y||delete gr.language}if(Ne){const Yt=[];for(const gr of We)for(const Gr of gr.words)Yt.push(Gr);Dr={chunks:Yt}}else Dr={chunks:We}}return[Xr,Dr]}findLongestCommonSequence(I,N=null){let Y=I[0],le=Y.length,de=[];const Te=Array.isArray(N)&&N.length>0;let Ne=Te?[]:null,qe=Te?N[0]:null;for(let We=1;We<I.length;++We){const tt=I[We];let Mt=0,Bt=[le,le,0,0];const Dt=tt.length;for(let Dr=1;Dr<le+Dt;++Dr){const Xr=Math.max(0,le-Dr),Yt=Math.min(le,le+Dt-Dr),gr=Y.slice(Xr,Yt),Gr=Math.max(0,Dr-le),zr=Math.min(Dt,Dr),fs=tt.slice(Gr,zr);if(gr.length!==fs.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let kr;Te?kr=gr.filter((ir,mr)=>ir===fs[mr]&&qe[Xr+mr]<=N[We][Gr+mr]).length:kr=gr.filter((ir,mr)=>ir===fs[mr]).length;const ls=Dr/1e4,cr=kr/Dr+ls;kr>1&&cr>Mt&&(Mt=cr,Bt=[Xr,Yt,Gr,zr])}const[sr,Wt,_r,br]=Bt,or=Math.floor((Wt+sr)/2),fr=Math.floor((br+_r)/2);de.push(...Y.slice(0,or)),Y=tt.slice(fr),le=Y.length,Te&&(Ne.push(...qe.slice(0,or)),qe=N[We].slice(fr))}return de.push(...Y),Te?(Ne.push(...qe),[de,Ne]):[de,[]]}collateWordTimestamps(I,N,Y){const[le,de,Te]=this.combineTokensIntoWords(I,Y),Ne=[];for(let qe=0;qe<le.length;++qe){const We=Te[qe];Ne.push({text:le[qe],timestamp:[N[We.at(0)][0],N[We.at(-1)][1]]})}return Ne}combineTokensIntoWords(I,N,Y=`"'“¡¿([{-`,le=`"'.。,，!！?？:：”)]}、`){N=N??"english";let de,Te,Ne;return["chinese","japanese","thai","lao","myanmar"].includes(N)?[de,Te,Ne]=this.splitTokensOnUnicode(I):[de,Te,Ne]=this.splitTokensOnSpaces(I),this.mergePunctuations(de,Te,Ne,Y,le)}decode(I,N){let Y;return N!=null&&N.decode_with_timestamps?(I instanceof a.Tensor&&(I=b(I)),Y=this.decodeWithTimestamps(I,N)):Y=super.decode(I,N),Y}decodeWithTimestamps(I,N){const Y=(N==null?void 0:N.time_precision)??.02,le=Array.from(this.all_special_ids).at(-1)+1;let de=[[]];for(let Te of I)if(Te=Number(Te),Te>=le){const Ne=((Te-le)*Y).toFixed(2);de.push(`<|${Ne}|>`),de.push([])}else de[de.length-1].push(Te);return de=de.map(Te=>typeof Te=="string"?Te:super.decode(Te,N)),de.join("")}splitTokensOnUnicode(I){const N=this.decode(I,{decode_with_timestamps:!0}),Y="�",le=[],de=[],Te=[];let Ne=[],qe=[],We=0;for(let tt=0;tt<I.length;++tt){const Mt=I[tt];Ne.push(Mt),qe.push(tt);const Bt=this.decode(Ne,{decode_with_timestamps:!0});(!Bt.includes(Y)||N[We+Bt.indexOf(Y)]===Y)&&(le.push(Bt),de.push(Ne),Te.push(qe),Ne=[],qe=[],We+=Bt.length)}return[le,de,Te]}splitTokensOnSpaces(I){const[N,Y,le]=this.splitTokensOnUnicode(I),de=[],Te=[],Ne=[],qe=new RegExp(`^[${T}]$`,"gu");for(let We=0;We<N.length;++We){const tt=N[We],Mt=Y[We],Bt=le[We],Dt=Mt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),sr=tt.startsWith(" "),Wt=tt.trim(),_r=qe.test(Wt);if(Dt||sr||_r||de.length===0)de.push(tt),Te.push(Mt),Ne.push(Bt);else{const br=de.length-1;de[br]+=tt,Te[br].push(...Mt),Ne[br].push(...Bt)}}return[de,Te,Ne]}mergePunctuations(I,N,Y,le,de){const Te=structuredClone(I),Ne=structuredClone(N),qe=structuredClone(Y);let We=Te.length-2,tt=Te.length-1;for(;We>=0;)Te[We].startsWith(" ")&&le.includes(Te[We].trim())?(Te[tt]=Te[We]+Te[tt],Ne[tt]=(0,o.mergeArrays)(Ne[We],Ne[tt]),qe[tt]=(0,o.mergeArrays)(qe[We],qe[tt]),Te[We]="",Ne[We]=[],qe[We]=[]):tt=We,--We;for(We=0,tt=1;tt<Te.length;)!Te[We].endsWith(" ")&&de.includes(Te[tt])?(Te[We]+=Te[tt],Ne[We]=(0,o.mergeArrays)(Ne[We],Ne[tt]),qe[We]=(0,o.mergeArrays)(qe[We],qe[tt]),Te[tt]="",Ne[tt]=[],qe[tt]=[]):We=tt,++tt;return[Te.filter(Mt=>Mt),Ne.filter(Mt=>Mt.length>0),qe.filter(Mt=>Mt.length>0)]}}class Qr extends pt{}class Ds extends pt{}class Wr extends pt{}class Re extends pt{constructor(I,N){super(I,N),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(Y=>this.languageRegex.test(Y)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(I){if(I===null)return null;const[N,...Y]=I.trim().split(this.languageRegex);if(Y.length===0)return super._encode_text(N);if(Y.length===2){const[le,de]=Y;return this.supported_language_codes.includes(le)||console.warn(`Unsupported language code "${le}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,o.mergeArrays)([le],super._encode_text(de))}}}class je extends pt{}class et extends pt{}class Xt extends pt{}class Ls extends pt{}class hs extends pt{}class zs extends pt{constructor(I,N){super(I,N),this.decoder=new wt({})}}class _s extends pt{}class an extends pt{}class ln extends pt{}class cn{static async from_pretrained(I,{progress_callback:N=null,config:Y=null,cache_dir:le=null,local_files_only:de=!1,revision:Te="main",legacy:Ne=null}={}){var Bt;const[qe,We]=await d(I,{progress_callback:N,config:Y,cache_dir:le,local_files_only:de,revision:Te,legacy:Ne}),tt=((Bt=We.tokenizer_class)==null?void 0:Bt.replace(/Fast$/,""))??"PreTrainedTokenizer";let Mt=this.TOKENIZER_CLASS_MAPPING[tt];return Mt||(console.warn(`Unknown tokenizer class "${tt}", attempting to construct from base class.`),Mt=pt),new Mt(qe,We)}}J(cn,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:mt,DistilBertTokenizer:ge,CamembertTokenizer:Fe,DebertaTokenizer:S,DebertaV2Tokenizer:Q,BertTokenizer:$s,HerbertTokenizer:B,ConvBertTokenizer:q,RoFormerTokenizer:re,XLMTokenizer:rt,ElectraTokenizer:ft,MobileBertTokenizer:Ct,SqueezeBertTokenizer:Qt,AlbertTokenizer:ks,GPT2Tokenizer:vt,BartTokenizer:st,MBartTokenizer:zt,MBart50Tokenizer:Nt,RobertaTokenizer:jr,WhisperTokenizer:hr,CodeGenTokenizer:Qr,CLIPTokenizer:Ds,SiglipTokenizer:Wr,MarianTokenizer:Re,BloomTokenizer:qr,NllbTokenizer:ms,M2M100Tokenizer:pr,LlamaTokenizer:Cr,CodeLlamaTokenizer:Sr,XLMRobertaTokenizer:Nr,MPNetTokenizer:as,FalconTokenizer:$r,GPTNeoXTokenizer:Is,EsmTokenizer:As,Wav2Vec2CTCTokenizer:je,BlenderbotTokenizer:et,BlenderbotSmallTokenizer:Xt,SpeechT5Tokenizer:Ls,NougatTokenizer:hs,VitsTokenizer:zs,Qwen2Tokenizer:Vr,GemmaTokenizer:Ur,Grok1Tokenizer:Zr,CohereTokenizer:_s,MgpstrTokenizer:an,Ernie4_5_Tokenizer:ln,PreTrainedTokenizer:pt})},"./src/utils/audio.js":(e,r,t)=>{t.r(r),t.d(r,{RawAudio:()=>K,hamming:()=>u,hanning:()=>d,mel_filter_bank:()=>$,read_audio:()=>c,spectrogram:()=>P,window_function:()=>O});var s=t("./src/utils/hub.js"),o=t("./src/utils/maths.js"),n=t("./src/utils/core.js"),i=t("./src/env.js"),a=t("./src/utils/tensor.js"),l=t("?7992");async function c(R,te){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const H=await(await(0,s.getFile)(R)).arrayBuffer(),ee=new AudioContext({sampleRate:te});typeof te>"u"&&console.warn(`No sampling rate provided, using default of ${ee.sampleRate}Hz.`);const Z=await ee.decodeAudioData(H);let ne;if(Z.numberOfChannels===2){const he=Math.sqrt(2),ue=Z.getChannelData(0),j=Z.getChannelData(1);ne=new Float32Array(ue.length);for(let F=0;F<Z.length;++F)ne[F]=he*(ue[F]+j[F])/2}else ne=Z.getChannelData(0);return ne}function p(R,te){if(R<1)return new Float64Array;if(R===1)return new Float64Array([1]);const H=1-te,ee=2*Math.PI/(R-1),Z=new Float64Array(R);for(let ne=0;ne<R;++ne)Z[ne]=te-H*Math.cos(ne*ee);return Z}function d(R){return p(R,.5)}function u(R){return p(R,.54)}const f={htk:R=>2595*Math.log10(1+R/700),kaldi:R=>1127*Math.log(1+R/700),slaney:(R,te=1e3,H=15,ee=27/Math.log(6.4))=>R>=te?H+Math.log(R/te)*ee:3*R/200};function _(R,te="htk"){const H=f[te];if(!H)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof R=="number"?H(R):R.map(ee=>H(ee))}const b={htk:R=>700*(10**(R/2595)-1),kaldi:R=>700*(Math.exp(R/1127)-1),slaney:(R,te=1e3,H=15,ee=Math.log(6.4)/27)=>R>=H?te*Math.exp(ee*(R-H)):200*R/3};function k(R,te="htk"){const H=b[te];if(!H)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof R=="number"?H(R):R.map(ee=>H(ee))}function g(R,te){const H=Float64Array.from({length:te.length-1},(he,ue)=>te[ue+1]-te[ue]),ee=Array.from({length:R.length},()=>new Array(te.length));for(let he=0;he<R.length;++he){const ue=ee[he];for(let j=0;j<te.length;++j)ue[j]=te[j]-R[he]}const Z=te.length-2,ne=Array.from({length:Z},()=>new Array(R.length));for(let he=0;he<R.length;++he){const ue=ee[he];for(let j=0;j<Z;++j){const F=-ue[j]/H[j],U=ue[j+2]/H[j+1];ne[j][he]=Math.max(0,Math.min(F,U))}}return ne}function M(R,te,H){const ee=(te-R)/(H-1);return Float64Array.from({length:H},(Z,ne)=>R+ee*ne)}function $(R,te,H,ee,Z,ne=null,he="htk",ue=!1){if(ne!==null&&ne!=="slaney")throw new Error('norm must be one of null or "slaney"');if(R<2)throw new Error(`Require num_frequency_bins: ${R} >= 2`);if(H>ee)throw new Error(`Require min_frequency: ${H} <= max_frequency: ${ee}`);const j=_(H,he),F=_(ee,he),U=M(j,F,te+2);let se=k(U,he),_e;if(ue){const ve=Z/((R-1)*2);_e=_(Float64Array.from({length:R},(ze,Ge)=>Ge*ve),he),se=U}else _e=M(0,Math.floor(Z/2),R);const ie=g(_e,se);if(ne!==null&&ne==="slaney")for(let ve=0;ve<te;++ve){const ze=ie[ve],Ge=2/(se[ve+2]-se[ve]);for(let Ie=0;Ie<R;++Ie)ze[Ie]*=Ge}return ie}function v(R,te,H){const ee=new R.constructor(R.length+te+H),Z=R.length-1;for(let ne=0;ne<R.length;++ne)ee[te+ne]=R[ne];for(let ne=1;ne<=te;++ne)ee[te-ne]=R[(0,n.calculateReflectOffset)(ne,Z)];for(let ne=1;ne<=H;++ne)ee[Z+te+ne]=R[(0,n.calculateReflectOffset)(Z-ne,Z)];return ee}function y(R,te,H,ee,Z){if(H<=0)throw new Error("reference must be greater than zero");if(ee<=0)throw new Error("min_value must be greater than zero");H=Math.max(ee,H);const ne=Math.log10(H);for(let he=0;he<R.length;++he)R[he]=te*Math.log10(Math.max(ee,R[he])-ne);if(Z!==null){if(Z<=0)throw new Error("db_range must be greater than zero");const he=(0,o.max)(R)[0]-Z;for(let ue=0;ue<R.length;++ue)R[ue]=Math.max(R[ue],he)}return R}function T(R,te=1,H=1e-5,ee=null){return y(R,20,te,H,ee)}function x(R,te=1,H=1e-10,ee=null){return y(R,10,te,H,ee)}async function P(R,te,H,ee,{fft_length:Z=null,power:ne=1,center:he=!0,pad_mode:ue="reflect",onesided:j=!0,preemphasis:F=null,preemphasis_htk_flavor:U=!0,mel_filters:se=null,mel_floor:_e=1e-10,log_mel:ie=null,reference:ve=1,min_value:ze=1e-10,db_range:Ge=null,remove_dc_offset:Ie=null,min_num_frames:X=null,max_num_frames:ae=null,do_pad:W=!0,transpose:be=!1}={}){const ke=te.length;if(Z===null&&(Z=H),H>Z)throw Error(`frame_length (${H}) may not be larger than fft_length (${Z})`);if(ke!==H)throw new Error(`Length of the window (${ke}) must equal frame_length (${H})`);if(ee<=0)throw new Error("hop_length must be greater than zero");if(ne===null&&se!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(!U)throw new Error("`preemphasis_htk_flavor=false` is not currently supported.");if(he){if(ue!=="reflect")throw new Error(`pad_mode="${ue}" not implemented yet.`);const Je=Math.floor((Z-1)/2)+1;R=v(R,Je,Je)}let Ee=Math.floor(1+Math.floor((R.length-H)/ee));X!==null&&Ee<X&&(Ee=X);const Me=j?Math.floor(Z/2)+1:Z;let Se=Ee,we=Ee;ae!==null&&(ae>Ee?W&&(we=ae):we=Se=ae);const Ae=new o.FFT(Z),Be=new Float64Array(Z),Qe=new Float64Array(Ae.outputBufferSize),xe=new Float32Array(Me*we);for(let Je=0;Je<Se;++Je){const Oe=Je*ee,Ye=Math.min(R.length-Oe,H);Ye!==H&&Be.fill(0,0,H);for(let ot=0;ot<Ye;++ot)Be[ot]=R[Oe+ot];if(Ie){let ot=0;for(let St=0;St<Ye;++St)ot+=Be[St];const It=ot/Ye;for(let St=0;St<Ye;++St)Be[St]-=It}if(F!==null){for(let ot=Ye-1;ot>=1;--ot)Be[ot]-=F*Be[ot-1];Be[0]*=1-F}for(let ot=0;ot<te.length;++ot)Be[ot]*=te[ot];Ae.realTransform(Qe,Be);for(let ot=0;ot<Me;++ot){const It=ot<<1;xe[ot*we+Je]=Qe[It]**2+Qe[It+1]**2}}if(ne!==null&&ne!==2){const Je=ne/2;for(let Oe=0;Oe<xe.length;++Oe)xe[Oe]**=Je}const Ze=se.length;let Ke=await(0,a.matmul)(new a.Tensor("float32",se.flat(),[Ze,Me]),new a.Tensor("float32",xe,[Me,we]));be&&(Ke=Ke.transpose(1,0));const nt=Ke.data;for(let Je=0;Je<nt.length;++Je)nt[Je]=Math.max(_e,nt[Je]);if(ne!==null&&ie!==null){const Je=Math.min(nt.length,Se*Ze);switch(ie){case"log":for(let Oe=0;Oe<Je;++Oe)nt[Oe]=Math.log(nt[Oe]);break;case"log10":for(let Oe=0;Oe<Je;++Oe)nt[Oe]=Math.log10(nt[Oe]);break;case"dB":if(ne===1)T(nt,ve,ze,Ge);else if(ne===2)x(nt,ve,ze,Ge);else throw new Error(`Cannot use log_mel option '${ie}' with power ${ne}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${ie}'`)}}return Ke}function O(R,te,{periodic:H=!0,frame_length:ee=null,center:Z=!0}={}){const ne=H?R+1:R;let he;switch(te){case"boxcar":he=new Float64Array(ne).fill(1);break;case"hann":case"hann_window":he=d(ne);break;case"hamming":he=u(ne);break;case"povey":he=d(ne).map(ue=>Math.pow(ue,.85));break;default:throw new Error(`Unknown window type ${te}.`)}if(H&&(he=he.subarray(0,R)),ee===null)return he;if(R>ee)throw new Error(`Length of the window (${R}) may not be larger than frame_length (${ee})`);return he}function L(R,te){let H=44;const ee=new ArrayBuffer(H+R.length*4),Z=new DataView(ee);G(Z,0,"RIFF"),Z.setUint32(4,36+R.length*4,!0),G(Z,8,"WAVE"),G(Z,12,"fmt "),Z.setUint32(16,16,!0),Z.setUint16(20,3,!0),Z.setUint16(22,1,!0),Z.setUint32(24,te,!0),Z.setUint32(28,te*4,!0),Z.setUint16(32,4,!0),Z.setUint16(34,32,!0),G(Z,36,"data"),Z.setUint32(40,R.length*4,!0);for(let ne=0;ne<R.length;++ne,H+=4)Z.setFloat32(H,R[ne],!0);return ee}function G(R,te,H){for(let ee=0;ee<H.length;++ee)R.setUint8(te+ee,H.charCodeAt(ee))}class K{constructor(te,H){this.audio=te,this.sampling_rate=H}toWav(){return L(this.audio,this.sampling_rate)}toBlob(){const te=this.toWav();return new Blob([te],{type:"audio/wav"})}async save(te){let H;if(i.apis.IS_BROWSER_ENV){if(i.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");H=n.saveBlob}else if(i.apis.IS_FS_AVAILABLE)H=async(ee,Z)=>{let ne=await Z.arrayBuffer();l.writeFileSync(ee,Buffer.from(ne))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await H(te,this.toBlob())}}},"./src/utils/constants.js":(e,r,t)=>{t.r(r),t.d(r,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>o,FEATURE_EXTRACTOR_NAME:()=>n,GENERATION_CONFIG_NAME:()=>c,GITHUB_ISSUE_URL:()=>s,IMAGE_PROCESSOR_NAME:()=>i,PROCESSOR_NAME:()=>a});const s="https://github.com/huggingface/transformers.js/issues/new/choose",o="config.json",n="preprocessor_config.json",i=n,a="processor_config.json",l="chat_template.jinja",c="generation_config.json"},"./src/utils/core.js":(e,r,t)=>{t.r(r),t.d(r,{calculateDimensions:()=>c,calculateReflectOffset:()=>f,count:()=>g,dispatchCallback:()=>s,escapeRegExp:()=>n,isIntegralNumber:()=>a,isNullishDimension:()=>l,isTypedArray:()=>i,len:()=>k,mergeArrays:()=>d,pick:()=>b,pop:()=>p,product:()=>u,reverseDictionary:()=>o,saveBlob:()=>_});function s(M,$){M&&M($)}function o(M){return Object.fromEntries(Object.entries(M).map(([$,v])=>[v,$]))}function n(M){return M.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function i(M){var $,v,y;return((y=(v=($=M==null?void 0:M.prototype)==null?void 0:$.__proto__)==null?void 0:v.constructor)==null?void 0:y.name)==="TypedArray"}function a(M){return Number.isInteger(M)||typeof M=="bigint"}function l(M){return M==null||M===-1}function c(M){const $=[];let v=M;for(;Array.isArray(v);)$.push(v.length),v=v[0];return $}function p(M,$,v=void 0){const y=M[$];if(y!==void 0)return delete M[$],y;if(v===void 0)throw Error(`Key ${$} does not exist in object.`);return v}function d(...M){return Array.prototype.concat.apply([],M)}function u(...M){return M.reduce(($,v)=>$.flatMap(y=>v.map(T=>[y,T])))}function f(M,$){return Math.abs((M+$)%(2*$)-$)}function _(M,$){const v=URL.createObjectURL($),y=document.createElement("a");y.href=v,y.download=M,y.click(),y.remove(),URL.revokeObjectURL(v)}function b(M,$){return Object.assign({},...$.map(v=>{if(M[v]!==void 0)return{[v]:M[v]}}))}function k(M){let $=0;for(const v of M)++$;return $}function g(M,$){let v=0;for(const y of M)y===$&&++v;return v}},"./src/utils/data-structures.js":(e,r,t)=>{t.r(r),t.d(r,{CharTrie:()=>o,DictionarySplitter:()=>l,LRUCache:()=>c,PriorityQueue:()=>s,TokenLattice:()=>i});class s{constructor(d=(f,_)=>f>_,u=1/0){this._heap=[],this._comparator=d,this._maxSize=u}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...d){return this.extend(d)}extend(d){for(const u of d)if(this.size<this._maxSize)this._heap.push(u),this._siftUp();else{const f=this._smallest();this._comparator(u,this._heap[f])&&(this._heap[f]=u,this._siftUpFrom(f))}return this.size}pop(){const d=this.peek(),u=this.size-1;return u>0&&this._swap(0,u),this._heap.pop(),this._siftDown(),d}replace(d){const u=this.peek();return this._heap[0]=d,this._siftDown(),u}_parent(d){return(d+1>>>1)-1}_left(d){return(d<<1)+1}_right(d){return d+1<<1}_greater(d,u){return this._comparator(this._heap[d],this._heap[u])}_swap(d,u){const f=this._heap[d];this._heap[d]=this._heap[u],this._heap[u]=f}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(d){for(;d>0&&this._greater(d,this._parent(d));)this._swap(d,this._parent(d)),d=this._parent(d)}_siftDown(){let d=0;for(;this._left(d)<this.size&&this._greater(this._left(d),d)||this._right(d)<this.size&&this._greater(this._right(d),d);){const u=this._right(d)<this.size&&this._greater(this._right(d),this._left(d))?this._right(d):this._left(d);this._swap(d,u),d=u}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class o{constructor(){this.root=n.default()}extend(d){for(const u of d)this.push(u)}push(d){let u=this.root;for(const f of d){let _=u.children.get(f);_===void 0&&(_=n.default(),u.children.set(f,_)),u=_}u.isLeaf=!0}*commonPrefixSearch(d){let u=this.root;if(u===void 0)return;let f="";for(const _ of d){if(f+=_,u=u.children.get(_),u===void 0)return;u.isLeaf&&(yield f)}}}class n{constructor(d,u){this.isLeaf=d,this.children=u}static default(){return new n(!1,new Map)}}class i{constructor(d,u,f){this.chars=Array.from(d),this.len=this.chars.length,this.bosTokenId=u,this.eosTokenId=f,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const _=new a(this.bosTokenId,0,0,0,0),b=new a(this.eosTokenId,1,this.len,0,0);this.nodes.push(_.clone()),this.nodes.push(b.clone()),this.beginNodes[this.len].push(b),this.endNodes[0].push(_)}insert(d,u,f,_){const b=this.nodes.length,k=new a(_,b,d,u,f);this.beginNodes[d].push(k),this.endNodes[d+u].push(k),this.nodes.push(k)}viterbi(){const d=this.len;let u=0;for(;u<=d;){if(this.beginNodes[u].length==0)return[];for(let g of this.beginNodes[u]){g.prev=null;let M=0,$=null;for(let v of this.endNodes[u]){const y=v.backtraceScore+g.score;($===null||y>M)&&($=v.clone(),M=y)}if($!==null)g.prev=$,g.backtraceScore=M;else return[]}++u}const f=[],b=this.beginNodes[d][0].prev;if(b===null)return[];let k=b.clone();for(;k.prev!==null;)f.push(k.clone()),k=k.clone().prev.clone();return f.reverse(),f}piece(d){return this.chars.slice(d.pos,d.pos+d.length).join("")}tokens(){return this.viterbi().map(u=>this.piece(u))}tokenIds(){return this.viterbi().map(u=>u.tokenId)}}class a{constructor(d,u,f,_,b){this.tokenId=d,this.nodeId=u,this.pos=f,this.length=_,this.score=b,this.prev=null,this.backtraceScore=0}clone(){const d=new a(this.tokenId,this.nodeId,this.pos,this.length,this.score);return d.prev=this.prev,d.backtraceScore=this.backtraceScore,d}}class l{constructor(d){this.trie=this._buildTrie(d)}_buildTrie(d){var f;const u=Object.create(null);for(const _ of d){let b=u;for(let k=0;k<_.length;++k)b=b[f=_[k]]??(b[f]=Object.create(null));b.end=_}return u}split(d){const u=[],f=d.length;let _=0,b=0;for(;b<f;){let k=this.trie,g=null,M=b;for(;M<f&&(k=k[d[M]]);)k.end&&(g=k.end),++M;g?(b>_&&u.push(d.slice(_,b)),u.push(g),b+=g.length,_=b):++b}return _<f&&u.push(d.slice(_)),u}}class c{constructor(d){this.capacity=d,this.cache=new Map}get(d){if(!this.cache.has(d))return;const u=this.cache.get(d);return this.cache.delete(d),this.cache.set(d,u),u}put(d,u){this.cache.has(d)&&this.cache.delete(d),this.cache.set(d,u),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":(e,r,t)=>{t.r(r),t.d(r,{DEVICE_TYPES:()=>s});const s=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,r,t)=>{t.r(r),t.d(r,{DATA_TYPES:()=>i,DEFAULT_DEVICE_DTYPE_MAPPING:()=>a,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>n});var s=t("./src/env.js"),o=t("./src/utils/devices.js");const n=function(){let c;return async function(){if(c===void 0)if(!s.apis.IS_WEBGPU_AVAILABLE)c=!1;else try{c=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{c=!1}return c}}(),i=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),a=Object.freeze({[o.DEVICE_TYPES.wasm]:i.q8}),l=Object.freeze({[i.fp32]:"",[i.fp16]:"_fp16",[i.int8]:"_int8",[i.uint8]:"_uint8",[i.q8]:"_quantized",[i.q4]:"_q4",[i.q4f16]:"_q4f16",[i.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,r,t)=>{t.r(r),t.d(r,{Callable:()=>s});const s=class{constructor(){let o=function(...n){return o._call(...n)};return Object.setPrototypeOf(o,new.target.prototype)}_call(...o){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,r,t)=>{t.r(r),t.d(r,{MAX_EXTERNAL_DATA_CHUNKS:()=>a,getFile:()=>f,getModelFile:()=>M,getModelJSON:()=>v,getModelText:()=>$});var s=t("?7992"),o=t("?5af5"),n=t("./src/env.js"),i=t("./src/utils/core.js");const a=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class c{constructor(P){if(this.filePath=P,this.headers=new Headers,this.exists=s.existsSync(P),this.exists){this.status=200,this.statusText="OK";let O=s.statSync(P);this.headers.set("content-length",O.size.toString()),this.updateContentType();const L=s.createReadStream(P);this.body=new ReadableStream({start(G){L.on("data",K=>G.enqueue(K)),L.on("end",()=>G.close()),L.on("error",K=>G.error(K))},cancel(){L.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const P=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[P]??"application/octet-stream")}clone(){let P=new c(this.filePath);return P.exists=this.exists,P.status=this.status,P.statusText=this.statusText,P.headers=new Headers(this.headers),P}async arrayBuffer(){return(await s.promises.readFile(this.filePath)).buffer}async blob(){const P=await s.promises.readFile(this.filePath);return new Blob([P],{type:this.headers.get("content-type")})}async text(){return await s.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function p(x,P=null,O=null){let L;try{L=new URL(x)}catch{return!1}return!(P&&!P.includes(L.protocol)||O&&!O.includes(L.hostname))}const d=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;function u(x){return!(!d.test(x)||x.includes("..")||x.includes("--")||x.endsWith(".git")||x.endsWith(".ipynb"))}async function f(x){var P;if(n.env.useFS&&!p(x,["http:","https:","blob:"]))return new c(x instanceof URL?x.protocol==="file:"?x.pathname:x.toString():x);if(typeof process<"u"&&((P=process==null?void 0:process.release)==null?void 0:P.name)==="node"){const O=!!(js!=null&&js.TESTING_REMOTELY),L=n.env.version,G=new Headers;if(G.set("User-Agent",`transformers.js/${L}; is_ci/${O};`),p(x,["http:","https:"],["huggingface.co","hf.co"])){const R=(js==null?void 0:js.HF_TOKEN)??(js==null?void 0:js.HF_ACCESS_TOKEN);R&&G.set("Authorization",`Bearer ${R}`)}return fetch(x,{headers:G})}else return fetch(x)}const _={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function b(x,P,O){if(!O)return null;const L=_[x]??`Error (${x}) occurred while trying to load file`;throw Error(`${L}: "${P}".`)}class k{constructor(P){this.path=P}async match(P){let O=o.join(this.path,P),L=new c(O);if(L.exists)return L}async put(P,O,L=void 0){let G=o.join(this.path,P);try{const K=O.headers.get("Content-Length"),R=parseInt(K??"0");let te=0;await s.promises.mkdir(o.dirname(G),{recursive:!0});const H=s.createWriteStream(G),ee=O.body.getReader();for(;;){const{done:Z,value:ne}=await ee.read();if(Z)break;await new Promise((ue,j)=>{H.write(ne,F=>{if(F){j(F);return}ue()})}),te+=ne.length;const he=R?te/R*100:0;L==null||L({progress:he,loaded:te,total:R})}H.close()}catch(K){try{await s.promises.unlink(G)}catch{}throw K}}}async function g(x,...P){for(let O of P)try{let L=await x.match(O);if(L)return L}catch{continue}}async function M(x,P,O=!0,L={},G=!1){if(!n.env.allowLocalModels){if(L.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!n.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,i.dispatchCallback)(L.progress_callback,{status:"initiate",name:x,file:P});let K;if(!K&&n.env.useCustomCache){if(!n.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!n.env.customCache.match||!n.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");K=n.env.customCache}if(!K&&n.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{K=await caches.open("transformers-cache")}catch(_e){console.warn("An error occurred while opening the browser cache:",_e)}}if(!K&&n.env.useFSCache){if(!n.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");K=new k(L.cache_dir??n.env.cacheDir)}const R=L.revision??"main",te=T(x,P),H=u(x),ee=H?T(n.env.localModelPath,te):te,Z=T(n.env.remoteHost,n.env.remotePathTemplate.replaceAll("{model}",x).replaceAll("{revision}",encodeURIComponent(R)),P);let ne;const he=K instanceof k?R==="main"?te:T(x,R,P):Z;let ue=!1,j;K&&(j=await g(K,ee,he));const F=j!==void 0;if(j===void 0){if(n.env.allowLocalModels)if(p(te,["http:","https:"])){if(L.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${te}.`);if(!n.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${te}.`)}else try{j=await f(ee),ne=ee}catch(ie){console.warn(`Unable to load from local path "${ee}": "${ie}"`)}if(j===void 0||j.status===404){if(L.local_files_only||!n.env.allowRemoteModels){if(O)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${ee}".`);return null}if(!H)throw Error(`Local file missing at "${ee}" and download aborted due to invalid model ID "${x}".`);if(j=await f(Z),j.status!==200)return b(j.status,Z,O);ne=he}ue=K&&typeof Response<"u"&&j instanceof Response&&j.status===200}(0,i.dispatchCallback)(L.progress_callback,{status:"download",name:x,file:P});let U;if(!(n.apis.IS_NODE_ENV&&G)){let _e;L.progress_callback?F&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(_e=new Uint8Array(await j.arrayBuffer()),(0,i.dispatchCallback)(L.progress_callback,{status:"progress",name:x,file:P,progress:100,loaded:_e.length,total:_e.length})):_e=await y(j,ie=>{(0,i.dispatchCallback)(L.progress_callback,{status:"progress",name:x,file:P,...ie})}):_e=new Uint8Array(await j.arrayBuffer()),U=_e}if(ue&&ne&&await K.match(ne)===void 0&&(U?await K.put(ne,new Response(U,{headers:j.headers})).catch(_e=>{console.warn(`Unable to add response to browser cache: ${_e}.`)}):await K.put(ne,j,L.progress_callback)),(0,i.dispatchCallback)(L.progress_callback,{status:"done",name:x,file:P}),U){if(!n.apis.IS_NODE_ENV&&G)throw new Error("Cannot return path in a browser environment.");return U}if(j instanceof c)return j.filePath;const se=await(K==null?void 0:K.match(ne));if(se instanceof c)return se.filePath;if(se instanceof Response)return new Uint8Array(await se.arrayBuffer());if(typeof se=="string")return se;throw new Error("Unable to get model file path or buffer.")}async function $(x,P,O=!0,L={}){const G=await M(x,P,O,L,!1);return G===null?null:new TextDecoder("utf-8").decode(G)}async function v(x,P,O=!0,L={}){const G=await $(x,P,O,L);return G===null?{}:JSON.parse(G)}async function y(x,P){const O=x.headers.get("Content-Length");O===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let L=parseInt(O??"0"),G=new Uint8Array(L),K=0;const R=x.body.getReader();async function te(){const{done:H,value:ee}=await R.read();if(H)return;const Z=K+ee.length;if(Z>L){L=Z;const he=new Uint8Array(L);he.set(G),G=he}G.set(ee,K),K=Z;const ne=K/L*100;return P({progress:ne,loaded:K,total:L}),te()}return await te(),G}function T(...x){return x=x.map((P,O)=>(O&&(P=P.replace(new RegExp("^/"),"")),O!==x.length-1&&(P=P.replace(new RegExp("/$"),"")),P)),x.join("/")}},"./src/utils/image.js":(e,r,t)=>{t.r(r),t.d(r,{RawImage:()=>_,load_image:()=>b});var s=t("./src/utils/core.js"),o=t("./src/utils/hub.js"),n=t("./src/env.js"),i=t("./src/utils/tensor.js"),a=t("?2b25");let l,c,p;const d=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV;if(d)l=(k,g)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(k,g)},p=self.createImageBitmap,c=self.ImageData;else if(a)p=async k=>{const M=(await k.metadata()).channels,{data:$,info:v}=await k.rotate().raw().toBuffer({resolveWithObject:!0}),y=new _(new Uint8ClampedArray($),v.width,v.height,v.channels);return M!==void 0&&M!==v.channels&&y.convert(M),y};else throw new Error("Unable to load image processing library.");const u={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},f=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class _{constructor(g,M,$,v){this.data=g,this.width=M,this.height=$,this.channels=v}get size(){return[this.width,this.height]}static async read(g){if(g instanceof _)return g;if(typeof g=="string"||g instanceof URL)return await this.fromURL(g);if(g instanceof Blob)return await this.fromBlob(g);if(typeof HTMLCanvasElement<"u"&&g instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&g instanceof OffscreenCanvas)return this.fromCanvas(g);throw new Error(`Unsupported input type: ${typeof g}`)}static fromCanvas(g){if(!d)throw new Error("fromCanvas() is only supported in browser environments.");const $=g.getContext("2d").getImageData(0,0,g.width,g.height).data;return new _($,g.width,g.height,4)}static async fromURL(g){const M=await(0,o.getFile)(g);if(M.status!==200)throw new Error(`Unable to read image from "${g}" (${M.status} ${M.statusText})`);const $=await M.blob();return this.fromBlob($)}static async fromBlob(g){if(d){const M=await p(g),$=l(M.width,M.height).getContext("2d");return $.drawImage(M,0,0),new this($.getImageData(0,0,M.width,M.height).data,M.width,M.height,4)}else{const M=a(await g.arrayBuffer());return await p(M)}}static fromTensor(g,M="CHW"){if(g.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${g.dims.length} dimensions.`);if(M==="CHW")g=g.transpose(1,2,0);else if(M!=="HWC")throw new Error(`Unsupported channel format: ${M}`);if(!(g.data instanceof Uint8ClampedArray||g.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${g.type}`);switch(g.dims[2]){case 1:case 2:case 3:case 4:return new _(g.data,g.dims[1],g.dims[0],g.dims[2]);default:throw new Error(`Unsupported number of channels: ${g.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const g=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let M=0,$=0;M<this.data.length;M+=this.channels){const v=this.data[M],y=this.data[M+1],T=this.data[M+2];g[$++]=Math.round(.2989*v+.587*y+.114*T)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(g,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const g=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let M=0,$=0;M<this.data.length;++M)g[$++]=this.data[M],g[$++]=this.data[M],g[$++]=this.data[M];break;case 4:for(let M=0,$=0;M<this.data.length;M+=4)g[$++]=this.data[M],g[$++]=this.data[M+1],g[$++]=this.data[M+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(g,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const g=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let M=0,$=0;M<this.data.length;++M)g[$++]=this.data[M],g[$++]=this.data[M],g[$++]=this.data[M],g[$++]=255;break;case 3:for(let M=0,$=0;M<this.data.length;M+=3)g[$++]=this.data[M],g[$++]=this.data[M+1],g[$++]=this.data[M+2],g[$++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(g,this.width,this.height,4)}putAlpha(g){if(g.width!==this.width||g.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${g.width}x${g.height}`);if(g.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${g.channels}`);const M=this.data,$=g.data,v=this.width*this.height;if(this.channels===3){const y=new Uint8ClampedArray(v*4);for(let T=0,x=0,P=0;T<v;++T)y[P++]=M[x++],y[P++]=M[x++],y[P++]=M[x++],y[P++]=$[T];return this._update(y,this.width,this.height,4)}else if(this.channels===4){for(let y=0;y<v;++y)M[4*y+3]=$[y];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(g,M,{resample:$=2}={}){if(this.width===g&&this.height===M)return this;let v=u[$]??$;const y=(0,s.isNullishDimension)(g),T=(0,s.isNullishDimension)(M);if(y&&T)return this;if(y?g=M/this.height*this.width:T&&(M=g/this.width*this.height),d){const x=this.channels,P=this.toCanvas(),O=l(g,M).getContext("2d");return O.drawImage(P,0,0,g,M),new _(O.getImageData(0,0,g,M).data,g,M,4).convert(x)}else{let x=this.toSharp();switch(v){case"box":case"hamming":(v==="box"||v==="hamming")&&(console.warn(`Resampling method ${v} is not yet supported. Using bilinear instead.`),v="bilinear");case"nearest":case"bilinear":case"bicubic":x=x.affine([g/this.width,0,0,M/this.height],{interpolator:v});break;case"lanczos":x=x.resize({width:g,height:M,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${v} is not supported.`)}return await p(x)}}async pad([g,M,$,v]){if(g=Math.max(g,0),M=Math.max(M,0),$=Math.max($,0),v=Math.max(v,0),g===0&&M===0&&$===0&&v===0)return this;if(d){const y=this.channels,T=this.toCanvas(),x=this.width+g+M,P=this.height+$+v,O=l(x,P).getContext("2d");return O.drawImage(T,0,0,this.width,this.height,g,$,this.width,this.height),new _(O.getImageData(0,0,x,P).data,x,P,4).convert(y)}else{const y=this.toSharp().extend({left:g,right:M,top:$,bottom:v});return await p(y)}}async crop([g,M,$,v]){if(g=Math.max(g,0),M=Math.max(M,0),$=Math.min($,this.width-1),v=Math.min(v,this.height-1),g===0&&M===0&&$===this.width-1&&v===this.height-1)return this;const y=$-g+1,T=v-M+1;if(d){const x=this.channels,P=this.toCanvas(),O=l(y,T).getContext("2d");return O.drawImage(P,g,M,y,T,0,0,y,T),new _(O.getImageData(0,0,y,T).data,y,T,4).convert(x)}else{const x=this.toSharp().extract({left:g,top:M,width:y,height:T});return await p(x)}}async center_crop(g,M){if(this.width===g&&this.height===M)return this;const $=(this.width-g)/2,v=(this.height-M)/2;if(d){const y=this.channels,T=this.toCanvas(),x=l(g,M).getContext("2d");let P=0,O=0,L=0,G=0;return $>=0?P=$:L=-$,v>=0?O=v:G=-v,x.drawImage(T,P,O,g,M,L,G,g,M),new _(x.getImageData(0,0,g,M).data,g,M,4).convert(y)}else{let y=this.toSharp();if($>=0&&v>=0)y=y.extract({left:Math.floor($),top:Math.floor(v),width:g,height:M});else if($<=0&&v<=0){const T=Math.floor(-v),x=Math.floor(-$);y=y.extend({top:T,left:x,right:g-this.width-x,bottom:M-this.height-T})}else{let T=[0,0],x=0;v<0?(T[0]=Math.floor(-v),T[1]=M-this.height-T[0]):x=Math.floor(v);let P=[0,0],O=0;$<0?(P[0]=Math.floor(-$),P[1]=g-this.width-P[0]):O=Math.floor($),y=y.extend({top:T[0],bottom:T[1],left:P[0],right:P[1]}).extract({left:O,top:x,width:g,height:M})}return await p(y)}}async toBlob(g="image/png",M=1){if(!d)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:g,quality:M})}toTensor(g="CHW"){let M=new i.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(g!=="HWC")if(g==="CHW")M=M.permute(2,0,1);else throw new Error(`Unsupported channel format: ${g}`);return M}toCanvas(){if(!d)throw new Error("toCanvas() is only supported in browser environments.");const g=this.clone().rgba(),M=l(g.width,g.height),$=new c(g.data,g.width,g.height);return M.getContext("2d").putImageData($,0,0),M}split(){const{data:g,width:M,height:$,channels:v}=this,y=g.constructor,T=g.length/v,x=Array.from({length:v},()=>new y(T));for(let P=0;P<T;++P){const O=v*P;for(let L=0;L<v;++L)x[L][P]=g[O+L]}return x.map(P=>new _(P,M,$,1))}_update(g,M,$,v=null){return this.data=g,this.width=M,this.height=$,v!==null&&(this.channels=v),this}clone(){return new _(this.data.slice(),this.width,this.height,this.channels)}convert(g){if(this.channels===g)return this;switch(g){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(g){if(d){if(n.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const M=g.split(".").pop().toLowerCase(),$=f.get(M)??"image/png",v=await this.toBlob($);(0,s.saveBlob)(g,v)}else{if(n.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(g);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(d)throw new Error("toSharp() is only supported in server-side environments.");return a(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const b=_.read.bind(_)},"./src/utils/maths.js":(e,r,t)=>{t.r(r),t.d(r,{FFT:()=>b,bankers_round:()=>M,cos_sim:()=>l,dot:()=>a,dynamic_time_warping:()=>$,interpolate_data:()=>s,log_softmax:()=>i,magnitude:()=>c,max:()=>d,medianFilter:()=>k,min:()=>p,permute_data:()=>o,round:()=>g,softmax:()=>n});function s(v,[y,T,x],[P,O],L="bilinear",G=!1){const K=O/x,R=P/T,te=new v.constructor(P*O*y),H=T*x,ee=P*O;for(let Z=0;Z<P;++Z)for(let ne=0;ne<O;++ne){const he=Z*O+ne,ue=(ne+.5)/K-.5,j=(Z+.5)/R-.5;let F=Math.floor(ue),U=Math.floor(j);const se=Math.min(F+1,x-1),_e=Math.min(U+1,T-1);F=Math.max(F,0),U=Math.max(U,0);const ie=ue-F,ve=j-U,ze=(1-ie)*(1-ve),Ge=ie*(1-ve),Ie=(1-ie)*ve,X=ie*ve,ae=U*x,W=_e*x,be=ae+F,ke=ae+se,Ee=W+F,Me=W+se;for(let Se=0;Se<y;++Se){const we=Se*H;te[Se*ee+he]=ze*v[we+be]+Ge*v[we+ke]+Ie*v[we+Ee]+X*v[we+Me]}}return te}function o(v,y,T){const x=new Array(T.length),P=new Array(T.length);for(let G=T.length-1,K=1;G>=0;--G)P[G]=K,x[G]=y[T[G]],K*=x[G];const O=T.map((G,K)=>P[T.indexOf(K)]),L=new v.constructor(v.length);for(let G=0;G<v.length;++G){let K=0;for(let R=y.length-1,te=G;R>=0;--R)K+=te%y[R]*O[R],te=Math.floor(te/y[R]);L[K]=v[G]}return[L,x]}function n(v){const y=d(v)[0],T=v.map(O=>Math.exp(O-y)),x=T.reduce((O,L)=>O+L,0);return T.map(O=>O/x)}function i(v){const y=d(v)[0];let T=0;for(let O=0;O<v.length;++O)T+=Math.exp(v[O]-y);const x=Math.log(T);return v.map(O=>O-y-x)}function a(v,y){let T=0;for(let x=0;x<v.length;++x)T+=v[x]*y[x];return T}function l(v,y){const T=a(v,y),x=c(v),P=c(y);return T/(x*P)}function c(v){return Math.sqrt(v.reduce((y,T)=>y+T*T,0))}function p(v){if(v.length===0)throw Error("Array must not be empty");let y=v[0],T=0;for(let x=1;x<v.length;++x)v[x]<y&&(y=v[x],T=x);return[y,T]}function d(v){if(v.length===0)throw Error("Array must not be empty");let y=v[0],T=0;for(let x=1;x<v.length;++x)v[x]>y&&(y=v[x],T=x);return[y,T]}function u(v){return v>0&&(v&v-1)===0}class f{constructor(y){if(this.size=y|0,this.size<=1||!u(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=y<<1,this.table=new Float64Array(this.size*2);for(let x=0;x<this.table.length;x+=2){const P=Math.PI*x/this.size;this.table[x]=Math.cos(P),this.table[x+1]=-Math.sin(P)}let T=0;for(let x=1;this.size>x;x<<=1)++T;this._width=T%2===0?T-1:T,this._bitrev=new Int32Array(1<<this._width);for(let x=0;x<this._bitrev.length;++x){this._bitrev[x]=0;for(let P=0;P<this._width;P+=2){const O=this._width-P-2;this._bitrev[x]|=(x>>>P&3)<<O}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(y,T){const x=T||new Array(y.length>>>1);for(let P=0;P<y.length;P+=2)x[P>>>1]=y[P];return x}toComplexArray(y,T){const x=T||this.createComplexArray();for(let P=0;P<x.length;P+=2)x[P]=y[P>>>1],x[P+1]=0;return x}transform(y,T){if(y===T)throw new Error("Input and output buffers must be different");this._transform4(y,T,1)}realTransform(y,T){if(y===T)throw new Error("Input and output buffers must be different");this._realTransform4(y,T,1)}inverseTransform(y,T){if(y===T)throw new Error("Input and output buffers must be different");this._transform4(y,T,-1);for(let x=0;x<y.length;++x)y[x]/=this.size}_transform4(y,T,x){const P=this._csize;let L=1<<this._width,G=P/L<<1,K,R;const te=this._bitrev;if(G===4)for(K=0,R=0;K<P;K+=G,++R){const ee=te[R];this._singleTransform2(T,y,K,ee,L)}else for(K=0,R=0;K<P;K+=G,++R){const ee=te[R];this._singleTransform4(T,y,K,ee,L,x)}const H=this.table;for(L>>=2;L>=2;L>>=2){G=P/L<<1;const ee=G>>>2;for(K=0;K<P;K+=G){const Z=K+ee-1;for(let ne=K,he=0;ne<Z;ne+=2,he+=L){const ue=ne,j=ue+ee,F=j+ee,U=F+ee,se=y[ue],_e=y[ue+1],ie=y[j],ve=y[j+1],ze=y[F],Ge=y[F+1],Ie=y[U],X=y[U+1],ae=H[he],W=x*H[he+1],be=ie*ae-ve*W,ke=ie*W+ve*ae,Ee=H[2*he],Me=x*H[2*he+1],Se=ze*Ee-Ge*Me,we=ze*Me+Ge*Ee,Ae=H[3*he],Be=x*H[3*he+1],Qe=Ie*Ae-X*Be,xe=Ie*Be+X*Ae,Ze=se+Se,Ke=_e+we,nt=se-Se,Je=_e-we,Oe=be+Qe,Ye=ke+xe,ot=x*(be-Qe),It=x*(ke-xe);y[ue]=Ze+Oe,y[ue+1]=Ke+Ye,y[j]=nt+It,y[j+1]=Je-ot,y[F]=Ze-Oe,y[F+1]=Ke-Ye,y[U]=nt-It,y[U+1]=Je+ot}}}}_singleTransform2(y,T,x,P,O){const L=y[P],G=y[P+1],K=y[P+O],R=y[P+O+1];T[x]=L+K,T[x+1]=G+R,T[x+2]=L-K,T[x+3]=G-R}_singleTransform4(y,T,x,P,O,L){const G=O*2,K=O*3,R=y[P],te=y[P+1],H=y[P+O],ee=y[P+O+1],Z=y[P+G],ne=y[P+G+1],he=y[P+K],ue=y[P+K+1],j=R+Z,F=te+ne,U=R-Z,se=te-ne,_e=H+he,ie=ee+ue,ve=L*(H-he),ze=L*(ee-ue);T[x]=j+_e,T[x+1]=F+ie,T[x+2]=U+ze,T[x+3]=se-ve,T[x+4]=j-_e,T[x+5]=F-ie,T[x+6]=U-ze,T[x+7]=se+ve}_realTransform4(y,T,x){const P=this._csize;let L=1<<this._width,G=P/L<<1,K,R;const te=this._bitrev;if(G===4)for(K=0,R=0;K<P;K+=G,++R){const Z=te[R];this._singleRealTransform2(T,y,K,Z>>>1,L>>>1)}else for(K=0,R=0;K<P;K+=G,++R){const Z=te[R];this._singleRealTransform4(T,y,K,Z>>>1,L>>>1,x)}const H=this.table;for(L>>=2;L>=2;L>>=2){G=P/L<<1;const Z=G>>>1,ne=Z>>>1,he=ne>>>1;for(K=0;K<P;K+=G)for(let ue=0,j=0;ue<=he;ue+=2,j+=L){const F=K+ue,U=F+ne,se=U+ne,_e=se+ne,ie=y[F],ve=y[F+1],ze=y[U],Ge=y[U+1],Ie=y[se],X=y[se+1],ae=y[_e],W=y[_e+1],be=ie,ke=ve,Ee=H[j],Me=x*H[j+1],Se=ze*Ee-Ge*Me,we=ze*Me+Ge*Ee,Ae=H[2*j],Be=x*H[2*j+1],Qe=Ie*Ae-X*Be,xe=Ie*Be+X*Ae,Ze=H[3*j],Ke=x*H[3*j+1],nt=ae*Ze-W*Ke,Je=ae*Ke+W*Ze,Oe=be+Qe,Ye=ke+xe,ot=be-Qe,It=ke-xe,St=Se+nt,wt=we+Je,Mr=x*(Se-nt),Er=x*(we-Je);if(y[F]=Oe+St,y[F+1]=Ye+wt,y[U]=ot+Er,y[U+1]=It-Mr,ue===0){y[se]=Oe-St,y[se+1]=Ye-wt;continue}if(ue===he)continue;const Rr=K+ne-ue,is=K+Z-ue;y[Rr]=ot-x*Er,y[Rr+1]=-It-x*Mr,y[is]=Oe-x*St,y[is+1]=-Ye+x*wt}}const ee=P>>>1;for(let Z=2;Z<ee;Z+=2)y[P-Z]=y[Z],y[P-Z+1]=-y[Z+1]}_singleRealTransform2(y,T,x,P,O){const L=y[P],G=y[P+O];T[x]=L+G,T[x+1]=0,T[x+2]=L-G,T[x+3]=0}_singleRealTransform4(y,T,x,P,O,L){const G=O*2,K=O*3,R=y[P],te=y[P+O],H=y[P+G],ee=y[P+K],Z=R+H,ne=R-H,he=te+ee,ue=L*(te-ee);T[x]=Z+he,T[x+1]=0,T[x+2]=ne,T[x+3]=-ue,T[x+4]=Z-he,T[x+5]=0,T[x+6]=ne,T[x+7]=ue}}class _{constructor(y){const T=2*(y-1),x=2*(2*y-1),P=2**Math.ceil(Math.log2(x));this.bufferSize=P,this._a=T;const O=new Float64Array(x),L=new Float64Array(P);this._chirpBuffer=new Float64Array(P),this._buffer1=new Float64Array(P),this._buffer2=new Float64Array(P),this._outBuffer1=new Float64Array(P),this._outBuffer2=new Float64Array(P);const G=-2*Math.PI/y,K=Math.cos(G),R=Math.sin(G);for(let te=0;te<x>>1;++te){const H=(te+1-y)**2/2,ee=Math.sqrt(K**2+R**2)**H,Z=H*Math.atan2(R,K),ne=2*te;O[ne]=ee*Math.cos(Z),O[ne+1]=ee*Math.sin(Z),L[ne]=O[ne],L[ne+1]=-O[ne+1]}this._slicedChirpBuffer=O.subarray(T,x),this._f=new f(P>>1),this._f.transform(this._chirpBuffer,L)}_transform(y,T,x){const P=this._buffer1,O=this._buffer2,L=this._outBuffer1,G=this._outBuffer2,K=this._chirpBuffer,R=this._slicedChirpBuffer,te=this._a;if(x)for(let H=0;H<R.length;H+=2){const ee=H+1,Z=H>>1,ne=T[Z];P[H]=ne*R[H],P[ee]=ne*R[ee]}else for(let H=0;H<R.length;H+=2){const ee=H+1;P[H]=T[H]*R[H]-T[ee]*R[ee],P[ee]=T[H]*R[ee]+T[ee]*R[H]}this._f.transform(L,P);for(let H=0;H<K.length;H+=2){const ee=H+1;O[H]=L[H]*K[H]-L[ee]*K[ee],O[ee]=L[H]*K[ee]+L[ee]*K[H]}this._f.inverseTransform(G,O);for(let H=0;H<G.length;H+=2){const ee=G[H+te],Z=G[H+te+1],ne=R[H],he=R[H+1];y[H]=ee*ne-Z*he,y[H+1]=ee*he+Z*ne}}transform(y,T){this._transform(y,T,!1)}realTransform(y,T){this._transform(y,T,!0)}}class b{constructor(y){this.fft_length=y,this.isPowerOfTwo=u(y),this.isPowerOfTwo?(this.fft=new f(y),this.outputBufferSize=2*y):(this.fft=new _(y),this.outputBufferSize=this.fft.bufferSize)}realTransform(y,T){this.fft.realTransform(y,T)}transform(y,T){this.fft.transform(y,T)}}function k(v,y){if(y%2===0||y<=0)throw new Error("Window size must be a positive odd number");const T=new v.constructor(v.length),x=new v.constructor(y),P=Math.floor(y/2);for(let O=0;O<v.length;++O){let L=0;for(let G=-P;G<=P;++G){let K=O+G;K<0?K=Math.abs(K):K>=v.length&&(K=2*(v.length-1)-K),x[L++]=v[K]}x.sort(),T[O]=x[P]}return T}function g(v,y){const T=Math.pow(10,y);return Math.round(v*T)/T}function M(v){const y=Math.round(v);return Math.abs(v)%1===.5?y%2===0?y:y-1:y}function $(v){const y=v.length,T=v[0].length,x=[y+1,T+1],P=Array.from({length:x[0]},()=>Array(x[1]).fill(1/0));P[0][0]=0;const O=Array.from({length:x[0]},()=>Array(x[1]).fill(-1));for(let te=1;te<x[1];++te)for(let H=1;H<x[0];++H){const ee=P[H-1][te-1],Z=P[H-1][te],ne=P[H][te-1];let he,ue;ee<Z&&ee<ne?(he=ee,ue=0):Z<ee&&Z<ne?(he=Z,ue=1):(he=ne,ue=2),P[H][te]=v[H-1][te-1]+he,O[H][te]=ue}for(let te=0;te<x[1];++te)O[0][te]=2;for(let te=0;te<x[0];++te)O[te][0]=1;let L=y,G=T,K=[],R=[];for(;L>0||G>0;)switch(K.push(L-1),R.push(G-1),O[L][G]){case 0:--L,--G;break;case 1:--L;break;case 2:--G;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${L}, ${G}]. Please file a bug report.`)}return K.reverse(),R.reverse(),[K,R]}},"./src/utils/tensor.js":(e,r,t)=>{t.r(r),t.d(r,{DataTypeMap:()=>i,Tensor:()=>a,cat:()=>T,full:()=>R,full_like:()=>te,interpolate:()=>p,interpolate_4d:()=>d,layer_norm:()=>M,matmul:()=>u,mean:()=>L,mean_pooling:()=>g,ones:()=>H,ones_like:()=>ee,permute:()=>c,quantize_embeddings:()=>ue,rand:()=>he,rfft:()=>f,slice:()=>k,stack:()=>x,std_mean:()=>O,topk:()=>_,zeros:()=>Z,zeros_like:()=>ne});var s=t("./src/utils/maths.js"),o=t("./src/backends/onnx.js"),n=t("./src/ops/registry.js");const i=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class a{constructor(...F){J(this,"ort_tensor");return(0,o.isONNXTensor)(F[0])?this.ort_tensor=F[0]:this.ort_tensor=new o.Tensor(F[0],F[1],F[2]),new Proxy(this,{get:(U,se)=>{if(typeof se=="string"){let _e=Number(se);if(Number.isInteger(_e))return U._getitem(_e)}return U[se]},set:(U,se,_e)=>U[se]=_e})}get dims(){return this.ort_tensor.dims}set dims(F){this.ort_tensor.dims=F}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[F,...U]=this.dims;if(U.length>0){const se=U.reduce((_e,ie)=>_e*ie);for(let _e=0;_e<F;++_e)yield this._subarray(_e,se,U)}else yield*this.data}_getitem(F){const[U,...se]=this.dims;if(F=y(F,U),se.length>0){const _e=se.reduce((ie,ve)=>ie*ve);return this._subarray(F,_e,se)}else return new a(this.type,[this.data[F]],se)}indexOf(F){const U=this.data;for(let se=0;se<U.length;++se)if(U[se]==F)return se;return-1}_subarray(F,U,se){const _e=F*U,ie=(F+1)*U,ve="subarray"in this.data?this.data.subarray(_e,ie):this.data.slice(_e,ie);return new a(this.type,ve,se)}item(){const F=this.data;if(F.length!==1)throw new Error(`a Tensor with ${F.length} elements cannot be converted to Scalar`);return F[0]}tolist(){return l(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const F=this.data;for(let U=0;U<F.length;++U)F[U]=1/(1+Math.exp(-F[U]));return this}map(F){return this.clone().map_(F)}map_(F){const U=this.data;for(let se=0;se<U.length;++se)U[se]=F(U[se],se,U);return this}mul(F){return this.clone().mul_(F)}mul_(F){const U=this.data;for(let se=0;se<U.length;++se)U[se]*=F;return this}div(F){return this.clone().div_(F)}div_(F){const U=this.data;for(let se=0;se<U.length;++se)U[se]/=F;return this}add(F){return this.clone().add_(F)}add_(F){const U=this.data;for(let se=0;se<U.length;++se)U[se]+=F;return this}sub(F){return this.clone().sub_(F)}sub_(F){const U=this.data;for(let se=0;se<U.length;++se)U[se]-=F;return this}clone(){return new a(this.type,this.data.slice(),this.dims.slice())}slice(...F){const U=[],se=[];for(let X=0;X<this.dims.length;++X){let ae=F[X];if(ae==null)se.push([0,this.dims[X]]),U.push(this.dims[X]);else if(typeof ae=="number")ae=y(ae,this.dims[X],X),se.push([ae,ae+1]);else if(Array.isArray(ae)&&ae.length===2){let[W,be]=ae;if(W=W===null?0:y(W,this.dims[X],X,!1),be=be===null?this.dims[X]:y(be,this.dims[X],X,!1),W>be)throw new Error(`Invalid slice: ${ae}`);const ke=[Math.max(W,0),Math.min(be,this.dims[X])];se.push(ke),U.push(ke[1]-ke[0])}else throw new Error(`Invalid slice: ${ae}`)}const _e=se.map(([X,ae])=>ae-X),ie=_e.reduce((X,ae)=>X*ae),ve=this.data,ze=new ve.constructor(ie),Ge=this.stride();let Ie=!0;for(let X=1;X<_e.length;++X)if(se[X][0]!==0||se[X][1]!==this.dims[X]){Ie=!1;break}if(Ie){const X=se[0][0]*Ge[0],ae=se[0][1]*Ge[0];if(ArrayBuffer.isView(ve))ze.set(ve.subarray(X,ae));else if(Array.isArray(ve)){const W=ve.slice(X,ae);for(let be=0;be<W.length;++be)ze[be]=W[be]}else throw new Error("Unsupported data type for slicing")}else for(let X=0;X<ie;++X){let ae=0;for(let W=_e.length-1,be=X;W>=0;--W){const ke=_e[W];ae+=(be%ke+se[W][0])*Ge[W],be=Math.floor(be/ke)}ze[X]=ve[ae]}return new a(this.type,ze,U)}permute(...F){return c(this,F)}transpose(...F){return this.permute(...F)}sum(F=null,U=!1){return this.norm(1,F,U)}norm(F="fro",U=null,se=!1){if(F==="fro")F=2;else if(typeof F=="string")throw Error(`Unsupported norm: ${F}`);const _e=this.data,ie=(Ie,X)=>Ie+X**F;if(U===null){const Ie=_e.reduce(ie,0)**(1/F);return new a(this.type,[Ie],[])}const[ve,ze,Ge]=P(ie,this,U,se);if(F!==1)for(let Ie=0;Ie<ze.length;++Ie)ze[Ie]=ze[Ie]**(1/F);return new a(ve,ze,Ge)}normalize_(F=2,U=1){U=y(U,this.dims.length);const se=this.norm(F,U,!0),_e=this.data,ie=se.data;for(let ve=0;ve<_e.length;++ve){let ze=0;for(let Ge=this.dims.length-1,Ie=ve,X=1;Ge>=0;--Ge){const ae=this.dims[Ge];if(Ge!==U){const W=Ie%ae;ze+=W*X,X*=this.dims[Ge]}Ie=Math.floor(Ie/ae)}_e[ve]/=ie[ze]}return this}normalize(F=2,U=1){return this.clone().normalize_(F,U)}stride(){return G(this.dims)}squeeze(F=null){return new a(this.type,this.data,$(this.dims,F))}squeeze_(F=null){return this.dims=$(this.dims,F),this}unsqueeze(F=null){return new a(this.type,this.data,v(this.dims,F))}unsqueeze_(F=null){return this.dims=v(this.dims,F),this}flatten_(F=0,U=-1){U=(U+this.dims.length)%this.dims.length;let se=this.dims.slice(0,F),_e=this.dims.slice(F,U+1),ie=this.dims.slice(U+1);return this.dims=[...se,_e.reduce((ve,ze)=>ve*ze,1),...ie],this}flatten(F=0,U=-1){return this.clone().flatten_(F,U)}view(...F){let U=-1;for(let _e=0;_e<F.length;++_e)if(F[_e]===-1){if(U!==-1)throw new Error("Only one dimension can be inferred");U=_e}const se=this.data;if(U!==-1){const _e=F.reduce((ie,ve,ze)=>ze!==U?ie*ve:ie,1);F[U]=se.length/_e}return new a(this.type,se,F)}neg_(){const F=this.data;for(let U=0;U<F.length;++U)F[U]=-F[U];return this}neg(){return this.clone().neg_()}gt(F){const U=new Uint8Array(this.data.length),se=this.data;for(let _e=0;_e<se.length;++_e)U[_e]=se[_e]>F?1:0;return new a("bool",U,this.dims)}lt(F){const U=new Uint8Array(this.data.length),se=this.data;for(let _e=0;_e<se.length;++_e)U[_e]=se[_e]<F?1:0;return new a("bool",U,this.dims)}clamp_(F,U){const se=this.data;for(let _e=0;_e<se.length;++_e)se[_e]=Math.min(Math.max(se[_e],F),U);return this}clamp(F,U){return this.clone().clamp_(F,U)}round_(){const F=this.data;for(let U=0;U<F.length;++U)F[U]=Math.round(F[U]);return this}round(){return this.clone().round_()}mean(F=null,U=!1){return L(this,F,U)}min(F=null,U=!1){if(F===null){const ve=(0,s.min)(this.data)[0];return new a(this.type,[ve],[])}const[se,_e,ie]=P((ve,ze)=>Math.min(ve,ze),this,F,U,1/0);return new a(se,_e,ie)}max(F=null,U=!1){if(F===null){const ve=(0,s.max)(this.data)[0];return new a(this.type,[ve],[])}const[se,_e,ie]=P((ve,ze)=>Math.max(ve,ze),this,F,U,-1/0);return new a(se,_e,ie)}argmin(F=null,U=!1){if(F!==null)throw new Error("`dim !== null` not yet implemented.");const se=(0,s.min)(this.data)[1];return new a("int64",[BigInt(se)],[])}argmax(F=null,U=!1){if(F!==null)throw new Error("`dim !== null` not yet implemented.");const se=(0,s.max)(this.data)[1];return new a("int64",[BigInt(se)],[])}to(F){if(this.type===F)return this;if(!i.hasOwnProperty(F))throw new Error(`Unsupported type: ${F}`);let U;const se=["int64","uint64"].includes(this.type),_e=["int64","uint64"].includes(F);return se&&!_e?U=Number:!se&&_e&&(U=BigInt),new a(F,i[F].from(this.data,U),this.dims)}}function l(j,F){const U=j.length,se=F.reduce((ie,ve)=>ie*ve);if(U!==se)throw Error(`cannot reshape array of size ${U} into shape (${F})`);let _e=j;for(let ie=F.length-1;ie>=0;ie--)_e=_e.reduce((ve,ze)=>{let Ge=ve[ve.length-1];return Ge.length<F[ie]?Ge.push(ze):ve.push([ze]),ve},[[]]);return _e[0]}function c(j,F){const[U,se]=(0,s.permute_data)(j.data,j.dims,F);return new a(j.type,U,se)}function p(j,[F,U],se="bilinear",_e=!1){const ie=j.dims.at(-3)??1,ve=j.dims.at(-2),ze=j.dims.at(-1);let Ge=(0,s.interpolate_data)(j.data,[ie,ve,ze],[F,U],se,_e);return new a(j.type,Ge,[ie,F,U])}async function d(j,{size:F=null,mode:U="bilinear"}={}){if(j.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!F)throw new Error("`interpolate_4d` requires a `size` argument.");let se;if(F.length===2)se=[...j.dims.slice(0,2),...F];else if(F.length===3)se=[j.dims[0],...F];else if(F.length===4)se=F;else throw new Error("`size` must be of length 2, 3, or 4.");let _e;if(U==="nearest")_e=await n.TensorOpRegistry.nearest_interpolate_4d;else if(U==="bilinear")_e=await n.TensorOpRegistry.bilinear_interpolate_4d;else if(U==="bicubic")_e=await n.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${U}`);const ie=new a("int64",new BigInt64Array(se.map(BigInt)),[se.length]);return await _e({x:j,s:ie})}async function u(j,F){return await(await n.TensorOpRegistry.matmul)({a:j,b:F})}async function f(j,F){return await(await n.TensorOpRegistry.rfft)({x:j,a:F})}async function _(j,F){const U=await n.TensorOpRegistry.top_k;return F==null?F=j.dims.at(-1):F=Math.min(F,j.dims.at(-1)),await U({x:j,k:new a("int64",[BigInt(F)],[1])})}const b=j=>new a("int64",j,[j.length]);async function k(j,F,U,se,_e){return await(await n.TensorOpRegistry.slice)({x:j,s:b(F),e:b(U),a:b(se),t:b(_e??new Array(se.length).fill(1))})}function g(j,F){const U=j.data,se=F.data,_e=[j.dims[0],j.dims[2]],ie=new U.constructor(_e[0]*_e[1]),[ve,ze,Ge]=j.dims;let Ie=0;for(let X=0;X<ve;++X){const ae=X*Ge*ze;for(let W=0;W<Ge;++W){let be=0,ke=0;const Ee=X*ze,Me=ae+W;for(let we=0;we<ze;++we){const Ae=Number(se[Ee+we]);ke+=Ae,be+=U[Me+we*Ge]*Ae}const Se=be/ke;ie[Ie++]=Se}}return new a(j.type,ie,_e)}function M(j,F,{eps:U=1e-5}={}){if(j.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[se,_e]=j.dims;if(F.length!==1&&F[0]!==_e)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[ie,ve]=O(j,1,0,!0),ze=ie.data,Ge=ve.data,Ie=j.data,X=new Ie.constructor(Ie.length);for(let ae=0;ae<se;++ae){const W=ae*_e;for(let be=0;be<_e;++be){const ke=W+be;X[ke]=(Ie[ke]-Ge[ae])/(ze[ae]+U)}}return new a(j.type,X,j.dims)}function $(j,F){return j=j.slice(),F===null?j=j.filter(U=>U!==1):typeof F=="number"?j[F]===1&&j.splice(F,1):Array.isArray(F)&&(j=j.filter((U,se)=>U!==1||!F.includes(se))),j}function v(j,F){return F=y(F,j.length+1),j=j.slice(),j.splice(F,0,1),j}function y(j,F,U=null,se=!0){if(j<-F||j>=F){if(se)throw new Error(`IndexError: index ${j} is out of bounds for dimension${U===null?"":" "+U} with size ${F}`);return j<-F?0:F}return j<0&&(j=(j%F+F)%F),j}function T(j,F=0){F=y(F,j[0].dims.length);const U=j[0].dims.slice();U[F]=j.reduce((ve,ze)=>ve+ze.dims[F],0);const se=U.reduce((ve,ze)=>ve*ze,1),_e=new j[0].data.constructor(se),ie=j[0].type;if(F===0){let ve=0;for(const ze of j){const Ge=ze.data;_e.set(Ge,ve),ve+=Ge.length}}else{let ve=0;for(let ze=0;ze<j.length;++ze){const{data:Ge,dims:Ie}=j[ze];for(let X=0;X<Ge.length;++X){let ae=0;for(let W=Ie.length-1,be=X,ke=1;W>=0;--W){const Ee=Ie[W];let Me=be%Ee;W===F&&(Me+=ve),ae+=Me*ke,ke*=U[W],be=Math.floor(be/Ee)}_e[ae]=Ge[X]}ve+=Ie[F]}}return new a(ie,_e,U)}function x(j,F=0){return T(j.map(U=>U.unsqueeze(F)),F)}function P(j,F,U=null,se=!1,_e=null){const ie=F.data,ve=F.dims;U=y(U,ve.length);const ze=ve.slice();ze[U]=1;const Ge=new ie.constructor(ie.length/ve[U]);_e!==null&&Ge.fill(_e);for(let Ie=0;Ie<ie.length;++Ie){let X=0;for(let ae=ve.length-1,W=Ie,be=1;ae>=0;--ae){const ke=ve[ae];if(ae!==U){const Ee=W%ke;X+=Ee*be,be*=ze[ae]}W=Math.floor(W/ke)}Ge[X]=j(Ge[X],ie[Ie],Ie,X)}return se||ze.splice(U,1),[F.type,Ge,ze]}function O(j,F=null,U=1,se=!1){const _e=j.data,ie=j.dims;if(F===null){const be=_e.reduce((Se,we)=>Se+we,0)/_e.length,ke=Math.sqrt(_e.reduce((Se,we)=>Se+(we-be)**2,0)/(_e.length-U)),Ee=new a(j.type,[be],[]);return[new a(j.type,[ke],[]),Ee]}F=y(F,ie.length);const ve=L(j,F,se),ze=ve.data,[Ge,Ie,X]=P((W,be,ke,Ee)=>W+(be-ze[Ee])**2,j,F,se);for(let W=0;W<Ie.length;++W)Ie[W]=Math.sqrt(Ie[W]/(ie[F]-U));return[new a(Ge,Ie,X),ve]}function L(j,F=null,U=!1){const se=j.dims,_e=j.data;if(F===null){const Ge=_e.reduce((Ie,X)=>Ie+X,0);return new a(j.type,[Ge/_e.length],[])}F=y(F,se.length);const[ie,ve,ze]=P((Ge,Ie)=>Ge+Ie,j,F,U);if(se[F]!==1)for(let Ge=0;Ge<ve.length;++Ge)ve[Ge]/=se[F];return new a(ie,ve,ze)}function G(j){const F=new Array(j.length);for(let U=j.length-1,se=1;U>=0;--U)F[U]=se,se*=j[U];return F}function K(j,F,U,se){const _e=j.reduce((ie,ve)=>ie*ve,1);return new a(U,new se(_e).fill(F),j)}function R(j,F){let U,se;if(typeof F=="number")U="float32",se=Float32Array;else if(typeof F=="bigint")U="int64",se=BigInt64Array;else if(typeof F=="boolean")U="bool",se=Uint8Array;else throw new Error(`Unsupported data type: ${typeof F}`);return K(j,F,U,se)}function te(j,F){return R(j.dims,F)}function H(j){return K(j,1n,"int64",BigInt64Array)}function ee(j){return H(j.dims)}function Z(j){return K(j,0n,"int64",BigInt64Array)}function ne(j){return Z(j.dims)}function he(j){const F=j.reduce((U,se)=>U*se,1);return new a("float32",Float32Array.from({length:F},()=>Math.random()),j)}function ue(j,F){if(j.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(j.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(F))throw new Error("The precision must be either 'binary' or 'ubinary'");const U=F==="binary",se=U?"int8":"uint8",_e=U?Int8Array:Uint8Array,ie=j.data,ve=new _e(ie.length/8);for(let ze=0;ze<ie.length;++ze){const Ge=ie[ze]>0?1:0,Ie=Math.floor(ze/8),X=ze%8;ve[Ie]|=Ge<<7-X,U&&X===0&&(ve[Ie]-=128)}return new a(se,ve,[j.dims[0],j.dims[1]/8])}},"./src/utils/video.js":(e,r,t)=>{t.r(r),t.d(r,{RawVideo:()=>i,RawVideoFrame:()=>n,load_video:()=>a});var s=t("./src/utils/image.js"),o=t("./src/env.js");class n{constructor(c,p){this.image=c,this.timestamp=p}}class i{constructor(c,p){c.length>0&&c[0]instanceof s.RawImage&&(c=c.map((d,u)=>new n(d,(u+1)/(c.length+1)*p))),this.frames=c,this.duration=p}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function a(l,{num_frames:c=null,fps:p=null}={}){if(!o.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(c==null&&p==null)throw new Error("Either num_frames or fps must be provided.");const d=[],u=document.createElement("video");if(u.crossOrigin="anonymous",u.muted=!0,typeof l=="string")u.src=l;else if(l instanceof Blob)u.src=URL.createObjectURL(l);else if(l instanceof HTMLVideoElement)u.src=l.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise($=>u.onloadedmetadata=$),u.seekable.start(0)===u.seekable.end(0)){const v=await(await fetch(u.src)).blob();u.src=URL.createObjectURL(v),await new Promise(y=>u.onloadedmetadata=y)}const f=u.duration;let _,b;c!=null?(_=c,b=c===1?0:f/(c-1)):(b=1/p,_=Math.floor(f/b));let k=[];for(let $=0;$<_;++$)k.push(c===1?f/2:$*b);const g=document.createElement("canvas");g.width=u.videoWidth,g.height=u.videoHeight;const M=g.getContext("2d",{willReadFrequently:!0});for(const $ of k){u.currentTime=$,await new Promise(x=>{u.onseeked=x}),M.drawImage(u,0,0,g.width,g.height);const v=M.getImageData(0,0,g.width,g.height),y=new s.RawImage(v.data,g.width,g.height,4),T=new n(y,$);d.push(T)}return u.remove(),new i(d,f)}}},SM={};function Vt(e){var r=SM[e];if(r!==void 0)return r.exports;var t=SM[e]={exports:{}};return vT[e](t,t.exports,Vt),t.exports}(()=>{var e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,r;Vt.t=function(t,s){if(s&1&&(t=this(t)),s&8||typeof t=="object"&&t&&(s&4&&t.__esModule||s&16&&typeof t.then=="function"))return t;var o=Object.create(null);Vt.r(o);var n={};r=r||[null,e({}),e([]),e(e)];for(var i=s&2&&t;typeof i=="object"&&!~r.indexOf(i);i=e(i))Object.getOwnPropertyNames(i).forEach(a=>n[a]=()=>t[a]);return n.default=()=>t,Vt.d(o,n),o}})();Vt.d=(e,r)=>{for(var t in r)Vt.o(r,t)&&!Vt.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})};Vt.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);Vt.r=e=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var h={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Vt.r(h),Vt.d(h,{ASTFeatureExtractor:()=>d.ASTFeatureExtractor,ASTForAudioClassification:()=>t.ASTForAudioClassification,ASTModel:()=>t.ASTModel,ASTPreTrainedModel:()=>t.ASTPreTrainedModel,AlbertForMaskedLM:()=>t.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>t.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>t.AlbertForSequenceClassification,AlbertModel:()=>t.AlbertModel,AlbertPreTrainedModel:()=>t.AlbertPreTrainedModel,AlbertTokenizer:()=>s.AlbertTokenizer,ArceeForCausalLM:()=>t.ArceeForCausalLM,ArceeModel:()=>t.ArceeModel,ArceePreTrainedModel:()=>t.ArceePreTrainedModel,AudioClassificationPipeline:()=>r.AudioClassificationPipeline,AutoConfig:()=>o.AutoConfig,AutoFeatureExtractor:()=>u.AutoFeatureExtractor,AutoImageProcessor:()=>b.AutoImageProcessor,AutoModel:()=>t.AutoModel,AutoModelForAudioClassification:()=>t.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>t.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>t.AutoModelForAudioTextToText,AutoModelForCTC:()=>t.AutoModelForCTC,AutoModelForCausalLM:()=>t.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>t.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>t.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>t.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>t.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>t.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>t.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>t.AutoModelForImageTextToText,AutoModelForImageToImage:()=>t.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>t.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>t.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>t.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>t.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>t.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>t.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>t.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>t.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>t.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>t.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>t.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>t.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>t.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>t.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>t.AutoModelForVision2Seq,AutoModelForXVector:()=>t.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>t.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>M.AutoProcessor,AutoTokenizer:()=>s.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>r.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>r.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>t.BartForConditionalGeneration,BartForSequenceClassification:()=>t.BartForSequenceClassification,BartModel:()=>t.BartModel,BartPretrainedModel:()=>t.BartPretrainedModel,BartTokenizer:()=>s.BartTokenizer,BaseModelOutput:()=>t.BaseModelOutput,BaseStreamer:()=>$.BaseStreamer,BeitFeatureExtractor:()=>_.BeitFeatureExtractor,BeitForImageClassification:()=>t.BeitForImageClassification,BeitModel:()=>t.BeitModel,BeitPreTrainedModel:()=>t.BeitPreTrainedModel,BertForMaskedLM:()=>t.BertForMaskedLM,BertForQuestionAnswering:()=>t.BertForQuestionAnswering,BertForSequenceClassification:()=>t.BertForSequenceClassification,BertForTokenClassification:()=>t.BertForTokenClassification,BertModel:()=>t.BertModel,BertPreTrainedModel:()=>t.BertPreTrainedModel,BertTokenizer:()=>s.BertTokenizer,BitImageProcessor:()=>_.BitImageProcessor,BlenderbotForConditionalGeneration:()=>t.BlenderbotForConditionalGeneration,BlenderbotModel:()=>t.BlenderbotModel,BlenderbotPreTrainedModel:()=>t.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>t.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>t.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>t.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>s.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>s.BlenderbotTokenizer,BloomForCausalLM:()=>t.BloomForCausalLM,BloomModel:()=>t.BloomModel,BloomPreTrainedModel:()=>t.BloomPreTrainedModel,BloomTokenizer:()=>s.BloomTokenizer,CLIPFeatureExtractor:()=>_.CLIPFeatureExtractor,CLIPImageProcessor:()=>_.CLIPImageProcessor,CLIPModel:()=>t.CLIPModel,CLIPPreTrainedModel:()=>t.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>t.CLIPSegForImageSegmentation,CLIPSegModel:()=>t.CLIPSegModel,CLIPSegPreTrainedModel:()=>t.CLIPSegPreTrainedModel,CLIPTextModel:()=>t.CLIPTextModel,CLIPTextModelWithProjection:()=>t.CLIPTextModelWithProjection,CLIPTokenizer:()=>s.CLIPTokenizer,CLIPVisionModel:()=>t.CLIPVisionModel,CLIPVisionModelWithProjection:()=>t.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>t.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>t.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>t.CamembertForSequenceClassification,CamembertForTokenClassification:()=>t.CamembertForTokenClassification,CamembertModel:()=>t.CamembertModel,CamembertPreTrainedModel:()=>t.CamembertPreTrainedModel,CamembertTokenizer:()=>s.CamembertTokenizer,CausalLMOutput:()=>t.CausalLMOutput,CausalLMOutputWithPast:()=>t.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>_.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>t.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>t.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>t.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>d.ClapFeatureExtractor,ClapModel:()=>t.ClapModel,ClapPreTrainedModel:()=>t.ClapPreTrainedModel,ClapTextModelWithProjection:()=>t.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>y.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>t.CodeGenForCausalLM,CodeGenModel:()=>t.CodeGenModel,CodeGenPreTrainedModel:()=>t.CodeGenPreTrainedModel,CodeGenTokenizer:()=>s.CodeGenTokenizer,CodeLlamaTokenizer:()=>s.CodeLlamaTokenizer,CohereForCausalLM:()=>t.CohereForCausalLM,CohereModel:()=>t.CohereModel,CoherePreTrainedModel:()=>t.CoherePreTrainedModel,CohereTokenizer:()=>s.CohereTokenizer,ConvBertForMaskedLM:()=>t.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>t.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>t.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>t.ConvBertForTokenClassification,ConvBertModel:()=>t.ConvBertModel,ConvBertPreTrainedModel:()=>t.ConvBertPreTrainedModel,ConvBertTokenizer:()=>s.ConvBertTokenizer,ConvNextFeatureExtractor:()=>_.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>t.ConvNextForImageClassification,ConvNextImageProcessor:()=>_.ConvNextImageProcessor,ConvNextModel:()=>t.ConvNextModel,ConvNextPreTrainedModel:()=>t.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>t.ConvNextV2ForImageClassification,ConvNextV2Model:()=>t.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>t.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>t.DFineForObjectDetection,DFineModel:()=>t.DFineModel,DFinePreTrainedModel:()=>t.DFinePreTrainedModel,DPTFeatureExtractor:()=>_.DPTFeatureExtractor,DPTForDepthEstimation:()=>t.DPTForDepthEstimation,DPTImageProcessor:()=>_.DPTImageProcessor,DPTModel:()=>t.DPTModel,DPTPreTrainedModel:()=>t.DPTPreTrainedModel,DacDecoderModel:()=>t.DacDecoderModel,DacDecoderOutput:()=>t.DacDecoderOutput,DacEncoderModel:()=>t.DacEncoderModel,DacEncoderOutput:()=>t.DacEncoderOutput,DacFeatureExtractor:()=>d.DacFeatureExtractor,DacModel:()=>t.DacModel,DacPreTrainedModel:()=>t.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>t.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>t.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>t.DebertaForSequenceClassification,DebertaForTokenClassification:()=>t.DebertaForTokenClassification,DebertaModel:()=>t.DebertaModel,DebertaPreTrainedModel:()=>t.DebertaPreTrainedModel,DebertaTokenizer:()=>s.DebertaTokenizer,DebertaV2ForMaskedLM:()=>t.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>t.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>t.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>t.DebertaV2ForTokenClassification,DebertaV2Model:()=>t.DebertaV2Model,DebertaV2PreTrainedModel:()=>t.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>s.DebertaV2Tokenizer,DecisionTransformerModel:()=>t.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>t.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>_.DeiTFeatureExtractor,DeiTForImageClassification:()=>t.DeiTForImageClassification,DeiTImageProcessor:()=>_.DeiTImageProcessor,DeiTModel:()=>t.DeiTModel,DeiTPreTrainedModel:()=>t.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>t.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>t.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>r.DepthEstimationPipeline,DepthProForDepthEstimation:()=>t.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>t.DepthProPreTrainedModel,DetrFeatureExtractor:()=>_.DetrFeatureExtractor,DetrForObjectDetection:()=>t.DetrForObjectDetection,DetrForSegmentation:()=>t.DetrForSegmentation,DetrImageProcessor:()=>_.DetrImageProcessor,DetrModel:()=>t.DetrModel,DetrObjectDetectionOutput:()=>t.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>t.DetrPreTrainedModel,DetrSegmentationOutput:()=>t.DetrSegmentationOutput,Dinov2ForImageClassification:()=>t.Dinov2ForImageClassification,Dinov2Model:()=>t.Dinov2Model,Dinov2PreTrainedModel:()=>t.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>t.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>t.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>t.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>t.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>t.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>t.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>t.DistilBertForTokenClassification,DistilBertModel:()=>t.DistilBertModel,DistilBertPreTrainedModel:()=>t.DistilBertPreTrainedModel,DistilBertTokenizer:()=>s.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>r.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>_.DonutFeatureExtractor,DonutImageProcessor:()=>_.DonutImageProcessor,DonutSwinModel:()=>t.DonutSwinModel,DonutSwinPreTrainedModel:()=>t.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>t.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>_.EfficientNetImageProcessor,EfficientNetModel:()=>t.EfficientNetModel,EfficientNetPreTrainedModel:()=>t.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>t.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>t.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>t.ElectraForSequenceClassification,ElectraForTokenClassification:()=>t.ElectraForTokenClassification,ElectraModel:()=>t.ElectraModel,ElectraPreTrainedModel:()=>t.ElectraPreTrainedModel,ElectraTokenizer:()=>s.ElectraTokenizer,EncodecFeatureExtractor:()=>d.EncodecFeatureExtractor,EosTokenCriteria:()=>v.EosTokenCriteria,Ernie4_5_ForCausalLM:()=>t.Ernie4_5_ForCausalLM,Ernie4_5_Model:()=>t.Ernie4_5_Model,Ernie4_5_PretrainedModel:()=>t.Ernie4_5_PretrainedModel,Ernie4_5_Tokenizer:()=>s.Ernie4_5_Tokenizer,EsmForMaskedLM:()=>t.EsmForMaskedLM,EsmForSequenceClassification:()=>t.EsmForSequenceClassification,EsmForTokenClassification:()=>t.EsmForTokenClassification,EsmModel:()=>t.EsmModel,EsmPreTrainedModel:()=>t.EsmPreTrainedModel,EsmTokenizer:()=>s.EsmTokenizer,ExaoneForCausalLM:()=>t.ExaoneForCausalLM,ExaoneModel:()=>t.ExaoneModel,ExaonePreTrainedModel:()=>t.ExaonePreTrainedModel,FFT:()=>c.FFT,FalconForCausalLM:()=>t.FalconForCausalLM,FalconModel:()=>t.FalconModel,FalconPreTrainedModel:()=>t.FalconPreTrainedModel,FalconTokenizer:()=>s.FalconTokenizer,FastViTForImageClassification:()=>t.FastViTForImageClassification,FastViTModel:()=>t.FastViTModel,FastViTPreTrainedModel:()=>t.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>r.FeatureExtractionPipeline,FeatureExtractor:()=>p.FeatureExtractor,FillMaskPipeline:()=>r.FillMaskPipeline,Florence2ForConditionalGeneration:()=>t.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>t.Florence2PreTrainedModel,Florence2Processor:()=>g.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>y.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>y.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>_.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>t.GLPNForDepthEstimation,GLPNModel:()=>t.GLPNModel,GLPNPreTrainedModel:()=>t.GLPNPreTrainedModel,GPT2LMHeadModel:()=>t.GPT2LMHeadModel,GPT2Model:()=>t.GPT2Model,GPT2PreTrainedModel:()=>t.GPT2PreTrainedModel,GPT2Tokenizer:()=>s.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>t.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>t.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>t.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>t.GPTJForCausalLM,GPTJModel:()=>t.GPTJModel,GPTJPreTrainedModel:()=>t.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>t.GPTNeoForCausalLM,GPTNeoModel:()=>t.GPTNeoModel,GPTNeoPreTrainedModel:()=>t.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>t.GPTNeoXForCausalLM,GPTNeoXModel:()=>t.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>t.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>s.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>t.Gemma2ForCausalLM,Gemma2Model:()=>t.Gemma2Model,Gemma2PreTrainedModel:()=>t.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>t.Gemma3ForCausalLM,Gemma3Model:()=>t.Gemma3Model,Gemma3PreTrainedModel:()=>t.Gemma3PreTrainedModel,Gemma3nAudioFeatureExtractor:()=>d.Gemma3nAudioFeatureExtractor,Gemma3nForConditionalGeneration:()=>t.Gemma3nForConditionalGeneration,Gemma3nPreTrainedModel:()=>t.Gemma3nPreTrainedModel,Gemma3nProcessor:()=>g.Gemma3nProcessor,GemmaForCausalLM:()=>t.GemmaForCausalLM,GemmaModel:()=>t.GemmaModel,GemmaPreTrainedModel:()=>t.GemmaPreTrainedModel,GemmaTokenizer:()=>s.GemmaTokenizer,GlmForCausalLM:()=>t.GlmForCausalLM,GlmModel:()=>t.GlmModel,GlmPreTrainedModel:()=>t.GlmPreTrainedModel,GraniteForCausalLM:()=>t.GraniteForCausalLM,GraniteModel:()=>t.GraniteModel,GranitePreTrainedModel:()=>t.GranitePreTrainedModel,Grok1Tokenizer:()=>s.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>t.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>_.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>t.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>g.GroundingDinoProcessor,GroupViTModel:()=>t.GroupViTModel,GroupViTPreTrainedModel:()=>t.GroupViTPreTrainedModel,HeliumForCausalLM:()=>t.HeliumForCausalLM,HeliumModel:()=>t.HeliumModel,HeliumPreTrainedModel:()=>t.HeliumPreTrainedModel,HerbertTokenizer:()=>s.HerbertTokenizer,HieraForImageClassification:()=>t.HieraForImageClassification,HieraModel:()=>t.HieraModel,HieraPreTrainedModel:()=>t.HieraPreTrainedModel,HubertForCTC:()=>t.HubertForCTC,HubertForSequenceClassification:()=>t.HubertForSequenceClassification,HubertModel:()=>t.HubertModel,HubertPreTrainedModel:()=>t.HubertPreTrainedModel,IJepaForImageClassification:()=>t.IJepaForImageClassification,IJepaModel:()=>t.IJepaModel,IJepaPreTrainedModel:()=>t.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>t.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>_.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>t.Idefics3PreTrainedModel,Idefics3Processor:()=>g.Idefics3Processor,ImageClassificationPipeline:()=>r.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>r.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>d.ImageFeatureExtractor,ImageMattingOutput:()=>t.ImageMattingOutput,ImageProcessor:()=>f.ImageProcessor,ImageSegmentationPipeline:()=>r.ImageSegmentationPipeline,ImageToImagePipeline:()=>r.ImageToImagePipeline,ImageToTextPipeline:()=>r.ImageToTextPipeline,InterruptableStoppingCriteria:()=>v.InterruptableStoppingCriteria,JAISLMHeadModel:()=>t.JAISLMHeadModel,JAISModel:()=>t.JAISModel,JAISPreTrainedModel:()=>t.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>_.JinaCLIPImageProcessor,JinaCLIPModel:()=>t.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>t.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>g.JinaCLIPProcessor,JinaCLIPTextModel:()=>t.JinaCLIPTextModel,JinaCLIPVisionModel:()=>t.JinaCLIPVisionModel,Lfm2ForCausalLM:()=>t.Lfm2ForCausalLM,Lfm2Model:()=>t.Lfm2Model,Lfm2PreTrainedModel:()=>t.Lfm2PreTrainedModel,LiteWhisperForConditionalGeneration:()=>t.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>t.LlamaForCausalLM,LlamaModel:()=>t.LlamaModel,LlamaPreTrainedModel:()=>t.LlamaPreTrainedModel,LlamaTokenizer:()=>s.LlamaTokenizer,LlavaForConditionalGeneration:()=>t.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>t.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>_.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>t.LlavaPreTrainedModel,LlavaProcessor:()=>g.LlavaProcessor,LlavaQwen2ForCausalLM:()=>t.LlavaQwen2ForCausalLM,LogitsProcessor:()=>y.LogitsProcessor,LogitsProcessorList:()=>y.LogitsProcessorList,LogitsWarper:()=>y.LogitsWarper,LongT5ForConditionalGeneration:()=>t.LongT5ForConditionalGeneration,LongT5Model:()=>t.LongT5Model,LongT5PreTrainedModel:()=>t.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>t.M2M100ForConditionalGeneration,M2M100Model:()=>t.M2M100Model,M2M100PreTrainedModel:()=>t.M2M100PreTrainedModel,M2M100Tokenizer:()=>s.M2M100Tokenizer,MBart50Tokenizer:()=>s.MBart50Tokenizer,MBartForCausalLM:()=>t.MBartForCausalLM,MBartForConditionalGeneration:()=>t.MBartForConditionalGeneration,MBartForSequenceClassification:()=>t.MBartForSequenceClassification,MBartModel:()=>t.MBartModel,MBartPreTrainedModel:()=>t.MBartPreTrainedModel,MBartTokenizer:()=>s.MBartTokenizer,MPNetForMaskedLM:()=>t.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>t.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>t.MPNetForSequenceClassification,MPNetForTokenClassification:()=>t.MPNetForTokenClassification,MPNetModel:()=>t.MPNetModel,MPNetPreTrainedModel:()=>t.MPNetPreTrainedModel,MPNetTokenizer:()=>s.MPNetTokenizer,MT5ForConditionalGeneration:()=>t.MT5ForConditionalGeneration,MT5Model:()=>t.MT5Model,MT5PreTrainedModel:()=>t.MT5PreTrainedModel,MarianMTModel:()=>t.MarianMTModel,MarianModel:()=>t.MarianModel,MarianPreTrainedModel:()=>t.MarianPreTrainedModel,MarianTokenizer:()=>s.MarianTokenizer,Mask2FormerImageProcessor:()=>_.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>_.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>t.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>_.MaskFormerImageProcessor,MaskFormerModel:()=>t.MaskFormerModel,MaskFormerPreTrainedModel:()=>t.MaskFormerPreTrainedModel,MaskedLMOutput:()=>t.MaskedLMOutput,MaxLengthCriteria:()=>v.MaxLengthCriteria,Metric3DForDepthEstimation:()=>t.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>t.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>t.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>t.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>t.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>t.MgpstrModelOutput,MgpstrPreTrainedModel:()=>t.MgpstrPreTrainedModel,MgpstrProcessor:()=>g.MgpstrProcessor,MgpstrTokenizer:()=>s.MgpstrTokenizer,MimiDecoderModel:()=>t.MimiDecoderModel,MimiDecoderOutput:()=>t.MimiDecoderOutput,MimiEncoderModel:()=>t.MimiEncoderModel,MimiEncoderOutput:()=>t.MimiEncoderOutput,MimiModel:()=>t.MimiModel,MimiPreTrainedModel:()=>t.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>y.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>y.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>t.MistralForCausalLM,MistralModel:()=>t.MistralModel,MistralPreTrainedModel:()=>t.MistralPreTrainedModel,MobileBertForMaskedLM:()=>t.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>t.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>t.MobileBertForSequenceClassification,MobileBertModel:()=>t.MobileBertModel,MobileBertPreTrainedModel:()=>t.MobileBertPreTrainedModel,MobileBertTokenizer:()=>s.MobileBertTokenizer,MobileLLMForCausalLM:()=>t.MobileLLMForCausalLM,MobileLLMModel:()=>t.MobileLLMModel,MobileLLMPreTrainedModel:()=>t.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>_.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>t.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>t.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>_.MobileNetV1ImageProcessor,MobileNetV1Model:()=>t.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>t.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>_.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>t.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>t.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>_.MobileNetV2ImageProcessor,MobileNetV2Model:()=>t.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>t.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>_.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>t.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>t.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>_.MobileNetV3ImageProcessor,MobileNetV3Model:()=>t.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>t.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>_.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>t.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>t.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>_.MobileNetV4ImageProcessor,MobileNetV4Model:()=>t.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>t.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>_.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>t.MobileViTForImageClassification,MobileViTImageProcessor:()=>_.MobileViTImageProcessor,MobileViTModel:()=>t.MobileViTModel,MobileViTPreTrainedModel:()=>t.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>t.MobileViTV2ForImageClassification,MobileViTV2Model:()=>t.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>t.MobileViTV2PreTrainedModel,ModelOutput:()=>t.ModelOutput,ModernBertDecoderForCausalLM:()=>t.ModernBertDecoderForCausalLM,ModernBertDecoderModel:()=>t.ModernBertDecoderModel,ModernBertDecoderPreTrainedModel:()=>t.ModernBertDecoderPreTrainedModel,ModernBertForMaskedLM:()=>t.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>t.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>t.ModernBertForTokenClassification,ModernBertModel:()=>t.ModernBertModel,ModernBertPreTrainedModel:()=>t.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>t.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>d.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>t.MoonshineForConditionalGeneration,MoonshineModel:()=>t.MoonshineModel,MoonshinePreTrainedModel:()=>t.MoonshinePreTrainedModel,MoonshineProcessor:()=>g.MoonshineProcessor,MptForCausalLM:()=>t.MptForCausalLM,MptModel:()=>t.MptModel,MptPreTrainedModel:()=>t.MptPreTrainedModel,MultiModalityCausalLM:()=>t.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>t.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>t.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>t.MusicgenForConditionalGeneration,MusicgenModel:()=>t.MusicgenModel,MusicgenPreTrainedModel:()=>t.MusicgenPreTrainedModel,NeoBertForMaskedLM:()=>t.NeoBertForMaskedLM,NeoBertForQuestionAnswering:()=>t.NeoBertForQuestionAnswering,NeoBertForSequenceClassification:()=>t.NeoBertForSequenceClassification,NeoBertForTokenClassification:()=>t.NeoBertForTokenClassification,NeoBertModel:()=>t.NeoBertModel,NeoBertPreTrainedModel:()=>t.NeoBertPreTrainedModel,NllbTokenizer:()=>s.NllbTokenizer,NoBadWordsLogitsProcessor:()=>y.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>y.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>t.NomicBertModel,NomicBertPreTrainedModel:()=>t.NomicBertPreTrainedModel,NougatImageProcessor:()=>_.NougatImageProcessor,NougatTokenizer:()=>s.NougatTokenizer,OPTForCausalLM:()=>t.OPTForCausalLM,OPTModel:()=>t.OPTModel,OPTPreTrainedModel:()=>t.OPTPreTrainedModel,ObjectDetectionPipeline:()=>r.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>t.Olmo2ForCausalLM,Olmo2Model:()=>t.Olmo2Model,Olmo2PreTrainedModel:()=>t.Olmo2PreTrainedModel,OlmoForCausalLM:()=>t.OlmoForCausalLM,OlmoModel:()=>t.OlmoModel,OlmoPreTrainedModel:()=>t.OlmoPreTrainedModel,OpenELMForCausalLM:()=>t.OpenELMForCausalLM,OpenELMModel:()=>t.OpenELMModel,OpenELMPreTrainedModel:()=>t.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>_.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>t.OwlViTForObjectDetection,OwlViTImageProcessor:()=>_.OwlViTImageProcessor,OwlViTModel:()=>t.OwlViTModel,OwlViTPreTrainedModel:()=>t.OwlViTPreTrainedModel,OwlViTProcessor:()=>g.OwlViTProcessor,Owlv2ForObjectDetection:()=>t.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>_.Owlv2ImageProcessor,Owlv2Model:()=>t.Owlv2Model,Owlv2PreTrainedModel:()=>t.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>t.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>t.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>g.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>t.PatchTSMixerForPrediction,PatchTSMixerModel:()=>t.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>t.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>t.PatchTSTForPrediction,PatchTSTModel:()=>t.PatchTSTModel,PatchTSTPreTrainedModel:()=>t.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>t.Phi3ForCausalLM,Phi3Model:()=>t.Phi3Model,Phi3PreTrainedModel:()=>t.Phi3PreTrainedModel,Phi3VForCausalLM:()=>t.Phi3VForCausalLM,Phi3VImageProcessor:()=>_.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>t.Phi3VPreTrainedModel,Phi3VProcessor:()=>g.Phi3VProcessor,PhiForCausalLM:()=>t.PhiForCausalLM,PhiModel:()=>t.PhiModel,PhiPreTrainedModel:()=>t.PhiPreTrainedModel,Pipeline:()=>r.Pipeline,PreTrainedModel:()=>t.PreTrainedModel,PreTrainedTokenizer:()=>s.PreTrainedTokenizer,PretrainedConfig:()=>o.PretrainedConfig,PretrainedMixin:()=>t.PretrainedMixin,Processor:()=>k.Processor,PvtForImageClassification:()=>t.PvtForImageClassification,PvtImageProcessor:()=>_.PvtImageProcessor,PvtModel:()=>t.PvtModel,PvtPreTrainedModel:()=>t.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>d.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>t.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>t.PyAnnoteModel,PyAnnotePreTrainedModel:()=>t.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>g.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>t.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>r.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>t.Qwen2ForCausalLM,Qwen2Model:()=>t.Qwen2Model,Qwen2PreTrainedModel:()=>t.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>s.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>t.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>_.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>t.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>g.Qwen2VLProcessor,Qwen3ForCausalLM:()=>t.Qwen3ForCausalLM,Qwen3Model:()=>t.Qwen3Model,Qwen3PreTrainedModel:()=>t.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>t.RFDetrForObjectDetection,RFDetrModel:()=>t.RFDetrModel,RFDetrObjectDetectionOutput:()=>t.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>t.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>t.RTDetrForObjectDetection,RTDetrImageProcessor:()=>_.RTDetrImageProcessor,RTDetrModel:()=>t.RTDetrModel,RTDetrObjectDetectionOutput:()=>t.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>t.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>t.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>t.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>t.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>t.RTDetrV2PreTrainedModel,RawAudio:()=>n.RawAudio,RawImage:()=>i.RawImage,RawVideo:()=>a.RawVideo,RawVideoFrame:()=>a.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>y.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>t.ResNetForImageClassification,ResNetModel:()=>t.ResNetModel,ResNetPreTrainedModel:()=>t.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>t.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>t.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>t.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>t.RoFormerForTokenClassification,RoFormerModel:()=>t.RoFormerModel,RoFormerPreTrainedModel:()=>t.RoFormerPreTrainedModel,RoFormerTokenizer:()=>s.RoFormerTokenizer,RobertaForMaskedLM:()=>t.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>t.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>t.RobertaForSequenceClassification,RobertaForTokenClassification:()=>t.RobertaForTokenClassification,RobertaModel:()=>t.RobertaModel,RobertaPreTrainedModel:()=>t.RobertaPreTrainedModel,RobertaTokenizer:()=>s.RobertaTokenizer,SamImageProcessor:()=>_.SamImageProcessor,SamImageSegmentationOutput:()=>t.SamImageSegmentationOutput,SamModel:()=>t.SamModel,SamPreTrainedModel:()=>t.SamPreTrainedModel,SamProcessor:()=>g.SamProcessor,SapiensForDepthEstimation:()=>t.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>t.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>t.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>t.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>d.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>_.SegformerFeatureExtractor,SegformerForImageClassification:()=>t.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>t.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>_.SegformerImageProcessor,SegformerModel:()=>t.SegformerModel,SegformerPreTrainedModel:()=>t.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>t.Seq2SeqLMOutput,SequenceClassifierOutput:()=>t.SequenceClassifierOutput,SiglipImageProcessor:()=>_.SiglipImageProcessor,SiglipModel:()=>t.SiglipModel,SiglipPreTrainedModel:()=>t.SiglipPreTrainedModel,SiglipTextModel:()=>t.SiglipTextModel,SiglipTokenizer:()=>s.SiglipTokenizer,SiglipVisionModel:()=>t.SiglipVisionModel,SmolLM3ForCausalLM:()=>t.SmolLM3ForCausalLM,SmolLM3Model:()=>t.SmolLM3Model,SmolLM3PreTrainedModel:()=>t.SmolLM3PreTrainedModel,SmolVLMForConditionalGeneration:()=>t.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>_.SmolVLMImageProcessor,SmolVLMProcessor:()=>g.SmolVLMProcessor,SnacDecoderModel:()=>t.SnacDecoderModel,SnacEncoderModel:()=>t.SnacEncoderModel,SnacFeatureExtractor:()=>d.SnacFeatureExtractor,SnacModel:()=>t.SnacModel,SnacPreTrainedModel:()=>t.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>d.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>t.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>t.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>t.SpeechT5HifiGan,SpeechT5Model:()=>t.SpeechT5Model,SpeechT5PreTrainedModel:()=>t.SpeechT5PreTrainedModel,SpeechT5Processor:()=>g.SpeechT5Processor,SpeechT5Tokenizer:()=>s.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>t.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>t.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>t.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>t.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>t.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>s.SqueezeBertTokenizer,StableLmForCausalLM:()=>t.StableLmForCausalLM,StableLmModel:()=>t.StableLmModel,StableLmPreTrainedModel:()=>t.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>t.Starcoder2ForCausalLM,Starcoder2Model:()=>t.Starcoder2Model,Starcoder2PreTrainedModel:()=>t.Starcoder2PreTrainedModel,StoppingCriteria:()=>v.StoppingCriteria,StoppingCriteriaList:()=>v.StoppingCriteriaList,StyleTextToSpeech2Model:()=>t.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>t.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>r.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>y.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>t.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>_.Swin2SRImageProcessor,Swin2SRModel:()=>t.Swin2SRModel,Swin2SRPreTrainedModel:()=>t.Swin2SRPreTrainedModel,SwinForImageClassification:()=>t.SwinForImageClassification,SwinForSemanticSegmentation:()=>t.SwinForSemanticSegmentation,SwinModel:()=>t.SwinModel,SwinPreTrainedModel:()=>t.SwinPreTrainedModel,T5ForConditionalGeneration:()=>t.T5ForConditionalGeneration,T5Model:()=>t.T5Model,T5PreTrainedModel:()=>t.T5PreTrainedModel,T5Tokenizer:()=>s.T5Tokenizer,TableTransformerForObjectDetection:()=>t.TableTransformerForObjectDetection,TableTransformerModel:()=>t.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>t.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>t.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>y.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>r.Text2TextGenerationPipeline,TextClassificationPipeline:()=>r.TextClassificationPipeline,TextGenerationPipeline:()=>r.TextGenerationPipeline,TextStreamer:()=>$.TextStreamer,TextToAudioPipeline:()=>r.TextToAudioPipeline,TokenClassificationPipeline:()=>r.TokenClassificationPipeline,TokenClassifierOutput:()=>t.TokenClassifierOutput,TokenizerModel:()=>s.TokenizerModel,TopKLogitsWarper:()=>y.TopKLogitsWarper,TopPLogitsWarper:()=>y.TopPLogitsWarper,TrOCRForCausalLM:()=>t.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>t.TrOCRPreTrainedModel,TranslationPipeline:()=>r.TranslationPipeline,UltravoxModel:()=>t.UltravoxModel,UltravoxPreTrainedModel:()=>t.UltravoxPreTrainedModel,UltravoxProcessor:()=>g.UltravoxProcessor,UniSpeechForCTC:()=>t.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>t.UniSpeechForSequenceClassification,UniSpeechModel:()=>t.UniSpeechModel,UniSpeechPreTrainedModel:()=>t.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>t.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>t.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>t.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>t.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>t.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>g.VLChatProcessor,VLMImageProcessor:()=>_.VLMImageProcessor,ViTFeatureExtractor:()=>_.ViTFeatureExtractor,ViTForImageClassification:()=>t.ViTForImageClassification,ViTImageProcessor:()=>_.ViTImageProcessor,ViTMAEModel:()=>t.ViTMAEModel,ViTMAEPreTrainedModel:()=>t.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>t.ViTMSNForImageClassification,ViTMSNModel:()=>t.ViTMSNModel,ViTMSNPreTrainedModel:()=>t.ViTMSNPreTrainedModel,ViTModel:()=>t.ViTModel,ViTPreTrainedModel:()=>t.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>t.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>t.VitMatteForImageMatting,VitMatteImageProcessor:()=>_.VitMatteImageProcessor,VitMattePreTrainedModel:()=>t.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>t.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>_.VitPoseImageProcessor,VitPosePreTrainedModel:()=>t.VitPosePreTrainedModel,VitsModel:()=>t.VitsModel,VitsModelOutput:()=>t.VitsModelOutput,VitsPreTrainedModel:()=>t.VitsPreTrainedModel,VitsTokenizer:()=>s.VitsTokenizer,VoxtralForConditionalGeneration:()=>t.VoxtralForConditionalGeneration,VoxtralProcessor:()=>g.VoxtralProcessor,Wav2Vec2BertForCTC:()=>t.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>t.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>t.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>t.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>s.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>d.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>t.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>t.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>t.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>t.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>t.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>g.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>g.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>t.WavLMForAudioFrameClassification,WavLMForCTC:()=>t.WavLMForCTC,WavLMForSequenceClassification:()=>t.WavLMForSequenceClassification,WavLMForXVector:()=>t.WavLMForXVector,WavLMModel:()=>t.WavLMModel,WavLMPreTrainedModel:()=>t.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>d.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>t.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>t.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>d.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>t.WhisperForConditionalGeneration,WhisperModel:()=>t.WhisperModel,WhisperPreTrainedModel:()=>t.WhisperPreTrainedModel,WhisperProcessor:()=>g.WhisperProcessor,WhisperTextStreamer:()=>$.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>y.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>s.WhisperTokenizer,XLMForQuestionAnswering:()=>t.XLMForQuestionAnswering,XLMForSequenceClassification:()=>t.XLMForSequenceClassification,XLMForTokenClassification:()=>t.XLMForTokenClassification,XLMModel:()=>t.XLMModel,XLMPreTrainedModel:()=>t.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>t.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>t.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>t.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>t.XLMRobertaForTokenClassification,XLMRobertaModel:()=>t.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>t.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>s.XLMRobertaTokenizer,XLMTokenizer:()=>s.XLMTokenizer,XLMWithLMHeadModel:()=>t.XLMWithLMHeadModel,XVectorOutput:()=>t.XVectorOutput,YolosFeatureExtractor:()=>_.YolosFeatureExtractor,YolosForObjectDetection:()=>t.YolosForObjectDetection,YolosImageProcessor:()=>_.YolosImageProcessor,YolosModel:()=>t.YolosModel,YolosObjectDetectionOutput:()=>t.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>t.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>r.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>r.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>r.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>r.ZeroShotObjectDetectionPipeline,bankers_round:()=>c.bankers_round,cat:()=>l.cat,cos_sim:()=>c.cos_sim,dot:()=>c.dot,dynamic_time_warping:()=>c.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getCacheShapes:()=>o.getCacheShapes,hamming:()=>n.hamming,hanning:()=>n.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>c.interpolate_data,is_chinese_char:()=>s.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>i.load_image,load_video:()=>a.load_video,log_softmax:()=>c.log_softmax,magnitude:()=>c.magnitude,matmul:()=>l.matmul,max:()=>c.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>c.medianFilter,mel_filter_bank:()=>n.mel_filter_bank,min:()=>c.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>c.permute_data,pipeline:()=>r.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>n.read_audio,rfft:()=>l.rfft,round:()=>c.round,slice:()=>l.slice,softmax:()=>c.softmax,spectrogram:()=>n.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>n.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=Vt("./src/env.js"),r=Vt("./src/pipelines.js"),t=Vt("./src/models.js"),s=Vt("./src/tokenizers.js"),o=Vt("./src/configs.js"),n=Vt("./src/utils/audio.js"),i=Vt("./src/utils/image.js"),a=Vt("./src/utils/video.js"),l=Vt("./src/utils/tensor.js"),c=Vt("./src/utils/maths.js"),p=Vt("./src/base/feature_extraction_utils.js"),d=Vt("./src/models/feature_extractors.js"),u=Vt("./src/models/auto/feature_extraction_auto.js"),f=Vt("./src/base/image_processors_utils.js"),_=Vt("./src/models/image_processors.js"),b=Vt("./src/models/auto/image_processing_auto.js"),k=Vt("./src/base/processing_utils.js"),g=Vt("./src/models/processors.js"),M=Vt("./src/models/auto/processing_auto.js"),$=Vt("./src/generation/streamers.js"),v=Vt("./src/generation/stopping_criteria.js"),y=Vt("./src/generation/logits_process.js")})();h.ASTFeatureExtractor;h.ASTForAudioClassification;h.ASTModel;h.ASTPreTrainedModel;h.AlbertForMaskedLM;h.AlbertForQuestionAnswering;h.AlbertForSequenceClassification;h.AlbertModel;h.AlbertPreTrainedModel;h.AlbertTokenizer;h.ArceeForCausalLM;h.ArceeModel;h.ArceePreTrainedModel;h.AudioClassificationPipeline;h.AutoConfig;h.AutoFeatureExtractor;var xT=h.AutoImageProcessor;h.AutoModel;h.AutoModelForAudioClassification;h.AutoModelForAudioFrameClassification;h.AutoModelForAudioTextToText;h.AutoModelForCTC;h.AutoModelForCausalLM;h.AutoModelForDepthEstimation;h.AutoModelForDocumentQuestionAnswering;var TT=h.AutoModelForImageClassification;h.AutoModelForImageFeatureExtraction;h.AutoModelForImageMatting;h.AutoModelForImageSegmentation;h.AutoModelForImageTextToText;h.AutoModelForImageToImage;h.AutoModelForMaskGeneration;h.AutoModelForMaskedLM;h.AutoModelForNormalEstimation;h.AutoModelForObjectDetection;h.AutoModelForPoseEstimation;h.AutoModelForQuestionAnswering;h.AutoModelForSemanticSegmentation;h.AutoModelForSeq2SeqLM;h.AutoModelForSequenceClassification;h.AutoModelForSpeechSeq2Seq;h.AutoModelForTextToSpectrogram;h.AutoModelForTextToWaveform;h.AutoModelForTokenClassification;h.AutoModelForUniversalSegmentation;h.AutoModelForVision2Seq;h.AutoModelForXVector;h.AutoModelForZeroShotObjectDetection;h.AutoProcessor;h.AutoTokenizer;h.AutomaticSpeechRecognitionPipeline;h.BackgroundRemovalPipeline;h.BartForConditionalGeneration;h.BartForSequenceClassification;h.BartModel;h.BartPretrainedModel;h.BartTokenizer;h.BaseModelOutput;h.BaseStreamer;h.BeitFeatureExtractor;h.BeitForImageClassification;h.BeitModel;h.BeitPreTrainedModel;h.BertForMaskedLM;h.BertForQuestionAnswering;h.BertForSequenceClassification;h.BertForTokenClassification;h.BertModel;h.BertPreTrainedModel;h.BertTokenizer;h.BitImageProcessor;h.BlenderbotForConditionalGeneration;h.BlenderbotModel;h.BlenderbotPreTrainedModel;h.BlenderbotSmallForConditionalGeneration;h.BlenderbotSmallModel;h.BlenderbotSmallPreTrainedModel;h.BlenderbotSmallTokenizer;h.BlenderbotTokenizer;h.BloomForCausalLM;h.BloomModel;h.BloomPreTrainedModel;h.BloomTokenizer;h.CLIPFeatureExtractor;h.CLIPImageProcessor;h.CLIPModel;h.CLIPPreTrainedModel;h.CLIPSegForImageSegmentation;h.CLIPSegModel;h.CLIPSegPreTrainedModel;h.CLIPTextModel;h.CLIPTextModelWithProjection;h.CLIPTokenizer;h.CLIPVisionModel;h.CLIPVisionModelWithProjection;h.CamembertForMaskedLM;h.CamembertForQuestionAnswering;h.CamembertForSequenceClassification;h.CamembertForTokenClassification;h.CamembertModel;h.CamembertPreTrainedModel;h.CamembertTokenizer;h.CausalLMOutput;h.CausalLMOutputWithPast;h.ChineseCLIPFeatureExtractor;h.ChineseCLIPModel;h.ChineseCLIPPreTrainedModel;h.ClapAudioModelWithProjection;h.ClapFeatureExtractor;h.ClapModel;h.ClapPreTrainedModel;h.ClapTextModelWithProjection;h.ClassifierFreeGuidanceLogitsProcessor;h.CodeGenForCausalLM;h.CodeGenModel;h.CodeGenPreTrainedModel;h.CodeGenTokenizer;h.CodeLlamaTokenizer;h.CohereForCausalLM;h.CohereModel;h.CoherePreTrainedModel;h.CohereTokenizer;h.ConvBertForMaskedLM;h.ConvBertForQuestionAnswering;h.ConvBertForSequenceClassification;h.ConvBertForTokenClassification;h.ConvBertModel;h.ConvBertPreTrainedModel;h.ConvBertTokenizer;h.ConvNextFeatureExtractor;h.ConvNextForImageClassification;h.ConvNextImageProcessor;h.ConvNextModel;h.ConvNextPreTrainedModel;h.ConvNextV2ForImageClassification;h.ConvNextV2Model;h.ConvNextV2PreTrainedModel;h.DFineForObjectDetection;h.DFineModel;h.DFinePreTrainedModel;h.DPTFeatureExtractor;h.DPTForDepthEstimation;h.DPTImageProcessor;h.DPTModel;h.DPTPreTrainedModel;h.DacDecoderModel;h.DacDecoderOutput;h.DacEncoderModel;h.DacEncoderOutput;h.DacFeatureExtractor;h.DacModel;h.DacPreTrainedModel;h.DataTypeMap;h.DebertaForMaskedLM;h.DebertaForQuestionAnswering;h.DebertaForSequenceClassification;h.DebertaForTokenClassification;h.DebertaModel;h.DebertaPreTrainedModel;h.DebertaTokenizer;h.DebertaV2ForMaskedLM;h.DebertaV2ForQuestionAnswering;h.DebertaV2ForSequenceClassification;h.DebertaV2ForTokenClassification;h.DebertaV2Model;h.DebertaV2PreTrainedModel;h.DebertaV2Tokenizer;h.DecisionTransformerModel;h.DecisionTransformerPreTrainedModel;h.DeiTFeatureExtractor;h.DeiTForImageClassification;h.DeiTImageProcessor;h.DeiTModel;h.DeiTPreTrainedModel;h.DepthAnythingForDepthEstimation;h.DepthAnythingPreTrainedModel;h.DepthEstimationPipeline;h.DepthProForDepthEstimation;h.DepthProPreTrainedModel;h.DetrFeatureExtractor;h.DetrForObjectDetection;h.DetrForSegmentation;h.DetrImageProcessor;h.DetrModel;h.DetrObjectDetectionOutput;h.DetrPreTrainedModel;h.DetrSegmentationOutput;h.Dinov2ForImageClassification;h.Dinov2Model;h.Dinov2PreTrainedModel;h.Dinov2WithRegistersForImageClassification;h.Dinov2WithRegistersModel;h.Dinov2WithRegistersPreTrainedModel;h.DistilBertForMaskedLM;h.DistilBertForQuestionAnswering;h.DistilBertForSequenceClassification;h.DistilBertForTokenClassification;h.DistilBertModel;h.DistilBertPreTrainedModel;h.DistilBertTokenizer;h.DocumentQuestionAnsweringPipeline;h.DonutFeatureExtractor;h.DonutImageProcessor;h.DonutSwinModel;h.DonutSwinPreTrainedModel;h.EfficientNetForImageClassification;h.EfficientNetImageProcessor;h.EfficientNetModel;h.EfficientNetPreTrainedModel;h.ElectraForMaskedLM;h.ElectraForQuestionAnswering;h.ElectraForSequenceClassification;h.ElectraForTokenClassification;h.ElectraModel;h.ElectraPreTrainedModel;h.ElectraTokenizer;h.EncodecFeatureExtractor;h.EosTokenCriteria;h.Ernie4_5_ForCausalLM;h.Ernie4_5_Model;h.Ernie4_5_PretrainedModel;h.Ernie4_5_Tokenizer;h.EsmForMaskedLM;h.EsmForSequenceClassification;h.EsmForTokenClassification;h.EsmModel;h.EsmPreTrainedModel;h.EsmTokenizer;h.ExaoneForCausalLM;h.ExaoneModel;h.ExaonePreTrainedModel;h.FFT;h.FalconForCausalLM;h.FalconModel;h.FalconPreTrainedModel;h.FalconTokenizer;h.FastViTForImageClassification;h.FastViTModel;h.FastViTPreTrainedModel;h.FeatureExtractionPipeline;h.FeatureExtractor;h.FillMaskPipeline;h.Florence2ForConditionalGeneration;h.Florence2PreTrainedModel;h.Florence2Processor;h.ForcedBOSTokenLogitsProcessor;h.ForcedEOSTokenLogitsProcessor;h.GLPNFeatureExtractor;h.GLPNForDepthEstimation;h.GLPNModel;h.GLPNPreTrainedModel;h.GPT2LMHeadModel;h.GPT2Model;h.GPT2PreTrainedModel;h.GPT2Tokenizer;h.GPTBigCodeForCausalLM;h.GPTBigCodeModel;h.GPTBigCodePreTrainedModel;h.GPTJForCausalLM;h.GPTJModel;h.GPTJPreTrainedModel;h.GPTNeoForCausalLM;h.GPTNeoModel;h.GPTNeoPreTrainedModel;h.GPTNeoXForCausalLM;h.GPTNeoXModel;h.GPTNeoXPreTrainedModel;h.GPTNeoXTokenizer;h.Gemma2ForCausalLM;h.Gemma2Model;h.Gemma2PreTrainedModel;h.Gemma3ForCausalLM;h.Gemma3Model;h.Gemma3PreTrainedModel;h.Gemma3nAudioFeatureExtractor;h.Gemma3nForConditionalGeneration;h.Gemma3nPreTrainedModel;h.Gemma3nProcessor;h.GemmaForCausalLM;h.GemmaModel;h.GemmaPreTrainedModel;h.GemmaTokenizer;h.GlmForCausalLM;h.GlmModel;h.GlmPreTrainedModel;h.GraniteForCausalLM;h.GraniteModel;h.GranitePreTrainedModel;h.Grok1Tokenizer;h.GroundingDinoForObjectDetection;h.GroundingDinoImageProcessor;h.GroundingDinoPreTrainedModel;h.GroundingDinoProcessor;h.GroupViTModel;h.GroupViTPreTrainedModel;h.HeliumForCausalLM;h.HeliumModel;h.HeliumPreTrainedModel;h.HerbertTokenizer;h.HieraForImageClassification;h.HieraModel;h.HieraPreTrainedModel;h.HubertForCTC;h.HubertForSequenceClassification;h.HubertModel;h.HubertPreTrainedModel;h.IJepaForImageClassification;h.IJepaModel;h.IJepaPreTrainedModel;h.Idefics3ForConditionalGeneration;h.Idefics3ImageProcessor;h.Idefics3PreTrainedModel;h.Idefics3Processor;h.ImageClassificationPipeline;h.ImageFeatureExtractionPipeline;h.ImageFeatureExtractor;h.ImageMattingOutput;h.ImageProcessor;h.ImageSegmentationPipeline;h.ImageToImagePipeline;h.ImageToTextPipeline;h.InterruptableStoppingCriteria;h.JAISLMHeadModel;h.JAISModel;h.JAISPreTrainedModel;h.JinaCLIPImageProcessor;h.JinaCLIPModel;h.JinaCLIPPreTrainedModel;h.JinaCLIPProcessor;h.JinaCLIPTextModel;h.JinaCLIPVisionModel;h.Lfm2ForCausalLM;h.Lfm2Model;h.Lfm2PreTrainedModel;h.LiteWhisperForConditionalGeneration;h.LlamaForCausalLM;h.LlamaModel;h.LlamaPreTrainedModel;h.LlamaTokenizer;h.LlavaForConditionalGeneration;h.LlavaOnevisionForConditionalGeneration;h.LlavaOnevisionImageProcessor;h.LlavaPreTrainedModel;h.LlavaProcessor;h.LlavaQwen2ForCausalLM;h.LogitsProcessor;h.LogitsProcessorList;h.LogitsWarper;h.LongT5ForConditionalGeneration;h.LongT5Model;h.LongT5PreTrainedModel;h.M2M100ForConditionalGeneration;h.M2M100Model;h.M2M100PreTrainedModel;h.M2M100Tokenizer;h.MBart50Tokenizer;h.MBartForCausalLM;h.MBartForConditionalGeneration;h.MBartForSequenceClassification;h.MBartModel;h.MBartPreTrainedModel;h.MBartTokenizer;h.MPNetForMaskedLM;h.MPNetForQuestionAnswering;h.MPNetForSequenceClassification;h.MPNetForTokenClassification;h.MPNetModel;h.MPNetPreTrainedModel;h.MPNetTokenizer;h.MT5ForConditionalGeneration;h.MT5Model;h.MT5PreTrainedModel;h.MarianMTModel;h.MarianModel;h.MarianPreTrainedModel;h.MarianTokenizer;h.Mask2FormerImageProcessor;h.MaskFormerFeatureExtractor;h.MaskFormerForInstanceSegmentation;h.MaskFormerImageProcessor;h.MaskFormerModel;h.MaskFormerPreTrainedModel;h.MaskedLMOutput;h.MaxLengthCriteria;h.Metric3DForDepthEstimation;h.Metric3DPreTrainedModel;h.Metric3Dv2ForDepthEstimation;h.Metric3Dv2PreTrainedModel;h.MgpstrForSceneTextRecognition;h.MgpstrModelOutput;h.MgpstrPreTrainedModel;h.MgpstrProcessor;h.MgpstrTokenizer;h.MimiDecoderModel;h.MimiDecoderOutput;h.MimiEncoderModel;h.MimiEncoderOutput;h.MimiModel;h.MimiPreTrainedModel;h.MinLengthLogitsProcessor;h.MinNewTokensLengthLogitsProcessor;h.MistralForCausalLM;h.MistralModel;h.MistralPreTrainedModel;h.MobileBertForMaskedLM;h.MobileBertForQuestionAnswering;h.MobileBertForSequenceClassification;h.MobileBertModel;h.MobileBertPreTrainedModel;h.MobileBertTokenizer;h.MobileLLMForCausalLM;h.MobileLLMModel;h.MobileLLMPreTrainedModel;h.MobileNetV1FeatureExtractor;h.MobileNetV1ForImageClassification;h.MobileNetV1ForSemanticSegmentation;h.MobileNetV1ImageProcessor;h.MobileNetV1Model;h.MobileNetV1PreTrainedModel;h.MobileNetV2FeatureExtractor;h.MobileNetV2ForImageClassification;h.MobileNetV2ForSemanticSegmentation;h.MobileNetV2ImageProcessor;h.MobileNetV2Model;h.MobileNetV2PreTrainedModel;h.MobileNetV3FeatureExtractor;h.MobileNetV3ForImageClassification;h.MobileNetV3ForSemanticSegmentation;h.MobileNetV3ImageProcessor;h.MobileNetV3Model;h.MobileNetV3PreTrainedModel;h.MobileNetV4FeatureExtractor;h.MobileNetV4ForImageClassification;h.MobileNetV4ForSemanticSegmentation;h.MobileNetV4ImageProcessor;h.MobileNetV4Model;h.MobileNetV4PreTrainedModel;var ET=h.MobileViTFeatureExtractor,PT=h.MobileViTForImageClassification;h.MobileViTImageProcessor;h.MobileViTModel;h.MobileViTPreTrainedModel;h.MobileViTV2ForImageClassification;h.MobileViTV2Model;h.MobileViTV2PreTrainedModel;h.ModelOutput;h.ModernBertDecoderForCausalLM;h.ModernBertDecoderModel;h.ModernBertDecoderPreTrainedModel;h.ModernBertForMaskedLM;h.ModernBertForSequenceClassification;h.ModernBertForTokenClassification;h.ModernBertModel;h.ModernBertPreTrainedModel;h.Moondream1ForConditionalGeneration;h.MoonshineFeatureExtractor;h.MoonshineForConditionalGeneration;h.MoonshineModel;h.MoonshinePreTrainedModel;h.MoonshineProcessor;h.MptForCausalLM;h.MptModel;h.MptPreTrainedModel;h.MultiModalityCausalLM;h.MultiModalityPreTrainedModel;h.MusicgenForCausalLM;h.MusicgenForConditionalGeneration;h.MusicgenModel;h.MusicgenPreTrainedModel;h.NeoBertForMaskedLM;h.NeoBertForQuestionAnswering;h.NeoBertForSequenceClassification;h.NeoBertForTokenClassification;h.NeoBertModel;h.NeoBertPreTrainedModel;h.NllbTokenizer;h.NoBadWordsLogitsProcessor;h.NoRepeatNGramLogitsProcessor;h.NomicBertModel;h.NomicBertPreTrainedModel;h.NougatImageProcessor;h.NougatTokenizer;h.OPTForCausalLM;h.OPTModel;h.OPTPreTrainedModel;h.ObjectDetectionPipeline;h.Olmo2ForCausalLM;h.Olmo2Model;h.Olmo2PreTrainedModel;h.OlmoForCausalLM;h.OlmoModel;h.OlmoPreTrainedModel;h.OpenELMForCausalLM;h.OpenELMModel;h.OpenELMPreTrainedModel;h.OwlViTFeatureExtractor;h.OwlViTForObjectDetection;h.OwlViTImageProcessor;h.OwlViTModel;h.OwlViTPreTrainedModel;h.OwlViTProcessor;h.Owlv2ForObjectDetection;h.Owlv2ImageProcessor;h.Owlv2Model;h.Owlv2PreTrainedModel;h.PaliGemmaForConditionalGeneration;h.PaliGemmaPreTrainedModel;h.PaliGemmaProcessor;h.PatchTSMixerForPrediction;h.PatchTSMixerModel;h.PatchTSMixerPreTrainedModel;h.PatchTSTForPrediction;h.PatchTSTModel;h.PatchTSTPreTrainedModel;h.Phi3ForCausalLM;h.Phi3Model;h.Phi3PreTrainedModel;h.Phi3VForCausalLM;h.Phi3VImageProcessor;h.Phi3VPreTrainedModel;h.Phi3VProcessor;h.PhiForCausalLM;h.PhiModel;h.PhiPreTrainedModel;h.Pipeline;h.PreTrainedModel;h.PreTrainedTokenizer;h.PretrainedConfig;h.PretrainedMixin;h.Processor;h.PvtForImageClassification;h.PvtImageProcessor;h.PvtModel;h.PvtPreTrainedModel;h.PyAnnoteFeatureExtractor;h.PyAnnoteForAudioFrameClassification;h.PyAnnoteModel;h.PyAnnotePreTrainedModel;h.PyAnnoteProcessor;h.QuestionAnsweringModelOutput;h.QuestionAnsweringPipeline;h.Qwen2ForCausalLM;h.Qwen2Model;h.Qwen2PreTrainedModel;h.Qwen2Tokenizer;h.Qwen2VLForConditionalGeneration;h.Qwen2VLImageProcessor;h.Qwen2VLPreTrainedModel;h.Qwen2VLProcessor;h.Qwen3ForCausalLM;h.Qwen3Model;h.Qwen3PreTrainedModel;h.RFDetrForObjectDetection;h.RFDetrModel;h.RFDetrObjectDetectionOutput;h.RFDetrPreTrainedModel;h.RTDetrForObjectDetection;h.RTDetrImageProcessor;h.RTDetrModel;h.RTDetrObjectDetectionOutput;h.RTDetrPreTrainedModel;h.RTDetrV2ForObjectDetection;h.RTDetrV2Model;h.RTDetrV2ObjectDetectionOutput;h.RTDetrV2PreTrainedModel;h.RawAudio;var Bc=h.RawImage;h.RawVideo;h.RawVideoFrame;h.RepetitionPenaltyLogitsProcessor;h.ResNetForImageClassification;h.ResNetModel;h.ResNetPreTrainedModel;h.RoFormerForMaskedLM;h.RoFormerForQuestionAnswering;h.RoFormerForSequenceClassification;h.RoFormerForTokenClassification;h.RoFormerModel;h.RoFormerPreTrainedModel;h.RoFormerTokenizer;h.RobertaForMaskedLM;h.RobertaForQuestionAnswering;h.RobertaForSequenceClassification;h.RobertaForTokenClassification;h.RobertaModel;h.RobertaPreTrainedModel;h.RobertaTokenizer;h.SamImageProcessor;h.SamImageSegmentationOutput;h.SamModel;h.SamPreTrainedModel;h.SamProcessor;h.SapiensForDepthEstimation;h.SapiensForNormalEstimation;h.SapiensForSemanticSegmentation;h.SapiensPreTrainedModel;h.SeamlessM4TFeatureExtractor;h.SegformerFeatureExtractor;h.SegformerForImageClassification;h.SegformerForSemanticSegmentation;h.SegformerImageProcessor;h.SegformerModel;h.SegformerPreTrainedModel;h.Seq2SeqLMOutput;h.SequenceClassifierOutput;h.SiglipImageProcessor;h.SiglipModel;h.SiglipPreTrainedModel;h.SiglipTextModel;h.SiglipTokenizer;h.SiglipVisionModel;h.SmolLM3ForCausalLM;h.SmolLM3Model;h.SmolLM3PreTrainedModel;h.SmolVLMForConditionalGeneration;h.SmolVLMImageProcessor;h.SmolVLMProcessor;h.SnacDecoderModel;h.SnacEncoderModel;h.SnacFeatureExtractor;h.SnacModel;h.SnacPreTrainedModel;h.SpeechT5FeatureExtractor;h.SpeechT5ForSpeechToText;h.SpeechT5ForTextToSpeech;h.SpeechT5HifiGan;h.SpeechT5Model;h.SpeechT5PreTrainedModel;h.SpeechT5Processor;h.SpeechT5Tokenizer;h.SqueezeBertForMaskedLM;h.SqueezeBertForQuestionAnswering;h.SqueezeBertForSequenceClassification;h.SqueezeBertModel;h.SqueezeBertPreTrainedModel;h.SqueezeBertTokenizer;h.StableLmForCausalLM;h.StableLmModel;h.StableLmPreTrainedModel;h.Starcoder2ForCausalLM;h.Starcoder2Model;h.Starcoder2PreTrainedModel;h.StoppingCriteria;h.StoppingCriteriaList;h.StyleTextToSpeech2Model;h.StyleTextToSpeech2PreTrainedModel;h.SummarizationPipeline;h.SuppressTokensAtBeginLogitsProcessor;h.Swin2SRForImageSuperResolution;h.Swin2SRImageProcessor;h.Swin2SRModel;h.Swin2SRPreTrainedModel;h.SwinForImageClassification;h.SwinForSemanticSegmentation;h.SwinModel;h.SwinPreTrainedModel;h.T5ForConditionalGeneration;h.T5Model;h.T5PreTrainedModel;h.T5Tokenizer;h.TableTransformerForObjectDetection;h.TableTransformerModel;h.TableTransformerObjectDetectionOutput;h.TableTransformerPreTrainedModel;h.TemperatureLogitsWarper;h.Tensor;h.Text2TextGenerationPipeline;h.TextClassificationPipeline;h.TextGenerationPipeline;h.TextStreamer;h.TextToAudioPipeline;h.TokenClassificationPipeline;h.TokenClassifierOutput;h.TokenizerModel;h.TopKLogitsWarper;h.TopPLogitsWarper;h.TrOCRForCausalLM;h.TrOCRPreTrainedModel;h.TranslationPipeline;h.UltravoxModel;h.UltravoxPreTrainedModel;h.UltravoxProcessor;h.UniSpeechForCTC;h.UniSpeechForSequenceClassification;h.UniSpeechModel;h.UniSpeechPreTrainedModel;h.UniSpeechSatForAudioFrameClassification;h.UniSpeechSatForCTC;h.UniSpeechSatForSequenceClassification;h.UniSpeechSatModel;h.UniSpeechSatPreTrainedModel;h.VLChatProcessor;h.VLMImageProcessor;h.ViTFeatureExtractor;h.ViTForImageClassification;h.ViTImageProcessor;h.ViTMAEModel;h.ViTMAEPreTrainedModel;h.ViTMSNForImageClassification;h.ViTMSNModel;h.ViTMSNPreTrainedModel;h.ViTModel;h.ViTPreTrainedModel;h.VisionEncoderDecoderModel;h.VitMatteForImageMatting;h.VitMatteImageProcessor;h.VitMattePreTrainedModel;h.VitPoseForPoseEstimation;h.VitPoseImageProcessor;h.VitPosePreTrainedModel;h.VitsModel;h.VitsModelOutput;h.VitsPreTrainedModel;h.VitsTokenizer;h.VoxtralForConditionalGeneration;h.VoxtralProcessor;h.Wav2Vec2BertForCTC;h.Wav2Vec2BertForSequenceClassification;h.Wav2Vec2BertModel;h.Wav2Vec2BertPreTrainedModel;h.Wav2Vec2CTCTokenizer;h.Wav2Vec2FeatureExtractor;h.Wav2Vec2ForAudioFrameClassification;h.Wav2Vec2ForCTC;h.Wav2Vec2ForSequenceClassification;h.Wav2Vec2Model;h.Wav2Vec2PreTrainedModel;h.Wav2Vec2Processor;h.Wav2Vec2ProcessorWithLM;h.WavLMForAudioFrameClassification;h.WavLMForCTC;h.WavLMForSequenceClassification;h.WavLMForXVector;h.WavLMModel;h.WavLMPreTrainedModel;h.WeSpeakerFeatureExtractor;h.WeSpeakerResNetModel;h.WeSpeakerResNetPreTrainedModel;h.WhisperFeatureExtractor;h.WhisperForConditionalGeneration;h.WhisperModel;h.WhisperPreTrainedModel;h.WhisperProcessor;h.WhisperTextStreamer;h.WhisperTimeStampLogitsProcessor;h.WhisperTokenizer;h.XLMForQuestionAnswering;h.XLMForSequenceClassification;h.XLMForTokenClassification;h.XLMModel;h.XLMPreTrainedModel;h.XLMRobertaForMaskedLM;h.XLMRobertaForQuestionAnswering;h.XLMRobertaForSequenceClassification;h.XLMRobertaForTokenClassification;h.XLMRobertaModel;h.XLMRobertaPreTrainedModel;h.XLMRobertaTokenizer;h.XLMTokenizer;h.XLMWithLMHeadModel;h.XVectorOutput;h.YolosFeatureExtractor;h.YolosForObjectDetection;h.YolosImageProcessor;h.YolosModel;h.YolosObjectDetectionOutput;h.YolosPreTrainedModel;h.ZeroShotAudioClassificationPipeline;h.ZeroShotClassificationPipeline;h.ZeroShotImageClassificationPipeline;h.ZeroShotObjectDetectionPipeline;h.bankers_round;h.cat;h.cos_sim;h.dot;h.dynamic_time_warping;h.env;h.full;h.full_like;h.getCacheShapes;h.hamming;h.hanning;h.interpolate;h.interpolate_4d;h.interpolate_data;h.is_chinese_char;h.layer_norm;h.load_image;h.load_video;h.log_softmax;h.magnitude;h.matmul;h.max;h.mean;h.mean_pooling;h.medianFilter;h.mel_filter_bank;h.min;h.ones;h.ones_like;h.permute;h.permute_data;var CT=h.pipeline;h.quantize_embeddings;h.rand;h.read_audio;h.rfft;h.round;h.slice;h.softmax;h.spectrogram;h.stack;h.std_mean;h.topk;h.window_function;h.zeros;h.zeros_like;class ST{async checkWebGpuSupport(){if(!navigator.gpu)throw new Error(`No gpu adapter found, currently only Chrome and Edge support Webgpu:

 https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API`);if(!await navigator.gpu.requestAdapter())throw new Error("WebGPU is not supported")}async rawImageToBase64(r){const t=await r.toBlob("image/png",1);return"data:image/png;base64,"+(await new Promise((n,i)=>{const a=new FileReader;a.onloadend=()=>n(a.result),a.onerror=i,a.readAsDataURL(t)})).split(",")[1]}}const $M={"vit-base-nsfw-detector":{modelFileName:"model",dtype:"auto",name:"AdamCodd/vit-base-nsfw-detector",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"vit-age-classifier":{modelFileName:"model",dtype:"auto",name:"jdp8/vit-age-classifier",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"detection-model-3-ONNX":{modelFileName:"model",dtype:"q4",name:"LPX55/detection-model-3-ONNX",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"detection-model-5-ONNX":{modelFileName:"model",dtype:"q4",name:"LPX55/detection-model-5-ONNX",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"detection-model-7-ONNX":{modelFileName:"model",dtype:"q4",name:"LPX55/detection-model-7-ONNX",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"dinov2-with-registers-small-with-attentions":{modelFileName:"model",dtype:"q4",name:"onnx-community/dinov2-with-registers-small-with-attentions",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"resnet-18":{modelFileName:"model",dtype:"q4",name:"Xenova/resnet-18",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"resnet-152":{modelFileName:"model",dtype:"q4",name:"Xenova/resnet-152",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"mobilenetv4s-webnn":{modelFileName:"model",dtype:"q4",name:"onnx-community/mobilenetv4s-webnn",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"mobilenet_v2_1.4_224":{modelFileName:"model",dtype:"q4",name:"onnx-community/mobilenet_v2_1.4_224",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"convnext-tiny-224":{modelFileName:"model",dtype:"q4",name:"Xenova/convnext-tiny-224",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"resnet-50-ONNX":{modelFileName:"model",dtype:"q4",name:"onnx-community/resnet-50-ONNX",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"gender-classification-ONNX":{modelFileName:"model",dtype:"q4",name:"onnx-community/gender-classification-ONNX",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},facial_emotions_image_detection:{modelFileName:"model",dtype:"q4",name:"Xenova/facial_emotions_image_detection",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"fairface_gender_image_detection-ONNX":{modelFileName:"model",dtype:"q4",name:"onnx-community/fairface_gender_image_detection-ONNX",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"fairface_age_image_detection-ONNX":{modelFileName:"model",dtype:"q4",name:"onnx-community/fairface_age_image_detection-ONNX",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"Fire-Detection-Engine-ONNX":{modelFileName:"model",dtype:"q4",name:"prithivMLmods/Fire-Detection-Engine-ONNX",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"},"Vit-Mature-Content-Detection-ONNX":{modelFileName:"model",dtype:"q4",name:"prithivMLmods/Vit-Mature-Content-Detection-ONNX",pretrained:"pipeline",subfolder:"onnx",device:"webgpu"}};class $T extends ST{constructor(r){super(),Object.defineProperty(this,"modelName",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"processor",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"model",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"generator",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"onProgressChange",{enumerable:!0,configurable:!0,writable:!0,value:t=>{self.postMessage({event:"onProgressChange",payload:{progress:t}})}}),Object.defineProperty(this,"onResult",{enumerable:!0,configurable:!0,writable:!0,value:t=>{self.postMessage({event:"onResult",payload:{result:t}})}}),Object.defineProperty(this,"onError",{enumerable:!0,configurable:!0,writable:!0,value:t=>{self.postMessage({event:"onError",payload:{error:t}})}}),Object.defineProperty(this,"classify",{enumerable:!0,configurable:!0,writable:!0,value:async t=>{try{switch($M[this.modelName].pretrained){case"pipeline":{if(!this.generator)throw new Error("Generator is not loaded");const o=await Bc.read(t),n=await this.generator(o);console.log({output:n}),this.onResult(n);break}case"Auto":{if(!this.processor)throw new Error("Processor is not loaded");if(!this.model)throw new Error("Model is not loaded");const o=await Bc.read(t),n=await this.processor(o),i=await this.model(n);console.log({output:i}),this.onResult(i);break}case"MobileViT":{if(!this.processor)throw new Error("Processor is not loaded");if(!this.model)throw new Error("Model is not loaded");const o=await Bc.read(t),n=await this.processor(o),i=await this.model(n);console.log({output:i}),this.onResult(i);break}}}catch(s){this.onError(s.message)}}}),Object.defineProperty(this,"load",{enumerable:!0,configurable:!0,writable:!0,value:async t=>{const s=$M[this.modelName];switch(s.pretrained){case"pipeline":{this.generator=await CT("image-classification",s.name,{dtype:s.dtype,device:t||s.device,model_file_name:s.modelFileName,progress_callback:this.onProgressChange,subfolder:s.subfolder});break}case"Auto":{this.model=await TT.from_pretrained(s.name,{dtype:s.dtype,device:t||s.device,model_file_name:s.modelFileName,progress_callback:this.onProgressChange,subfolder:s.subfolder}),this.processor=await xT.from_pretrained(s.name);break}case"MobileViT":{this.model=await PT.from_pretrained(s.name,{dtype:s.dtype,device:t||s.device,model_file_name:s.modelFileName,progress_callback:this.onProgressChange,subfolder:s.subfolder}),this.processor=await ET.from_pretrained(s.name);break}}}}),this.modelName=r}}let oa;self.addEventListener("message",async e=>{try{const{event:r,payload:t}=e.data;switch(r){case"load":oa=new $T(t.modelName),await oa.load(t.device),self.postMessage({event:"onLoad",payload:{}});break;case"classify":if(!oa)throw new Error("No model found");await oa.classify(t.imageBase64);break}}catch(r){self.postMessage({event:"onError",payload:{error:r.message}})}});
